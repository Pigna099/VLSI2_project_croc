/* Generated by Yosys 0.55+3 (git sha1 e60cf3e2f, aarch64-linux-gnu-g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [479:0] addr_map_i;
  wire [479:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode.sv:35.8" */
module \addr_decode$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o);
  /* src = "rtl/common_cells/addr_decode.sv:72.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode.sv:74.31" */
  input [95:0] addr_map_i;
  wire [95:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode.sv:80.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode.sv:78.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode.sv:90.31" */
  input default_idx_i;
  wire default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:84.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode.sv:76.31" */
  output idx_o;
  wire idx_o;
  /* src = "rtl/common_cells/addr_decode.sv:100.5" */
  \addr_decode_dync$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs.i_addr_decode_dync  i_addr_decode_dync (
    .addr_i(addr_i),
    .addr_map_i(addr_map_i),
    .config_ongoing_i(1'h0),
    .dec_error_o(dec_error_o),
    .dec_valid_o(dec_valid_o),
    .default_idx_i(default_idx_i),
    .en_default_idx_i(en_default_idx_i),
    .idx_o(idx_o)
  );
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [2:0] \$26y ;
  wire [2:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire [2:0] \$40y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [2:0] \$54y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire [2:0] \$68y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$30 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$44 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$58 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$72 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$29 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$43 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$57 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$71 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$28 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$42 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$56 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$70 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[0]$13 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[1]$27 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[2]$41 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[3]$55 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[4]$69 ;
  wire \$procmux$11555_Y ;
  wire \$procmux$11556_CMP ;
  wire \$procmux$11558_Y ;
  wire \$procmux$11559_CMP ;
  wire [2:0] \$procmux$11561_Y ;
  wire \$procmux$11562_CMP ;
  wire \$procmux$11564_Y ;
  wire \$procmux$11565_CMP ;
  wire \$procmux$11567_Y ;
  wire \$procmux$11568_CMP ;
  wire \$procmux$11570_Y ;
  wire \$procmux$11571_CMP ;
  wire [2:0] \$procmux$11573_Y ;
  wire \$procmux$11574_CMP ;
  wire \$procmux$11576_Y ;
  wire \$procmux$11577_CMP ;
  wire \$procmux$11579_Y ;
  wire \$procmux$11580_CMP ;
  wire \$procmux$11582_Y ;
  wire \$procmux$11583_CMP ;
  wire [2:0] \$procmux$11585_Y ;
  wire \$procmux$11586_CMP ;
  wire \$procmux$11588_Y ;
  wire \$procmux$11589_CMP ;
  wire \$procmux$11591_Y ;
  wire \$procmux$11592_CMP ;
  wire \$procmux$11594_Y ;
  wire \$procmux$11595_CMP ;
  wire [2:0] \$procmux$11597_Y ;
  wire \$procmux$11598_CMP ;
  wire \$procmux$11600_Y ;
  wire \$procmux$11601_CMP ;
  wire \$procmux$11602_Y ;
  wire \$procmux$11603_CMP ;
  wire \$procmux$11604_Y ;
  wire \$procmux$11605_CMP ;
  wire [2:0] \$procmux$11606_Y ;
  wire \$procmux$11607_CMP ;
  wire \$procmux$11608_Y ;
  wire \$procmux$11609_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [479:0] addr_map_i;
  wire [479:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [4:0] matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$2  (
    .A(3'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(addr_map_i[127:96]),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$18y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(config_ongoing_i),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(config_ongoing_i),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$26  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(addr_map_i[223:192]),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$32y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(config_ongoing_i),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(config_ongoing_i),
    .Y(\$39y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$40  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$45y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(addr_map_i[319:288]),
    .Y(\$48y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$46y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(config_ongoing_i),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(config_ongoing_i),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$54  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(addr_i),
    .B(addr_map_i[447:416]),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(addr_i),
    .B(addr_map_i[415:384]),
    .Y(\$61y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(addr_map_i[415:384]),
    .Y(\$62y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(\$61y ),
    .B(\$62y ),
    .Y(\$63y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(\$60y ),
    .B(\$63y ),
    .Y(\$64y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(config_ongoing_i),
    .Y(\$66y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(config_ongoing_i),
    .Y(\$67y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$68  (
    .A(addr_map_i[450:448]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$68y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11555  (
    .A(\$dec_error_o$58 ),
    .B(1'h0),
    .S(\$procmux$11556_CMP ),
    .Y(\$procmux$11555_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11558  (
    .A(\$dec_valid_o$57 ),
    .B(\$67y ),
    .S(\$procmux$11559_CMP ),
    .Y(\$procmux$11558_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11561  (
    .A(\$idx_o$56 ),
    .B(\$68y ),
    .S(\$procmux$11562_CMP ),
    .Y(\$procmux$11561_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11564  (
    .A(1'h0),
    .B(\$66y ),
    .S(\$procmux$11565_CMP ),
    .Y(\$procmux$11564_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11567  (
    .A(\$dec_error_o$44 ),
    .B(1'h0),
    .S(\$procmux$11568_CMP ),
    .Y(\$procmux$11567_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11570  (
    .A(\$dec_valid_o$43 ),
    .B(\$53y ),
    .S(\$procmux$11571_CMP ),
    .Y(\$procmux$11570_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11573  (
    .A(\$idx_o$42 ),
    .B(\$54y ),
    .S(\$procmux$11574_CMP ),
    .Y(\$procmux$11573_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11576  (
    .A(1'h0),
    .B(\$52y ),
    .S(\$procmux$11577_CMP ),
    .Y(\$procmux$11576_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11579  (
    .A(\$dec_error_o$30 ),
    .B(1'h0),
    .S(\$procmux$11580_CMP ),
    .Y(\$procmux$11579_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11582  (
    .A(\$dec_valid_o$29 ),
    .B(\$39y ),
    .S(\$procmux$11583_CMP ),
    .Y(\$procmux$11582_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11585  (
    .A(\$idx_o$28 ),
    .B(\$40y ),
    .S(\$procmux$11586_CMP ),
    .Y(\$procmux$11585_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11588  (
    .A(1'h0),
    .B(\$38y ),
    .S(\$procmux$11589_CMP ),
    .Y(\$procmux$11588_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11591  (
    .A(\$dec_error_o$16 ),
    .B(1'h0),
    .S(\$procmux$11592_CMP ),
    .Y(\$procmux$11591_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11594  (
    .A(\$dec_valid_o$15 ),
    .B(\$25y ),
    .S(\$procmux$11595_CMP ),
    .Y(\$procmux$11594_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11597  (
    .A(\$idx_o$14 ),
    .B(\$26y ),
    .S(\$procmux$11598_CMP ),
    .Y(\$procmux$11597_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11600  (
    .A(1'h0),
    .B(\$24y ),
    .S(\$procmux$11601_CMP ),
    .Y(\$procmux$11600_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11602  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$11603_CMP ),
    .Y(\$procmux$11602_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11604  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$11605_CMP ),
    .Y(\$procmux$11604_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11606  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$11607_CMP ),
    .Y(\$procmux$11606_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11608  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$11609_CMP ),
    .Y(\$procmux$11608_Y )
  );
  assign matched_rules = { \$matched_rules[4]$69 , \$matched_rules[3]$55 , \$matched_rules[2]$41 , \$matched_rules[1]$27 , \$matched_rules[0]$13  };
  assign idx_o = \$idx_o$70 ;
  assign dec_valid_o = \$dec_valid_o$71 ;
  assign dec_error_o = \$dec_error_o$72 ;
  assign \$procmux$11556_CMP  = \$65y ;
  assign \$dec_error_o$72  = \$procmux$11555_Y ;
  assign \$procmux$11559_CMP  = \$65y ;
  assign \$dec_valid_o$71  = \$procmux$11558_Y ;
  assign \$procmux$11562_CMP  = \$65y ;
  assign \$idx_o$70  = \$procmux$11561_Y ;
  assign \$procmux$11565_CMP  = \$65y ;
  assign \$matched_rules[4]$69  = \$procmux$11564_Y ;
  assign \$procmux$11568_CMP  = \$51y ;
  assign \$dec_error_o$58  = \$procmux$11567_Y ;
  assign \$procmux$11571_CMP  = \$51y ;
  assign \$dec_valid_o$57  = \$procmux$11570_Y ;
  assign \$procmux$11574_CMP  = \$51y ;
  assign \$idx_o$56  = \$procmux$11573_Y ;
  assign \$procmux$11577_CMP  = \$51y ;
  assign \$matched_rules[3]$55  = \$procmux$11576_Y ;
  assign \$procmux$11580_CMP  = \$37y ;
  assign \$dec_error_o$44  = \$procmux$11579_Y ;
  assign \$procmux$11583_CMP  = \$37y ;
  assign \$dec_valid_o$43  = \$procmux$11582_Y ;
  assign \$procmux$11586_CMP  = \$37y ;
  assign \$idx_o$42  = \$procmux$11585_Y ;
  assign \$procmux$11589_CMP  = \$37y ;
  assign \$matched_rules[2]$41  = \$procmux$11588_Y ;
  assign \$procmux$11592_CMP  = \$23y ;
  assign \$dec_error_o$30  = \$procmux$11591_Y ;
  assign \$procmux$11595_CMP  = \$23y ;
  assign \$dec_valid_o$29  = \$procmux$11594_Y ;
  assign \$procmux$11598_CMP  = \$23y ;
  assign \$idx_o$28  = \$procmux$11597_Y ;
  assign \$procmux$11601_CMP  = \$23y ;
  assign \$matched_rules[1]$27  = \$procmux$11600_Y ;
  assign \$procmux$11603_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$11602_Y ;
  assign \$procmux$11605_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$11604_Y ;
  assign \$procmux$11607_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$11606_Y ;
  assign \$procmux$11609_CMP  = \$9y ;
  assign \$matched_rules[0]$13  = \$procmux$11608_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
  assign \$18y  = \$17y ;
  assign \$46y  = \$45y ;
  assign \$51y  = \$50y ;
  assign \$60y  = \$59y ;
  assign \$23y  = \$22y ;
  assign \$32y  = \$31y ;
  assign \$37y  = \$36y ;
  assign \$65y  = \$64y ;
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [2:0] \$26y ;
  wire [2:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire [2:0] \$40y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [2:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$30 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$44 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$58 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$29 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$43 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$57 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$28 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$42 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$56 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[0]$13 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[1]$27 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[2]$41 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[3]$55 ;
  wire \$procmux$6436_Y ;
  wire \$procmux$6437_CMP ;
  wire \$procmux$6439_Y ;
  wire \$procmux$6440_CMP ;
  wire [2:0] \$procmux$6442_Y ;
  wire \$procmux$6443_CMP ;
  wire \$procmux$6445_Y ;
  wire \$procmux$6446_CMP ;
  wire \$procmux$6448_Y ;
  wire \$procmux$6449_CMP ;
  wire \$procmux$6451_Y ;
  wire \$procmux$6452_CMP ;
  wire [2:0] \$procmux$6454_Y ;
  wire \$procmux$6455_CMP ;
  wire \$procmux$6457_Y ;
  wire \$procmux$6458_CMP ;
  wire \$procmux$6460_Y ;
  wire \$procmux$6461_CMP ;
  wire \$procmux$6463_Y ;
  wire \$procmux$6464_CMP ;
  wire [2:0] \$procmux$6466_Y ;
  wire \$procmux$6467_CMP ;
  wire \$procmux$6469_Y ;
  wire \$procmux$6470_CMP ;
  wire \$procmux$6471_Y ;
  wire \$procmux$6472_CMP ;
  wire \$procmux$6473_Y ;
  wire \$procmux$6474_CMP ;
  wire [2:0] \$procmux$6475_Y ;
  wire \$procmux$6476_CMP ;
  wire \$procmux$6477_Y ;
  wire \$procmux$6478_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$2  (
    .A(3'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(addr_map_i[127:96]),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$18y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(config_ongoing_i),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(config_ongoing_i),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$26  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(addr_map_i[223:192]),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$32y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(config_ongoing_i),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(config_ongoing_i),
    .Y(\$39y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$40  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$45y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(addr_map_i[319:288]),
    .Y(\$48y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$46y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(config_ongoing_i),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(config_ongoing_i),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$54  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6436  (
    .A(\$dec_error_o$44 ),
    .B(1'h0),
    .S(\$procmux$6437_CMP ),
    .Y(\$procmux$6436_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6439  (
    .A(\$dec_valid_o$43 ),
    .B(\$53y ),
    .S(\$procmux$6440_CMP ),
    .Y(\$procmux$6439_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6442  (
    .A(\$idx_o$42 ),
    .B(\$54y ),
    .S(\$procmux$6443_CMP ),
    .Y(\$procmux$6442_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6445  (
    .A(1'h0),
    .B(\$52y ),
    .S(\$procmux$6446_CMP ),
    .Y(\$procmux$6445_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6448  (
    .A(\$dec_error_o$30 ),
    .B(1'h0),
    .S(\$procmux$6449_CMP ),
    .Y(\$procmux$6448_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6451  (
    .A(\$dec_valid_o$29 ),
    .B(\$39y ),
    .S(\$procmux$6452_CMP ),
    .Y(\$procmux$6451_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6454  (
    .A(\$idx_o$28 ),
    .B(\$40y ),
    .S(\$procmux$6455_CMP ),
    .Y(\$procmux$6454_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6457  (
    .A(1'h0),
    .B(\$38y ),
    .S(\$procmux$6458_CMP ),
    .Y(\$procmux$6457_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6460  (
    .A(\$dec_error_o$16 ),
    .B(1'h0),
    .S(\$procmux$6461_CMP ),
    .Y(\$procmux$6460_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6463  (
    .A(\$dec_valid_o$15 ),
    .B(\$25y ),
    .S(\$procmux$6464_CMP ),
    .Y(\$procmux$6463_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6466  (
    .A(\$idx_o$14 ),
    .B(\$26y ),
    .S(\$procmux$6467_CMP ),
    .Y(\$procmux$6466_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6469  (
    .A(1'h0),
    .B(\$24y ),
    .S(\$procmux$6470_CMP ),
    .Y(\$procmux$6469_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6471  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6472_CMP ),
    .Y(\$procmux$6471_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6473  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$6474_CMP ),
    .Y(\$procmux$6473_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6475  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$6476_CMP ),
    .Y(\$procmux$6475_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6477  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$6478_CMP ),
    .Y(\$procmux$6477_Y )
  );
  assign matched_rules = { \$matched_rules[3]$55 , \$matched_rules[2]$41 , \$matched_rules[1]$27 , \$matched_rules[0]$13  };
  assign idx_o = \$idx_o$56 ;
  assign dec_valid_o = \$dec_valid_o$57 ;
  assign dec_error_o = \$dec_error_o$58 ;
  assign \$procmux$6437_CMP  = \$51y ;
  assign \$dec_error_o$58  = \$procmux$6436_Y ;
  assign \$procmux$6440_CMP  = \$51y ;
  assign \$dec_valid_o$57  = \$procmux$6439_Y ;
  assign \$procmux$6443_CMP  = \$51y ;
  assign \$idx_o$56  = \$procmux$6442_Y ;
  assign \$procmux$6446_CMP  = \$51y ;
  assign \$matched_rules[3]$55  = \$procmux$6445_Y ;
  assign \$procmux$6449_CMP  = \$37y ;
  assign \$dec_error_o$44  = \$procmux$6448_Y ;
  assign \$procmux$6452_CMP  = \$37y ;
  assign \$dec_valid_o$43  = \$procmux$6451_Y ;
  assign \$procmux$6455_CMP  = \$37y ;
  assign \$idx_o$42  = \$procmux$6454_Y ;
  assign \$procmux$6458_CMP  = \$37y ;
  assign \$matched_rules[2]$41  = \$procmux$6457_Y ;
  assign \$procmux$6461_CMP  = \$23y ;
  assign \$dec_error_o$30  = \$procmux$6460_Y ;
  assign \$procmux$6464_CMP  = \$23y ;
  assign \$dec_valid_o$29  = \$procmux$6463_Y ;
  assign \$procmux$6467_CMP  = \$23y ;
  assign \$idx_o$28  = \$procmux$6466_Y ;
  assign \$procmux$6470_CMP  = \$23y ;
  assign \$matched_rules[1]$27  = \$procmux$6469_Y ;
  assign \$procmux$6472_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$6471_Y ;
  assign \$procmux$6474_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$6473_Y ;
  assign \$procmux$6476_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$6475_Y ;
  assign \$procmux$6478_CMP  = \$9y ;
  assign \$matched_rules[0]$13  = \$procmux$6477_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
  assign \$18y  = \$17y ;
  assign \$46y  = \$45y ;
  assign \$51y  = \$50y ;
  assign \$23y  = \$22y ;
  assign \$32y  = \$31y ;
  assign \$37y  = \$36y ;
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [2:0] \$26y ;
  wire [2:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire [2:0] \$40y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [2:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$30 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$44 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$58 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$29 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$43 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$57 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$28 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$42 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$56 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[0]$13 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[1]$27 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[2]$41 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[3]$55 ;
  wire \$procmux$6361_Y ;
  wire \$procmux$6362_CMP ;
  wire \$procmux$6364_Y ;
  wire \$procmux$6365_CMP ;
  wire [2:0] \$procmux$6367_Y ;
  wire \$procmux$6368_CMP ;
  wire \$procmux$6370_Y ;
  wire \$procmux$6371_CMP ;
  wire \$procmux$6373_Y ;
  wire \$procmux$6374_CMP ;
  wire \$procmux$6376_Y ;
  wire \$procmux$6377_CMP ;
  wire [2:0] \$procmux$6379_Y ;
  wire \$procmux$6380_CMP ;
  wire \$procmux$6382_Y ;
  wire \$procmux$6383_CMP ;
  wire \$procmux$6385_Y ;
  wire \$procmux$6386_CMP ;
  wire \$procmux$6388_Y ;
  wire \$procmux$6389_CMP ;
  wire [2:0] \$procmux$6391_Y ;
  wire \$procmux$6392_CMP ;
  wire \$procmux$6394_Y ;
  wire \$procmux$6395_CMP ;
  wire \$procmux$6396_Y ;
  wire \$procmux$6397_CMP ;
  wire \$procmux$6398_Y ;
  wire \$procmux$6399_CMP ;
  wire [2:0] \$procmux$6400_Y ;
  wire \$procmux$6401_CMP ;
  wire \$procmux$6402_Y ;
  wire \$procmux$6403_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$2  (
    .A(3'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(addr_map_i[127:96]),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$18y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(config_ongoing_i),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(config_ongoing_i),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$26  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(addr_map_i[223:192]),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$32y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(config_ongoing_i),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(config_ongoing_i),
    .Y(\$39y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$40  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$45y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(addr_map_i[319:288]),
    .Y(\$48y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$46y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(config_ongoing_i),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(config_ongoing_i),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$54  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6361  (
    .A(\$dec_error_o$44 ),
    .B(1'h0),
    .S(\$procmux$6362_CMP ),
    .Y(\$procmux$6361_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6364  (
    .A(\$dec_valid_o$43 ),
    .B(\$53y ),
    .S(\$procmux$6365_CMP ),
    .Y(\$procmux$6364_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6367  (
    .A(\$idx_o$42 ),
    .B(\$54y ),
    .S(\$procmux$6368_CMP ),
    .Y(\$procmux$6367_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6370  (
    .A(1'h0),
    .B(\$52y ),
    .S(\$procmux$6371_CMP ),
    .Y(\$procmux$6370_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6373  (
    .A(\$dec_error_o$30 ),
    .B(1'h0),
    .S(\$procmux$6374_CMP ),
    .Y(\$procmux$6373_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6376  (
    .A(\$dec_valid_o$29 ),
    .B(\$39y ),
    .S(\$procmux$6377_CMP ),
    .Y(\$procmux$6376_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6379  (
    .A(\$idx_o$28 ),
    .B(\$40y ),
    .S(\$procmux$6380_CMP ),
    .Y(\$procmux$6379_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6382  (
    .A(1'h0),
    .B(\$38y ),
    .S(\$procmux$6383_CMP ),
    .Y(\$procmux$6382_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6385  (
    .A(\$dec_error_o$16 ),
    .B(1'h0),
    .S(\$procmux$6386_CMP ),
    .Y(\$procmux$6385_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6388  (
    .A(\$dec_valid_o$15 ),
    .B(\$25y ),
    .S(\$procmux$6389_CMP ),
    .Y(\$procmux$6388_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6391  (
    .A(\$idx_o$14 ),
    .B(\$26y ),
    .S(\$procmux$6392_CMP ),
    .Y(\$procmux$6391_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6394  (
    .A(1'h0),
    .B(\$24y ),
    .S(\$procmux$6395_CMP ),
    .Y(\$procmux$6394_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6396  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6397_CMP ),
    .Y(\$procmux$6396_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6398  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$6399_CMP ),
    .Y(\$procmux$6398_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6400  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$6401_CMP ),
    .Y(\$procmux$6400_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6402  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$6403_CMP ),
    .Y(\$procmux$6402_Y )
  );
  assign matched_rules = { \$matched_rules[3]$55 , \$matched_rules[2]$41 , \$matched_rules[1]$27 , \$matched_rules[0]$13  };
  assign idx_o = \$idx_o$56 ;
  assign dec_valid_o = \$dec_valid_o$57 ;
  assign dec_error_o = \$dec_error_o$58 ;
  assign \$procmux$6362_CMP  = \$51y ;
  assign \$dec_error_o$58  = \$procmux$6361_Y ;
  assign \$procmux$6365_CMP  = \$51y ;
  assign \$dec_valid_o$57  = \$procmux$6364_Y ;
  assign \$procmux$6368_CMP  = \$51y ;
  assign \$idx_o$56  = \$procmux$6367_Y ;
  assign \$procmux$6371_CMP  = \$51y ;
  assign \$matched_rules[3]$55  = \$procmux$6370_Y ;
  assign \$procmux$6374_CMP  = \$37y ;
  assign \$dec_error_o$44  = \$procmux$6373_Y ;
  assign \$procmux$6377_CMP  = \$37y ;
  assign \$dec_valid_o$43  = \$procmux$6376_Y ;
  assign \$procmux$6380_CMP  = \$37y ;
  assign \$idx_o$42  = \$procmux$6379_Y ;
  assign \$procmux$6383_CMP  = \$37y ;
  assign \$matched_rules[2]$41  = \$procmux$6382_Y ;
  assign \$procmux$6386_CMP  = \$23y ;
  assign \$dec_error_o$30  = \$procmux$6385_Y ;
  assign \$procmux$6389_CMP  = \$23y ;
  assign \$dec_valid_o$29  = \$procmux$6388_Y ;
  assign \$procmux$6392_CMP  = \$23y ;
  assign \$idx_o$28  = \$procmux$6391_Y ;
  assign \$procmux$6395_CMP  = \$23y ;
  assign \$matched_rules[1]$27  = \$procmux$6394_Y ;
  assign \$procmux$6397_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$6396_Y ;
  assign \$procmux$6399_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$6398_Y ;
  assign \$procmux$6401_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$6400_Y ;
  assign \$procmux$6403_CMP  = \$9y ;
  assign \$matched_rules[0]$13  = \$procmux$6402_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
  assign \$18y  = \$17y ;
  assign \$46y  = \$45y ;
  assign \$51y  = \$50y ;
  assign \$23y  = \$22y ;
  assign \$32y  = \$31y ;
  assign \$37y  = \$36y ;
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [2:0] \$26y ;
  wire [2:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire [2:0] \$40y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [2:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$30 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$44 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$58 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$29 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$43 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$57 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$28 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$42 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$56 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[0]$13 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[1]$27 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[2]$41 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[3]$55 ;
  wire \$procmux$6286_Y ;
  wire \$procmux$6287_CMP ;
  wire \$procmux$6289_Y ;
  wire \$procmux$6290_CMP ;
  wire [2:0] \$procmux$6292_Y ;
  wire \$procmux$6293_CMP ;
  wire \$procmux$6295_Y ;
  wire \$procmux$6296_CMP ;
  wire \$procmux$6298_Y ;
  wire \$procmux$6299_CMP ;
  wire \$procmux$6301_Y ;
  wire \$procmux$6302_CMP ;
  wire [2:0] \$procmux$6304_Y ;
  wire \$procmux$6305_CMP ;
  wire \$procmux$6307_Y ;
  wire \$procmux$6308_CMP ;
  wire \$procmux$6310_Y ;
  wire \$procmux$6311_CMP ;
  wire \$procmux$6313_Y ;
  wire \$procmux$6314_CMP ;
  wire [2:0] \$procmux$6316_Y ;
  wire \$procmux$6317_CMP ;
  wire \$procmux$6319_Y ;
  wire \$procmux$6320_CMP ;
  wire \$procmux$6321_Y ;
  wire \$procmux$6322_CMP ;
  wire \$procmux$6323_Y ;
  wire \$procmux$6324_CMP ;
  wire [2:0] \$procmux$6325_Y ;
  wire \$procmux$6326_CMP ;
  wire \$procmux$6327_Y ;
  wire \$procmux$6328_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$2  (
    .A(3'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(addr_map_i[127:96]),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$18y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(config_ongoing_i),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(config_ongoing_i),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$26  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(addr_map_i[223:192]),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$32y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(config_ongoing_i),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(config_ongoing_i),
    .Y(\$39y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$40  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$45y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(addr_map_i[319:288]),
    .Y(\$48y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$46y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(config_ongoing_i),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(config_ongoing_i),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$54  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6286  (
    .A(\$dec_error_o$44 ),
    .B(1'h0),
    .S(\$procmux$6287_CMP ),
    .Y(\$procmux$6286_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6289  (
    .A(\$dec_valid_o$43 ),
    .B(\$53y ),
    .S(\$procmux$6290_CMP ),
    .Y(\$procmux$6289_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6292  (
    .A(\$idx_o$42 ),
    .B(\$54y ),
    .S(\$procmux$6293_CMP ),
    .Y(\$procmux$6292_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6295  (
    .A(1'h0),
    .B(\$52y ),
    .S(\$procmux$6296_CMP ),
    .Y(\$procmux$6295_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6298  (
    .A(\$dec_error_o$30 ),
    .B(1'h0),
    .S(\$procmux$6299_CMP ),
    .Y(\$procmux$6298_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6301  (
    .A(\$dec_valid_o$29 ),
    .B(\$39y ),
    .S(\$procmux$6302_CMP ),
    .Y(\$procmux$6301_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6304  (
    .A(\$idx_o$28 ),
    .B(\$40y ),
    .S(\$procmux$6305_CMP ),
    .Y(\$procmux$6304_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6307  (
    .A(1'h0),
    .B(\$38y ),
    .S(\$procmux$6308_CMP ),
    .Y(\$procmux$6307_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6310  (
    .A(\$dec_error_o$16 ),
    .B(1'h0),
    .S(\$procmux$6311_CMP ),
    .Y(\$procmux$6310_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6313  (
    .A(\$dec_valid_o$15 ),
    .B(\$25y ),
    .S(\$procmux$6314_CMP ),
    .Y(\$procmux$6313_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6316  (
    .A(\$idx_o$14 ),
    .B(\$26y ),
    .S(\$procmux$6317_CMP ),
    .Y(\$procmux$6316_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6319  (
    .A(1'h0),
    .B(\$24y ),
    .S(\$procmux$6320_CMP ),
    .Y(\$procmux$6319_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6321  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6322_CMP ),
    .Y(\$procmux$6321_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6323  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$6324_CMP ),
    .Y(\$procmux$6323_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6325  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$6326_CMP ),
    .Y(\$procmux$6325_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6327  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$6328_CMP ),
    .Y(\$procmux$6327_Y )
  );
  assign matched_rules = { \$matched_rules[3]$55 , \$matched_rules[2]$41 , \$matched_rules[1]$27 , \$matched_rules[0]$13  };
  assign idx_o = \$idx_o$56 ;
  assign dec_valid_o = \$dec_valid_o$57 ;
  assign dec_error_o = \$dec_error_o$58 ;
  assign \$procmux$6287_CMP  = \$51y ;
  assign \$dec_error_o$58  = \$procmux$6286_Y ;
  assign \$procmux$6290_CMP  = \$51y ;
  assign \$dec_valid_o$57  = \$procmux$6289_Y ;
  assign \$procmux$6293_CMP  = \$51y ;
  assign \$idx_o$56  = \$procmux$6292_Y ;
  assign \$procmux$6296_CMP  = \$51y ;
  assign \$matched_rules[3]$55  = \$procmux$6295_Y ;
  assign \$procmux$6299_CMP  = \$37y ;
  assign \$dec_error_o$44  = \$procmux$6298_Y ;
  assign \$procmux$6302_CMP  = \$37y ;
  assign \$dec_valid_o$43  = \$procmux$6301_Y ;
  assign \$procmux$6305_CMP  = \$37y ;
  assign \$idx_o$42  = \$procmux$6304_Y ;
  assign \$procmux$6308_CMP  = \$37y ;
  assign \$matched_rules[2]$41  = \$procmux$6307_Y ;
  assign \$procmux$6311_CMP  = \$23y ;
  assign \$dec_error_o$30  = \$procmux$6310_Y ;
  assign \$procmux$6314_CMP  = \$23y ;
  assign \$dec_valid_o$29  = \$procmux$6313_Y ;
  assign \$procmux$6317_CMP  = \$23y ;
  assign \$idx_o$28  = \$procmux$6316_Y ;
  assign \$procmux$6320_CMP  = \$23y ;
  assign \$matched_rules[1]$27  = \$procmux$6319_Y ;
  assign \$procmux$6322_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$6321_Y ;
  assign \$procmux$6324_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$6323_Y ;
  assign \$procmux$6326_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$6325_Y ;
  assign \$procmux$6328_CMP  = \$9y ;
  assign \$matched_rules[0]$13  = \$procmux$6327_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
  assign \$18y  = \$17y ;
  assign \$46y  = \$45y ;
  assign \$51y  = \$50y ;
  assign \$23y  = \$22y ;
  assign \$32y  = \$31y ;
  assign \$37y  = \$36y ;
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [2:0] \$26y ;
  wire [2:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire [2:0] \$40y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [2:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$30 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$44 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$58 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$29 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$43 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$57 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$28 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$42 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire [2:0] \$idx_o$56 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[0]$13 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[1]$27 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[2]$41 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules[3]$55 ;
  wire \$procmux$6211_Y ;
  wire \$procmux$6212_CMP ;
  wire \$procmux$6214_Y ;
  wire \$procmux$6215_CMP ;
  wire [2:0] \$procmux$6217_Y ;
  wire \$procmux$6218_CMP ;
  wire \$procmux$6220_Y ;
  wire \$procmux$6221_CMP ;
  wire \$procmux$6223_Y ;
  wire \$procmux$6224_CMP ;
  wire \$procmux$6226_Y ;
  wire \$procmux$6227_CMP ;
  wire [2:0] \$procmux$6229_Y ;
  wire \$procmux$6230_CMP ;
  wire \$procmux$6232_Y ;
  wire \$procmux$6233_CMP ;
  wire \$procmux$6235_Y ;
  wire \$procmux$6236_CMP ;
  wire \$procmux$6238_Y ;
  wire \$procmux$6239_CMP ;
  wire [2:0] \$procmux$6241_Y ;
  wire \$procmux$6242_CMP ;
  wire \$procmux$6244_Y ;
  wire \$procmux$6245_CMP ;
  wire \$procmux$6246_Y ;
  wire \$procmux$6247_CMP ;
  wire \$procmux$6248_Y ;
  wire \$procmux$6249_CMP ;
  wire [2:0] \$procmux$6250_Y ;
  wire \$procmux$6251_CMP ;
  wire \$procmux$6252_Y ;
  wire \$procmux$6253_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input [2:0] default_idx_i;
  wire [2:0] default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output [2:0] idx_o;
  wire [2:0] idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire [3:0] matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(addr_map_i[66:64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(addr_i),
    .B(addr_map_i[159:128]),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_i),
    .B(addr_map_i[127:96]),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$2  (
    .A(3'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(addr_map_i[127:96]),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$18y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(config_ongoing_i),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(config_ongoing_i),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$26  (
    .A(addr_map_i[162:160]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i),
    .B(addr_map_i[255:224]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_i),
    .B(addr_map_i[223:192]),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(addr_map_i[223:192]),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$32y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(config_ongoing_i),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(config_ongoing_i),
    .Y(\$39y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$40  (
    .A(addr_map_i[258:256]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(addr_i),
    .B(addr_map_i[351:320]),
    .Y(\$45y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_i),
    .B(addr_map_i[319:288]),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(addr_map_i[319:288]),
    .Y(\$48y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$46y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(config_ongoing_i),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(config_ongoing_i),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$54  (
    .A(addr_map_i[354:352]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6211  (
    .A(\$dec_error_o$44 ),
    .B(1'h0),
    .S(\$procmux$6212_CMP ),
    .Y(\$procmux$6211_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6214  (
    .A(\$dec_valid_o$43 ),
    .B(\$53y ),
    .S(\$procmux$6215_CMP ),
    .Y(\$procmux$6214_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6217  (
    .A(\$idx_o$42 ),
    .B(\$54y ),
    .S(\$procmux$6218_CMP ),
    .Y(\$procmux$6217_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6220  (
    .A(1'h0),
    .B(\$52y ),
    .S(\$procmux$6221_CMP ),
    .Y(\$procmux$6220_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6223  (
    .A(\$dec_error_o$30 ),
    .B(1'h0),
    .S(\$procmux$6224_CMP ),
    .Y(\$procmux$6223_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6226  (
    .A(\$dec_valid_o$29 ),
    .B(\$39y ),
    .S(\$procmux$6227_CMP ),
    .Y(\$procmux$6226_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6229  (
    .A(\$idx_o$28 ),
    .B(\$40y ),
    .S(\$procmux$6230_CMP ),
    .Y(\$procmux$6229_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6232  (
    .A(1'h0),
    .B(\$38y ),
    .S(\$procmux$6233_CMP ),
    .Y(\$procmux$6232_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6235  (
    .A(\$dec_error_o$16 ),
    .B(1'h0),
    .S(\$procmux$6236_CMP ),
    .Y(\$procmux$6235_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6238  (
    .A(\$dec_valid_o$15 ),
    .B(\$25y ),
    .S(\$procmux$6239_CMP ),
    .Y(\$procmux$6238_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6241  (
    .A(\$idx_o$14 ),
    .B(\$26y ),
    .S(\$procmux$6242_CMP ),
    .Y(\$procmux$6241_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6244  (
    .A(1'h0),
    .B(\$24y ),
    .S(\$procmux$6245_CMP ),
    .Y(\$procmux$6244_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6246  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6247_CMP ),
    .Y(\$procmux$6246_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6248  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$6249_CMP ),
    .Y(\$procmux$6248_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$6250  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$6251_CMP ),
    .Y(\$procmux$6250_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6252  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$6253_CMP ),
    .Y(\$procmux$6252_Y )
  );
  assign matched_rules = { \$matched_rules[3]$55 , \$matched_rules[2]$41 , \$matched_rules[1]$27 , \$matched_rules[0]$13  };
  assign idx_o = \$idx_o$56 ;
  assign dec_valid_o = \$dec_valid_o$57 ;
  assign dec_error_o = \$dec_error_o$58 ;
  assign \$procmux$6212_CMP  = \$51y ;
  assign \$dec_error_o$58  = \$procmux$6211_Y ;
  assign \$procmux$6215_CMP  = \$51y ;
  assign \$dec_valid_o$57  = \$procmux$6214_Y ;
  assign \$procmux$6218_CMP  = \$51y ;
  assign \$idx_o$56  = \$procmux$6217_Y ;
  assign \$procmux$6221_CMP  = \$51y ;
  assign \$matched_rules[3]$55  = \$procmux$6220_Y ;
  assign \$procmux$6224_CMP  = \$37y ;
  assign \$dec_error_o$44  = \$procmux$6223_Y ;
  assign \$procmux$6227_CMP  = \$37y ;
  assign \$dec_valid_o$43  = \$procmux$6226_Y ;
  assign \$procmux$6230_CMP  = \$37y ;
  assign \$idx_o$42  = \$procmux$6229_Y ;
  assign \$procmux$6233_CMP  = \$37y ;
  assign \$matched_rules[2]$41  = \$procmux$6232_Y ;
  assign \$procmux$6236_CMP  = \$23y ;
  assign \$dec_error_o$30  = \$procmux$6235_Y ;
  assign \$procmux$6239_CMP  = \$23y ;
  assign \$dec_valid_o$29  = \$procmux$6238_Y ;
  assign \$procmux$6242_CMP  = \$23y ;
  assign \$idx_o$28  = \$procmux$6241_Y ;
  assign \$procmux$6245_CMP  = \$23y ;
  assign \$matched_rules[1]$27  = \$procmux$6244_Y ;
  assign \$procmux$6247_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$6246_Y ;
  assign \$procmux$6249_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$6248_Y ;
  assign \$procmux$6251_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$6250_Y ;
  assign \$procmux$6253_CMP  = \$9y ;
  assign \$matched_rules[0]$13  = \$procmux$6252_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
  assign \$18y  = \$17y ;
  assign \$46y  = \$45y ;
  assign \$51y  = \$50y ;
  assign \$23y  = \$22y ;
  assign \$32y  = \$31y ;
  assign \$37y  = \$36y ;
endmodule

/* src = "rtl/common_cells/addr_decode_dync.sv:40.8" */
module \addr_decode_dync$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs.i_addr_decode_dync (addr_map_i, en_default_idx_i, default_idx_i, addr_i, idx_o, dec_valid_o, dec_error_o, config_ongoing_i);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_error_o$16 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$dec_valid_o$15 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$idx_o$14 ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  wire \$matched_rules$13 ;
  wire \$procmux$10887_Y ;
  wire \$procmux$10888_CMP ;
  wire \$procmux$10889_Y ;
  wire \$procmux$10890_CMP ;
  wire \$procmux$10891_Y ;
  wire \$procmux$10892_CMP ;
  wire \$procmux$10893_Y ;
  wire \$procmux$10894_CMP ;
  /* src = "rtl/common_cells/addr_decode_dync.sv:77.31" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:79.31" */
  input [95:0] addr_map_i;
  wire [95:0] addr_map_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:98.31" */
  input config_ongoing_i;
  wire config_ongoing_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:85.31" */
  output dec_error_o;
  wire dec_error_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:83.31" */
  output dec_valid_o;
  wire dec_valid_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:95.31" */
  input default_idx_i;
  wire default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:89.31" */
  input en_default_idx_i;
  wire en_default_idx_i;
  /* src = "rtl/common_cells/addr_decode_dync.sv:81.31" */
  output idx_o;
  wire idx_o;
  /* src = "rtl/common_cells/addr_decode_dync.sv:101.23" */
  wire matched_rules;
  /* src = "rtl/common_cells/addr_decode_dync.sv:107.21-107.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(1'h1),
    .B(1'h0),
    .S(en_default_idx_i),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:118.28-118.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(config_ongoing_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:119.28-119.45" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(config_ongoing_i),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:121.28-121.88" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(addr_map_i[64]),
    .B(default_idx_i),
    .S(config_ongoing_i),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:108.21-108.60" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$2  (
    .A(1'h0),
    .B(default_idx_i),
    .S(en_default_idx_i),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.20-113.54" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(addr_i),
    .B(addr_map_i[63:32]),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.11-114.42" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_i),
    .B(addr_map_i[31:0]),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.48-114.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_map_i[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:114.10-114.77" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:113.9-114.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$4y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10887  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$10888_CMP ),
    .Y(\$procmux$10887_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10889  (
    .A(1'h0),
    .B(\$11y ),
    .S(\$procmux$10890_CMP ),
    .Y(\$procmux$10889_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10891  (
    .A(\$2y ),
    .B(\$12y ),
    .S(\$procmux$10892_CMP ),
    .Y(\$procmux$10891_Y )
  );
  /* src = "rtl/common_cells/addr_decode_dync.sv:117.9-122.10|rtl/common_cells/addr_decode_dync.sv:112.7-122.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10893  (
    .A(1'h0),
    .B(\$10y ),
    .S(\$procmux$10894_CMP ),
    .Y(\$procmux$10893_Y )
  );
  assign matched_rules = \$matched_rules$13 ;
  assign idx_o = \$idx_o$14 ;
  assign dec_valid_o = \$dec_valid_o$15 ;
  assign dec_error_o = \$dec_error_o$16 ;
  assign \$procmux$10888_CMP  = \$9y ;
  assign \$dec_error_o$16  = \$procmux$10887_Y ;
  assign \$procmux$10890_CMP  = \$9y ;
  assign \$dec_valid_o$15  = \$procmux$10889_Y ;
  assign \$procmux$10892_CMP  = \$9y ;
  assign \$idx_o$14  = \$procmux$10891_Y ;
  assign \$procmux$10894_CMP  = \$9y ;
  assign \$matched_rules$13  = \$procmux$10893_Y ;
  assign \$4y  = \$3y ;
  assign \$9y  = \$8y ;
endmodule

/* src = "rtl/apb_uart/apb_uart.sv:35.8" */
module \apb_uart$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart (CLK, RSTN, PSEL, PENABLE, PWRITE, PADDR, PWDATA, PRDATA, PREADY, PSLVERR, INT, OUT1N, OUT2N, RTSN, DTRN, CTSN, DSRN, DCDN, RIN, SIN, SOUT
);
  wire \$0y ;
  wire \$100y ;
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$105y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$10y ;
  wire \$110y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$115y ;
  wire \$116y ;
  wire \$117y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$120y ;
  wire [31:0] \$121y ;
  wire \$124y ;
  wire \$125y ;
  wire \$126y ;
  wire \$12y ;
  wire \$131y ;
  wire \$132y ;
  wire \$133y ;
  wire \$135y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$13y ;
  wire \$140y ;
  wire \$141y ;
  wire \$142y ;
  wire \$143y ;
  wire \$145y ;
  wire \$146y ;
  wire \$147y ;
  wire \$148y ;
  wire \$149y ;
  wire \$14y ;
  wire \$150y ;
  wire \$151y ;
  wire \$152y ;
  wire \$153y ;
  wire \$15y ;
  wire \$162y ;
  wire \$163y ;
  wire \$166y ;
  wire \$167y ;
  wire \$16y ;
  wire \$170y ;
  wire \$171y ;
  wire \$172y ;
  wire \$173y ;
  wire \$174y ;
  wire \$175y ;
  wire \$176y ;
  wire \$177y ;
  wire \$178y ;
  wire \$179y ;
  wire \$17y ;
  wire \$180y ;
  wire \$181y ;
  wire \$182y ;
  wire \$185y ;
  wire \$186y ;
  wire \$189y ;
  wire \$18y ;
  wire \$190y ;
  wire \$193y ;
  wire \$194y ;
  wire \$197y ;
  wire \$198y ;
  wire \$199y ;
  wire \$19y ;
  wire \$1y ;
  wire \$200y ;
  wire \$203y ;
  wire \$204y ;
  wire \$205y ;
  wire \$206y ;
  wire [31:0] \$207y ;
  wire \$208y ;
  wire \$209y ;
  wire \$20y ;
  wire \$210y ;
  wire [31:0] \$211y ;
  wire \$215y ;
  wire \$216y ;
  wire \$217y ;
  wire \$218y ;
  wire \$219y ;
  wire \$21y ;
  wire \$220y ;
  wire \$221y ;
  wire \$222y ;
  wire \$223y ;
  wire \$224y ;
  wire \$225y ;
  wire \$226y ;
  wire \$227y ;
  wire \$228y ;
  wire \$229y ;
  wire \$22y ;
  wire \$230y ;
  wire \$231y ;
  wire \$232y ;
  wire \$233y ;
  wire \$234y ;
  wire \$235y ;
  wire \$236y ;
  wire \$237y ;
  wire \$238y ;
  wire \$239y ;
  wire \$23y ;
  wire \$240y ;
  wire \$241y ;
  wire \$242y ;
  wire \$243y ;
  wire \$244y ;
  wire \$245y ;
  wire \$246y ;
  wire \$247y ;
  wire \$248y ;
  wire \$249y ;
  wire \$24y ;
  wire \$250y ;
  wire \$251y ;
  wire \$252y ;
  wire \$253y ;
  wire \$254y ;
  wire \$255y ;
  wire \$256y ;
  wire \$257y ;
  wire \$258y ;
  wire \$259y ;
  wire \$25y ;
  wire \$260y ;
  wire \$261y ;
  wire \$262y ;
  wire \$263y ;
  wire \$264y ;
  wire \$265y ;
  wire \$266y ;
  wire \$267y ;
  wire \$268y ;
  wire \$269y ;
  wire \$26y ;
  wire \$270y ;
  wire \$271y ;
  wire \$272y ;
  wire \$273y ;
  wire \$274y ;
  wire \$275y ;
  wire \$276y ;
  wire \$277y ;
  wire \$278y ;
  wire \$279y ;
  wire \$27y ;
  wire \$280y ;
  wire \$281y ;
  wire \$282y ;
  wire \$283y ;
  wire \$285y ;
  wire \$286y ;
  wire \$287y ;
  wire \$288y ;
  wire \$289y ;
  wire \$28y ;
  wire \$292y ;
  wire \$293y ;
  wire \$294y ;
  wire \$295y ;
  wire \$298y ;
  wire \$299y ;
  wire \$29y ;
  wire \$2y ;
  wire \$302y ;
  wire \$303y ;
  wire \$304y ;
  wire \$305y ;
  wire \$309y ;
  wire \$30y ;
  wire \$310y ;
  wire \$312y ;
  wire \$313y ;
  wire \$314y ;
  wire \$315y ;
  wire \$316y ;
  wire \$317y ;
  wire \$318y ;
  wire \$319y ;
  wire \$31y ;
  wire \$320y ;
  wire \$321y ;
  wire \$322y ;
  wire \$323y ;
  wire \$324y ;
  wire \$325y ;
  wire \$326y ;
  wire \$327y ;
  wire \$328y ;
  wire \$329y ;
  wire \$32y ;
  wire \$330y ;
  wire \$331y ;
  wire \$332y ;
  wire \$333y ;
  wire \$334y ;
  wire \$335y ;
  wire \$336y ;
  wire \$337y ;
  wire \$338y ;
  wire \$339y ;
  wire \$33y ;
  wire \$340y ;
  wire \$341y ;
  wire \$342y ;
  wire \$343y ;
  wire \$344y ;
  wire \$345y ;
  wire \$346y ;
  wire \$347y ;
  wire \$348y ;
  wire \$349y ;
  wire \$34y ;
  wire \$350y ;
  wire \$351y ;
  wire \$352y ;
  wire \$353y ;
  wire \$354y ;
  wire \$355y ;
  wire \$356y ;
  wire \$357y ;
  wire \$358y ;
  wire \$359y ;
  wire \$35y ;
  wire \$360y ;
  wire \$361y ;
  wire \$362y ;
  wire \$363y ;
  wire \$364y ;
  wire \$365y ;
  wire \$366y ;
  wire \$367y ;
  wire \$368y ;
  wire \$369y ;
  wire \$36y ;
  wire \$370y ;
  wire \$371y ;
  wire \$372y ;
  wire \$373y ;
  wire \$374y ;
  wire \$375y ;
  wire \$376y ;
  wire \$377y ;
  wire \$378y ;
  wire \$379y ;
  wire \$37y ;
  wire \$380y ;
  wire \$381y ;
  wire \$382y ;
  wire \$383y ;
  wire \$384y ;
  wire \$385y ;
  wire \$386y ;
  wire \$387y ;
  wire \$388y ;
  wire \$389y ;
  wire \$38y ;
  wire \$391y ;
  wire \$392y ;
  wire \$395y ;
  wire \$39y ;
  wire \$3y ;
  wire \$403y ;
  wire \$404y ;
  wire \$405y ;
  wire \$40y ;
  wire \$410y ;
  wire \$411y ;
  wire \$419y ;
  wire \$41y ;
  wire \$420y ;
  wire \$421y ;
  wire \$422y ;
  wire \$423y ;
  wire \$424y ;
  wire \$425y ;
  wire \$426y ;
  wire \$427y ;
  wire \$428y ;
  wire \$429y ;
  wire \$42y ;
  wire \$430y ;
  wire \$431y ;
  wire \$435y ;
  wire \$436y ;
  wire \$438y ;
  wire \$439y ;
  wire \$43y ;
  wire \$440y ;
  wire \$442y ;
  wire \$443y ;
  wire \$444y ;
  wire \$446y ;
  wire \$447y ;
  wire \$448y ;
  wire \$44y ;
  wire \$450y ;
  wire \$451y ;
  wire \$452y ;
  wire \$454y ;
  wire \$455y ;
  wire \$456y ;
  wire \$459y ;
  wire \$45y ;
  wire \$461y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$70y ;
  wire \$71y ;
  wire \$73y ;
  wire \$74y ;
  wire \$76y ;
  wire \$79y ;
  wire \$7y ;
  wire \$80y ;
  wire \$83y ;
  wire \$84y ;
  wire \$85y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$95y ;
  wire \$96y ;
  wire \$97y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/apb_uart.sv:867.8-870.13" */
  wire \$DTRN$453 ;
  /* src = "rtl/apb_uart/apb_uart.sv:852.8-855.13" */
  wire \$OUT1N$441 ;
  /* src = "rtl/apb_uart/apb_uart.sv:857.8-860.13" */
  wire \$OUT2N$445 ;
  /* src = "rtl/apb_uart/apb_uart.sv:883.13-890.18" */
  wire [7:0] \$PRDATA[7:0]$460 ;
  /* src = "rtl/apb_uart/apb_uart.sv:895.13-902.18" */
  wire [7:0] \$PRDATA[7:0]$462 ;
  /* src = "rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  wire [7:0] \$PRDATA[7:0]$463 ;
  /* src = "rtl/apb_uart/apb_uart.sv:862.8-865.13" */
  wire \$RTSN$449 ;
  /* src = "rtl/apb_uart/apb_uart.sv:872.8-875.18" */
  wire \$SOUT$457 ;
  /* src = "rtl/apb_uart/apb_uart.sv:847.8-850.13" */
  wire \$iBAUDOUTN$437 ;
  /* src = "rtl/apb_uart/apb_uart.sv:344.18-347.18" */
  wire \$iCharTimeout$127 ;
  /* src = "rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  wire \$iCharTimeout$128 ;
  /* src = "rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  wire \$iCharTimeout$129 ;
  /* src = "rtl/apb_uart/apb_uart.sv:244.8-247.13" */
  wire [7:0] \$iDLL$75 ;
  /* src = "rtl/apb_uart/apb_uart.sv:248.8-251.13" */
  wire [7:0] \$iDLM$77 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$iFCR_DMAMode$158 ;
  /* src = "rtl/apb_uart/apb_uart.sv:375.13-378.18" */
  wire \$iFCR_FIFO64E$134 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$iFCR_FIFO64E$159 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$iFCR_FIFOEnable$155 ;
  /* src = "rtl/apb_uart/apb_uart.sv:380.13-383.18" */
  wire \$iFCR_RXFIFOReset$144 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$iFCR_RXFIFOReset$156 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire [1:0] \$iFCR_RXTrigger$160 ;
  /* src = "rtl/apb_uart/apb_uart.sv:385.13-388.18" */
  wire \$iFCR_TXFIFOReset$154 ;
  /* src = "rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  wire \$iFCR_TXFIFOReset$157 ;
  /* src = "rtl/apb_uart/apb_uart.sv:505.18-508.18" */
  wire [6:0] \$iFECounter$212 ;
  /* src = "rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  wire [6:0] \$iFECounter$213 ;
  /* src = "rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  wire [6:0] \$iFECounter$214 ;
  /* src = "rtl/apb_uart/apb_uart.sv:261.8-264.13" */
  wire [3:0] \$iIER[3:0]$81 ;
  /* src = "rtl/apb_uart/apb_uart.sv:408.8-411.13" */
  wire [7:0] \$iLCR$164 ;
  /* src = "rtl/apb_uart/apb_uart.sv:483.13-486.13" */
  wire \$iLSR_BI$195 ;
  /* src = "rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  wire \$iLSR_BI$196 ;
  /* src = "rtl/apb_uart/apb_uart.sv:475.13-478.13" */
  wire \$iLSR_FE$191 ;
  /* src = "rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  wire \$iLSR_FE$192 ;
  /* src = "rtl/apb_uart/apb_uart.sv:491.13-494.13" */
  wire \$iLSR_FIFOERR$201 ;
  /* src = "rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  wire \$iLSR_FIFOERR$202 ;
  /* src = "rtl/apb_uart/apb_uart.sv:459.13-462.13" */
  wire \$iLSR_OE$183 ;
  /* src = "rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  wire \$iLSR_OE$184 ;
  /* src = "rtl/apb_uart/apb_uart.sv:467.13-470.13" */
  wire \$iLSR_PE$187 ;
  /* src = "rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  wire \$iLSR_PE$188 ;
  /* src = "rtl/apb_uart/apb_uart.sv:429.8-432.12" */
  wire [5:0] \$iMCR[5:0]$168 ;
  /* src = "rtl/apb_uart/apb_uart.sv:591.13-594.13" */
  wire \$iMSR_TERI$300 ;
  /* src = "rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  wire \$iMSR_TERI$301 ;
  /* src = "rtl/apb_uart/apb_uart.sv:575.13-578.13" */
  wire \$iMSR_dCTS$290 ;
  /* src = "rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  wire \$iMSR_dCTS$291 ;
  /* src = "rtl/apb_uart/apb_uart.sv:599.13-602.13" */
  wire \$iMSR_dDCD$306 ;
  /* src = "rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  wire \$iMSR_dDCD$307 ;
  /* src = "rtl/apb_uart/apb_uart.sv:583.13-586.13" */
  wire \$iMSR_dDSR$296 ;
  /* src = "rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  wire \$iMSR_dDSR$297 ;
  /* src = "rtl/apb_uart/apb_uart.sv:823.13-826.13" */
  wire \$iRTS$432 ;
  /* src = "rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  wire \$iRTS$433 ;
  /* src = "rtl/apb_uart/apb_uart.sv:793.27-794.50" */
  wire \$iRXFIFOClear$406 ;
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire \$iRXFIFOClear$407 ;
  /* src = "rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$iRXFIFOClear$414 ;
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire [10:0] \$iRXFIFOD$408 ;
  /* src = "rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire [10:0] \$iRXFIFOD$416 ;
  /* src = "rtl/apb_uart/apb_uart.sv:804.27-805.45" */
  wire \$iRXFIFOWrite$412 ;
  /* src = "rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  wire \$iRXFIFOWrite$413 ;
  /* src = "rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$iRXFIFOWrite$415 ;
  /* src = "rtl/apb_uart/apb_uart.sv:622.8-625.13" */
  wire [7:0] \$iSCR$311 ;
  /* src = "rtl/apb_uart/apb_uart.sv:303.13-306.13" */
  wire \$iTHRInterrupt$98 ;
  /* src = "rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  wire \$iTHRInterrupt$99 ;
  /* src = "rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire [7:0] \$iTSR$397 ;
  /* src = "rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$iTXFIFORead$398 ;
  /* src = "rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$iTXRunning$400 ;
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  wire \$iTXStart$393 ;
  /* src = "rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire \$iTXStart$399 ;
  /* src = "rtl/apb_uart/apb_uart.sv:334.13-337.13" */
  wire [5:0] \$iTimeoutCount$122 ;
  /* src = "rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  wire [5:0] \$iTimeoutCount$123 ;
  wire [7:0] \$procmux$11108_Y ;
  wire \$procmux$11109_CMP ;
  wire [7:0] \$procmux$11110_Y ;
  wire \$procmux$11111_CMP ;
  wire [7:0] \$procmux$11112_Y ;
  wire \$procmux$11113_CMP ;
  wire \$procmux$11114_CMP ;
  wire \$procmux$11115_CMP ;
  wire \$procmux$11116_CMP ;
  wire \$procmux$11117_CMP ;
  wire \$procmux$11118_CMP ;
  wire \$procmux$11120_CMP ;
  wire \$procmux$11122_CMP ;
  wire [7:0] \$procmux$11131_Y ;
  wire \$procmux$11132_CMP ;
  wire [7:0] \$procmux$11133_Y ;
  wire \$procmux$11134_CMP ;
  wire \$procmux$11136_Y ;
  wire \$procmux$11137_CMP ;
  wire \$procmux$11139_Y ;
  wire \$procmux$11140_CMP ;
  wire \$procmux$11142_Y ;
  wire \$procmux$11143_CMP ;
  wire \$procmux$11145_Y ;
  wire \$procmux$11146_CMP ;
  wire \$procmux$11148_Y ;
  wire \$procmux$11149_CMP ;
  wire \$procmux$11150_Y ;
  wire \$procmux$11151_CMP ;
  wire \$procmux$11152_Y ;
  wire \$procmux$11153_CMP ;
  wire \$procmux$11155_Y ;
  wire \$procmux$11156_CMP ;
  wire \$procmux$11159_Y ;
  wire \$procmux$11160_CMP ;
  wire \$procmux$11161_Y ;
  wire \$procmux$11162_CMP ;
  wire \$procmux$11164_Y ;
  wire \$procmux$11165_CMP ;
  wire \$procmux$11166_Y ;
  wire \$procmux$11167_CMP ;
  wire \$procmux$11170_Y ;
  wire \$procmux$11171_CMP ;
  wire \$procmux$11172_Y ;
  wire \$procmux$11173_CMP ;
  wire \$procmux$11175_Y ;
  wire \$procmux$11176_CMP ;
  wire \$procmux$11178_CMP ;
  wire \$procmux$11182_Y ;
  wire \$procmux$11183_CMP ;
  wire \$procmux$11184_Y ;
  wire \$procmux$11185_CMP ;
  wire \$procmux$11188_Y ;
  wire \$procmux$11189_CMP ;
  wire \$procmux$11190_Y ;
  wire \$procmux$11191_CMP ;
  wire \$procmux$11192_Y ;
  wire \$procmux$11193_CMP ;
  wire [10:0] \$procmux$11197_Y ;
  wire \$procmux$11198_CMP ;
  wire [10:0] \$procmux$11199_Y ;
  wire \$procmux$11200_CMP ;
  wire \$procmux$11204_Y ;
  wire \$procmux$11205_CMP ;
  wire \$procmux$11206_Y ;
  wire \$procmux$11207_CMP ;
  wire [10:0] \$procmux$11210_Y ;
  wire \$procmux$11211_CMP ;
  wire \$procmux$11213_Y ;
  wire \$procmux$11214_CMP ;
  wire \$procmux$11217_Y ;
  wire \$procmux$11218_CMP ;
  wire [1:0] \$procmux$11221_Y ;
  wire \$procmux$11222_CMP ;
  wire [1:0] \$procmux$11223_Y ;
  wire \$procmux$11224_CMP ;
  wire [1:0] \$procmux$11225_Y ;
  wire \$procmux$11226_CMP ;
  wire \$procmux$11228_CMP ;
  wire \$procmux$11229_CMP ;
  wire \$procmux$11231_CMP ;
  wire [1:0] \$procmux$11236_Y ;
  wire \$procmux$11237_CMP ;
  wire [1:0] \$procmux$11238_Y ;
  wire \$procmux$11239_CMP ;
  wire \$procmux$11244_Y ;
  wire \$procmux$11245_CMP ;
  wire \$procmux$11246_Y ;
  wire \$procmux$11247_CMP ;
  wire \$procmux$11250_Y ;
  wire \$procmux$11251_CMP ;
  wire \$procmux$11254_Y ;
  wire \$procmux$11255_CMP ;
  wire \$procmux$11256_CMP ;
  wire \$procmux$11258_CMP ;
  wire \$procmux$11261_Y ;
  wire \$procmux$11262_CMP ;
  wire [7:0] \$procmux$11265_Y ;
  wire \$procmux$11266_CMP ;
  wire [7:0] \$procmux$11267_Y ;
  wire \$procmux$11268_CMP ;
  wire \$procmux$11269_Y ;
  wire \$procmux$11270_CMP ;
  wire \$procmux$11272_Y ;
  wire \$procmux$11273_CMP ;
  wire \$procmux$11276_Y ;
  wire \$procmux$11277_CMP ;
  wire \$procmux$11278_Y ;
  wire \$procmux$11279_CMP ;
  wire \$procmux$11281_Y ;
  wire \$procmux$11282_CMP ;
  wire \$procmux$11285_Y ;
  wire \$procmux$11286_CMP ;
  wire \$procmux$11287_Y ;
  wire \$procmux$11288_CMP ;
  wire \$procmux$11290_Y ;
  wire \$procmux$11291_CMP ;
  wire \$procmux$11294_Y ;
  wire \$procmux$11295_CMP ;
  wire \$procmux$11296_Y ;
  wire \$procmux$11297_CMP ;
  wire \$procmux$11299_Y ;
  wire \$procmux$11300_CMP ;
  wire \$procmux$11303_Y ;
  wire \$procmux$11304_CMP ;
  wire [6:0] \$procmux$11305_Y ;
  wire \$procmux$11306_CMP ;
  wire [6:0] \$procmux$11308_Y ;
  wire \$procmux$11309_CMP ;
  wire [6:0] \$procmux$11311_Y ;
  wire \$procmux$11312_CMP ;
  wire [6:0] \$procmux$11315_Y ;
  wire \$procmux$11316_CMP ;
  wire [6:0] \$procmux$11318_Y ;
  wire \$procmux$11319_CMP ;
  wire [6:0] \$procmux$11322_Y ;
  wire \$procmux$11323_CMP ;
  wire \$procmux$11324_Y ;
  wire \$procmux$11325_CMP ;
  wire \$procmux$11327_Y ;
  wire \$procmux$11328_CMP ;
  wire \$procmux$11331_Y ;
  wire \$procmux$11332_CMP ;
  wire \$procmux$11333_Y ;
  wire \$procmux$11334_CMP ;
  wire \$procmux$11336_Y ;
  wire \$procmux$11337_CMP ;
  wire \$procmux$11340_Y ;
  wire \$procmux$11341_CMP ;
  wire \$procmux$11342_Y ;
  wire \$procmux$11343_CMP ;
  wire \$procmux$11345_Y ;
  wire \$procmux$11346_CMP ;
  wire \$procmux$11349_Y ;
  wire \$procmux$11350_CMP ;
  wire \$procmux$11351_Y ;
  wire \$procmux$11352_CMP ;
  wire \$procmux$11354_Y ;
  wire \$procmux$11355_CMP ;
  wire \$procmux$11358_Y ;
  wire \$procmux$11359_CMP ;
  wire \$procmux$11360_Y ;
  wire \$procmux$11361_CMP ;
  wire \$procmux$11363_Y ;
  wire \$procmux$11364_CMP ;
  wire \$procmux$11367_Y ;
  wire \$procmux$11368_CMP ;
  wire [5:0] \$procmux$11369_Y ;
  wire \$procmux$11370_CMP ;
  wire [7:0] \$procmux$11371_Y ;
  wire \$procmux$11372_CMP ;
  wire \$procmux$11374_Y ;
  wire \$procmux$11375_CMP ;
  wire \$procmux$11376_Y ;
  wire \$procmux$11377_CMP ;
  wire \$procmux$11379_Y ;
  wire \$procmux$11380_CMP ;
  wire \$procmux$11381_Y ;
  wire \$procmux$11382_CMP ;
  wire \$procmux$11383_Y ;
  wire \$procmux$11384_CMP ;
  wire \$procmux$11385_Y ;
  wire \$procmux$11386_CMP ;
  wire [1:0] \$procmux$11388_Y ;
  wire \$procmux$11389_CMP ;
  wire \$procmux$11391_Y ;
  wire \$procmux$11392_CMP ;
  wire \$procmux$11394_Y ;
  wire \$procmux$11395_CMP ;
  wire \$procmux$11397_Y ;
  wire \$procmux$11398_CMP ;
  wire \$procmux$11400_Y ;
  wire \$procmux$11401_CMP ;
  wire \$procmux$11403_Y ;
  wire \$procmux$11404_CMP ;
  wire \$procmux$11407_Y ;
  wire \$procmux$11408_CMP ;
  wire \$procmux$11410_Y ;
  wire \$procmux$11411_CMP ;
  wire \$procmux$11413_Y ;
  wire \$procmux$11414_CMP ;
  wire \$procmux$11415_Y ;
  wire \$procmux$11416_CMP ;
  wire \$procmux$11420_Y ;
  wire \$procmux$11421_CMP ;
  wire \$procmux$11422_Y ;
  wire \$procmux$11423_CMP ;
  wire [5:0] \$procmux$11424_Y ;
  wire \$procmux$11425_CMP ;
  wire [5:0] \$procmux$11427_Y ;
  wire \$procmux$11428_CMP ;
  wire [5:0] \$procmux$11431_Y ;
  wire \$procmux$11432_CMP ;
  wire \$procmux$11433_Y ;
  wire \$procmux$11434_CMP ;
  wire \$procmux$11436_Y ;
  wire \$procmux$11437_CMP ;
  wire \$procmux$11440_Y ;
  wire \$procmux$11441_CMP ;
  wire [3:0] \$procmux$11442_Y ;
  wire \$procmux$11443_CMP ;
  wire [7:0] \$procmux$11445_Y ;
  wire \$procmux$11446_CMP ;
  wire [7:0] \$procmux$11447_Y ;
  wire \$procmux$11448_CMP ;
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  wire \$rx_State$409 ;
  /* src = "rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  wire \$rx_State$417 ;
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  wire [1:0] \$tx_State$394 ;
  /* src = "rtl/apb_uart/apb_uart.sv:760.22-763.42" */
  wire [1:0] \$tx_State$396 ;
  /* src = "rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  wire [1:0] \$tx_State$401 ;
  /* src = "rtl/apb_uart/apb_uart.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/apb_uart.sv:51.14" */
  input CTSN;
  wire CTSN;
  /* src = "rtl/apb_uart/apb_uart.sv:53.14" */
  input DCDN;
  wire DCDN;
  /* src = "rtl/apb_uart/apb_uart.sv:52.14" */
  input DSRN;
  wire DSRN;
  /* src = "rtl/apb_uart/apb_uart.sv:50.16" */
  output DTRN;
  wire DTRN;
  /* src = "rtl/apb_uart/apb_uart.sv:46.16" */
  output INT;
  wire INT;
  /* src = "rtl/apb_uart/apb_uart.sv:47.16" */
  output OUT1N;
  wire OUT1N;
  /* src = "rtl/apb_uart/apb_uart.sv:48.16" */
  output OUT2N;
  wire OUT2N;
  /* src = "rtl/apb_uart/apb_uart.sv:41.20" */
  input [2:0] PADDR;
  wire [2:0] PADDR;
  /* src = "rtl/apb_uart/apb_uart.sv:39.14" */
  input PENABLE;
  wire PENABLE;
  /* src = "rtl/apb_uart/apb_uart.sv:43.23" */
  output [31:0] PRDATA;
  wire [31:0] PRDATA;
  /* src = "rtl/apb_uart/apb_uart.sv:44.16" */
  output PREADY;
  wire PREADY;
  /* src = "rtl/apb_uart/apb_uart.sv:38.14" */
  input PSEL;
  wire PSEL;
  /* src = "rtl/apb_uart/apb_uart.sv:45.16" */
  output PSLVERR;
  wire PSLVERR;
  /* src = "rtl/apb_uart/apb_uart.sv:42.21" */
  input [31:0] PWDATA;
  wire [31:0] PWDATA;
  /* src = "rtl/apb_uart/apb_uart.sv:40.14" */
  input PWRITE;
  wire PWRITE;
  /* src = "rtl/apb_uart/apb_uart.sv:54.14" */
  input RIN;
  wire RIN;
  /* src = "rtl/apb_uart/apb_uart.sv:37.14" */
  input RSTN;
  wire RSTN;
  /* src = "rtl/apb_uart/apb_uart.sv:49.16" */
  output RTSN;
  wire RTSN;
  /* src = "rtl/apb_uart/apb_uart.sv:55.14" */
  input SIN;
  wire SIN;
  /* src = "rtl/apb_uart/apb_uart.sv:56.16" */
  output SOUT;
  wire SOUT;
  /* src = "rtl/apb_uart/apb_uart.sv:157.5" */
  wire iBAUDOUTN;
  /* src = "rtl/apb_uart/apb_uart.sv:198.5" */
  wire iBIRE;
  /* src = "rtl/apb_uart/apb_uart.sv:153.12" */
  wire [15:0] iBaudgenDiv;
  /* src = "rtl/apb_uart/apb_uart.sv:154.5" */
  wire iBaudtick16x;
  /* src = "rtl/apb_uart/apb_uart.sv:155.5" */
  wire iBaudtick2x;
  /* src = "rtl/apb_uart/apb_uart.sv:137.5" */
  wire iCTSNs;
  /* src = "rtl/apb_uart/apb_uart.sv:141.5" */
  wire iCTSn;
  /* src = "rtl/apb_uart/apb_uart.sv:146.5" */
  wire iCTSnFE;
  /* src = "rtl/apb_uart/apb_uart.sv:145.5" */
  wire iCTSnRE;
  /* src = "rtl/apb_uart/apb_uart.sv:204.5" */
  wire iCharTimeout;
  /* src = "rtl/apb_uart/apb_uart.sv:139.5" */
  wire iDCDNs;
  /* src = "rtl/apb_uart/apb_uart.sv:143.5" */
  wire iDCDn;
  /* src = "rtl/apb_uart/apb_uart.sv:150.5" */
  wire iDCDnFE;
  /* src = "rtl/apb_uart/apb_uart.sv:149.5" */
  wire iDCDnRE;
  /* src = "rtl/apb_uart/apb_uart.sv:83.11" */
  wire [7:0] iDLL;
  /* src = "rtl/apb_uart/apb_uart.sv:71.5" */
  wire iDLLWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:84.11" */
  wire [7:0] iDLM;
  /* src = "rtl/apb_uart/apb_uart.sv:72.5" */
  wire iDLMWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:138.5" */
  wire iDSRNs;
  /* src = "rtl/apb_uart/apb_uart.sv:142.5" */
  wire iDSRn;
  /* src = "rtl/apb_uart/apb_uart.sv:148.5" */
  wire iDSRnFE;
  /* src = "rtl/apb_uart/apb_uart.sv:147.5" */
  wire iDSRnRE;
  /* src = "rtl/apb_uart/apb_uart.sv:87.11" */
  wire [7:0] iFCR;
  /* src = "rtl/apb_uart/apb_uart.sv:75.5" */
  wire iFCRWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:105.5" */
  wire iFCR_DMAMode;
  /* src = "rtl/apb_uart/apb_uart.sv:106.5" */
  wire iFCR_FIFO64E;
  /* src = "rtl/apb_uart/apb_uart.sv:102.5" */
  wire iFCR_FIFOEnable;
  /* src = "rtl/apb_uart/apb_uart.sv:103.5" */
  wire iFCR_RXFIFOReset;
  /* src = "rtl/apb_uart/apb_uart.sv:107.11" */
  wire [1:0] iFCR_RXTrigger;
  /* src = "rtl/apb_uart/apb_uart.sv:104.5" */
  wire iFCR_TXFIFOReset;
  /* src = "rtl/apb_uart/apb_uart.sv:199.11" */
  wire [6:0] iFECounter;
  /* src = "rtl/apb_uart/apb_uart.sv:201.5" */
  wire iFEDecrement;
  /* src = "rtl/apb_uart/apb_uart.sv:200.5" */
  wire iFEIncrement;
  /* src = "rtl/apb_uart/apb_uart.sv:196.5" */
  wire iFERE;
  /* src = "rtl/apb_uart/apb_uart.sv:85.11" */
  wire [7:0] iIER;
  /* src = "rtl/apb_uart/apb_uart.sv:73.5" */
  wire iIERWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:96.5" */
  wire iIER_EDSSI;
  /* src = "rtl/apb_uart/apb_uart.sv:95.5" */
  wire iIER_ELSI;
  /* src = "rtl/apb_uart/apb_uart.sv:93.5" */
  wire iIER_ERBI;
  /* src = "rtl/apb_uart/apb_uart.sv:94.5" */
  wire iIER_ETBEI;
  /* src = "rtl/apb_uart/apb_uart.sv:86.11" */
  wire [7:0] iIIR;
  /* src = "rtl/apb_uart/apb_uart.sv:74.5" */
  wire iIIRRead;
  /* src = "rtl/apb_uart/apb_uart.sv:101.5" */
  wire iIIR_FIFO64;
  /* src = "rtl/apb_uart/apb_uart.sv:98.5" */
  wire iIIR_ID0;
  /* src = "rtl/apb_uart/apb_uart.sv:99.5" */
  wire iIIR_ID1;
  /* src = "rtl/apb_uart/apb_uart.sv:100.5" */
  wire iIIR_ID2;
  /* src = "rtl/apb_uart/apb_uart.sv:97.5" */
  wire iIIR_PI;
  /* src = "rtl/apb_uart/apb_uart.sv:88.11" */
  wire [7:0] iLCR;
  /* src = "rtl/apb_uart/apb_uart.sv:76.5" */
  wire iLCRWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:113.5" */
  wire iLCR_BC;
  /* src = "rtl/apb_uart/apb_uart.sv:114.5" */
  wire iLCR_DLAB;
  /* src = "rtl/apb_uart/apb_uart.sv:111.5" */
  wire iLCR_EPS;
  /* src = "rtl/apb_uart/apb_uart.sv:110.5" */
  wire iLCR_PEN;
  /* src = "rtl/apb_uart/apb_uart.sv:112.5" */
  wire iLCR_SP;
  /* src = "rtl/apb_uart/apb_uart.sv:109.5" */
  wire iLCR_STB;
  /* src = "rtl/apb_uart/apb_uart.sv:108.11" */
  wire [1:0] iLCR_WLS;
  /* src = "rtl/apb_uart/apb_uart.sv:90.11" */
  wire [7:0] iLSR;
  /* src = "rtl/apb_uart/apb_uart.sv:78.5" */
  wire iLSRRead;
  /* src = "rtl/apb_uart/apb_uart.sv:125.5" */
  wire iLSR_BI;
  /* src = "rtl/apb_uart/apb_uart.sv:121.5" */
  wire iLSR_DR;
  /* src = "rtl/apb_uart/apb_uart.sv:124.5" */
  wire iLSR_FE;
  /* src = "rtl/apb_uart/apb_uart.sv:128.5" */
  wire iLSR_FIFOERR;
  /* src = "rtl/apb_uart/apb_uart.sv:122.5" */
  wire iLSR_OE;
  /* src = "rtl/apb_uart/apb_uart.sv:123.5" */
  wire iLSR_PE;
  /* src = "rtl/apb_uart/apb_uart.sv:127.5" */
  wire iLSR_TEMT;
  /* src = "rtl/apb_uart/apb_uart.sv:126.5" */
  wire iLSR_THRE;
  /* src = "rtl/apb_uart/apb_uart.sv:205.5" */
  wire iLSR_THRERE;
  /* src = "rtl/apb_uart/apb_uart.sv:89.11" */
  wire [7:0] iMCR;
  /* src = "rtl/apb_uart/apb_uart.sv:77.5" */
  wire iMCRWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:120.5" */
  wire iMCR_AFE;
  /* src = "rtl/apb_uart/apb_uart.sv:115.5" */
  wire iMCR_DTR;
  /* src = "rtl/apb_uart/apb_uart.sv:119.5" */
  wire iMCR_LOOP;
  /* src = "rtl/apb_uart/apb_uart.sv:117.5" */
  wire iMCR_OUT1;
  /* src = "rtl/apb_uart/apb_uart.sv:118.5" */
  wire iMCR_OUT2;
  /* src = "rtl/apb_uart/apb_uart.sv:116.5" */
  wire iMCR_RTS;
  /* src = "rtl/apb_uart/apb_uart.sv:91.11" */
  wire [7:0] iMSR;
  /* src = "rtl/apb_uart/apb_uart.sv:79.5" */
  wire iMSRRead;
  /* src = "rtl/apb_uart/apb_uart.sv:133.5" */
  wire iMSR_CTS;
  /* src = "rtl/apb_uart/apb_uart.sv:136.5" */
  wire iMSR_DCD;
  /* src = "rtl/apb_uart/apb_uart.sv:134.5" */
  wire iMSR_DSR;
  /* src = "rtl/apb_uart/apb_uart.sv:135.5" */
  wire iMSR_RI;
  /* src = "rtl/apb_uart/apb_uart.sv:131.5" */
  wire iMSR_TERI;
  /* src = "rtl/apb_uart/apb_uart.sv:129.5" */
  wire iMSR_dCTS;
  /* src = "rtl/apb_uart/apb_uart.sv:132.5" */
  wire iMSR_dDCD;
  /* src = "rtl/apb_uart/apb_uart.sv:130.5" */
  wire iMSR_dDSR;
  /* src = "rtl/apb_uart/apb_uart.sv:197.5" */
  wire iPERE;
  /* src = "rtl/apb_uart/apb_uart.sv:82.11" */
  wire [7:0] iRBR;
  /* src = "rtl/apb_uart/apb_uart.sv:69.5" */
  wire iRBRRead;
  /* src = "rtl/apb_uart/apb_uart.sv:156.5" */
  wire iRCLK;
  /* src = "rtl/apb_uart/apb_uart.sv:202.5" */
  wire iRDAInterrupt;
  /* src = "rtl/apb_uart/apb_uart.sv:140.5" */
  wire iRINs;
  /* src = "rtl/apb_uart/apb_uart.sv:144.5" */
  wire iRIn;
  /* src = "rtl/apb_uart/apb_uart.sv:152.5" */
  wire iRInFE;
  /* src = "rtl/apb_uart/apb_uart.sv:151.5" */
  wire iRInRE;
  /* src = "rtl/apb_uart/apb_uart.sv:68.5" */
  wire iRST;
  /* src = "rtl/apb_uart/apb_uart.sv:208.5" */
  wire iRTS;
  /* src = "rtl/apb_uart/apb_uart.sv:195.5" */
  wire iRXBI;
  /* src = "rtl/apb_uart/apb_uart.sv:191.5" */
  wire iRXClear;
  /* src = "rtl/apb_uart/apb_uart.sv:192.11" */
  wire [7:0] iRXData;
  /* src = "rtl/apb_uart/apb_uart.sv:194.5" */
  wire iRXFE;
  /* src = "rtl/apb_uart/apb_uart.sv:172.5" */
  wire iRXFIFO16Full;
  /* src = "rtl/apb_uart/apb_uart.sv:178.5" */
  wire iRXFIFO16Trigger;
  /* src = "rtl/apb_uart/apb_uart.sv:173.5" */
  wire iRXFIFO64Full;
  /* src = "rtl/apb_uart/apb_uart.sv:179.5" */
  wire iRXFIFO64Trigger;
  /* src = "rtl/apb_uart/apb_uart.sv:182.5" */
  wire iRXFIFOBI;
  /* src = "rtl/apb_uart/apb_uart.sv:167.5" */
  wire iRXFIFOClear;
  /* src = "rtl/apb_uart/apb_uart.sv:174.12" */
  wire [10:0] iRXFIFOD;
  /* src = "rtl/apb_uart/apb_uart.sv:170.5" */
  wire iRXFIFOEmpty;
  /* src = "rtl/apb_uart/apb_uart.sv:181.5" */
  wire iRXFIFOFE;
  /* src = "rtl/apb_uart/apb_uart.sv:171.5" */
  wire iRXFIFOFull;
  /* src = "rtl/apb_uart/apb_uart.sv:180.5" */
  wire iRXFIFOPE;
  /* src = "rtl/apb_uart/apb_uart.sv:175.12" */
  wire [10:0] iRXFIFOQ;
  /* src = "rtl/apb_uart/apb_uart.sv:169.5" */
  wire iRXFIFORead;
  /* src = "rtl/apb_uart/apb_uart.sv:177.5" */
  wire iRXFIFOTrigger;
  /* src = "rtl/apb_uart/apb_uart.sv:176.11" */
  wire [5:0] iRXFIFOUsage;
  /* src = "rtl/apb_uart/apb_uart.sv:168.5" */
  wire iRXFIFOWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:190.5" */
  wire iRXFinished;
  /* src = "rtl/apb_uart/apb_uart.sv:193.5" */
  wire iRXPE;
  /* src = "rtl/apb_uart/apb_uart.sv:67.5" */
  wire iRead;
  /* src = "rtl/apb_uart/apb_uart.sv:92.11" */
  wire [7:0] iSCR;
  /* src = "rtl/apb_uart/apb_uart.sv:80.5" */
  wire iSCRWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:189.5" */
  wire iSIN;
  /* src = "rtl/apb_uart/apb_uart.sv:188.5" */
  wire iSINr;
  /* src = "rtl/apb_uart/apb_uart.sv:183.5" */
  wire iSOUT;
  /* src = "rtl/apb_uart/apb_uart.sv:206.5" */
  wire iTHRInterrupt;
  /* src = "rtl/apb_uart/apb_uart.sv:70.5" */
  wire iTHRWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:81.11" */
  wire [7:0] iTSR;
  /* src = "rtl/apb_uart/apb_uart.sv:185.5" */
  wire iTXClear;
  /* src = "rtl/apb_uart/apb_uart.sv:207.5" */
  wire iTXEnable;
  /* src = "rtl/apb_uart/apb_uart.sv:163.5" */
  wire iTXFIFO16Full;
  /* src = "rtl/apb_uart/apb_uart.sv:164.5" */
  wire iTXFIFO64Full;
  /* src = "rtl/apb_uart/apb_uart.sv:158.5" */
  wire iTXFIFOClear;
  /* src = "rtl/apb_uart/apb_uart.sv:161.5" */
  wire iTXFIFOEmpty;
  /* src = "rtl/apb_uart/apb_uart.sv:162.5" */
  wire iTXFIFOFull;
  /* src = "rtl/apb_uart/apb_uart.sv:166.11" */
  wire [7:0] iTXFIFOQ;
  /* src = "rtl/apb_uart/apb_uart.sv:160.5" */
  wire iTXFIFORead;
  /* src = "rtl/apb_uart/apb_uart.sv:165.11" */
  wire [5:0] iTXFIFOUsage;
  /* src = "rtl/apb_uart/apb_uart.sv:159.5" */
  wire iTXFIFOWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:186.5" */
  wire iTXFinished;
  /* src = "rtl/apb_uart/apb_uart.sv:187.5" */
  wire iTXRunning;
  /* src = "rtl/apb_uart/apb_uart.sv:184.5" */
  wire iTXStart;
  /* src = "rtl/apb_uart/apb_uart.sv:203.11" */
  wire [5:0] iTimeoutCount;
  /* src = "rtl/apb_uart/apb_uart.sv:66.5" */
  wire iWrite;
  /* src = "rtl/apb_uart/apb_uart.sv:720.18" */
  wire rx_State;
  /* src = "rtl/apb_uart/apb_uart.sv:721.18" */
  wire [1:0] tx_State;
  /* src = "rtl/apb_uart/apb_uart.sv:210.24-210.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:309.33-309.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$100  (
    .A(iFCR_FIFOEnable),
    .Y(\$100y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:309.33-309.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$102  (
    .A(\$100y ),
    .B(\$101y ),
    .Y(\$102y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:309.82-309.133" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$105  (
    .A(\$103y ),
    .B(\$104y ),
    .Y(\$105y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:309.32-309.134" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(\$102y ),
    .B(\$105y ),
    .Y(\$106y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:309.32-309.151" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$107  (
    .A(1'h0),
    .B(1'h1),
    .S(\$106y ),
    .Y(\$107y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:316.18-316.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$108  (
    .A(1'h0),
    .B(iFCR_FIFO64E),
    .S(iFCR_FIFOEnable),
    .Y(\$108y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:210.24-210.95" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$11  (
    .A(1'h0),
    .B(1'h1),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:329.14-329.55" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(\$111y ),
    .B(\$112y ),
    .Y(\$113y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:329.13-329.80" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$115  (
    .A(\$113y ),
    .B(\$114y ),
    .Y(\$115y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:334.23-334.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$116  (
    .A(iRXFIFOEmpty),
    .Y(\$116y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:334.23-334.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$118  (
    .A(\$116y ),
    .B(\$117y ),
    .Y(\$118y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:334.73-334.98" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(iTimeoutCount[5]),
    .Y(\$119y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:211.23-211.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(RSTN),
    .Y(\$12y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:334.22-334.98" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$120  (
    .A(\$118y ),
    .B(\$119y ),
    .Y(\$120y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:336.30-336.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$121  (
    .A({ 26'h0000000, iTimeoutCount }),
    .B(32'd1),
    .Y(\$121y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:211.23-211.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$13  (
    .A(1'h1),
    .B(1'h0),
    .S(RSTN),
    .Y(\$13y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.41-380.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(iFCR_FIFOEnable),
    .Y(\$136y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.41-380.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(\$136y ),
    .B(\$137y ),
    .Y(\$138y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.19-380.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(\$135y ),
    .B(\$138y ),
    .Y(\$139y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.121-380.139" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(PWDATA[0]),
    .Y(\$141y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.93-380.139" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(\$140y ),
    .B(\$141y ),
    .Y(\$142y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:380.18-380.140" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(\$139y ),
    .B(\$142y ),
    .Y(\$143y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.41-385.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$146  (
    .A(iFCR_FIFOEnable),
    .Y(\$146y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.41-385.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(\$146y ),
    .B(\$147y ),
    .Y(\$148y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.19-385.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(\$145y ),
    .B(\$148y ),
    .Y(\$149y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:212.46-212.61" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(PADDR),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.121-385.139" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(PWDATA[0]),
    .Y(\$151y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.93-385.139" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(\$150y ),
    .B(\$151y ),
    .Y(\$152y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:385.18-385.140" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(\$149y ),
    .B(\$152y ),
    .Y(\$153y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:212.28-212.61" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:212.66-212.84" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(iLCR_DLAB),
    .Y(\$17y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.15-455.39" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$171  (
    .A(iFCR_FIFOEnable),
    .Y(\$171y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.15-455.59" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$173  (
    .A(\$171y ),
    .B(\$172y ),
    .Y(\$173y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.14-455.84" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$175  (
    .A(\$173y ),
    .B(\$174y ),
    .Y(\$175y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.90-455.138" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$178  (
    .A(\$176y ),
    .B(\$177y ),
    .Y(\$178y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:212.27-212.84" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$16y ),
    .B(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.89-455.163" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$180  (
    .A(\$178y ),
    .B(\$179y ),
    .Y(\$180y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:455.13-455.164" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$181  (
    .A(\$175y ),
    .B(\$180y ),
    .Y(\$181y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:212.27-212.101" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$19  (
    .A(1'h0),
    .B(1'h1),
    .S(\$18y ),
    .Y(\$19y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:487.13-487.28" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$197  (
    .A(iFECounter),
    .Y(\$197y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:491.46-491.71" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$199  (
    .A(iRXFIFOQ[10:8]),
    .Y(\$199y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:209.26-209.59" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$0y ),
    .B(\$1y ),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:491.22-491.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$200  (
    .A(\$198y ),
    .B(\$199y ),
    .Y(\$200y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:501.43-501.64" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$205  (
    .A(iFEDecrement),
    .Y(\$205y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:501.18-501.64" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$206  (
    .A(\$204y ),
    .B(\$205y ),
    .Y(\$206y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:503.32-503.46" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$207  (
    .A({ 25'h0000000, iFECounter }),
    .B(32'd1),
    .Y(\$207y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:505.31-505.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$208  (
    .A(iFEIncrement),
    .Y(\$208y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:213.48-213.63" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(PADDR),
    .Y(\$21y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:505.31-505.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$210  (
    .A(\$208y ),
    .B(\$209y ),
    .Y(\$210y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:507.32-507.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$211  (
    .A({ 25'h0000000, iFECounter }),
    .B(32'd1),
    .Y(\$211y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:512.28-512.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$215  (
    .A(iRXFIFOEmpty),
    .Y(\$215y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:512.28-512.73" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$217  (
    .A(\$215y ),
    .B(\$216y ),
    .Y(\$217y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:512.28-512.90" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$218  (
    .A(1'h0),
    .B(1'h1),
    .S(\$217y ),
    .Y(\$218y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:513.28-513.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$219  (
    .A(iRXFIFOEmpty),
    .Y(\$219y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:213.29-213.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$20y ),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:513.28-513.73" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$221  (
    .A(\$219y ),
    .B(\$220y ),
    .Y(\$221y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:513.28-513.90" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$222  (
    .A(1'h0),
    .B(1'h1),
    .S(\$221y ),
    .Y(\$222y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:514.28-514.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$223  (
    .A(iRXFIFOEmpty),
    .Y(\$223y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:514.28-514.74" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$225  (
    .A(\$223y ),
    .B(\$224y ),
    .Y(\$225y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:514.28-514.91" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$226  (
    .A(1'h0),
    .B(1'h1),
    .S(\$225y ),
    .Y(\$226y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:518.56-518.81" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$228  (
    .A(iRXFIFOD[10:8]),
    .Y(\$228y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:518.31-518.81" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$229  (
    .A(\$227y ),
    .B(\$228y ),
    .Y(\$229y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:213.68-213.86" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(iLCR_DLAB),
    .Y(\$23y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:518.31-518.98" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$230  (
    .A(1'h0),
    .B(1'h1),
    .S(\$229y ),
    .Y(\$230y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.32-519.47" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$231  (
    .A(iFECounter),
    .Y(\$231y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.51-519.72" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$232  (
    .A(iRXFIFOEmpty),
    .Y(\$232y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.32-519.72" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$233  (
    .A(\$231y ),
    .B(\$232y ),
    .Y(\$233y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.79-519.110" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$236  (
    .A(\$234y ),
    .B(\$235y ),
    .Y(\$236y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.78-519.128" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$238  (
    .A(\$236y ),
    .B(\$237y ),
    .Y(\$238y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.31-519.129" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$239  (
    .A(\$233y ),
    .B(\$238y ),
    .Y(\$239y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:213.28-213.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$22y ),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:519.31-519.146" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$240  (
    .A(1'h0),
    .B(1'h1),
    .S(\$239y ),
    .Y(\$240y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:527.30-527.61" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$241  (
    .A(iFCR_FIFOEnable),
    .B(iLSR_FIFOERR),
    .Y(\$241y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:529.26-529.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$242  (
    .A(iRXFIFOEmpty),
    .Y(\$242y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:529.26-529.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$244  (
    .A(\$242y ),
    .B(\$243y ),
    .Y(\$244y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:529.26-529.88" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$245  (
    .A(1'h0),
    .B(1'h1),
    .S(\$244y ),
    .Y(\$245y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:530.28-530.66" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$247  (
    .A(1'h0),
    .B(1'h1),
    .S(\$246y ),
    .Y(\$247y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:531.28-531.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$248  (
    .A(iTXRunning),
    .Y(\$248y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:213.28-213.103" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$25  (
    .A(1'h0),
    .B(1'h1),
    .S(\$24y ),
    .Y(\$25y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:531.28-531.69" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$250  (
    .A(\$248y ),
    .B(\$249y ),
    .Y(\$250y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:531.28-531.86" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$251  (
    .A(1'h0),
    .B(1'h1),
    .S(\$250y ),
    .Y(\$251y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.28-532.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$254  (
    .A(\$252y ),
    .B(\$253y ),
    .Y(\$254y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.68-532.86" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$255  (
    .A(iMCR_LOOP),
    .Y(\$255y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.90-532.104" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$256  (
    .A(iCTSn),
    .Y(\$256y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.68-532.104" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$257  (
    .A(\$255y ),
    .B(\$256y ),
    .Y(\$257y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.27-532.105" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$258  (
    .A(\$254y ),
    .B(\$257y ),
    .Y(\$258y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:532.27-532.122" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$259  (
    .A(1'h0),
    .B(1'h1),
    .S(\$258y ),
    .Y(\$259y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.28-533.67" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$262  (
    .A(\$260y ),
    .B(\$261y ),
    .Y(\$262y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.72-533.90" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$263  (
    .A(iMCR_LOOP),
    .Y(\$263y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.94-533.108" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$264  (
    .A(iDSRn),
    .Y(\$264y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.72-533.108" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$265  (
    .A(\$263y ),
    .B(\$264y ),
    .Y(\$265y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.27-533.109" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$266  (
    .A(\$262y ),
    .B(\$265y ),
    .Y(\$266y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:533.27-533.126" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$267  (
    .A(1'h0),
    .B(1'h1),
    .S(\$266y ),
    .Y(\$267y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:214.48-214.63" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(PADDR),
    .Y(\$27y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.27-534.67" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$270  (
    .A(\$268y ),
    .B(\$269y ),
    .Y(\$270y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.72-534.90" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$271  (
    .A(iMCR_LOOP),
    .Y(\$271y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.94-534.107" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$272  (
    .A(iRIn),
    .Y(\$272y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.72-534.107" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$273  (
    .A(\$271y ),
    .B(\$272y ),
    .Y(\$273y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.26-534.108" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$274  (
    .A(\$270y ),
    .B(\$273y ),
    .Y(\$274y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:534.26-534.125" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$275  (
    .A(1'h0),
    .B(1'h1),
    .S(\$274y ),
    .Y(\$275y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.28-535.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$278  (
    .A(\$276y ),
    .B(\$277y ),
    .Y(\$278y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.73-535.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$279  (
    .A(iMCR_LOOP),
    .Y(\$279y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:214.29-214.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(\$26y ),
    .B(\$27y ),
    .Y(\$28y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.95-535.109" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$280  (
    .A(iDCDn),
    .Y(\$280y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.73-535.109" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$281  (
    .A(\$279y ),
    .B(\$280y ),
    .Y(\$281y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.27-535.110" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$282  (
    .A(\$278y ),
    .B(\$281y ),
    .Y(\$282y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:535.27-535.127" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$283  (
    .A(1'h0),
    .B(1'h1),
    .S(\$282y ),
    .Y(\$283y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:571.13-571.48" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$288  (
    .A(\$286y ),
    .B(\$287y ),
    .Y(\$288y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:579.13-579.48" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$294  (
    .A(\$292y ),
    .B(\$293y ),
    .Y(\$294y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:214.28-214.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:595.13-595.48" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$304  (
    .A(\$302y ),
    .B(\$303y ),
    .Y(\$304y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:214.28-214.103" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$31  (
    .A(1'h0),
    .B(1'h1),
    .S(\$30y ),
    .Y(\$31y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:660.30-660.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$312  (
    .A(iFCR_FIFO64E),
    .Y(\$312y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:660.30-660.84" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$313  (
    .A(iTXFIFO16Full),
    .B(iTXFIFO64Full),
    .S(iFCR_FIFO64E),
    .Y(\$313y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.33-661.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$314  (
    .A(iFCR_FIFOEnable),
    .Y(\$314y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.33-661.82" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$316  (
    .A(\$314y ),
    .B(\$315y ),
    .Y(\$316y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.115-661.135" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$318  (
    .A(iTXFIFOFull),
    .Y(\$318y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.87-661.135" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$319  (
    .A(\$317y ),
    .B(\$318y ),
    .Y(\$319y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.32-661.136" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$320  (
    .A(\$316y ),
    .B(\$319y ),
    .Y(\$320y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.31-661.159" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$322  (
    .A(\$320y ),
    .B(\$321y ),
    .Y(\$322y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:661.31-661.176" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$323  (
    .A(1'h0),
    .B(1'h1),
    .S(\$322y ),
    .Y(\$323y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:662.31-662.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$325  (
    .A(1'h0),
    .B(1'h1),
    .S(\$324y ),
    .Y(\$325y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:674.30-674.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$327  (
    .A(1'h0),
    .B(1'h1),
    .S(\$326y ),
    .Y(\$327y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:676.30-676.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$328  (
    .A(iFCR_FIFO64E),
    .Y(\$328y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:676.30-676.84" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$329  (
    .A(iRXFIFO16Full),
    .B(iRXFIFO64Full),
    .S(iFCR_FIFO64E),
    .Y(\$329y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:215.48-215.63" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$33y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.39-678.62" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$330  (
    .A(iFCR_RXTrigger),
    .Y(\$330y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.66-678.87" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$331  (
    .A(iRXFIFOEmpty),
    .Y(\$331y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.39-678.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$332  (
    .A(\$330y ),
    .B(\$331y ),
    .Y(\$332y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.92-678.115" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$333  (
    .A(iFCR_RXTrigger),
    .B(2'h1),
    .Y(\$333y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.120-678.171" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$336  (
    .A(\$334y ),
    .B(\$335y ),
    .Y(\$336y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.92-678.172" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$337  (
    .A(\$333y ),
    .B(\$336y ),
    .Y(\$337y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.38-678.173" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$338  (
    .A(\$332y ),
    .B(\$337y ),
    .Y(\$338y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.178-678.201" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$339  (
    .A(iFCR_RXTrigger),
    .B(2'h2),
    .Y(\$339y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:215.29-215.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(\$32y ),
    .B(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.178-678.229" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$341  (
    .A(\$339y ),
    .B(\$340y ),
    .Y(\$341y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.37-678.230" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$342  (
    .A(\$338y ),
    .B(\$341y ),
    .Y(\$342y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.237-678.260" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$343  (
    .A(iFCR_RXTrigger),
    .B(2'h3),
    .Y(\$343y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.237-678.288" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$345  (
    .A(\$343y ),
    .B(\$344y ),
    .Y(\$345y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.236-678.317" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$347  (
    .A(\$345y ),
    .B(\$346y ),
    .Y(\$347y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.235-678.346" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$349  (
    .A(\$347y ),
    .B(\$348y ),
    .Y(\$349y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.36-678.347" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$350  (
    .A(\$342y ),
    .B(\$349y ),
    .Y(\$350y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.35-678.373" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$352  (
    .A(\$350y ),
    .B(\$351y ),
    .Y(\$352y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:678.35-678.390" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$353  (
    .A(1'h0),
    .B(1'h1),
    .S(\$352y ),
    .Y(\$353y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.39-679.62" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$354  (
    .A(iFCR_RXTrigger),
    .Y(\$354y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.66-679.87" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$355  (
    .A(iRXFIFOEmpty),
    .Y(\$355y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.39-679.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$356  (
    .A(\$354y ),
    .B(\$355y ),
    .Y(\$356y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.92-679.115" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$357  (
    .A(iFCR_RXTrigger),
    .B(2'h1),
    .Y(\$357y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:215.28-215.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.120-679.171" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$360  (
    .A(\$358y ),
    .B(\$359y ),
    .Y(\$360y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.92-679.172" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$361  (
    .A(\$357y ),
    .B(\$360y ),
    .Y(\$361y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.38-679.173" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$362  (
    .A(\$356y ),
    .B(\$361y ),
    .Y(\$362y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.178-679.201" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$363  (
    .A(iFCR_RXTrigger),
    .B(2'h2),
    .Y(\$363y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.178-679.229" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$365  (
    .A(\$363y ),
    .B(\$364y ),
    .Y(\$365y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.37-679.230" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$366  (
    .A(\$362y ),
    .B(\$365y ),
    .Y(\$366y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.237-679.260" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$367  (
    .A(iFCR_RXTrigger),
    .B(2'h3),
    .Y(\$367y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.237-679.288" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$369  (
    .A(\$367y ),
    .B(\$368y ),
    .Y(\$369y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:215.28-215.103" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$37  (
    .A(1'h0),
    .B(1'h1),
    .S(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.236-679.317" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$371  (
    .A(\$369y ),
    .B(\$370y ),
    .Y(\$371y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.235-679.346" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$373  (
    .A(\$371y ),
    .B(\$372y ),
    .Y(\$373y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.36-679.347" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$374  (
    .A(\$366y ),
    .B(\$373y ),
    .Y(\$374y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.35-679.373" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$376  (
    .A(\$374y ),
    .B(\$375y ),
    .Y(\$376y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:679.35-679.390" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$377  (
    .A(1'h0),
    .B(1'h1),
    .S(\$376y ),
    .Y(\$377y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:680.33-680.54" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$378  (
    .A(iFCR_FIFO64E),
    .Y(\$378y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:680.33-680.93" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$379  (
    .A(iRXFIFO16Trigger),
    .B(iRXFIFO64Trigger),
    .S(iFCR_FIFO64E),
    .Y(\$379y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:714.23-714.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$380  (
    .A(iMCR_LOOP),
    .Y(\$380y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:714.23-714.58" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$381  (
    .A(iSINr),
    .B(iSOUT),
    .S(iMCR[4]),
    .Y(\$381y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.28-715.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$382  (
    .A(iTXFIFOEmpty),
    .Y(\$382y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.54-715.71" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$383  (
    .A(iMCR_AFE),
    .Y(\$383y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.75-715.113" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$386  (
    .A(\$384y ),
    .B(\$385y ),
    .Y(\$386y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.54-715.114" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$387  (
    .A(\$383y ),
    .B(\$386y ),
    .Y(\$387y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.28-715.115" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$388  (
    .A(\$382y ),
    .B(\$387y ),
    .Y(\$388y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:715.28-715.132" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$389  (
    .A(1'h0),
    .B(1'h1),
    .S(\$388y ),
    .Y(\$389y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:216.48-216.63" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$39y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:209.25-209.79" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:216.29-216.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .B(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:793.31-793.54" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$405  (
    .A(iFCR_FIFOEnable),
    .Y(\$405y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:216.68-216.86" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(iLCR_DLAB),
    .Y(\$41y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:802.26-802.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$410  (
    .A(iFCR_FIFOEnable),
    .Y(\$410y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:804.31-804.50" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$411  (
    .A(iRXFIFOFull),
    .Y(\$411y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:216.28-216.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:819.13-819.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$420  (
    .A(iMCR_RTS),
    .Y(\$420y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:819.34-819.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$423  (
    .A(\$421y ),
    .B(\$422y ),
    .Y(\$423y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:819.13-819.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$424  (
    .A(\$420y ),
    .B(\$423y ),
    .Y(\$424y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:823.44-823.61" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$426  (
    .A(iMCR_AFE),
    .Y(\$426y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:823.65-823.107" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$429  (
    .A(\$427y ),
    .B(\$428y ),
    .Y(\$429y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:216.28-216.103" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$43  (
    .A(1'h0),
    .B(1'h1),
    .S(\$42y ),
    .Y(\$43y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:823.44-823.108" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$430  (
    .A(\$426y ),
    .B(\$429y ),
    .Y(\$430y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:823.22-823.109" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$431  (
    .A(\$425y ),
    .B(\$430y ),
    .Y(\$431y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:847.13-847.34" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$436  (
    .A(iBaudtick16x),
    .Y(\$436y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:852.34-852.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$439  (
    .A(iMCR_OUT1),
    .Y(\$439y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:852.13-852.52" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$440  (
    .A(\$438y ),
    .B(\$439y ),
    .Y(\$440y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:857.34-857.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$443  (
    .A(iMCR_OUT2),
    .Y(\$443y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:857.13-857.52" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$444  (
    .A(\$442y ),
    .B(\$443y ),
    .Y(\$444y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:862.34-862.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$447  (
    .A(iRTS),
    .Y(\$447y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:862.13-862.47" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$448  (
    .A(\$446y ),
    .B(\$447y ),
    .Y(\$448y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:217.45-217.60" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$45y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:867.34-867.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$451  (
    .A(iMCR_DTR),
    .Y(\$451y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:867.13-867.51" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$452  (
    .A(\$450y ),
    .B(\$451y ),
    .Y(\$452y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:872.13-872.48" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$456  (
    .A(\$454y ),
    .B(\$455y ),
    .Y(\$456y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:883.18-883.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$459  (
    .A(iLCR_DLAB),
    .Y(\$459y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:217.27-217.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$44y ),
    .B(\$45y ),
    .Y(\$46y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:895.18-895.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$461  (
    .A(iLCR_DLAB),
    .Y(\$461y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:217.27-217.77" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$47  (
    .A(1'h0),
    .B(1'h1),
    .S(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:218.47-218.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$49y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:209.25-209.96" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:218.28-218.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$48y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:218.28-218.79" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$51  (
    .A(1'h0),
    .B(1'h1),
    .S(\$50y ),
    .Y(\$51y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:219.47-219.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(PADDR),
    .B(3'h3),
    .Y(\$53y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:219.28-219.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:219.28-219.79" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$55  (
    .A(1'h0),
    .B(1'h1),
    .S(\$54y ),
    .Y(\$55y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:220.47-220.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(PADDR),
    .B(3'h4),
    .Y(\$57y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:220.28-220.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$56y ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:220.28-220.79" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$59  (
    .A(1'h0),
    .B(1'h1),
    .S(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:221.45-221.60" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(PADDR),
    .B(3'h5),
    .Y(\$61y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:221.27-221.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$60y ),
    .B(\$61y ),
    .Y(\$62y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:221.27-221.77" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$63  (
    .A(1'h0),
    .B(1'h1),
    .S(\$62y ),
    .Y(\$63y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:222.45-222.60" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A(PADDR),
    .B(3'h6),
    .Y(\$65y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:222.27-222.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(\$64y ),
    .B(\$65y ),
    .Y(\$66y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:222.27-222.77" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$67  (
    .A(1'h0),
    .B(1'h1),
    .S(\$66y ),
    .Y(\$67y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:223.47-223.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(PADDR),
    .B(3'h7),
    .Y(\$69y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:223.28-223.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A(\$68y ),
    .B(\$69y ),
    .Y(\$70y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:223.28-223.79" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$71  (
    .A(1'h0),
    .B(1'h1),
    .S(\$70y ),
    .Y(\$71y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:210.25-210.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:299.14-299.62" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(\$84y ),
    .B(\$85y ),
    .Y(\$86y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:299.68-299.108" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(\$87y ),
    .B(\$88y ),
    .Y(\$89y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:210.63-210.78" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(PWRITE),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:299.67-299.131" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(\$89y ),
    .B(\$90y ),
    .Y(\$91y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:299.13-299.132" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(\$86y ),
    .B(\$91y ),
    .Y(\$92y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:303.44-303.64" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(iIIR[3:1]),
    .B(3'h1),
    .Y(\$94y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:303.23-303.64" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$95  (
    .A(\$93y ),
    .B(\$94y ),
    .Y(\$95y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:303.22-303.86" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(\$95y ),
    .B(\$96y ),
    .Y(\$97y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$DTRN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$DTRN$453 ),
    .Q(DTRN)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$OUT1N  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$OUT1N$441 ),
    .Q(OUT1N)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$OUT2N  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$OUT2N$445 ),
    .Q(OUT2N)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$RTSN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$RTSN$449 ),
    .Q(RTSN)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$SOUT  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$SOUT$457 ),
    .Q(SOUT)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:829.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iBAUDOUTN  (
    .AD(1'h1),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iBAUDOUTN$437 ),
    .Q(iBAUDOUTN)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:320.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iCharTimeout  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iCharTimeout$129 ),
    .Q(iCharTimeout)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:234.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDLL  (
    .AD(8'h01),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iDLL$75 ),
    .Q(iDLL)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:234.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDLM  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iDLM$77 ),
    .Q(iDLM)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_DMAMode  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_DMAMode$158 ),
    .Q(iFCR_DMAMode)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_FIFO64E  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_FIFO64E$159 ),
    .Q(iFCR_FIFO64E)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_FIFOEnable  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_FIFOEnable$155 ),
    .Q(iFCR_FIFOEnable)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_RXFIFOReset  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_RXFIFOReset$156 ),
    .Q(iFCR_RXFIFOReset)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iFCR_RXTrigger  (
    .AD(2'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_RXTrigger$160 ),
    .Q(iFCR_RXTrigger)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:355.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFCR_TXFIFOReset  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFCR_TXFIFOReset$157 ),
    .Q(iFCR_TXFIFOReset)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iFECounter  (
    .AD(7'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iFECounter$214 ),
    .Q(iFECounter)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:254.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iIER  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D({ 4'h0, \$iIER[3:0]$81  }),
    .Q(iIER)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:400.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iLCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLCR$164 ),
    .Q(iLCR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_BI  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLSR_BI$196 ),
    .Q(iLSR_BI)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_FE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLSR_FE$192 ),
    .Q(iLSR_FE)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_FIFOERR  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLSR_FIFOERR$202 ),
    .Q(iLSR_FIFOERR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_OE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLSR_OE$184 ),
    .Q(iLSR_OE)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:443.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLSR_PE  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iLSR_PE$188 ),
    .Q(iLSR_PE)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:422.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iMCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D({ 2'h0, \$iMCR[5:0]$168  }),
    .Q(iMCR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_TERI  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iMSR_TERI$301 ),
    .Q(iMSR_TERI)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dCTS  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iMSR_dCTS$291 ),
    .Q(iMSR_dCTS)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dDCD  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iMSR_dDCD$307 ),
    .Q(iMSR_dDCD)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:561.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iMSR_dDSR  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iMSR_dDSR$297 ),
    .Q(iMSR_dDSR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:812.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRTS  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iRTS$433 ),
    .Q(iRTS)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRXFIFOClear  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iRXFIFOClear$414 ),
    .Q(iRXFIFOClear)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iRXFIFOD  (
    .AD(11'h000),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iRXFIFOD$416 ),
    .Q(iRXFIFOD)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iRXFIFOWrite  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iRXFIFOWrite$415 ),
    .Q(iRXFIFOWrite)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:614.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iSCR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iSCR$311 ),
    .Q(iSCR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:292.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTHRInterrupt  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTHRInterrupt$99 ),
    .Q(iTHRInterrupt)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iTSR  (
    .AD(8'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTSR$397 ),
    .Q(iTSR)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXFIFORead  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTXFIFORead$398 ),
    .Q(iTXFIFORead)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXRunning  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTXRunning$400 ),
    .Q(iTXRunning)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTXStart  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTXStart$399 ),
    .Q(iTXStart)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:320.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iTimeoutCount  (
    .AD(6'h00),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$iTimeoutCount$123 ),
    .Q(iTimeoutCount)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:773.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rx_State  (
    .AD(1'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$rx_State$417 ),
    .Q(rx_State)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:724.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$tx_State  (
    .AD(2'h0),
    .ALOAD(RSTN),
    .CLK(CLK),
    .D(\$tx_State$401 ),
    .Q(tx_State)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:897.18-897.38|rtl/apb_uart/apb_uart.sv:895.13-902.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11108  (
    .A(iIER),
    .B(iDLM),
    .S(iLCR[7]),
    .Y(\$procmux$11108_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:895.13-902.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11110  (
    .A(8'hxx),
    .B(\$procmux$11108_Y ),
    .S(\$procmux$11111_CMP ),
    .Y(\$procmux$11110_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:895.13-902.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11111_CMP0  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$procmux$11111_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:932.13-932.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd8)
  ) \$procmux$11112  (
    .A(8'hxx),
    .B({ \$PRDATA[7:0]$460 , \$PRDATA[7:0]$462 , iFCR_FIFOEnable, iFCR_FIFOEnable, \$108y , 1'h0, iIIR[3:0], iLCR, iMCR, \$241y , \$251y , \$247y , iLSR_BI, iLSR_FE, iLSR_PE, iLSR_OE, \$245y , \$283y , \$275y , \$267y , \$259y , iMSR_dDCD, iMSR_TERI, iMSR_dDSR, iMSR_dCTS, iSCR }),
    .S({ \$procmux$11122_CMP , \$procmux$11120_CMP , \$procmux$11118_CMP , \$procmux$11117_CMP , \$procmux$11116_CMP , \$procmux$11115_CMP , \$procmux$11114_CMP , \$procmux$11113_CMP  }),
    .Y(\$procmux$11112_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:932.13-932.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11113_CMP0  (
    .A(PADDR),
    .B(3'h7),
    .Y(\$procmux$11113_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:927.13-927.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11114_CMP0  (
    .A(PADDR),
    .B(3'h6),
    .Y(\$procmux$11114_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:922.13-922.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11115_CMP0  (
    .A(PADDR),
    .B(3'h5),
    .Y(\$procmux$11115_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:917.13-917.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11116_CMP0  (
    .A(PADDR),
    .B(3'h4),
    .Y(\$procmux$11116_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:912.13-912.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11117_CMP0  (
    .A(PADDR),
    .B(3'h3),
    .Y(\$procmux$11117_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:907.13-907.33|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11118_CMP0  (
    .A(PADDR),
    .B(3'h2),
    .Y(\$procmux$11118_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:895.13-902.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11120_CMP0  (
    .A(PADDR),
    .B(3'h1),
    .Y(\$procmux$11120_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:883.13-890.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11122_CMP0  (
    .A(PADDR),
    .Y(\$procmux$11122_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:885.18-885.38|rtl/apb_uart/apb_uart.sv:883.13-890.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11131  (
    .A(iRXFIFOQ[7:0]),
    .B(iDLL),
    .S(iLCR[7]),
    .Y(\$procmux$11131_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:883.13-890.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11133  (
    .A(8'hxx),
    .B(\$procmux$11131_Y ),
    .S(\$procmux$11134_CMP ),
    .Y(\$procmux$11133_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:883.13-890.18|rtl/apb_uart/apb_uart.sv:880.7-940.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$11134_CMP0  (
    .A(PADDR),
    .Y(\$procmux$11134_CMP )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:874.13-874.27|rtl/apb_uart/apb_uart.sv:872.8-875.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11136  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11137_CMP ),
    .Y(\$procmux$11136_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:869.13-869.27|rtl/apb_uart/apb_uart.sv:867.8-870.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11139  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11140_CMP ),
    .Y(\$procmux$11139_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:864.13-864.27|rtl/apb_uart/apb_uart.sv:862.8-865.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11142  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11143_CMP ),
    .Y(\$procmux$11142_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:859.13-859.28|rtl/apb_uart/apb_uart.sv:857.8-860.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11145  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11146_CMP ),
    .Y(\$procmux$11145_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:854.13-854.28|rtl/apb_uart/apb_uart.sv:852.8-855.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11148  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11149_CMP ),
    .Y(\$procmux$11148_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:849.13-849.32|rtl/apb_uart/apb_uart.sv:847.8-850.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11150  (
    .A(1'h1),
    .B(1'h0),
    .S(iBaudtick16x),
    .Y(\$procmux$11150_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:825.13-825.27|rtl/apb_uart/apb_uart.sv:823.13-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11152  (
    .A(iRTS),
    .B(1'h1),
    .S(\$procmux$11153_CMP ),
    .Y(\$procmux$11152_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:821.13-821.27|rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11155  (
    .A(\$procmux$11152_Y ),
    .B(1'hx),
    .S(\$procmux$11156_CMP ),
    .Y(\$procmux$11155_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:821.13-821.27|rtl/apb_uart/apb_uart.sv:819.8-826.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11159  (
    .A(\$iRTS$432 ),
    .B(1'h0),
    .S(\$procmux$11160_CMP ),
    .Y(\$procmux$11159_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:805.24-805.45|rtl/apb_uart/apb_uart.sv:804.27-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11161  (
    .A(1'h1),
    .B(1'h0),
    .S(\$329y ),
    .Y(\$procmux$11161_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:803.24-803.45|rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11164  (
    .A(1'hx),
    .B(\$procmux$11161_Y ),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$11164_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:801.19-807.22|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11166  (
    .A(1'hx),
    .B(\$procmux$11164_Y ),
    .S(\$procmux$11167_CMP ),
    .Y(\$procmux$11166_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:803.24-803.45|rtl/apb_uart/apb_uart.sv:802.22-805.45" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11170  (
    .A(1'h1),
    .B(\$iRXFIFOWrite$412 ),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$11170_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:801.19-807.22|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11172  (
    .A(1'hx),
    .B(\$procmux$11170_Y ),
    .S(\$procmux$11173_CMP ),
    .Y(\$procmux$11172_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:801.19-807.22|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11175  (
    .A(1'hx),
    .B({ \$rx_State$409 , 1'h0 }),
    .S({ \$procmux$11178_CMP , \$procmux$11176_CMP  }),
    .Y(\$procmux$11175_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11178_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11178_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:791.24-796.27|rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11182  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11183_CMP ),
    .Y(\$procmux$11182_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11184  (
    .A(\$procmux$11182_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$11184_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11185_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11185_CMP )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:794.29-794.50|rtl/apb_uart/apb_uart.sv:793.27-794.50" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11188  (
    .A(1'h1),
    .B(iFCR_RXFIFOReset),
    .S(iFCR_FIFOEnable),
    .Y(\$procmux$11188_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:791.24-796.27|rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11190  (
    .A(1'hx),
    .B(\$procmux$11188_Y ),
    .S(\$procmux$11191_CMP ),
    .Y(\$procmux$11190_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11192  (
    .A(\$procmux$11190_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$11192_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11193_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11193_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:791.24-796.27|rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$procmux$11197  (
    .A(iRXFIFOD),
    .B({ iRXBI, iRXFE, iRXPE, iRXData }),
    .S(\$procmux$11198_CMP ),
    .Y(\$procmux$11197_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$procmux$11199  (
    .A(\$procmux$11197_Y ),
    .B(11'hxxx),
    .S(rx_State),
    .Y(\$procmux$11199_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11200_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11200_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:791.24-796.27|rtl/apb_uart/apb_uart.sv:790.22-798.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11204  (
    .A(iFCR_RXFIFOReset),
    .B(\$iRXFIFOClear$406 ),
    .S(\$procmux$11205_CMP ),
    .Y(\$procmux$11204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11206  (
    .A(\$procmux$11204_Y ),
    .B(1'hx),
    .S(rx_State),
    .Y(\$procmux$11206_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11207_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11207_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$procmux$11210  (
    .A(\$iRXFIFOD$408 ),
    .B(iRXFIFOD),
    .S(rx_State),
    .Y(\$procmux$11210_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11211_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11211_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:801.19-807.22|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11213  (
    .A(1'h0),
    .B(\$iRXFIFOWrite$413 ),
    .S(\$procmux$11214_CMP ),
    .Y(\$procmux$11213_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11217  (
    .A(\$iRXFIFOClear$407 ),
    .B(iFCR_RXFIFOReset),
    .S(rx_State),
    .Y(\$procmux$11217_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:790.22-798.43|rtl/apb_uart/apb_uart.sv:787.13-809.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11218_CMP0  (
    .A(rx_State),
    .Y(\$procmux$11218_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:761.24-761.42|rtl/apb_uart/apb_uart.sv:760.22-763.42" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11221  (
    .A(2'h2),
    .B(2'h3),
    .S(\$procmux$11222_CMP ),
    .Y(\$procmux$11221_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11223  (
    .A(2'hx),
    .B(\$procmux$11221_Y ),
    .S(\$procmux$11224_CMP ),
    .Y(\$procmux$11223_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11224_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$11224_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:767.31-767.50|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd2)
  ) \$procmux$11225  (
    .A(2'hx),
    .B({ \$tx_State$394 , 2'h2, \$tx_State$396 , 2'h0 }),
    .S({ \$procmux$11231_CMP , \$procmux$11229_CMP , \$procmux$11228_CMP , \$procmux$11226_CMP  }),
    .Y(\$procmux$11225_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:767.31-767.50|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11226_CMP0  (
    .A(tx_State),
    .B(2'h3),
    .Y(\$procmux$11226_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11228_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$11228_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11229_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$11229_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11231_CMP0  (
    .A(tx_State),
    .Y(\$procmux$11231_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:744.24-747.27|rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11236  (
    .A(2'h0),
    .B(2'h1),
    .S(\$procmux$11237_CMP ),
    .Y(\$procmux$11236_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11238  (
    .A(2'hx),
    .B(\$procmux$11236_Y ),
    .S(\$procmux$11239_CMP ),
    .Y(\$procmux$11238_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11239_CMP0  (
    .A(tx_State),
    .Y(\$procmux$11239_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:744.24-747.27|rtl/apb_uart/apb_uart.sv:743.22-749.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11244  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11245_CMP ),
    .Y(\$procmux$11244_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11246  (
    .A(1'hx),
    .B(\$procmux$11244_Y ),
    .S(\$procmux$11247_CMP ),
    .Y(\$procmux$11246_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11247_CMP0  (
    .A(tx_State),
    .Y(\$procmux$11247_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11250  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11251_CMP ),
    .Y(\$procmux$11250_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11251_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$11251_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$11254  (
    .A(1'h0),
    .B({ \$iTXStart$393 , 2'h3 }),
    .S({ \$procmux$11258_CMP , \$procmux$11256_CMP , \$procmux$11255_CMP  }),
    .Y(\$procmux$11254_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:759.19-766.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11255_CMP0  (
    .A(tx_State),
    .B(2'h2),
    .Y(\$procmux$11255_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11256_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$11256_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:743.22-749.43|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11258_CMP0  (
    .A(tx_State),
    .Y(\$procmux$11258_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11261  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11262_CMP ),
    .Y(\$procmux$11261_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11262_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$11262_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11265  (
    .A(iTSR),
    .B(iTXFIFOQ),
    .S(\$procmux$11266_CMP ),
    .Y(\$procmux$11265_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:752.19-757.22|rtl/apb_uart/apb_uart.sv:740.13-769.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$11266_CMP0  (
    .A(tx_State),
    .B(2'h1),
    .Y(\$procmux$11266_CMP )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:624.13-624.34|rtl/apb_uart/apb_uart.sv:622.8-625.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11267  (
    .A(iSCR),
    .B(PWDATA[7:0]),
    .S(\$procmux$11268_CMP ),
    .Y(\$procmux$11267_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:601.13-601.32|rtl/apb_uart/apb_uart.sv:599.13-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11269  (
    .A(iMSR_dDCD),
    .B(1'h0),
    .S(\$procmux$11270_CMP ),
    .Y(\$procmux$11269_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:597.13-597.32|rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11272  (
    .A(\$procmux$11269_Y ),
    .B(1'hx),
    .S(\$procmux$11273_CMP ),
    .Y(\$procmux$11272_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:597.13-597.32|rtl/apb_uart/apb_uart.sv:595.8-602.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11276  (
    .A(\$iMSR_dDCD$306 ),
    .B(1'h1),
    .S(\$procmux$11277_CMP ),
    .Y(\$procmux$11276_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:593.13-593.32|rtl/apb_uart/apb_uart.sv:591.13-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11278  (
    .A(iMSR_TERI),
    .B(1'h0),
    .S(\$procmux$11279_CMP ),
    .Y(\$procmux$11278_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:589.13-589.32|rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11281  (
    .A(\$procmux$11278_Y ),
    .B(1'hx),
    .S(\$procmux$11282_CMP ),
    .Y(\$procmux$11281_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:589.13-589.32|rtl/apb_uart/apb_uart.sv:587.8-594.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11285  (
    .A(\$iMSR_TERI$300 ),
    .B(1'h1),
    .S(\$procmux$11286_CMP ),
    .Y(\$procmux$11285_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:585.13-585.32|rtl/apb_uart/apb_uart.sv:583.13-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11287  (
    .A(iMSR_dDSR),
    .B(1'h0),
    .S(\$procmux$11288_CMP ),
    .Y(\$procmux$11287_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:581.13-581.32|rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11290  (
    .A(\$procmux$11287_Y ),
    .B(1'hx),
    .S(\$procmux$11291_CMP ),
    .Y(\$procmux$11290_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:581.13-581.32|rtl/apb_uart/apb_uart.sv:579.8-586.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11294  (
    .A(\$iMSR_dDSR$296 ),
    .B(1'h1),
    .S(\$procmux$11295_CMP ),
    .Y(\$procmux$11294_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:577.13-577.32|rtl/apb_uart/apb_uart.sv:575.13-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11296  (
    .A(iMSR_dCTS),
    .B(1'h0),
    .S(\$procmux$11297_CMP ),
    .Y(\$procmux$11296_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:573.13-573.32|rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11299  (
    .A(\$procmux$11296_Y ),
    .B(1'hx),
    .S(\$procmux$11300_CMP ),
    .Y(\$procmux$11299_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:573.13-573.32|rtl/apb_uart/apb_uart.sv:571.8-578.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11303  (
    .A(\$iMSR_dCTS$290 ),
    .B(1'h1),
    .S(\$procmux$11304_CMP ),
    .Y(\$procmux$11303_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:507.18-507.47|rtl/apb_uart/apb_uart.sv:505.18-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11305  (
    .A(iFECounter),
    .B(\$211y [6:0]),
    .S(\$procmux$11306_CMP ),
    .Y(\$procmux$11305_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:503.18-503.47|rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11308  (
    .A(\$procmux$11305_Y ),
    .B(7'hxx),
    .S(\$procmux$11309_CMP ),
    .Y(\$procmux$11308_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:497.13-497.29|rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11311  (
    .A(\$procmux$11308_Y ),
    .B(7'hxx),
    .S(\$procmux$11312_CMP ),
    .Y(\$procmux$11311_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:503.18-503.47|rtl/apb_uart/apb_uart.sv:501.13-508.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11315  (
    .A(\$iFECounter$212 ),
    .B(\$207y [6:0]),
    .S(\$procmux$11316_CMP ),
    .Y(\$procmux$11315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:497.13-497.29|rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11318  (
    .A(\$procmux$11315_Y ),
    .B(7'hxx),
    .S(\$procmux$11319_CMP ),
    .Y(\$procmux$11318_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:497.13-497.29|rtl/apb_uart/apb_uart.sv:495.8-509.13" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$11322  (
    .A(\$iFECounter$213 ),
    .B(7'h00),
    .S(\$procmux$11323_CMP ),
    .Y(\$procmux$11322_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:493.13-493.35|rtl/apb_uart/apb_uart.sv:491.13-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11324  (
    .A(iLSR_FIFOERR),
    .B(1'h0),
    .S(\$procmux$11325_CMP ),
    .Y(\$procmux$11324_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:489.13-489.35|rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11327  (
    .A(\$procmux$11324_Y ),
    .B(1'hx),
    .S(\$procmux$11328_CMP ),
    .Y(\$procmux$11327_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:489.13-489.35|rtl/apb_uart/apb_uart.sv:487.8-494.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11331  (
    .A(\$iLSR_FIFOERR$201 ),
    .B(1'h1),
    .S(\$procmux$11332_CMP ),
    .Y(\$procmux$11331_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:485.13-485.30|rtl/apb_uart/apb_uart.sv:483.13-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11333  (
    .A(iLSR_BI),
    .B(1'h0),
    .S(\$procmux$11334_CMP ),
    .Y(\$procmux$11333_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:481.13-481.30|rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11336  (
    .A(\$procmux$11333_Y ),
    .B(1'hx),
    .S(\$procmux$11337_CMP ),
    .Y(\$procmux$11336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:481.13-481.30|rtl/apb_uart/apb_uart.sv:479.8-486.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11340  (
    .A(\$iLSR_BI$195 ),
    .B(1'h1),
    .S(\$procmux$11341_CMP ),
    .Y(\$procmux$11340_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:477.13-477.30|rtl/apb_uart/apb_uart.sv:475.13-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11342  (
    .A(iLSR_FE),
    .B(1'h0),
    .S(\$procmux$11343_CMP ),
    .Y(\$procmux$11342_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:473.13-473.30|rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11345  (
    .A(\$procmux$11342_Y ),
    .B(1'hx),
    .S(\$procmux$11346_CMP ),
    .Y(\$procmux$11345_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:473.13-473.30|rtl/apb_uart/apb_uart.sv:471.8-478.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11349  (
    .A(\$iLSR_FE$191 ),
    .B(1'h1),
    .S(\$procmux$11350_CMP ),
    .Y(\$procmux$11349_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:469.13-469.30|rtl/apb_uart/apb_uart.sv:467.13-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11351  (
    .A(iLSR_PE),
    .B(1'h0),
    .S(\$procmux$11352_CMP ),
    .Y(\$procmux$11351_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:465.13-465.30|rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11354  (
    .A(\$procmux$11351_Y ),
    .B(1'hx),
    .S(\$procmux$11355_CMP ),
    .Y(\$procmux$11354_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:465.13-465.30|rtl/apb_uart/apb_uart.sv:463.8-470.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11358  (
    .A(\$iLSR_PE$187 ),
    .B(1'h1),
    .S(\$procmux$11359_CMP ),
    .Y(\$procmux$11358_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:461.13-461.30|rtl/apb_uart/apb_uart.sv:459.13-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11360  (
    .A(iLSR_OE),
    .B(1'h0),
    .S(\$procmux$11361_CMP ),
    .Y(\$procmux$11360_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:457.13-457.30|rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11363  (
    .A(\$procmux$11360_Y ),
    .B(1'hx),
    .S(\$procmux$11364_CMP ),
    .Y(\$procmux$11363_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:457.13-457.30|rtl/apb_uart/apb_uart.sv:455.8-462.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11367  (
    .A(\$iLSR_OE$183 ),
    .B(1'h1),
    .S(\$procmux$11368_CMP ),
    .Y(\$procmux$11367_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:431.11-431.36|rtl/apb_uart/apb_uart.sv:429.8-432.12" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$11369  (
    .A(iMCR[5:0]),
    .B(PWDATA[5:0]),
    .S(\$procmux$11370_CMP ),
    .Y(\$procmux$11369_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:410.13-410.34|rtl/apb_uart/apb_uart.sv:408.8-411.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11371  (
    .A(iLCR),
    .B(PWDATA[7:0]),
    .S(\$procmux$11372_CMP ),
    .Y(\$procmux$11371_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:387.18-387.44|rtl/apb_uart/apb_uart.sv:385.13-388.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11374  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11375_CMP ),
    .Y(\$procmux$11374_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11376  (
    .A(1'hx),
    .B(\$procmux$11374_Y ),
    .S(\$procmux$11377_CMP ),
    .Y(\$procmux$11376_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:382.18-382.44|rtl/apb_uart/apb_uart.sv:380.13-383.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11379  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11380_CMP ),
    .Y(\$procmux$11379_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11381  (
    .A(1'hx),
    .B(\$procmux$11379_Y ),
    .S(\$procmux$11382_CMP ),
    .Y(\$procmux$11381_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:377.18-377.44|rtl/apb_uart/apb_uart.sv:375.13-378.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11383  (
    .A(iFCR_FIFO64E),
    .B(PWDATA[5]),
    .S(\$procmux$11384_CMP ),
    .Y(\$procmux$11383_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11385  (
    .A(1'hx),
    .B(\$procmux$11383_Y ),
    .S(\$procmux$11386_CMP ),
    .Y(\$procmux$11385_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11388  (
    .A(iFCR_RXTrigger),
    .B(PWDATA[7:6]),
    .S(\$procmux$11389_CMP ),
    .Y(\$procmux$11388_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11391  (
    .A(iFCR_FIFO64E),
    .B(\$iFCR_FIFO64E$134 ),
    .S(\$procmux$11392_CMP ),
    .Y(\$procmux$11391_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11394  (
    .A(iFCR_DMAMode),
    .B(PWDATA[3]),
    .S(\$procmux$11395_CMP ),
    .Y(\$procmux$11394_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11397  (
    .A(1'h0),
    .B(\$iFCR_TXFIFOReset$154 ),
    .S(\$procmux$11398_CMP ),
    .Y(\$procmux$11397_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11400  (
    .A(1'h0),
    .B(\$iFCR_RXFIFOReset$144 ),
    .S(\$procmux$11401_CMP ),
    .Y(\$procmux$11400_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:371.10-389.13|rtl/apb_uart/apb_uart.sv:370.8-389.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11403  (
    .A(iFCR_FIFOEnable),
    .B(PWDATA[0]),
    .S(\$procmux$11404_CMP ),
    .Y(\$procmux$11403_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:340.13-347.18|rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11407  (
    .A(1'h0),
    .B(\$iCharTimeout$128 ),
    .S(\$procmux$11408_CMP ),
    .Y(\$procmux$11407_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:346.18-346.40|rtl/apb_uart/apb_uart.sv:344.18-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11410  (
    .A(iCharTimeout),
    .B(1'h1),
    .S(\$procmux$11411_CMP ),
    .Y(\$procmux$11410_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:342.18-342.40|rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11413  (
    .A(\$procmux$11410_Y ),
    .B(1'hx),
    .S(\$procmux$11414_CMP ),
    .Y(\$procmux$11413_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:340.13-347.18|rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11415  (
    .A(1'hx),
    .B(\$procmux$11413_Y ),
    .S(\$procmux$11416_CMP ),
    .Y(\$procmux$11415_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:342.18-342.40|rtl/apb_uart/apb_uart.sv:340.13-347.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11420  (
    .A(\$iCharTimeout$127 ),
    .B(1'h0),
    .S(\$procmux$11421_CMP ),
    .Y(\$procmux$11420_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:340.13-347.18|rtl/apb_uart/apb_uart.sv:338.8-352.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11422  (
    .A(1'hx),
    .B(\$procmux$11420_Y ),
    .S(\$procmux$11423_CMP ),
    .Y(\$procmux$11422_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:336.13-336.48|rtl/apb_uart/apb_uart.sv:334.13-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$11424  (
    .A(iTimeoutCount),
    .B(\$121y [5:0]),
    .S(\$procmux$11425_CMP ),
    .Y(\$procmux$11424_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:332.13-332.72|rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$11427  (
    .A(\$procmux$11424_Y ),
    .B(6'hxx),
    .S(\$procmux$11428_CMP ),
    .Y(\$procmux$11427_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:332.13-332.72|rtl/apb_uart/apb_uart.sv:329.8-337.13" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$11431  (
    .A(\$iTimeoutCount$122 ),
    .B(6'h00),
    .S(\$procmux$11432_CMP ),
    .Y(\$procmux$11431_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:305.13-305.36|rtl/apb_uart/apb_uart.sv:303.13-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11433  (
    .A(iTHRInterrupt),
    .B(1'h0),
    .S(\$procmux$11434_CMP ),
    .Y(\$procmux$11433_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:301.13-301.36|rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11436  (
    .A(\$procmux$11433_Y ),
    .B(1'hx),
    .S(\$procmux$11437_CMP ),
    .Y(\$procmux$11436_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/apb_uart.sv:301.13-301.36|rtl/apb_uart/apb_uart.sv:299.8-306.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11440  (
    .A(\$iTHRInterrupt$98 ),
    .B(1'h1),
    .S(\$procmux$11441_CMP ),
    .Y(\$procmux$11440_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:263.13-263.38|rtl/apb_uart/apb_uart.sv:261.8-264.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$11442  (
    .A(iIER[3:0]),
    .B(PWDATA[3:0]),
    .S(\$procmux$11443_CMP ),
    .Y(\$procmux$11442_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:250.13-250.34|rtl/apb_uart/apb_uart.sv:248.8-251.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11445  (
    .A(iDLM),
    .B(PWDATA[7:0]),
    .S(\$procmux$11446_CMP ),
    .Y(\$procmux$11445_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:246.13-246.34|rtl/apb_uart/apb_uart.sv:244.8-247.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$11447  (
    .A(iDLL),
    .B(PWDATA[7:0]),
    .S(\$procmux$11448_CMP ),
    .Y(\$procmux$11447_Y )
  );
  /* src = "rtl/apb_uart/apb_uart.sv:630.14" */
  \uart_baudgen$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG16  UART_BG16 (
    .BAUDTICK(iBaudtick16x),
    .CE(1'h1),
    .CLEAR(1'h0),
    .CLK(CLK),
    .DIVIDER(iBaudgenDiv),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:637.29" */
  \slib_clock_div$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG2  UART_BG2 (
    .CE(iBaudtick16x),
    .CLK(CLK),
    .Q(iBaudtick2x),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:517.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BIDET  UART_BIDET (
    .CLK(CLK),
    .D(iRXFIFOBI),
    .RE(iBIRE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:536.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_CTS  UART_ED_CTS (
    .CLK(CLK),
    .D(iMSR_CTS),
    .FE(iCTSnFE),
    .RE(iCTSnRE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:554.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DCD  UART_ED_DCD (
    .CLK(CLK),
    .D(iMSR_DCD),
    .FE(iDCDnFE),
    .RE(iDCDnRE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:542.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DSR  UART_ED_DSR (
    .CLK(CLK),
    .D(iMSR_DSR),
    .FE(iDSRnFE),
    .RE(iDSRnRE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:548.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_RI  UART_ED_RI (
    .CLK(CLK),
    .D(iMSR_RI),
    .FE(iRInFE),
    .RE(iRInRE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:516.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_FEDET  UART_FEDET (
    .CLK(CLK),
    .D(iRXFIFOFE),
    .RE(iFERE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:229.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_CTS  UART_IF_CTS (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iCTSNs),
    .Q(iCTSn),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:231.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DCD  UART_IF_DCD (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iDCDNs),
    .Q(iDCDn),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:230.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DSR  UART_IF_DSR (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iDSRNs),
    .Q(iDSRn),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:232.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_RI  UART_IF_RI (
    .CE(iBaudtick2x),
    .CLK(CLK),
    .D(iRINs),
    .Q(iRIn),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:273.16" */
  \uart_interrupt$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC  UART_IIC (
    .AFE(iMCR_AFE),
    .CLK(CLK),
    .CTI(iCharTimeout),
    .IER(iIER[3:0]),
    .IIR(iIIR[3:0]),
    .INT(INT),
    .LSR(iLSR[4:0]),
    .MSR(iMSR[3:0]),
    .RDA(iRDAInterrupt),
    .RST(iRST),
    .THI(iTHRInterrupt)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:285.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC_THRE_ED  UART_IIC_THRE_ED (
    .CLK(CLK),
    .D(iLSR_THRE),
    .RE(iLSR_THRERE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:225.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_CTS  UART_IS_CTS (
    .CLK(CLK),
    .D(CTSN),
    .Q(iCTSNs),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:227.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DCD  UART_IS_DCD (
    .CLK(CLK),
    .D(DCDN),
    .Q(iDCDNs),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:226.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DSR  UART_IS_DSR (
    .CLK(CLK),
    .D(DSRN),
    .Q(iDSRNs),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:228.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_RI  UART_IS_RI (
    .CLK(CLK),
    .D(RIN),
    .Q(iRINs),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:224.17" */
  \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_SIN  UART_IS_SIN (
    .CLK(CLK),
    .D(SIN),
    .Q(iSINr),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:515.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_PEDET  UART_PEDET (
    .CLK(CLK),
    .D(iRXFIFOPE),
    .RE(iPERE),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:642.18" */
  \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RCLK  UART_RCLK (
    .CLK(CLK),
    .D(iBAUDOUTN),
    .RE(iRCLK),
    .RST(iRST)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:697.15" */
  \uart_receiver$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX  UART_RX (
    .BI(iRXBI),
    .CLK(CLK),
    .DOUT(iRXData),
    .EPS(iLCR_EPS),
    .FE(iRXFE),
    .PE(iRXPE),
    .PEN(iLCR_PEN),
    .RST(iRST),
    .RXCLEAR(1'h0),
    .RXCLK(iRCLK),
    .RXFINISHED(iRXFinished),
    .SIN(iSIN),
    .SP(iLCR_SP),
    .STB(iLCR_STB),
    .WLS(iLCR_WLS)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:663.37" */
  \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RXFF  UART_RXFF (
    .CLEAR(iRXFIFOClear),
    .CLK(CLK),
    .D(iRXFIFOD),
    .EMPTY(iRXFIFOEmpty),
    .FULL(iRXFIFO64Full),
    .Q(iRXFIFOQ),
    .READ(iRXFIFORead),
    .RST(iRST),
    .USAGE(iRXFIFOUsage),
    .WRITE(iRXFIFOWrite)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:681.18" */
  \uart_transmitter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TX  UART_TX (
    .BC(iLCR_BC),
    .CLEAR(1'h0),
    .CLK(CLK),
    .DIN(iTSR),
    .EPS(iLCR_EPS),
    .PEN(iLCR_PEN),
    .RST(iRST),
    .SOUT(iSOUT),
    .SP(iLCR_SP),
    .STB(iLCR_STB),
    .TXCLK(iBaudtick2x),
    .TXFINISHED(iTXFinished),
    .TXSTART(iTXStart),
    .WLS(iLCR_WLS)
  );
  /* src = "rtl/apb_uart/apb_uart.sv:648.36" */
  \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TXFF  UART_TXFF (
    .CLEAR(iTXFIFOClear),
    .CLK(CLK),
    .D(PWDATA[7:0]),
    .EMPTY(iTXFIFOEmpty),
    .FULL(iTXFIFO64Full),
    .Q(iTXFIFOQ),
    .READ(iTXFIFORead),
    .RST(iRST),
    .USAGE(iTXFIFOUsage),
    .WRITE(iTXFIFOWrite)
  );
  assign iWrite = \$5y ;
  assign iRead = \$11y ;
  assign iRST = \$13y ;
  assign iRBRRead = \$19y ;
  assign iTHRWrite = \$25y ;
  assign iDLLWrite = \$31y ;
  assign iDLMWrite = \$37y ;
  assign iIERWrite = \$43y ;
  assign iIIRRead = \$47y ;
  assign iFCRWrite = \$51y ;
  assign iLCRWrite = \$55y ;
  assign iMCRWrite = \$59y ;
  assign iLSRRead = \$63y ;
  assign iMSRRead = \$67y ;
  assign iSCRWrite = \$71y ;
  assign iIER_ERBI = iIER[0];
  assign iIER_ETBEI = iIER[1];
  assign iIER_ELSI = iIER[2];
  assign iIER_EDSSI = iIER[3];
  assign iRDAInterrupt = \$107y ;
  assign iIIR_PI = iIIR[0];
  assign iIIR_ID0 = iIIR[1];
  assign iIIR_ID1 = iIIR[2];
  assign iIIR_ID2 = iIIR[3];
  assign iIIR_FIFO64 = iIIR[5];
  assign iIIR[4] = 1'h0;
  assign iIIR[5] = \$108y ;
  assign iIIR[6] = iFCR_FIFOEnable;
  assign iIIR[7] = iFCR_FIFOEnable;
  assign iFCR[0] = iFCR_FIFOEnable;
  assign iFCR[1] = iFCR_RXFIFOReset;
  assign iFCR[2] = iFCR_TXFIFOReset;
  assign iFCR[3] = iFCR_DMAMode;
  assign iFCR[4] = 1'h0;
  assign iFCR[5] = iFCR_FIFO64E;
  assign iFCR[7:6] = iFCR_RXTrigger;
  assign iLCR_WLS = iLCR[1:0];
  assign iLCR_STB = iLCR[2];
  assign iLCR_PEN = iLCR[3];
  assign iLCR_EPS = iLCR[4];
  assign iLCR_SP = iLCR[5];
  assign iLCR_BC = iLCR[6];
  assign iLCR_DLAB = iLCR[7];
  assign iMCR_DTR = iMCR[0];
  assign iMCR_RTS = iMCR[1];
  assign iMCR_OUT1 = iMCR[2];
  assign iMCR_OUT2 = iMCR[3];
  assign iMCR_LOOP = iMCR[4];
  assign iMCR_AFE = iMCR[5];
  assign iRXFIFOPE = \$218y ;
  assign iRXFIFOFE = \$222y ;
  assign iRXFIFOBI = \$226y ;
  assign iFEIncrement = \$230y ;
  assign iFEDecrement = \$240y ;
  assign iLSR[0] = iLSR_DR;
  assign iLSR[1] = iLSR_OE;
  assign iLSR[2] = iLSR_PE;
  assign iLSR[3] = iLSR_FE;
  assign iLSR[4] = iLSR_BI;
  assign iLSR[5] = iLSR_THRE;
  assign iLSR[6] = iLSR_TEMT;
  assign iLSR[7] = \$241y ;
  assign iLSR_DR = \$245y ;
  assign iLSR_THRE = \$247y ;
  assign iLSR_TEMT = \$251y ;
  assign iMSR_CTS = \$259y ;
  assign iMSR_DSR = \$267y ;
  assign iMSR_RI = \$275y ;
  assign iMSR_DCD = \$283y ;
  assign iMSR[0] = iMSR_dCTS;
  assign iMSR[1] = iMSR_dDSR;
  assign iMSR[2] = iMSR_TERI;
  assign iMSR[3] = iMSR_dDCD;
  assign iMSR[4] = iMSR_CTS;
  assign iMSR[5] = iMSR_DSR;
  assign iMSR[6] = iMSR_RI;
  assign iMSR[7] = iMSR_DCD;
  assign iBaudgenDiv = { iDLM, iDLL };
  assign iTXFIFO16Full = iTXFIFOUsage[4];
  assign iTXFIFOFull = \$313y ;
  assign iTXFIFOWrite = \$323y ;
  assign iTXFIFOClear = \$325y ;
  assign iRXFIFORead = \$327y ;
  assign iRXFIFO16Full = iRXFIFOUsage[4];
  assign iRXFIFOFull = \$329y ;
  assign iRBR = iRXFIFOQ[7:0];
  assign iRXFIFO16Trigger = \$353y ;
  assign iRXFIFO64Trigger = \$377y ;
  assign iRXFIFOTrigger = \$379y ;
  assign iTXClear = 1'h0;
  assign iRXClear = 1'h0;
  assign iSIN = \$381y ;
  assign iTXEnable = \$389y ;
  assign PRDATA = { 24'h000000, \$PRDATA[7:0]$463  };
  assign PREADY = 1'h1;
  assign PSLVERR = 1'h0;
  assign \$procmux$11109_CMP  = \$461y ;
  assign \$PRDATA[7:0]$462  = \$procmux$11110_Y ;
  assign \$PRDATA[7:0]$463  = \$procmux$11112_Y ;
  assign \$procmux$11132_CMP  = \$459y ;
  assign \$PRDATA[7:0]$460  = \$procmux$11133_Y ;
  assign \$procmux$11137_CMP  = \$456y ;
  assign \$SOUT$457  = \$procmux$11136_Y ;
  assign \$procmux$11140_CMP  = \$452y ;
  assign \$DTRN$453  = \$procmux$11139_Y ;
  assign \$procmux$11143_CMP  = \$448y ;
  assign \$RTSN$449  = \$procmux$11142_Y ;
  assign \$procmux$11146_CMP  = \$444y ;
  assign \$OUT2N$445  = \$procmux$11145_Y ;
  assign \$procmux$11149_CMP  = \$440y ;
  assign \$OUT1N$441  = \$procmux$11148_Y ;
  assign \$procmux$11151_CMP  = \$436y ;
  assign \$iBAUDOUTN$437  = \$procmux$11150_Y ;
  assign \$procmux$11153_CMP  = \$431y ;
  assign \$procmux$11156_CMP  = \$424y ;
  assign \$iRTS$432  = \$procmux$11155_Y ;
  assign \$procmux$11160_CMP  = \$424y ;
  assign \$iRTS$433  = \$procmux$11159_Y ;
  assign \$procmux$11162_CMP  = \$411y ;
  assign \$procmux$11165_CMP  = \$410y ;
  assign \$procmux$11167_CMP  = rx_State;
  assign \$iRXFIFOWrite$412  = \$procmux$11166_Y ;
  assign \$procmux$11171_CMP  = \$410y ;
  assign \$procmux$11173_CMP  = rx_State;
  assign \$iRXFIFOWrite$413  = \$procmux$11172_Y ;
  assign \$procmux$11176_CMP  = rx_State;
  assign \$rx_State$417  = \$procmux$11175_Y ;
  assign \$procmux$11183_CMP  = \$404y ;
  assign \$rx_State$409  = \$procmux$11184_Y ;
  assign \$procmux$11189_CMP  = \$405y ;
  assign \$procmux$11191_CMP  = \$404y ;
  assign \$iRXFIFOClear$406  = \$procmux$11192_Y ;
  assign \$procmux$11198_CMP  = \$404y ;
  assign \$iRXFIFOD$408  = \$procmux$11199_Y ;
  assign \$procmux$11205_CMP  = \$404y ;
  assign \$iRXFIFOClear$407  = \$procmux$11206_Y ;
  assign \$iRXFIFOD$416  = \$procmux$11210_Y ;
  assign \$procmux$11214_CMP  = rx_State;
  assign \$iRXFIFOWrite$415  = \$procmux$11213_Y ;
  assign \$iRXFIFOClear$414  = \$procmux$11217_Y ;
  assign \$procmux$11222_CMP  = \$395y ;
  assign \$tx_State$396  = \$procmux$11223_Y ;
  assign \$tx_State$401  = \$procmux$11225_Y ;
  assign \$procmux$11237_CMP  = \$392y ;
  assign \$tx_State$394  = \$procmux$11238_Y ;
  assign \$procmux$11245_CMP  = \$392y ;
  assign \$iTXStart$393  = \$procmux$11246_Y ;
  assign \$iTXRunning$400  = \$procmux$11250_Y ;
  assign \$iTXStart$399  = \$procmux$11254_Y ;
  assign \$iTXFIFORead$398  = \$procmux$11261_Y ;
  assign \$iTSR$397  = \$procmux$11265_Y ;
  assign \$procmux$11268_CMP  = \$310y ;
  assign \$iSCR$311  = \$procmux$11267_Y ;
  assign \$procmux$11270_CMP  = \$305y ;
  assign \$procmux$11273_CMP  = \$304y ;
  assign \$iMSR_dDCD$306  = \$procmux$11272_Y ;
  assign \$procmux$11277_CMP  = \$304y ;
  assign \$iMSR_dDCD$307  = \$procmux$11276_Y ;
  assign \$procmux$11279_CMP  = \$299y ;
  assign \$procmux$11282_CMP  = \$298y ;
  assign \$iMSR_TERI$300  = \$procmux$11281_Y ;
  assign \$procmux$11286_CMP  = \$298y ;
  assign \$iMSR_TERI$301  = \$procmux$11285_Y ;
  assign \$procmux$11288_CMP  = \$295y ;
  assign \$procmux$11291_CMP  = \$294y ;
  assign \$iMSR_dDSR$296  = \$procmux$11290_Y ;
  assign \$procmux$11295_CMP  = \$294y ;
  assign \$iMSR_dDSR$297  = \$procmux$11294_Y ;
  assign \$procmux$11297_CMP  = \$289y ;
  assign \$procmux$11300_CMP  = \$288y ;
  assign \$iMSR_dCTS$290  = \$procmux$11299_Y ;
  assign \$procmux$11304_CMP  = \$288y ;
  assign \$iMSR_dCTS$291  = \$procmux$11303_Y ;
  assign \$procmux$11306_CMP  = \$210y ;
  assign \$procmux$11309_CMP  = \$206y ;
  assign \$procmux$11312_CMP  = \$203y ;
  assign \$iFECounter$212  = \$procmux$11311_Y ;
  assign \$procmux$11316_CMP  = \$206y ;
  assign \$procmux$11319_CMP  = \$203y ;
  assign \$iFECounter$213  = \$procmux$11318_Y ;
  assign \$procmux$11323_CMP  = \$203y ;
  assign \$iFECounter$214  = \$procmux$11322_Y ;
  assign \$procmux$11325_CMP  = \$200y ;
  assign \$procmux$11328_CMP  = \$197y ;
  assign \$iLSR_FIFOERR$201  = \$procmux$11327_Y ;
  assign \$procmux$11332_CMP  = \$197y ;
  assign \$iLSR_FIFOERR$202  = \$procmux$11331_Y ;
  assign \$procmux$11334_CMP  = \$194y ;
  assign \$procmux$11337_CMP  = \$193y ;
  assign \$iLSR_BI$195  = \$procmux$11336_Y ;
  assign \$procmux$11341_CMP  = \$193y ;
  assign \$iLSR_BI$196  = \$procmux$11340_Y ;
  assign \$procmux$11343_CMP  = \$190y ;
  assign \$procmux$11346_CMP  = \$189y ;
  assign \$iLSR_FE$191  = \$procmux$11345_Y ;
  assign \$procmux$11350_CMP  = \$189y ;
  assign \$iLSR_FE$192  = \$procmux$11349_Y ;
  assign \$procmux$11352_CMP  = \$186y ;
  assign \$procmux$11355_CMP  = \$185y ;
  assign \$iLSR_PE$187  = \$procmux$11354_Y ;
  assign \$procmux$11359_CMP  = \$185y ;
  assign \$iLSR_PE$188  = \$procmux$11358_Y ;
  assign \$procmux$11361_CMP  = \$182y ;
  assign \$procmux$11364_CMP  = \$181y ;
  assign \$iLSR_OE$183  = \$procmux$11363_Y ;
  assign \$procmux$11368_CMP  = \$181y ;
  assign \$iLSR_OE$184  = \$procmux$11367_Y ;
  assign \$procmux$11370_CMP  = \$167y ;
  assign \$iMCR[5:0]$168  = \$procmux$11369_Y ;
  assign \$procmux$11372_CMP  = \$163y ;
  assign \$iLCR$164  = \$procmux$11371_Y ;
  assign \$procmux$11375_CMP  = \$153y ;
  assign \$procmux$11377_CMP  = \$132y ;
  assign \$iFCR_TXFIFOReset$154  = \$procmux$11376_Y ;
  assign \$procmux$11380_CMP  = \$143y ;
  assign \$procmux$11382_CMP  = \$132y ;
  assign \$iFCR_RXFIFOReset$144  = \$procmux$11381_Y ;
  assign \$procmux$11384_CMP  = \$133y ;
  assign \$procmux$11386_CMP  = \$132y ;
  assign \$iFCR_FIFO64E$134  = \$procmux$11385_Y ;
  assign \$procmux$11389_CMP  = \$132y ;
  assign \$iFCR_RXTrigger$160  = \$procmux$11388_Y ;
  assign \$procmux$11392_CMP  = \$132y ;
  assign \$iFCR_FIFO64E$159  = \$procmux$11391_Y ;
  assign \$procmux$11395_CMP  = \$132y ;
  assign \$iFCR_DMAMode$158  = \$procmux$11394_Y ;
  assign \$procmux$11398_CMP  = \$132y ;
  assign \$iFCR_TXFIFOReset$157  = \$procmux$11397_Y ;
  assign \$procmux$11401_CMP  = \$132y ;
  assign \$iFCR_RXFIFOReset$156  = \$procmux$11400_Y ;
  assign \$procmux$11404_CMP  = \$132y ;
  assign \$iFCR_FIFOEnable$155  = \$procmux$11403_Y ;
  assign \$procmux$11408_CMP  = \$124y ;
  assign \$iCharTimeout$129  = \$procmux$11407_Y ;
  assign \$procmux$11411_CMP  = \$126y ;
  assign \$procmux$11414_CMP  = \$125y ;
  assign \$procmux$11416_CMP  = \$124y ;
  assign \$iCharTimeout$127  = \$procmux$11415_Y ;
  assign \$procmux$11421_CMP  = \$125y ;
  assign \$procmux$11423_CMP  = \$124y ;
  assign \$iCharTimeout$128  = \$procmux$11422_Y ;
  assign \$procmux$11425_CMP  = \$120y ;
  assign \$procmux$11428_CMP  = \$115y ;
  assign \$iTimeoutCount$122  = \$procmux$11427_Y ;
  assign \$procmux$11432_CMP  = \$115y ;
  assign \$iTimeoutCount$123  = \$procmux$11431_Y ;
  assign \$procmux$11434_CMP  = \$97y ;
  assign \$procmux$11437_CMP  = \$92y ;
  assign \$iTHRInterrupt$98  = \$procmux$11436_Y ;
  assign \$procmux$11441_CMP  = \$92y ;
  assign \$iTHRInterrupt$99  = \$procmux$11440_Y ;
  assign \$procmux$11443_CMP  = \$80y ;
  assign \$iIER[3:0]$81  = \$procmux$11442_Y ;
  assign \$procmux$11446_CMP  = \$76y ;
  assign \$iDLM$77  = \$procmux$11445_Y ;
  assign \$procmux$11448_CMP  = \$74y ;
  assign \$iDLL$75  = \$procmux$11447_Y ;
  assign \$0y  = PSEL;
  assign \$1y  = PENABLE;
  assign \$3y  = PWRITE;
  assign \$6y  = PSEL;
  assign \$7y  = PENABLE;
  assign \$14y  = iRead;
  assign \$44y  = iRead;
  assign \$48y  = iWrite;
  assign \$52y  = iWrite;
  assign \$56y  = iWrite;
  assign \$60y  = iRead;
  assign \$68y  = iWrite;
  assign \$26y  = iWrite;
  assign \$29y  = iLCR_DLAB;
  assign \$74y  = iDLLWrite;
  assign \$84y  = iLSR_THRERE;
  assign \$85y  = iFCR_TXFIFOReset;
  assign \$20y  = iWrite;
  assign \$32y  = iWrite;
  assign \$35y  = iLCR_DLAB;
  assign \$38y  = iWrite;
  assign \$64y  = iRead;
  assign \$76y  = iDLMWrite;
  assign \$87y  = iIERWrite;
  assign \$88y  = PWDATA[1];
  assign \$246y  = iTXFIFOEmpty;
  assign \$90y  = iLSR_THRE;
  assign \$93y  = iIIRRead;
  assign \$96y  = iTHRWrite;
  assign \$243y  = iRXFIFOWrite;
  assign \$101y  = iLSR_DR;
  assign \$103y  = iFCR_FIFOEnable;
  assign \$334y  = iRXFIFOUsage[2];
  assign \$335y  = iRXFIFOUsage[3];
  assign \$340y  = iRXFIFOUsage[3];
  assign \$344y  = iRXFIFOUsage[3];
  assign \$346y  = iRXFIFOUsage[2];
  assign \$348y  = iRXFIFOUsage[1];
  assign \$351y  = iRXFIFO16Full;
  assign \$359y  = iRXFIFOUsage[5];
  assign \$358y  = iRXFIFOUsage[4];
  assign \$364y  = iRXFIFOUsage[5];
  assign \$368y  = iRXFIFOUsage[5];
  assign \$370y  = iRXFIFOUsage[4];
  assign \$372y  = iRXFIFOUsage[3];
  assign \$375y  = iRXFIFO64Full;
  assign \$104y  = iRXFIFOTrigger;
  assign \$111y  = iRXFIFOEmpty;
  assign \$112y  = iRBRRead;
  assign \$114y  = iRXFIFOWrite;
  assign \$117y  = iBaudtick2x;
  assign \$124y  = iFCR_FIFOEnable;
  assign \$126y  = iTimeoutCount[5];
  assign \$132y  = iFCRWrite;
  assign \$133y  = iLCR_DLAB;
  assign \$137y  = PWDATA[0];
  assign \$135y  = PWDATA[1];
  assign \$140y  = iFCR_FIFOEnable;
  assign \$147y  = PWDATA[0];
  assign \$145y  = PWDATA[2];
  assign \$150y  = iFCR_FIFOEnable;
  assign \$163y  = iLCRWrite;
  assign \$167y  = iMCRWrite;
  assign \$80y  = iIERWrite;
  assign \$125y  = iRBRRead;
  assign \$172y  = iLSR_DR;
  assign \$174y  = iRXFinished;
  assign \$176y  = iFCR_FIFOEnable;
  assign \$177y  = iRXFIFOFull;
  assign \$179y  = iRXFinished;
  assign \$182y  = iLSRRead;
  assign \$185y  = iPERE;
  assign \$186y  = iLSRRead;
  assign \$189y  = iFERE;
  assign \$190y  = iLSRRead;
  assign \$193y  = iBIRE;
  assign \$194y  = iLSRRead;
  assign \$198y  = iRXFIFOEmpty;
  assign \$203y  = iRXFIFOClear;
  assign \$227y  = iRXFIFOWrite;
  assign \$204y  = iFEIncrement;
  assign \$234y  = iPERE;
  assign \$235y  = iFERE;
  assign \$237y  = iBIRE;
  assign \$209y  = iFEDecrement;
  assign \$216y  = iRXFIFOQ[8];
  assign \$220y  = iRXFIFOQ[9];
  assign \$224y  = iRXFIFOQ[10];
  assign \$249y  = iLSR_THRE;
  assign \$252y  = iMCR_LOOP;
  assign \$253y  = iRTS;
  assign \$260y  = iMCR_LOOP;
  assign \$261y  = iMCR_DTR;
  assign \$268y  = iMCR_LOOP;
  assign \$269y  = iMCR_OUT1;
  assign \$276y  = iMCR_LOOP;
  assign \$277y  = iMCR_OUT2;
  assign \$286y  = iCTSnRE;
  assign \$287y  = iCTSnFE;
  assign \$289y  = iMSRRead;
  assign \$292y  = iDSRnRE;
  assign \$293y  = iDSRnFE;
  assign \$295y  = iMSRRead;
  assign \$298y  = iRInFE;
  assign \$299y  = iMSRRead;
  assign \$302y  = iDCDnRE;
  assign \$303y  = iDCDnFE;
  assign \$305y  = iMSRRead;
  assign \$310y  = iSCRWrite;
  assign \$315y  = iTXFIFOEmpty;
  assign \$317y  = iFCR_FIFOEnable;
  assign \$321y  = iTHRWrite;
  assign \$324y  = iFCR_TXFIFOReset;
  assign \$326y  = iRBRRead;
  assign \$384y  = iMCR_AFE;
  assign \$385y  = iMSR_CTS;
  assign \$392y  = iTXEnable;
  assign \$395y  = iTXFinished;
  assign \$404y  = iRXFinished;
  assign \$421y  = iMCR_AFE;
  assign \$422y  = iRXFIFOTrigger;
  assign \$425y  = iMCR_RTS;
  assign \$427y  = iMCR_AFE;
  assign \$428y  = iRXFIFOEmpty;
  assign \$438y  = iMCR_LOOP;
  assign \$442y  = iMCR_LOOP;
  assign \$446y  = iMCR_LOOP;
  assign \$450y  = iMCR_LOOP;
  assign \$454y  = iMCR_LOOP;
  assign \$455y  = iSOUT;
  assign \$73y  = RSTN;
  assign \$83y  = RSTN;
  assign \$79y  = RSTN;
  assign \$131y  = RSTN;
  assign \$162y  = RSTN;
  assign \$110y  = RSTN;
  assign \$166y  = RSTN;
  assign \$170y  = RSTN;
  assign \$285y  = RSTN;
  assign \$309y  = RSTN;
  assign \$391y  = RSTN;
  assign \$403y  = RSTN;
  assign \$419y  = RSTN;
  assign \$435y  = RSTN;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$0y ;
  wire \$10y ;
  wire \$12y ;
  wire \$13y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$9y ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [40:0] async_data;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [40:0] dst_data_o;
  wire [40:0] dst_data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [40:0] src_data_i;
  wire [40:0] src_data_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:111.35-111.53" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(s_src_isolate_req),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:111.21-111.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(src_valid_i),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(dst_rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:118.38-118.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(s_src_isolate_req),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:118.24-118.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(s_src_ready),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:131.35-131.53" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(s_dst_isolate_req),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:131.21-131.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(dst_ready_i),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:137.38-137.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(s_dst_isolate_req),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:137.24-137.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(s_dst_valid),
    .B(\$6y ),
    .Y(\$7y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(src_rst_ni),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$5y ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$1y )
  );
  assign src_ready_o = \$3y ;
  assign dst_valid_o = \$7y ;
  assign src_clear_pending_o = s_src_isolate_req;
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign \$10y  = src_rst_ni;
  assign \$13y  = dst_rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:54.8" */
module \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp (src_rst_ni, src_clk_i, src_clear_i, src_data_i, src_valid_i, src_ready_o, dst_rst_ni, dst_clk_i, dst_clear_i, dst_clear_pending_o, dst_data_o, dst_valid_o, dst_ready_i, src_clear_pending_o);
  wire \$0y ;
  wire \$10y ;
  wire \$12y ;
  wire \$13y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$9y ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:88.35" */
  wire async_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:89.31" */
  wire [33:0] async_data;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:87.35" */
  wire async_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:69.16" */
  input dst_clear_i;
  wire dst_clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:70.16" */
  output dst_clear_pending_o;
  wire dst_clear_pending_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:68.16" */
  input dst_clk_i;
  wire dst_clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:71.16" */
  output [33:0] dst_data_o;
  wire [33:0] dst_data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:73.16" */
  input dst_ready_i;
  wire dst_ready_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:67.16" */
  input dst_rst_ni;
  wire dst_rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:72.16" */
  output dst_valid_o;
  wire dst_valid_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:81.16" */
  wire s_dst_clear_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:80.16" */
  wire s_dst_clear_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:84.16" */
  wire s_dst_isolate_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:83.16" */
  wire s_dst_isolate_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:82.16" */
  wire s_dst_valid;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:76.16" */
  wire s_src_clear_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:75.16" */
  wire s_src_clear_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:79.16" */
  wire s_src_isolate_ack_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:78.16" */
  wire s_src_isolate_req;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:77.16" */
  wire s_src_ready;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:61.16" */
  input src_clear_i;
  wire src_clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:62.16" */
  output src_clear_pending_o;
  wire src_clear_pending_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:60.16" */
  input src_clk_i;
  wire src_clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:63.16" */
  input [33:0] src_data_i;
  wire [33:0] src_data_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:65.16" */
  output src_ready_o;
  wire src_ready_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:59.16" */
  input src_rst_ni;
  wire src_rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:64.16" */
  input src_valid_i;
  wire src_valid_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:111.35-111.53" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(s_src_isolate_req),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:111.21-111.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(src_valid_i),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(dst_rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:118.38-118.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(s_src_isolate_req),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:118.24-118.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(s_src_ready),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:131.35-131.53" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(s_dst_isolate_req),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:131.21-131.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(dst_ready_i),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:137.38-137.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(s_dst_isolate_req),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:137.24-137.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(s_dst_valid),
    .B(\$6y ),
    .Y(\$7y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(src_rst_ni),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_clear_req),
    .Q(s_dst_clear_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_dst_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(dst_rst_ni),
    .CLK(dst_clk_i),
    .D(s_dst_isolate_req),
    .Q(s_dst_isolate_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_clear_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_clear_req),
    .Q(s_src_clear_ack_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:162.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_src_isolate_ack_q  (
    .AD(1'h0),
    .ALOAD(src_rst_ni),
    .CLK(src_clk_i),
    .D(s_src_isolate_req),
    .Q(s_src_isolate_ack_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:143.5" */
  \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr  i_cdc_reset_ctrlr (
    .a_clear_ack_i(s_src_clear_ack_q),
    .a_clear_i(src_clear_i),
    .a_clear_o(s_src_clear_req),
    .a_clk_i(src_clk_i),
    .a_isolate_ack_i(s_src_isolate_ack_q),
    .a_isolate_o(s_src_isolate_req),
    .a_rst_ni(src_rst_ni),
    .b_clear_ack_i(s_dst_clear_ack_q),
    .b_clear_i(dst_clear_i),
    .b_clear_o(s_dst_clear_req),
    .b_clk_i(dst_clk_i),
    .b_isolate_ack_i(s_dst_isolate_ack_q),
    .b_isolate_o(s_dst_isolate_req),
    .b_rst_ni(dst_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:125.5" */
  \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst  i_dst (
    .async_ack_o(async_ack),
    .async_data_i(async_data),
    .async_req_i(async_req),
    .clear_i(s_dst_clear_req),
    .clk_i(dst_clk_i),
    .data_o(dst_data_o),
    .ready_i(\$5y ),
    .rst_ni(dst_rst_ni),
    .valid_o(s_dst_valid)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:106.5" */
  \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src  i_src (
    .async_ack_i(async_ack),
    .async_data_o(async_data),
    .async_req_o(async_req),
    .clear_i(s_src_clear_req),
    .clk_i(src_clk_i),
    .data_i(src_data_i),
    .ready_o(s_src_ready),
    .rst_ni(src_rst_ni),
    .valid_i(\$1y )
  );
  assign src_ready_o = \$3y ;
  assign dst_valid_o = \$7y ;
  assign src_clear_pending_o = s_src_isolate_req;
  assign dst_clear_pending_o = s_dst_isolate_req;
  assign \$10y  = src_rst_ni;
  assign \$13y  = dst_rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst (clk_i, rst_ni, data_o, clear_i, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$1y ;
  wire \$2y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  wire \$ack_dst_d$3 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  wire \$ack_dst_d$4 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  wire [40:0] \$data_dst_d$9 ;
  wire [40:0] \$procmux$1969_Y ;
  wire \$procmux$1970_CMP ;
  wire \$procmux$1971_Y ;
  wire \$procmux$1972_CMP ;
  wire \$procmux$1974_Y ;
  wire \$procmux$1975_CMP ;
  wire \$procmux$1978_Y ;
  wire \$procmux$1979_CMP ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [40:0] async_data_i;
  wire [40:0] async_data_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  wire [40:0] data_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [40:0] data_dst_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [40:0] data_o;
  wire [40:0] data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:306.18-306.36" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:335.21-335.47" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:307.19-307.29" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(ack_dst_q),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.9-315.36" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.40-315.48" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(valid_o),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.9-315.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$data_dst_q.addr  (
    .CLK(clk_i),
    .D(data_dst_d[40:34]),
    .Q(data_dst_q[40:34])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_dst_q.data  (
    .CLK(clk_i),
    .D(data_dst_d[31:0]),
    .Q(data_dst_q[31:0])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_dst_q.op  (
    .CLK(clk_i),
    .D(data_dst_d[33:32]),
    .Q(data_dst_q[33:32])
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$1969  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$procmux$1970_CMP ),
    .Y(\$procmux$1969_Y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:307.7-307.30|rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1971  (
    .A(ack_dst_q),
    .B(\$2y ),
    .S(\$procmux$1972_CMP ),
    .Y(\$procmux$1971_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1974  (
    .A(\$procmux$1971_Y ),
    .B(1'hx),
    .S(\$procmux$1975_CMP ),
    .Y(\$procmux$1974_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1978  (
    .A(\$ack_dst_d$3 ),
    .B(1'h0),
    .S(\$procmux$1979_CMP ),
    .Y(\$procmux$1978_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$4 ;
  assign data_dst_d = \$data_dst_d$9 ;
  assign valid_o = \$14y ;
  assign data_o = data_dst_q;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$1970_CMP  = \$8y ;
  assign \$data_dst_d$9  = \$procmux$1969_Y ;
  assign \$procmux$1972_CMP  = \$1y ;
  assign \$procmux$1975_CMP  = clear_i;
  assign \$ack_dst_d$3  = \$procmux$1974_Y ;
  assign \$procmux$1979_CMP  = clear_i;
  assign \$ack_dst_d$4  = \$procmux$1978_Y ;
  assign \$13y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:269.8" */
module \cdc_2phase_dst_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst (clk_i, rst_ni, data_o, clear_i, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$1y ;
  wire \$2y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  wire \$ack_dst_d$3 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  wire \$ack_dst_d$4 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  wire [33:0] \$data_dst_d$9 ;
  wire [33:0] \$procmux$1940_Y ;
  wire \$procmux$1941_CMP ;
  wire \$procmux$1942_Y ;
  wire \$procmux$1943_CMP ;
  wire \$procmux$1945_Y ;
  wire \$procmux$1946_CMP ;
  wire \$procmux$1949_Y ;
  wire \$procmux$1950_CMP ;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.8" */
  wire ack_dst_d;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.19" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:280.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:281.16" */
  input [33:0] async_data_i;
  wire [33:0] async_data_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:279.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:275.16" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:274.16" */
  input clk_i;
  wire clk_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:288.5" */
  wire [33:0] data_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:288.17" */
  wire [33:0] data_dst_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:276.16" */
  output [33:0] data_o;
  wire [33:0] data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:278.16" */
  input ready_i;
  wire ready_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.30" */
  wire req_synced;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:286.42" */
  wire req_synced_q1;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:273.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:277.16" */
  output valid_o;
  wire valid_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:306.18-306.36" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(valid_o),
    .B(ready_i),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:335.21-335.47" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(ack_dst_q),
    .B(req_synced_q1),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:307.19-307.29" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(ack_dst_q),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.9-315.36" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(req_synced),
    .B(req_synced_q1),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.40-315.48" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(valid_o),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:315.9-315.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_dst_q.data  (
    .CLK(clk_i),
    .D(data_dst_d[33:2]),
    .Q(data_dst_q[33:2])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_dst_q.resp  (
    .CLK(clk_i),
    .D(data_dst_d[1:0]),
    .Q(data_dst_q[1:0])
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:322.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_synced_q1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_synced),
    .Q(req_synced_q1)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:316.7-316.33|rtl/common_cells/cdc_2phase_clearable.sv:315.5-317.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$1940  (
    .A(data_dst_q),
    .B(async_data_i),
    .S(\$procmux$1941_CMP ),
    .Y(\$procmux$1940_Y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:307.7-307.30|rtl/common_cells/cdc_2phase_clearable.sv:306.14-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1942  (
    .A(ack_dst_q),
    .B(\$2y ),
    .S(\$procmux$1943_CMP ),
    .Y(\$procmux$1942_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1945  (
    .A(\$procmux$1942_Y ),
    .B(1'hx),
    .S(\$procmux$1946_CMP ),
    .Y(\$procmux$1945_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:305.7-305.24|rtl/common_cells/cdc_2phase_clearable.sv:304.5-308.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1949  (
    .A(\$ack_dst_d$3 ),
    .B(1'h0),
    .S(\$procmux$1950_CMP ),
    .Y(\$procmux$1949_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:294.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$4 ;
  assign data_dst_d = \$data_dst_d$9 ;
  assign valid_o = \$14y ;
  assign data_o = data_dst_q;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$1941_CMP  = \$8y ;
  assign \$data_dst_d$9  = \$procmux$1940_Y ;
  assign \$procmux$1943_CMP  = \$1y ;
  assign \$procmux$1946_CMP  = clear_i;
  assign \$ack_dst_d$3  = \$procmux$1945_Y ;
  assign \$procmux$1950_CMP  = clear_i;
  assign \$ack_dst_d$4  = \$procmux$1949_Y ;
  assign \$13y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src (clk_i, rst_ni, data_i, clear_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$10y ;
  wire \$11y ;
  wire \$1y ;
  wire \$2y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [40:0] \$data_src_d$4 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire [40:0] \$data_src_d$6 ;
  wire [40:0] \$procmux$1980_Y ;
  wire \$procmux$1981_CMP ;
  wire [40:0] \$procmux$1983_Y ;
  wire \$procmux$1984_CMP ;
  wire \$procmux$1985_Y ;
  wire \$procmux$1986_CMP ;
  wire \$procmux$1988_Y ;
  wire \$procmux$1989_CMP ;
  wire \$procmux$1992_Y ;
  wire \$procmux$1993_CMP ;
  wire [40:0] \$procmux$1996_Y ;
  wire \$procmux$1997_CMP ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire \$req_src_d$3 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire \$req_src_d$5 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [40:0] async_data_o;
  wire [40:0] async_data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [40:0] data_i;
  wire [40:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  wire [40:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [40:0] data_src_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.18-237.36" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:254.21-254.44" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:238.20-238.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(req_src_q),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(rst_ni),
    .Y(\$9y )
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$data_src_q.addr  (
    .CLK(clk_i),
    .D(data_src_d[40:34]),
    .Q(data_src_q[40:34])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_src_q.data  (
    .CLK(clk_i),
    .D(data_src_d[31:0]),
    .Q(data_src_q[31:0])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q.op  (
    .CLK(clk_i),
    .D(data_src_d[33:32]),
    .Q(data_src_q[33:32])
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$1980  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$1981_CMP ),
    .Y(\$procmux$1980_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$1983  (
    .A(\$procmux$1980_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$1984_CMP ),
    .Y(\$procmux$1983_Y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1985  (
    .A(req_src_q),
    .B(\$2y ),
    .S(\$procmux$1986_CMP ),
    .Y(\$procmux$1985_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1988  (
    .A(\$procmux$1985_Y ),
    .B(1'hx),
    .S(\$procmux$1989_CMP ),
    .Y(\$procmux$1988_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1992  (
    .A(\$req_src_d$3 ),
    .B(1'h0),
    .S(\$procmux$1993_CMP ),
    .Y(\$procmux$1992_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$1996  (
    .A(\$data_src_d$4 ),
    .B(data_src_q),
    .S(\$procmux$1997_CMP ),
    .Y(\$procmux$1996_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$5 ;
  assign data_src_d = \$data_src_d$6 ;
  assign ready_o = \$11y ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$procmux$1981_CMP  = \$1y ;
  assign \$procmux$1984_CMP  = clear_i;
  assign \$data_src_d$4  = \$procmux$1983_Y ;
  assign \$procmux$1986_CMP  = \$1y ;
  assign \$procmux$1989_CMP  = clear_i;
  assign \$req_src_d$3  = \$procmux$1988_Y ;
  assign \$procmux$1993_CMP  = clear_i;
  assign \$req_src_d$5  = \$procmux$1992_Y ;
  assign \$procmux$1997_CMP  = clear_i;
  assign \$data_src_d$6  = \$procmux$1996_Y ;
  assign \$10y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_2phase_clearable.sv:199.8" */
module \cdc_2phase_src_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src (clk_i, rst_ni, data_i, clear_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$10y ;
  wire \$11y ;
  wire \$1y ;
  wire \$2y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire [33:0] \$data_src_d$4 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire [33:0] \$data_src_d$6 ;
  wire [33:0] \$procmux$1951_Y ;
  wire \$procmux$1952_CMP ;
  wire [33:0] \$procmux$1954_Y ;
  wire \$procmux$1955_CMP ;
  wire \$procmux$1956_Y ;
  wire \$procmux$1957_CMP ;
  wire \$procmux$1959_Y ;
  wire \$procmux$1960_CMP ;
  wire \$procmux$1963_Y ;
  wire \$procmux$1964_CMP ;
  wire [33:0] \$procmux$1967_Y ;
  wire \$procmux$1968_CMP ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  wire \$req_src_d$3 ;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  wire \$req_src_d$5 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.32" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:210.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:211.16" */
  output [33:0] async_data_o;
  wire [33:0] async_data_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:209.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:205.16" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:204.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:206.16" */
  input [33:0] data_i;
  wire [33:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:217.5" */
  wire [33:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:217.17" */
  wire [33:0] data_src_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:208.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:215.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:203.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:207.16" */
  input valid_i;
  wire valid_i;
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.18-237.36" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(valid_i),
    .B(ready_o),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:254.21-254.44" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(req_src_q),
    .B(ack_synced),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:238.20-238.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(req_src_q),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(rst_ni),
    .Y(\$9y )
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_src_q.data  (
    .CLK(clk_i),
    .D(data_src_d[33:2]),
    .Q(data_src_q[33:2])
  );
  /* keep = "true" */
  \$dff  #(
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q.resp  (
    .CLK(clk_i),
    .D(data_src_d[1:0]),
    .Q(data_src_q[1:0])
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:245.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$1951  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$1952_CMP ),
    .Y(\$procmux$1951_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$1954  (
    .A(\$procmux$1951_Y ),
    .B(34'hxxxxxxxxx),
    .S(\$procmux$1955_CMP ),
    .Y(\$procmux$1954_Y )
  );
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:237.38-240.8|rtl/common_cells/cdc_2phase_clearable.sv:237.14-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1956  (
    .A(req_src_q),
    .B(\$2y ),
    .S(\$procmux$1957_CMP ),
    .Y(\$procmux$1956_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1959  (
    .A(\$procmux$1956_Y ),
    .B(1'hx),
    .S(\$procmux$1960_CMP ),
    .Y(\$procmux$1959_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1963  (
    .A(\$req_src_d$3 ),
    .B(1'h0),
    .S(\$procmux$1964_CMP ),
    .Y(\$procmux$1963_Y )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:235.7-235.25|rtl/common_cells/cdc_2phase_clearable.sv:234.5-240.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$1967  (
    .A(\$data_src_d$4 ),
    .B(data_src_q),
    .S(\$procmux$1968_CMP ),
    .Y(\$procmux$1967_Y )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_2phase_clearable.sv:222.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$5 ;
  assign data_src_d = \$data_src_d$6 ;
  assign ready_o = \$11y ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$procmux$1952_CMP  = \$1y ;
  assign \$procmux$1955_CMP  = clear_i;
  assign \$data_src_d$4  = \$procmux$1954_Y ;
  assign \$procmux$1957_CMP  = \$1y ;
  assign \$procmux$1960_CMP  = clear_i;
  assign \$req_src_d$3  = \$procmux$1959_Y ;
  assign \$procmux$1964_CMP  = clear_i;
  assign \$req_src_d$5  = \$procmux$1963_Y ;
  assign \$procmux$1968_CMP  = clear_i;
  assign \$data_src_d$6  = \$procmux$1967_Y ;
  assign \$10y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$16y ;
  wire \$17y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$2y ;
  wire \$6y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$ack_dst_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$ack_dst_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$ack_dst_d$7 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$data_valid$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$data_valid$4 ;
  wire [1:0] \$procmux$457_Y ;
  wire \$procmux$458_CMP ;
  wire [1:0] \$procmux$459_Y ;
  wire \$procmux$460_CMP ;
  wire \$procmux$462_Y ;
  wire \$procmux$463_CMP ;
  wire \$procmux$464_Y ;
  wire \$procmux$465_CMP ;
  wire [1:0] \$procmux$468_Y ;
  wire \$procmux$469_CMP ;
  wire [1:0] \$procmux$470_Y ;
  wire \$procmux$471_CMP ;
  wire \$procmux$474_Y ;
  wire \$procmux$475_CMP ;
  wire \$procmux$476_Y ;
  wire \$procmux$477_CMP ;
  wire [1:0] \$procmux$480_Y ;
  wire \$procmux$481_CMP ;
  wire \$procmux$483_CMP ;
  wire \$procmux$485_CMP ;
  wire [1:0] \$procmux$490_Y ;
  wire \$procmux$491_CMP ;
  wire [1:0] \$procmux$492_Y ;
  wire \$procmux$493_CMP ;
  wire [1:0] \$procmux$494_Y ;
  wire \$procmux$495_CMP ;
  wire [1:0] \$procmux$500_Y ;
  wire \$procmux$501_CMP ;
  wire [1:0] \$procmux$502_Y ;
  wire \$procmux$503_CMP ;
  wire \$procmux$508_Y ;
  wire \$procmux$509_CMP ;
  wire \$procmux$510_Y ;
  wire \$procmux$511_CMP ;
  wire \$procmux$515_Y ;
  wire \$procmux$516_CMP ;
  wire \$procmux$518_CMP ;
  wire \$procmux$521_Y ;
  wire \$procmux$522_CMP ;
  wire \$procmux$524_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$state_d$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$state_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$state_d$5 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$state_d$8 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(rst_ni),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(rst_ni),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.13-272.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(req_synced),
    .Y(\$9y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$457  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$457_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$459  (
    .A(2'hx),
    .B(\$procmux$457_Y ),
    .S(\$procmux$460_CMP ),
    .Y(\$procmux$459_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$460_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$460_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$462  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$462_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$464  (
    .A(1'hx),
    .B(\$procmux$462_Y ),
    .S(\$procmux$465_CMP ),
    .Y(\$procmux$464_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$465_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$465_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$468  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$469_CMP ),
    .Y(\$procmux$468_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$470  (
    .A(2'hx),
    .B(\$procmux$468_Y ),
    .S(\$procmux$471_CMP ),
    .Y(\$procmux$470_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$471_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$471_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$474  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$475_CMP ),
    .Y(\$procmux$474_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$476  (
    .A(1'hx),
    .B(\$procmux$474_Y ),
    .S(\$procmux$477_CMP ),
    .Y(\$procmux$476_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$477_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$477_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$480  (
    .A(2'h0),
    .B({ \$state_d$5 , \$state_d$8 , \$state_d$11  }),
    .S({ \$procmux$485_CMP , \$procmux$483_CMP , \$procmux$481_CMP  }),
    .Y(\$procmux$480_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$481_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$481_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$483_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$483_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$485_CMP0  (
    .A(state_q),
    .Y(\$procmux$485_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:255.13-255.41|rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$490  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$491_CMP ),
    .Y(\$procmux$490_Y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$492  (
    .A(2'hx),
    .B(\$procmux$490_Y ),
    .S(\$procmux$493_CMP ),
    .Y(\$procmux$492_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$494  (
    .A(2'hx),
    .B(\$procmux$492_Y ),
    .S(\$procmux$495_CMP ),
    .Y(\$procmux$494_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$495_CMP0  (
    .A(state_q),
    .Y(\$procmux$495_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$500  (
    .A(state_q),
    .B(\$state_d$3 ),
    .S(\$procmux$501_CMP ),
    .Y(\$procmux$500_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$502  (
    .A(2'hx),
    .B(\$procmux$500_Y ),
    .S(\$procmux$503_CMP ),
    .Y(\$procmux$502_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$503_CMP0  (
    .A(state_q),
    .Y(\$procmux$503_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$508  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$509_CMP ),
    .Y(\$procmux$508_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$510  (
    .A(1'hx),
    .B(\$procmux$508_Y ),
    .S(\$procmux$511_CMP ),
    .Y(\$procmux$510_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$511_CMP0  (
    .A(state_q),
    .Y(\$procmux$511_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$515  (
    .A(1'h0),
    .B({ \$data_valid$4 , 1'h1 }),
    .S({ \$procmux$518_CMP , \$procmux$516_CMP  }),
    .Y(\$procmux$515_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$516_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$516_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$518_CMP0  (
    .A(state_q),
    .Y(\$procmux$518_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$521  (
    .A(1'h0),
    .B({ \$ack_dst_d$7 , \$ack_dst_d$10  }),
    .S({ \$procmux$524_CMP , \$procmux$522_CMP  }),
    .Y(\$procmux$521_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$522_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$522_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$524_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$524_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$12 ;
  assign data_valid = \$data_valid$13 ;
  assign state_d = \$state_d$14 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$458_CMP  = \$9y ;
  assign \$state_d$11  = \$procmux$459_Y ;
  assign \$procmux$463_CMP  = \$9y ;
  assign \$ack_dst_d$10  = \$procmux$464_Y ;
  assign \$procmux$469_CMP  = \$6y ;
  assign \$state_d$8  = \$procmux$470_Y ;
  assign \$procmux$475_CMP  = \$6y ;
  assign \$ack_dst_d$7  = \$procmux$476_Y ;
  assign \$state_d$14  = \$procmux$480_Y ;
  assign \$procmux$491_CMP  = \$2y ;
  assign \$procmux$493_CMP  = \$1y ;
  assign \$state_d$3  = \$procmux$494_Y ;
  assign \$procmux$501_CMP  = \$1y ;
  assign \$state_d$5  = \$procmux$502_Y ;
  assign \$procmux$509_CMP  = \$1y ;
  assign \$data_valid$4  = \$procmux$510_Y ;
  assign \$data_valid$13  = \$procmux$515_Y ;
  assign \$ack_dst_d$12  = \$procmux$521_Y ;
  assign \$1y  = req_synced;
  assign \$2y  = output_ready;
  assign \$6y  = output_ready;
  assign \$17y  = rst_ni;
  assign \$20y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$16y ;
  wire \$17y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$2y ;
  wire \$6y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$ack_dst_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$ack_dst_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$ack_dst_d$7 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$data_valid$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$data_valid$4 ;
  wire [1:0] \$procmux$308_Y ;
  wire \$procmux$309_CMP ;
  wire [1:0] \$procmux$310_Y ;
  wire \$procmux$311_CMP ;
  wire \$procmux$313_Y ;
  wire \$procmux$314_CMP ;
  wire \$procmux$315_Y ;
  wire \$procmux$316_CMP ;
  wire [1:0] \$procmux$319_Y ;
  wire \$procmux$320_CMP ;
  wire [1:0] \$procmux$321_Y ;
  wire \$procmux$322_CMP ;
  wire \$procmux$325_Y ;
  wire \$procmux$326_CMP ;
  wire \$procmux$327_Y ;
  wire \$procmux$328_CMP ;
  wire [1:0] \$procmux$331_Y ;
  wire \$procmux$332_CMP ;
  wire \$procmux$334_CMP ;
  wire \$procmux$336_CMP ;
  wire [1:0] \$procmux$341_Y ;
  wire \$procmux$342_CMP ;
  wire [1:0] \$procmux$343_Y ;
  wire \$procmux$344_CMP ;
  wire [1:0] \$procmux$345_Y ;
  wire \$procmux$346_CMP ;
  wire [1:0] \$procmux$351_Y ;
  wire \$procmux$352_CMP ;
  wire [1:0] \$procmux$353_Y ;
  wire \$procmux$354_CMP ;
  wire \$procmux$359_Y ;
  wire \$procmux$360_CMP ;
  wire \$procmux$361_Y ;
  wire \$procmux$362_CMP ;
  wire \$procmux$366_Y ;
  wire \$procmux$367_CMP ;
  wire \$procmux$369_CMP ;
  wire \$procmux$372_Y ;
  wire \$procmux$373_CMP ;
  wire \$procmux$375_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$state_d$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$state_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$state_d$5 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$state_d$8 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(rst_ni),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(rst_ni),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.13-272.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(req_synced),
    .Y(\$9y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$308  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$308_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$310  (
    .A(2'hx),
    .B(\$procmux$308_Y ),
    .S(\$procmux$311_CMP ),
    .Y(\$procmux$310_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$311_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$311_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$313  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$313_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$315  (
    .A(1'hx),
    .B(\$procmux$313_Y ),
    .S(\$procmux$316_CMP ),
    .Y(\$procmux$315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$316_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$316_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$319  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$320_CMP ),
    .Y(\$procmux$319_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$321  (
    .A(2'hx),
    .B(\$procmux$319_Y ),
    .S(\$procmux$322_CMP ),
    .Y(\$procmux$321_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$322_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$322_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$325  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$326_CMP ),
    .Y(\$procmux$325_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$327  (
    .A(1'hx),
    .B(\$procmux$325_Y ),
    .S(\$procmux$328_CMP ),
    .Y(\$procmux$327_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$328_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$328_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$331  (
    .A(2'h0),
    .B({ \$state_d$5 , \$state_d$8 , \$state_d$11  }),
    .S({ \$procmux$336_CMP , \$procmux$334_CMP , \$procmux$332_CMP  }),
    .Y(\$procmux$331_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$332_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$332_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$334_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$334_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$336_CMP0  (
    .A(state_q),
    .Y(\$procmux$336_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:255.13-255.41|rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$341  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$342_CMP ),
    .Y(\$procmux$341_Y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$343  (
    .A(2'hx),
    .B(\$procmux$341_Y ),
    .S(\$procmux$344_CMP ),
    .Y(\$procmux$343_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$345  (
    .A(2'hx),
    .B(\$procmux$343_Y ),
    .S(\$procmux$346_CMP ),
    .Y(\$procmux$345_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$346_CMP0  (
    .A(state_q),
    .Y(\$procmux$346_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$351  (
    .A(state_q),
    .B(\$state_d$3 ),
    .S(\$procmux$352_CMP ),
    .Y(\$procmux$351_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$353  (
    .A(2'hx),
    .B(\$procmux$351_Y ),
    .S(\$procmux$354_CMP ),
    .Y(\$procmux$353_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$354_CMP0  (
    .A(state_q),
    .Y(\$procmux$354_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$359  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$360_CMP ),
    .Y(\$procmux$359_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$361  (
    .A(1'hx),
    .B(\$procmux$359_Y ),
    .S(\$procmux$362_CMP ),
    .Y(\$procmux$361_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$362_CMP0  (
    .A(state_q),
    .Y(\$procmux$362_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$366  (
    .A(1'h0),
    .B({ \$data_valid$4 , 1'h1 }),
    .S({ \$procmux$369_CMP , \$procmux$367_CMP  }),
    .Y(\$procmux$366_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$367_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$367_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$369_CMP0  (
    .A(state_q),
    .Y(\$procmux$369_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$372  (
    .A(1'h0),
    .B({ \$ack_dst_d$7 , \$ack_dst_d$10  }),
    .S({ \$procmux$375_CMP , \$procmux$373_CMP  }),
    .Y(\$procmux$372_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$373_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$373_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$375_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$375_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$12 ;
  assign data_valid = \$data_valid$13 ;
  assign state_d = \$state_d$14 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$309_CMP  = \$9y ;
  assign \$state_d$11  = \$procmux$310_Y ;
  assign \$procmux$314_CMP  = \$9y ;
  assign \$ack_dst_d$10  = \$procmux$315_Y ;
  assign \$procmux$320_CMP  = \$6y ;
  assign \$state_d$8  = \$procmux$321_Y ;
  assign \$procmux$326_CMP  = \$6y ;
  assign \$ack_dst_d$7  = \$procmux$327_Y ;
  assign \$state_d$14  = \$procmux$331_Y ;
  assign \$procmux$342_CMP  = \$2y ;
  assign \$procmux$344_CMP  = \$1y ;
  assign \$state_d$3  = \$procmux$345_Y ;
  assign \$procmux$352_CMP  = \$1y ;
  assign \$state_d$5  = \$procmux$353_Y ;
  assign \$procmux$360_CMP  = \$1y ;
  assign \$data_valid$4  = \$procmux$361_Y ;
  assign \$data_valid$13  = \$procmux$366_Y ;
  assign \$ack_dst_d$12  = \$procmux$372_Y ;
  assign \$1y  = req_synced;
  assign \$2y  = output_ready;
  assign \$6y  = output_ready;
  assign \$17y  = rst_ni;
  assign \$20y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$16y ;
  wire \$17y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$2y ;
  wire \$6y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$ack_dst_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$ack_dst_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$ack_dst_d$7 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$data_valid$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$data_valid$4 ;
  wire [1:0] \$procmux$159_Y ;
  wire \$procmux$160_CMP ;
  wire [1:0] \$procmux$161_Y ;
  wire \$procmux$162_CMP ;
  wire \$procmux$164_Y ;
  wire \$procmux$165_CMP ;
  wire \$procmux$166_Y ;
  wire \$procmux$167_CMP ;
  wire [1:0] \$procmux$170_Y ;
  wire \$procmux$171_CMP ;
  wire [1:0] \$procmux$172_Y ;
  wire \$procmux$173_CMP ;
  wire \$procmux$176_Y ;
  wire \$procmux$177_CMP ;
  wire \$procmux$178_Y ;
  wire \$procmux$179_CMP ;
  wire [1:0] \$procmux$182_Y ;
  wire \$procmux$183_CMP ;
  wire \$procmux$185_CMP ;
  wire \$procmux$187_CMP ;
  wire [1:0] \$procmux$192_Y ;
  wire \$procmux$193_CMP ;
  wire [1:0] \$procmux$194_Y ;
  wire \$procmux$195_CMP ;
  wire [1:0] \$procmux$196_Y ;
  wire \$procmux$197_CMP ;
  wire [1:0] \$procmux$202_Y ;
  wire \$procmux$203_CMP ;
  wire [1:0] \$procmux$204_Y ;
  wire \$procmux$205_CMP ;
  wire \$procmux$210_Y ;
  wire \$procmux$211_CMP ;
  wire \$procmux$212_Y ;
  wire \$procmux$213_CMP ;
  wire \$procmux$217_Y ;
  wire \$procmux$218_CMP ;
  wire \$procmux$220_CMP ;
  wire \$procmux$223_Y ;
  wire \$procmux$224_CMP ;
  wire \$procmux$226_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$state_d$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$state_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$state_d$5 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$state_d$8 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(rst_ni),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(rst_ni),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.13-272.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(req_synced),
    .Y(\$9y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$159  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$159_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$161  (
    .A(2'hx),
    .B(\$procmux$159_Y ),
    .S(\$procmux$162_CMP ),
    .Y(\$procmux$161_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$162_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$162_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$164  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$164_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$166  (
    .A(1'hx),
    .B(\$procmux$164_Y ),
    .S(\$procmux$167_CMP ),
    .Y(\$procmux$166_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$167_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$167_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$170  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$171_CMP ),
    .Y(\$procmux$170_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$172  (
    .A(2'hx),
    .B(\$procmux$170_Y ),
    .S(\$procmux$173_CMP ),
    .Y(\$procmux$172_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$173_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$173_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$176  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$177_CMP ),
    .Y(\$procmux$176_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$178  (
    .A(1'hx),
    .B(\$procmux$176_Y ),
    .S(\$procmux$179_CMP ),
    .Y(\$procmux$178_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$179_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$179_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$182  (
    .A(2'h0),
    .B({ \$state_d$5 , \$state_d$8 , \$state_d$11  }),
    .S({ \$procmux$187_CMP , \$procmux$185_CMP , \$procmux$183_CMP  }),
    .Y(\$procmux$182_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$183_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$183_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$185_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$185_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$187_CMP0  (
    .A(state_q),
    .Y(\$procmux$187_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:255.13-255.41|rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$192  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$193_CMP ),
    .Y(\$procmux$192_Y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$194  (
    .A(2'hx),
    .B(\$procmux$192_Y ),
    .S(\$procmux$195_CMP ),
    .Y(\$procmux$194_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$196  (
    .A(2'hx),
    .B(\$procmux$194_Y ),
    .S(\$procmux$197_CMP ),
    .Y(\$procmux$196_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$197_CMP0  (
    .A(state_q),
    .Y(\$procmux$197_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$202  (
    .A(state_q),
    .B(\$state_d$3 ),
    .S(\$procmux$203_CMP ),
    .Y(\$procmux$202_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$204  (
    .A(2'hx),
    .B(\$procmux$202_Y ),
    .S(\$procmux$205_CMP ),
    .Y(\$procmux$204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$205_CMP0  (
    .A(state_q),
    .Y(\$procmux$205_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$210  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$211_CMP ),
    .Y(\$procmux$210_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$212  (
    .A(1'hx),
    .B(\$procmux$210_Y ),
    .S(\$procmux$213_CMP ),
    .Y(\$procmux$212_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$213_CMP0  (
    .A(state_q),
    .Y(\$procmux$213_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$217  (
    .A(1'h0),
    .B({ \$data_valid$4 , 1'h1 }),
    .S({ \$procmux$220_CMP , \$procmux$218_CMP  }),
    .Y(\$procmux$217_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$218_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$218_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$220_CMP0  (
    .A(state_q),
    .Y(\$procmux$220_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$223  (
    .A(1'h0),
    .B({ \$ack_dst_d$7 , \$ack_dst_d$10  }),
    .S({ \$procmux$226_CMP , \$procmux$224_CMP  }),
    .Y(\$procmux$223_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$224_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$224_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$226_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$226_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$12 ;
  assign data_valid = \$data_valid$13 ;
  assign state_d = \$state_d$14 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$160_CMP  = \$9y ;
  assign \$state_d$11  = \$procmux$161_Y ;
  assign \$procmux$165_CMP  = \$9y ;
  assign \$ack_dst_d$10  = \$procmux$166_Y ;
  assign \$procmux$171_CMP  = \$6y ;
  assign \$state_d$8  = \$procmux$172_Y ;
  assign \$procmux$177_CMP  = \$6y ;
  assign \$ack_dst_d$7  = \$procmux$178_Y ;
  assign \$state_d$14  = \$procmux$182_Y ;
  assign \$procmux$193_CMP  = \$2y ;
  assign \$procmux$195_CMP  = \$1y ;
  assign \$state_d$3  = \$procmux$196_Y ;
  assign \$procmux$203_CMP  = \$1y ;
  assign \$state_d$5  = \$procmux$204_Y ;
  assign \$procmux$211_CMP  = \$1y ;
  assign \$data_valid$4  = \$procmux$212_Y ;
  assign \$data_valid$13  = \$procmux$217_Y ;
  assign \$ack_dst_d$12  = \$procmux$223_Y ;
  assign \$1y  = req_synced;
  assign \$2y  = output_ready;
  assign \$6y  = output_ready;
  assign \$17y  = rst_ni;
  assign \$20y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:205.8" */
module \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst (clk_i, rst_ni, data_o, ready_i, valid_o, async_req_i, async_ack_o, async_data_i);
  wire \$16y ;
  wire \$17y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$2y ;
  wire \$6y ;
  wire \$9y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire \$ack_dst_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$ack_dst_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire \$ack_dst_d$7 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire \$data_valid$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire \$data_valid$4 ;
  wire [1:0] \$procmux$10_Y ;
  wire \$procmux$11_CMP ;
  wire [1:0] \$procmux$12_Y ;
  wire \$procmux$13_CMP ;
  wire \$procmux$15_Y ;
  wire \$procmux$16_CMP ;
  wire \$procmux$17_Y ;
  wire \$procmux$18_CMP ;
  wire [1:0] \$procmux$21_Y ;
  wire \$procmux$22_CMP ;
  wire [1:0] \$procmux$23_Y ;
  wire \$procmux$24_CMP ;
  wire \$procmux$27_Y ;
  wire \$procmux$28_CMP ;
  wire \$procmux$29_Y ;
  wire \$procmux$30_CMP ;
  wire [1:0] \$procmux$33_Y ;
  wire \$procmux$34_CMP ;
  wire \$procmux$36_CMP ;
  wire \$procmux$38_CMP ;
  wire [1:0] \$procmux$43_Y ;
  wire \$procmux$44_CMP ;
  wire [1:0] \$procmux$45_Y ;
  wire \$procmux$46_CMP ;
  wire [1:0] \$procmux$47_Y ;
  wire \$procmux$48_CMP ;
  wire [1:0] \$procmux$53_Y ;
  wire \$procmux$54_CMP ;
  wire [1:0] \$procmux$55_Y ;
  wire \$procmux$56_CMP ;
  wire \$procmux$61_Y ;
  wire \$procmux$62_CMP ;
  wire \$procmux$63_Y ;
  wire \$procmux$64_CMP ;
  wire \$procmux$68_Y ;
  wire \$procmux$69_CMP ;
  wire \$procmux$71_CMP ;
  wire \$procmux$74_Y ;
  wire \$procmux$75_CMP ;
  wire \$procmux$77_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  wire [1:0] \$state_d$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  wire [1:0] \$state_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  wire [1:0] \$state_d$5 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  wire [1:0] \$state_d$8 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.10" */
  wire ack_dst_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:221.21" */
  wire ack_dst_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:216.16" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:217.16" */
  input [1:0] async_data_i;
  wire [1:0] async_data_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:215.16" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:211.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:212.16" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:225.10" */
  wire data_valid;
  /* src = "rtl/common_cells/cdc_4phase.sv:227.10" */
  wire output_ready;
  /* src = "rtl/common_cells/cdc_4phase.sv:214.16" */
  input ready_i;
  wire ready_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:223.10" */
  wire req_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:210.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:231.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:213.16" */
  output valid_o;
  wire valid_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(rst_ni),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(rst_ni),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.13-272.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(req_synced),
    .Y(\$9y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:293.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$ack_dst_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ack_dst_d),
    .Q(ack_dst_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:284.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10  (
    .A(2'h0),
    .B(state_q),
    .S(req_synced),
    .Y(\$procmux$10_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12  (
    .A(2'hx),
    .B(\$procmux$10_Y ),
    .S(\$procmux$13_CMP ),
    .Y(\$procmux$12_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$13_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$13_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:272.33-275.12|rtl/common_cells/cdc_4phase.sv:272.9-275.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$15  (
    .A(1'h0),
    .B(1'h1),
    .S(req_synced),
    .Y(\$procmux$15_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$17  (
    .A(1'hx),
    .B(\$procmux$15_Y ),
    .S(\$procmux$18_CMP ),
    .Y(\$procmux$17_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$18_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$18_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$21  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$22_CMP ),
    .Y(\$procmux$21_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$23  (
    .A(2'hx),
    .B(\$procmux$21_Y ),
    .S(\$procmux$24_CMP ),
    .Y(\$procmux$23_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$24_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$24_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:264.35-267.12|rtl/common_cells/cdc_4phase.sv:264.9-267.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$27  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$28_CMP ),
    .Y(\$procmux$27_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$29  (
    .A(1'hx),
    .B(\$procmux$27_Y ),
    .S(\$procmux$30_CMP ),
    .Y(\$procmux$29_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$30_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$30_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$33  (
    .A(2'h0),
    .B({ \$state_d$5 , \$state_d$8 , \$state_d$11  }),
    .S({ \$procmux$38_CMP , \$procmux$36_CMP , \$procmux$34_CMP  }),
    .Y(\$procmux$33_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$34_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$34_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$36_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$36_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$38_CMP0  (
    .A(state_q),
    .Y(\$procmux$38_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:255.13-255.41|rtl/common_cells/cdc_4phase.sv:254.11-258.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$43  (
    .A(2'h1),
    .B(2'h2),
    .S(\$procmux$44_CMP ),
    .Y(\$procmux$43_Y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$45  (
    .A(2'hx),
    .B(\$procmux$43_Y ),
    .S(\$procmux$46_CMP ),
    .Y(\$procmux$45_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$47  (
    .A(2'hx),
    .B(\$procmux$45_Y ),
    .S(\$procmux$48_CMP ),
    .Y(\$procmux$47_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$48_CMP0  (
    .A(state_q),
    .Y(\$procmux$48_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$53  (
    .A(state_q),
    .B(\$state_d$3 ),
    .S(\$procmux$54_CMP ),
    .Y(\$procmux$53_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$55  (
    .A(2'hx),
    .B(\$procmux$53_Y ),
    .S(\$procmux$56_CMP ),
    .Y(\$procmux$55_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$56_CMP0  (
    .A(state_q),
    .Y(\$procmux$56_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:252.33-259.12|rtl/common_cells/cdc_4phase.sv:252.9-259.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$61  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$62_CMP ),
    .Y(\$procmux$61_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$63  (
    .A(1'hx),
    .B(\$procmux$61_Y ),
    .S(\$procmux$64_CMP ),
    .Y(\$procmux$63_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$64_CMP0  (
    .A(state_q),
    .Y(\$procmux$64_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$68  (
    .A(1'h0),
    .B({ \$data_valid$4 , 1'h1 }),
    .S({ \$procmux$71_CMP , \$procmux$69_CMP  }),
    .Y(\$procmux$68_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$69_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$69_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:252.9-259.12|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$71_CMP0  (
    .A(state_q),
    .Y(\$procmux$71_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$74  (
    .A(1'h0),
    .B({ \$ack_dst_d$7 , \$ack_dst_d$10  }),
    .S({ \$procmux$77_CMP , \$procmux$75_CMP  }),
    .Y(\$procmux$74_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:270.26-276.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$75_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$75_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:262.28-268.10|rtl/common_cells/cdc_4phase.sv:249.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$77_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$77_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:236.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_req_i),
    .serial_o(req_synced)
  );
  assign ack_dst_d = \$ack_dst_d$12 ;
  assign data_valid = \$data_valid$13 ;
  assign state_d = \$state_d$14 ;
  assign valid_o = data_valid;
  assign output_ready = ready_i;
  assign data_o = async_data_i;
  assign async_ack_o = ack_dst_q;
  assign \$procmux$11_CMP  = \$9y ;
  assign \$state_d$11  = \$procmux$12_Y ;
  assign \$procmux$16_CMP  = \$9y ;
  assign \$ack_dst_d$10  = \$procmux$17_Y ;
  assign \$procmux$22_CMP  = \$6y ;
  assign \$state_d$8  = \$procmux$23_Y ;
  assign \$procmux$28_CMP  = \$6y ;
  assign \$ack_dst_d$7  = \$procmux$29_Y ;
  assign \$state_d$14  = \$procmux$33_Y ;
  assign \$procmux$44_CMP  = \$2y ;
  assign \$procmux$46_CMP  = \$1y ;
  assign \$state_d$3  = \$procmux$47_Y ;
  assign \$procmux$54_CMP  = \$1y ;
  assign \$state_d$5  = \$procmux$55_Y ;
  assign \$procmux$62_CMP  = \$1y ;
  assign \$data_valid$4  = \$procmux$63_Y ;
  assign \$data_valid$13  = \$procmux$68_Y ;
  assign \$ack_dst_d$12  = \$procmux$74_Y ;
  assign \$1y  = req_synced;
  assign \$2y  = output_ready;
  assign \$6y  = output_ready;
  assign \$17y  = rst_ni;
  assign \$20y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$17y ;
  wire \$18y ;
  wire \$20y ;
  wire \$23y ;
  wire \$5y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$data_src_d$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$data_src_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$data_src_q$22 ;
  wire \$procmux$526_Y ;
  wire \$procmux$527_CMP ;
  wire \$procmux$528_Y ;
  wire \$procmux$529_CMP ;
  wire \$procmux$531_Y ;
  wire \$procmux$532_CMP ;
  wire \$procmux$533_Y ;
  wire \$procmux$534_CMP ;
  wire [1:0] \$procmux$536_Y ;
  wire \$procmux$537_CMP ;
  wire [1:0] \$procmux$538_Y ;
  wire \$procmux$539_CMP ;
  wire [1:0] \$procmux$542_Y ;
  wire \$procmux$543_CMP ;
  wire [1:0] \$procmux$544_Y ;
  wire \$procmux$545_CMP ;
  wire \$procmux$548_Y ;
  wire \$procmux$549_CMP ;
  wire \$procmux$550_Y ;
  wire \$procmux$551_CMP ;
  wire [1:0] \$procmux$554_Y ;
  wire \$procmux$555_CMP ;
  wire \$procmux$557_CMP ;
  wire \$procmux$559_CMP ;
  wire [1:0] \$procmux$563_Y ;
  wire \$procmux$564_CMP ;
  wire [1:0] \$procmux$565_Y ;
  wire \$procmux$566_CMP ;
  wire [1:0] \$procmux$570_Y ;
  wire \$procmux$571_CMP ;
  wire [1:0] \$procmux$572_Y ;
  wire \$procmux$573_CMP ;
  wire \$procmux$577_Y ;
  wire \$procmux$578_CMP ;
  wire \$procmux$579_Y ;
  wire \$procmux$580_CMP ;
  wire \$procmux$584_Y ;
  wire \$procmux$585_CMP ;
  wire \$procmux$588_Y ;
  wire \$procmux$589_CMP ;
  wire \$procmux$591_CMP ;
  wire [1:0] \$procmux$596_Y ;
  wire \$procmux$597_CMP ;
  wire \$procmux$601_Y ;
  wire \$procmux$602_CMP ;
  wire \$procmux$604_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$ready_o$1 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$ready_o$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$ready_o$15 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$ready_o$9 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$req_src_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$req_src_d$2 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$req_src_d$6 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$req_src_q$21 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$state_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$state_d$4 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$state_d$7 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.13-159.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(ack_synced),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$526  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$526_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$528  (
    .A(1'hx),
    .B(\$procmux$526_Y ),
    .S(\$procmux$529_CMP ),
    .Y(\$procmux$528_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$529_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$529_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$531  (
    .A(\$ready_o$9 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$531_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$533  (
    .A(1'hx),
    .B(\$procmux$531_Y ),
    .S(\$procmux$534_CMP ),
    .Y(\$procmux$533_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$534_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$534_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$536  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$536_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$538  (
    .A(2'hx),
    .B(\$procmux$536_Y ),
    .S(\$procmux$539_CMP ),
    .Y(\$procmux$538_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$539_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$539_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$542  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$543_CMP ),
    .Y(\$procmux$542_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$544  (
    .A(2'hx),
    .B(\$procmux$542_Y ),
    .S(\$procmux$545_CMP ),
    .Y(\$procmux$544_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$545_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$545_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$548  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$549_CMP ),
    .Y(\$procmux$548_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$550  (
    .A(1'hx),
    .B(\$procmux$548_Y ),
    .S(\$procmux$551_CMP ),
    .Y(\$procmux$550_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$551_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$551_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$554  (
    .A(2'h0),
    .B({ \$state_d$4 , \$state_d$7 , \$state_d$10  }),
    .S({ \$procmux$559_CMP , \$procmux$557_CMP , \$procmux$555_CMP  }),
    .Y(\$procmux$554_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$555_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$555_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$557_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$557_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$559_CMP0  (
    .A(state_q),
    .Y(\$procmux$559_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$563  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$564_CMP ),
    .Y(\$procmux$563_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$565  (
    .A(2'hx),
    .B(\$procmux$563_Y ),
    .S(\$procmux$566_CMP ),
    .Y(\$procmux$565_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$566_CMP0  (
    .A(state_q),
    .Y(\$procmux$566_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$570  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$571_CMP ),
    .Y(\$procmux$570_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$572  (
    .A(2'hx),
    .B(\$procmux$570_Y ),
    .S(\$procmux$573_CMP ),
    .Y(\$procmux$572_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$573_CMP0  (
    .A(state_q),
    .Y(\$procmux$573_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$577  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$578_CMP ),
    .Y(\$procmux$577_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$579  (
    .A(1'hx),
    .B(\$procmux$577_Y ),
    .S(\$procmux$580_CMP ),
    .Y(\$procmux$579_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$580_CMP0  (
    .A(state_q),
    .Y(\$procmux$580_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$584  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$585_CMP ),
    .Y(\$procmux$584_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$585_CMP0  (
    .A(state_q),
    .Y(\$procmux$585_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$588  (
    .A(1'h0),
    .B({ \$ready_o$1 , \$ready_o$11  }),
    .S({ \$procmux$591_CMP , \$procmux$589_CMP  }),
    .Y(\$procmux$588_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$589_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$589_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$591_CMP0  (
    .A(state_q),
    .Y(\$procmux$591_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$596  (
    .A(data_src_q),
    .B(\$data_src_d$3 ),
    .S(\$procmux$597_CMP ),
    .Y(\$procmux$596_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$597_CMP0  (
    .A(state_q),
    .Y(\$procmux$597_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$601  (
    .A(1'h0),
    .B({ \$req_src_d$2 , \$req_src_d$6  }),
    .S({ \$procmux$604_CMP , \$procmux$602_CMP  }),
    .Y(\$procmux$601_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$602_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$602_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$604_CMP0  (
    .A(state_q),
    .Y(\$procmux$604_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$12 ;
  assign data_src_d = \$data_src_d$13 ;
  assign state_d = \$state_d$14 ;
  assign ready_o = \$ready_o$15 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$data_src_q$22  = 2'h1;
  assign \$req_src_q$21  = 1'h1;
  assign \$procmux$527_CMP  = \$8y ;
  assign \$ready_o$9  = \$procmux$528_Y ;
  assign \$procmux$532_CMP  = \$8y ;
  assign \$ready_o$11  = \$procmux$533_Y ;
  assign \$procmux$537_CMP  = \$8y ;
  assign \$state_d$10  = \$procmux$538_Y ;
  assign \$procmux$543_CMP  = \$5y ;
  assign \$state_d$7  = \$procmux$544_Y ;
  assign \$procmux$549_CMP  = \$5y ;
  assign \$req_src_d$6  = \$procmux$550_Y ;
  assign \$state_d$14  = \$procmux$554_Y ;
  assign \$procmux$564_CMP  = valid_i;
  assign \$state_d$4  = \$procmux$565_Y ;
  assign \$procmux$571_CMP  = valid_i;
  assign \$data_src_d$3  = \$procmux$572_Y ;
  assign \$procmux$578_CMP  = valid_i;
  assign \$req_src_d$2  = \$procmux$579_Y ;
  assign \$ready_o$1  = \$procmux$584_Y ;
  assign \$ready_o$15  = \$procmux$588_Y ;
  assign \$data_src_d$13  = \$procmux$596_Y ;
  assign \$req_src_d$12  = \$procmux$601_Y ;
  assign \$18y  = rst_ni;
  assign \$23y  = rst_ni;
  assign \$5y  = ack_synced;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$17y ;
  wire \$18y ;
  wire \$20y ;
  wire \$23y ;
  wire \$5y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$data_src_d$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$data_src_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$data_src_q$22 ;
  wire \$procmux$377_Y ;
  wire \$procmux$378_CMP ;
  wire \$procmux$379_Y ;
  wire \$procmux$380_CMP ;
  wire \$procmux$382_Y ;
  wire \$procmux$383_CMP ;
  wire \$procmux$384_Y ;
  wire \$procmux$385_CMP ;
  wire [1:0] \$procmux$387_Y ;
  wire \$procmux$388_CMP ;
  wire [1:0] \$procmux$389_Y ;
  wire \$procmux$390_CMP ;
  wire [1:0] \$procmux$393_Y ;
  wire \$procmux$394_CMP ;
  wire [1:0] \$procmux$395_Y ;
  wire \$procmux$396_CMP ;
  wire \$procmux$399_Y ;
  wire \$procmux$400_CMP ;
  wire \$procmux$401_Y ;
  wire \$procmux$402_CMP ;
  wire [1:0] \$procmux$405_Y ;
  wire \$procmux$406_CMP ;
  wire \$procmux$408_CMP ;
  wire \$procmux$410_CMP ;
  wire [1:0] \$procmux$414_Y ;
  wire \$procmux$415_CMP ;
  wire [1:0] \$procmux$416_Y ;
  wire \$procmux$417_CMP ;
  wire [1:0] \$procmux$421_Y ;
  wire \$procmux$422_CMP ;
  wire [1:0] \$procmux$423_Y ;
  wire \$procmux$424_CMP ;
  wire \$procmux$428_Y ;
  wire \$procmux$429_CMP ;
  wire \$procmux$430_Y ;
  wire \$procmux$431_CMP ;
  wire \$procmux$435_Y ;
  wire \$procmux$436_CMP ;
  wire \$procmux$439_Y ;
  wire \$procmux$440_CMP ;
  wire \$procmux$442_CMP ;
  wire [1:0] \$procmux$447_Y ;
  wire \$procmux$448_CMP ;
  wire \$procmux$452_Y ;
  wire \$procmux$453_CMP ;
  wire \$procmux$455_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$ready_o$1 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$ready_o$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$ready_o$15 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$ready_o$9 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$req_src_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$req_src_d$2 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$req_src_d$6 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$req_src_q$21 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$state_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$state_d$4 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$state_d$7 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.13-159.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(ack_synced),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$377  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$377_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$379  (
    .A(1'hx),
    .B(\$procmux$377_Y ),
    .S(\$procmux$380_CMP ),
    .Y(\$procmux$379_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$380_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$380_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$382  (
    .A(\$ready_o$9 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$382_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$384  (
    .A(1'hx),
    .B(\$procmux$382_Y ),
    .S(\$procmux$385_CMP ),
    .Y(\$procmux$384_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$385_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$385_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$387  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$387_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$389  (
    .A(2'hx),
    .B(\$procmux$387_Y ),
    .S(\$procmux$390_CMP ),
    .Y(\$procmux$389_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$390_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$390_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$393  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$394_CMP ),
    .Y(\$procmux$393_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$395  (
    .A(2'hx),
    .B(\$procmux$393_Y ),
    .S(\$procmux$396_CMP ),
    .Y(\$procmux$395_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$396_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$396_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$399  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$400_CMP ),
    .Y(\$procmux$399_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$401  (
    .A(1'hx),
    .B(\$procmux$399_Y ),
    .S(\$procmux$402_CMP ),
    .Y(\$procmux$401_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$402_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$402_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$405  (
    .A(2'h0),
    .B({ \$state_d$4 , \$state_d$7 , \$state_d$10  }),
    .S({ \$procmux$410_CMP , \$procmux$408_CMP , \$procmux$406_CMP  }),
    .Y(\$procmux$405_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$406_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$406_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$408_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$408_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$410_CMP0  (
    .A(state_q),
    .Y(\$procmux$410_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$414  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$415_CMP ),
    .Y(\$procmux$414_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$416  (
    .A(2'hx),
    .B(\$procmux$414_Y ),
    .S(\$procmux$417_CMP ),
    .Y(\$procmux$416_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$417_CMP0  (
    .A(state_q),
    .Y(\$procmux$417_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$421  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$422_CMP ),
    .Y(\$procmux$421_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$423  (
    .A(2'hx),
    .B(\$procmux$421_Y ),
    .S(\$procmux$424_CMP ),
    .Y(\$procmux$423_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$424_CMP0  (
    .A(state_q),
    .Y(\$procmux$424_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$428  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$429_CMP ),
    .Y(\$procmux$428_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$430  (
    .A(1'hx),
    .B(\$procmux$428_Y ),
    .S(\$procmux$431_CMP ),
    .Y(\$procmux$430_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$431_CMP0  (
    .A(state_q),
    .Y(\$procmux$431_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$435  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$436_CMP ),
    .Y(\$procmux$435_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$436_CMP0  (
    .A(state_q),
    .Y(\$procmux$436_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$439  (
    .A(1'h0),
    .B({ \$ready_o$1 , \$ready_o$11  }),
    .S({ \$procmux$442_CMP , \$procmux$440_CMP  }),
    .Y(\$procmux$439_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$440_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$440_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$442_CMP0  (
    .A(state_q),
    .Y(\$procmux$442_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$447  (
    .A(data_src_q),
    .B(\$data_src_d$3 ),
    .S(\$procmux$448_CMP ),
    .Y(\$procmux$447_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$448_CMP0  (
    .A(state_q),
    .Y(\$procmux$448_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$452  (
    .A(1'h0),
    .B({ \$req_src_d$2 , \$req_src_d$6  }),
    .S({ \$procmux$455_CMP , \$procmux$453_CMP  }),
    .Y(\$procmux$452_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$453_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$453_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$455_CMP0  (
    .A(state_q),
    .Y(\$procmux$455_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$12 ;
  assign data_src_d = \$data_src_d$13 ;
  assign state_d = \$state_d$14 ;
  assign ready_o = \$ready_o$15 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$data_src_q$22  = 2'h1;
  assign \$req_src_q$21  = 1'h1;
  assign \$procmux$378_CMP  = \$8y ;
  assign \$ready_o$9  = \$procmux$379_Y ;
  assign \$procmux$383_CMP  = \$8y ;
  assign \$ready_o$11  = \$procmux$384_Y ;
  assign \$procmux$388_CMP  = \$8y ;
  assign \$state_d$10  = \$procmux$389_Y ;
  assign \$procmux$394_CMP  = \$5y ;
  assign \$state_d$7  = \$procmux$395_Y ;
  assign \$procmux$400_CMP  = \$5y ;
  assign \$req_src_d$6  = \$procmux$401_Y ;
  assign \$state_d$14  = \$procmux$405_Y ;
  assign \$procmux$415_CMP  = valid_i;
  assign \$state_d$4  = \$procmux$416_Y ;
  assign \$procmux$422_CMP  = valid_i;
  assign \$data_src_d$3  = \$procmux$423_Y ;
  assign \$procmux$429_CMP  = valid_i;
  assign \$req_src_d$2  = \$procmux$430_Y ;
  assign \$ready_o$1  = \$procmux$435_Y ;
  assign \$ready_o$15  = \$procmux$439_Y ;
  assign \$data_src_d$13  = \$procmux$447_Y ;
  assign \$req_src_d$12  = \$procmux$452_Y ;
  assign \$18y  = rst_ni;
  assign \$23y  = rst_ni;
  assign \$5y  = ack_synced;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$17y ;
  wire \$18y ;
  wire \$20y ;
  wire \$23y ;
  wire \$5y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$data_src_d$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$data_src_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$data_src_q$22 ;
  wire \$procmux$228_Y ;
  wire \$procmux$229_CMP ;
  wire \$procmux$230_Y ;
  wire \$procmux$231_CMP ;
  wire \$procmux$233_Y ;
  wire \$procmux$234_CMP ;
  wire \$procmux$235_Y ;
  wire \$procmux$236_CMP ;
  wire [1:0] \$procmux$238_Y ;
  wire \$procmux$239_CMP ;
  wire [1:0] \$procmux$240_Y ;
  wire \$procmux$241_CMP ;
  wire [1:0] \$procmux$244_Y ;
  wire \$procmux$245_CMP ;
  wire [1:0] \$procmux$246_Y ;
  wire \$procmux$247_CMP ;
  wire \$procmux$250_Y ;
  wire \$procmux$251_CMP ;
  wire \$procmux$252_Y ;
  wire \$procmux$253_CMP ;
  wire [1:0] \$procmux$256_Y ;
  wire \$procmux$257_CMP ;
  wire \$procmux$259_CMP ;
  wire \$procmux$261_CMP ;
  wire [1:0] \$procmux$265_Y ;
  wire \$procmux$266_CMP ;
  wire [1:0] \$procmux$267_Y ;
  wire \$procmux$268_CMP ;
  wire [1:0] \$procmux$272_Y ;
  wire \$procmux$273_CMP ;
  wire [1:0] \$procmux$274_Y ;
  wire \$procmux$275_CMP ;
  wire \$procmux$279_Y ;
  wire \$procmux$280_CMP ;
  wire \$procmux$281_Y ;
  wire \$procmux$282_CMP ;
  wire \$procmux$286_Y ;
  wire \$procmux$287_CMP ;
  wire \$procmux$290_Y ;
  wire \$procmux$291_CMP ;
  wire \$procmux$293_CMP ;
  wire [1:0] \$procmux$298_Y ;
  wire \$procmux$299_CMP ;
  wire \$procmux$303_Y ;
  wire \$procmux$304_CMP ;
  wire \$procmux$306_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$ready_o$1 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$ready_o$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$ready_o$15 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$ready_o$9 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$req_src_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$req_src_d$2 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$req_src_d$6 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$req_src_q$21 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$state_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$state_d$4 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$state_d$7 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.13-159.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(ack_synced),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$228  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$228_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$230  (
    .A(1'hx),
    .B(\$procmux$228_Y ),
    .S(\$procmux$231_CMP ),
    .Y(\$procmux$230_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$231_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$231_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$233  (
    .A(\$ready_o$9 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$233_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$235  (
    .A(1'hx),
    .B(\$procmux$233_Y ),
    .S(\$procmux$236_CMP ),
    .Y(\$procmux$235_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$236_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$236_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$238  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$238_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$240  (
    .A(2'hx),
    .B(\$procmux$238_Y ),
    .S(\$procmux$241_CMP ),
    .Y(\$procmux$240_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$241_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$241_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$244  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$245_CMP ),
    .Y(\$procmux$244_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$246  (
    .A(2'hx),
    .B(\$procmux$244_Y ),
    .S(\$procmux$247_CMP ),
    .Y(\$procmux$246_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$247_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$247_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$250  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$251_CMP ),
    .Y(\$procmux$250_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$252  (
    .A(1'hx),
    .B(\$procmux$250_Y ),
    .S(\$procmux$253_CMP ),
    .Y(\$procmux$252_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$253_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$253_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$256  (
    .A(2'h0),
    .B({ \$state_d$4 , \$state_d$7 , \$state_d$10  }),
    .S({ \$procmux$261_CMP , \$procmux$259_CMP , \$procmux$257_CMP  }),
    .Y(\$procmux$256_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$257_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$257_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$259_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$259_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$261_CMP0  (
    .A(state_q),
    .Y(\$procmux$261_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$265  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$266_CMP ),
    .Y(\$procmux$265_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$267  (
    .A(2'hx),
    .B(\$procmux$265_Y ),
    .S(\$procmux$268_CMP ),
    .Y(\$procmux$267_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$268_CMP0  (
    .A(state_q),
    .Y(\$procmux$268_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$272  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$273_CMP ),
    .Y(\$procmux$272_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$274  (
    .A(2'hx),
    .B(\$procmux$272_Y ),
    .S(\$procmux$275_CMP ),
    .Y(\$procmux$274_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$275_CMP0  (
    .A(state_q),
    .Y(\$procmux$275_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$279  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$280_CMP ),
    .Y(\$procmux$279_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$281  (
    .A(1'hx),
    .B(\$procmux$279_Y ),
    .S(\$procmux$282_CMP ),
    .Y(\$procmux$281_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$282_CMP0  (
    .A(state_q),
    .Y(\$procmux$282_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$286  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$287_CMP ),
    .Y(\$procmux$286_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$287_CMP0  (
    .A(state_q),
    .Y(\$procmux$287_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$290  (
    .A(1'h0),
    .B({ \$ready_o$1 , \$ready_o$11  }),
    .S({ \$procmux$293_CMP , \$procmux$291_CMP  }),
    .Y(\$procmux$290_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$291_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$291_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$293_CMP0  (
    .A(state_q),
    .Y(\$procmux$293_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$298  (
    .A(data_src_q),
    .B(\$data_src_d$3 ),
    .S(\$procmux$299_CMP ),
    .Y(\$procmux$298_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$299_CMP0  (
    .A(state_q),
    .Y(\$procmux$299_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$303  (
    .A(1'h0),
    .B({ \$req_src_d$2 , \$req_src_d$6  }),
    .S({ \$procmux$306_CMP , \$procmux$304_CMP  }),
    .Y(\$procmux$303_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$304_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$304_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$306_CMP0  (
    .A(state_q),
    .Y(\$procmux$306_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$12 ;
  assign data_src_d = \$data_src_d$13 ;
  assign state_d = \$state_d$14 ;
  assign ready_o = \$ready_o$15 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$data_src_q$22  = 2'h1;
  assign \$req_src_q$21  = 1'h1;
  assign \$procmux$229_CMP  = \$8y ;
  assign \$ready_o$9  = \$procmux$230_Y ;
  assign \$procmux$234_CMP  = \$8y ;
  assign \$ready_o$11  = \$procmux$235_Y ;
  assign \$procmux$239_CMP  = \$8y ;
  assign \$state_d$10  = \$procmux$240_Y ;
  assign \$procmux$245_CMP  = \$5y ;
  assign \$state_d$7  = \$procmux$246_Y ;
  assign \$procmux$251_CMP  = \$5y ;
  assign \$req_src_d$6  = \$procmux$252_Y ;
  assign \$state_d$14  = \$procmux$256_Y ;
  assign \$procmux$266_CMP  = valid_i;
  assign \$state_d$4  = \$procmux$267_Y ;
  assign \$procmux$273_CMP  = valid_i;
  assign \$data_src_d$3  = \$procmux$274_Y ;
  assign \$procmux$280_CMP  = valid_i;
  assign \$req_src_d$2  = \$procmux$281_Y ;
  assign \$ready_o$1  = \$procmux$286_Y ;
  assign \$ready_o$15  = \$procmux$290_Y ;
  assign \$data_src_d$13  = \$procmux$298_Y ;
  assign \$req_src_d$12  = \$procmux$303_Y ;
  assign \$18y  = rst_ni;
  assign \$23y  = rst_ni;
  assign \$5y  = ack_synced;
endmodule

/* src = "rtl/common_cells/cdc_4phase.sv:92.8" */
module \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src (clk_i, rst_ni, data_i, valid_i, ready_o, async_req_o, async_ack_i, async_data_o);
  wire \$17y ;
  wire \$18y ;
  wire \$20y ;
  wire \$23y ;
  wire \$5y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$data_src_d$13 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$data_src_d$3 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire [1:0] \$data_src_q$22 ;
  wire \$procmux$101_Y ;
  wire \$procmux$102_CMP ;
  wire \$procmux$103_Y ;
  wire \$procmux$104_CMP ;
  wire [1:0] \$procmux$107_Y ;
  wire \$procmux$108_CMP ;
  wire \$procmux$110_CMP ;
  wire \$procmux$112_CMP ;
  wire [1:0] \$procmux$116_Y ;
  wire \$procmux$117_CMP ;
  wire [1:0] \$procmux$118_Y ;
  wire \$procmux$119_CMP ;
  wire [1:0] \$procmux$123_Y ;
  wire \$procmux$124_CMP ;
  wire [1:0] \$procmux$125_Y ;
  wire \$procmux$126_CMP ;
  wire \$procmux$130_Y ;
  wire \$procmux$131_CMP ;
  wire \$procmux$132_Y ;
  wire \$procmux$133_CMP ;
  wire \$procmux$137_Y ;
  wire \$procmux$138_CMP ;
  wire \$procmux$141_Y ;
  wire \$procmux$142_CMP ;
  wire \$procmux$144_CMP ;
  wire [1:0] \$procmux$149_Y ;
  wire \$procmux$150_CMP ;
  wire \$procmux$154_Y ;
  wire \$procmux$155_CMP ;
  wire \$procmux$157_CMP ;
  wire \$procmux$79_Y ;
  wire \$procmux$80_CMP ;
  wire \$procmux$81_Y ;
  wire \$procmux$82_CMP ;
  wire \$procmux$84_Y ;
  wire \$procmux$85_CMP ;
  wire \$procmux$86_Y ;
  wire \$procmux$87_CMP ;
  wire [1:0] \$procmux$89_Y ;
  wire \$procmux$90_CMP ;
  wire [1:0] \$procmux$91_Y ;
  wire \$procmux$92_CMP ;
  wire [1:0] \$procmux$95_Y ;
  wire \$procmux$96_CMP ;
  wire [1:0] \$procmux$97_Y ;
  wire \$procmux$98_CMP ;
  /* src = "rtl/common_cells/cdc_4phase.sv:139.9-143.12" */
  wire \$ready_o$1 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire \$ready_o$11 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$ready_o$15 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:161.11-163.14" */
  wire \$ready_o$9 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire \$req_src_d$12 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire \$req_src_d$2 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire \$req_src_d$6 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:183.7-189.10" */
  wire \$req_src_q$21 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  wire [1:0] \$state_d$10 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  wire [1:0] \$state_d$14 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  wire [1:0] \$state_d$4 ;
  /* src = "rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  wire [1:0] \$state_d$7 ;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:114.10" */
  wire ack_synced;
  /* src = "rtl/common_cells/cdc_4phase.sv:105.16" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:106.16" */
  output [1:0] async_data_o;
  wire [1:0] async_data_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:104.16" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_4phase.sv:100.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_4phase.sv:101.16" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.5" */
  wire [1:0] data_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:112.17" */
  wire [1:0] data_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:103.16" */
  output ready_o;
  wire ready_o;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.10" */
  wire req_src_d;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:110.21" */
  wire req_src_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:99.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.11" */
  wire [1:0] state_d;
  /* src = "rtl/common_cells/cdc_4phase.sv:117.20" */
  wire [1:0] state_q;
  /* src = "rtl/common_cells/cdc_4phase.sv:102.16" */
  input valid_i;
  wire valid_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.13-159.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(ack_synced),
    .Y(\$8y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_src_q  (
    .AD(2'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(data_src_d),
    .Q(data_src_q)
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_src_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_src_d),
    .Q(req_src_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:172.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$101  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$102_CMP ),
    .Y(\$procmux$101_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$103  (
    .A(1'hx),
    .B(\$procmux$101_Y ),
    .S(\$procmux$104_CMP ),
    .Y(\$procmux$103_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$104_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$104_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$107  (
    .A(2'h0),
    .B({ \$state_d$4 , \$state_d$7 , \$state_d$10  }),
    .S({ \$procmux$112_CMP , \$procmux$110_CMP , \$procmux$108_CMP  }),
    .Y(\$procmux$107_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$108_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$108_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$110_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$110_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$112_CMP0  (
    .A(state_q),
    .Y(\$procmux$112_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$116  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$117_CMP ),
    .Y(\$procmux$116_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$118  (
    .A(2'hx),
    .B(\$procmux$116_Y ),
    .S(\$procmux$119_CMP ),
    .Y(\$procmux$118_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$119_CMP0  (
    .A(state_q),
    .Y(\$procmux$119_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$123  (
    .A(data_src_q),
    .B(data_i),
    .S(\$procmux$124_CMP ),
    .Y(\$procmux$123_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$125  (
    .A(2'hx),
    .B(\$procmux$123_Y ),
    .S(\$procmux$126_CMP ),
    .Y(\$procmux$125_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$126_CMP0  (
    .A(state_q),
    .Y(\$procmux$126_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:145.22-149.12|rtl/common_cells/cdc_4phase.sv:145.9-149.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$130  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$131_CMP ),
    .Y(\$procmux$130_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$132  (
    .A(1'hx),
    .B(\$procmux$130_Y ),
    .S(\$procmux$133_CMP ),
    .Y(\$procmux$132_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$133_CMP0  (
    .A(state_q),
    .Y(\$procmux$133_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$137  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$138_CMP ),
    .Y(\$procmux$137_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$138_CMP0  (
    .A(state_q),
    .Y(\$procmux$138_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$141  (
    .A(1'h0),
    .B({ \$ready_o$1 , \$ready_o$11  }),
    .S({ \$procmux$144_CMP , \$procmux$142_CMP  }),
    .Y(\$procmux$141_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$142_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$142_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$144_CMP0  (
    .A(state_q),
    .Y(\$procmux$144_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$149  (
    .A(data_src_q),
    .B(\$data_src_d$3 ),
    .S(\$procmux$150_CMP ),
    .Y(\$procmux$149_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$150_CMP0  (
    .A(state_q),
    .Y(\$procmux$150_CMP )
  );
  /* full_case = 32'd1 */
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$154  (
    .A(1'h0),
    .B({ \$req_src_d$2 , \$req_src_d$6  }),
    .S({ \$procmux$157_CMP , \$procmux$155_CMP  }),
    .Y(\$procmux$154_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$155_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$155_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:136.13-150.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$157_CMP0  (
    .A(state_q),
    .Y(\$procmux$157_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$79  (
    .A(1'h1),
    .B(1'hx),
    .S(ack_synced),
    .Y(\$procmux$79_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$81  (
    .A(1'hx),
    .B(\$procmux$79_Y ),
    .S(\$procmux$82_CMP ),
    .Y(\$procmux$81_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$82_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$82_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$84  (
    .A(\$ready_o$9 ),
    .B(1'h0),
    .S(ack_synced),
    .Y(\$procmux$84_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$86  (
    .A(1'hx),
    .B(\$procmux$84_Y ),
    .S(\$procmux$87_CMP ),
    .Y(\$procmux$86_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$87_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$87_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:159.33-164.12|rtl/common_cells/cdc_4phase.sv:159.9-164.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$89  (
    .A(2'h0),
    .B(state_q),
    .S(ack_synced),
    .Y(\$procmux$89_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$91  (
    .A(2'hx),
    .B(\$procmux$89_Y ),
    .S(\$procmux$92_CMP ),
    .Y(\$procmux$91_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:159.9-164.12|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$92_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$92_CMP )
  );
  /* src = "rtl/common_cells/cdc_4phase.sv:153.33-156.12|rtl/common_cells/cdc_4phase.sv:153.9-156.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$95  (
    .A(state_q),
    .B(2'h2),
    .S(\$procmux$96_CMP ),
    .Y(\$procmux$95_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$97  (
    .A(2'hx),
    .B(\$procmux$95_Y ),
    .S(\$procmux$98_CMP ),
    .Y(\$procmux$97_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:151.24-157.10|rtl/common_cells/cdc_4phase.sv:135.5-169.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$98_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$98_CMP )
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_4phase.sv:122.5" */
  \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync  i_sync (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(async_ack_i),
    .serial_o(ack_synced)
  );
  assign req_src_d = \$req_src_d$12 ;
  assign data_src_d = \$data_src_d$13 ;
  assign state_d = \$state_d$14 ;
  assign ready_o = \$ready_o$15 ;
  assign async_req_o = req_src_q;
  assign async_data_o = data_src_q;
  assign \$data_src_q$22  = 2'h1;
  assign \$req_src_q$21  = 1'h1;
  assign \$procmux$80_CMP  = \$8y ;
  assign \$ready_o$9  = \$procmux$81_Y ;
  assign \$procmux$85_CMP  = \$8y ;
  assign \$ready_o$11  = \$procmux$86_Y ;
  assign \$procmux$90_CMP  = \$8y ;
  assign \$state_d$10  = \$procmux$91_Y ;
  assign \$procmux$96_CMP  = \$5y ;
  assign \$state_d$7  = \$procmux$97_Y ;
  assign \$procmux$102_CMP  = \$5y ;
  assign \$req_src_d$6  = \$procmux$103_Y ;
  assign \$state_d$14  = \$procmux$107_Y ;
  assign \$procmux$117_CMP  = valid_i;
  assign \$state_d$4  = \$procmux$118_Y ;
  assign \$procmux$124_CMP  = valid_i;
  assign \$data_src_d$3  = \$procmux$125_Y ;
  assign \$procmux$131_CMP  = valid_i;
  assign \$req_src_d$2  = \$procmux$132_Y ;
  assign \$ready_o$1  = \$procmux$137_Y ;
  assign \$ready_o$15  = \$procmux$141_Y ;
  assign \$data_src_d$13  = \$procmux$149_Y ;
  assign \$req_src_d$12  = \$procmux$154_Y ;
  assign \$18y  = rst_ni;
  assign \$23y  = rst_ni;
  assign \$5y  = ack_synced;
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:109.8" */
module \cdc_reset_ctrlr$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr (a_clk_i, a_rst_ni, a_clear_i, a_clear_o, a_clear_ack_i, a_isolate_o, a_isolate_ack_i, b_clk_i, b_rst_ni, b_clear_i, b_clear_o, b_clear_ack_i, b_isolate_o, b_isolate_ack_i);
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:125.15" */
  input a_clear_ack_i;
  wire a_clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:123.16" */
  input a_clear_i;
  wire a_clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:124.16" */
  output a_clear_o;
  wire a_clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:121.16" */
  input a_clk_i;
  wire a_clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:127.16" */
  input a_isolate_ack_i;
  wire a_isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:126.16" */
  output a_isolate_o;
  wire a_isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:122.16" */
  input a_rst_ni;
  wire a_rst_ni;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:143.31" */
  wire async_a2b_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:141.21" */
  wire [1:0] async_a2b_next_phase;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:139.16" */
  wire async_a2b_req;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:139.31" */
  wire async_b2a_ack;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:145.21" */
  wire [1:0] async_b2a_next_phase;
  /* keep = "true" */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:143.16" */
  wire async_b2a_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:133.16" */
  input b_clear_ack_i;
  wire b_clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:131.16" */
  input b_clear_i;
  wire b_clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:132.16" */
  output b_clear_o;
  wire b_clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:129.16" */
  input b_clk_i;
  wire b_clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:135.16" */
  input b_isolate_ack_i;
  wire b_isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:134.16" */
  output b_isolate_o;
  wire b_isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:130.16" */
  input b_rst_ni;
  wire b_rst_ni;
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:150.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a  i_cdc_reset_ctrlr_half_a (
    .async_ack_i(async_b2a_ack),
    .async_ack_o(async_a2b_ack),
    .async_next_phase_i(async_b2a_next_phase),
    .async_next_phase_o(async_a2b_next_phase),
    .async_req_i(async_b2a_req),
    .async_req_o(async_a2b_req),
    .clear_ack_i(a_clear_ack_i),
    .clear_i(a_clear_i),
    .clear_o(a_clear_o),
    .clk_i(a_clk_i),
    .isolate_ack_i(a_isolate_ack_i),
    .isolate_o(a_isolate_o),
    .rst_ni(a_rst_ni)
  );
  /* keep = "true" */
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:169.5" */
  \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b  i_cdc_reset_ctrlr_half_b (
    .async_ack_i(async_a2b_ack),
    .async_ack_o(async_b2a_ack),
    .async_next_phase_i(async_a2b_next_phase),
    .async_next_phase_o(async_b2a_next_phase),
    .async_req_i(async_a2b_req),
    .async_req_o(async_b2a_req),
    .clear_ack_i(b_clear_ack_i),
    .clear_i(b_clear_i),
    .clear_o(b_clear_o),
    .clk_i(b_clk_i),
    .isolate_ack_i(b_isolate_ack_i),
    .isolate_o(b_isolate_o),
    .rst_ni(b_rst_ni)
  );
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$22y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$40y ;
  wire \$41y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_clear_out$20 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$initiator_clear_seq_phase$17 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_isolate_out$19 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_phase_transition_req$18 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$initiator_state_d$1 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$initiator_state_d$10 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$initiator_state_d$11 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$initiator_state_d$12 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$initiator_state_d$13 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$initiator_state_d$14 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$initiator_state_d$15 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$initiator_state_d$16 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$initiator_state_d$3 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$initiator_state_d$4 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$initiator_state_d$5 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$initiator_state_d$6 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$initiator_state_d$7 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$initiator_state_d$9 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$initiator_state_q$23 ;
  wire \$procmux$1487_Y ;
  wire \$procmux$1488_CMP ;
  wire \$procmux$1489_CMP ;
  wire \$procmux$1490_CMP ;
  wire \$procmux$1491_CMP ;
  wire \$procmux$1493_Y ;
  wire \$procmux$1494_CMP ;
  wire \$procmux$1495_Y ;
  wire \$procmux$1496_CMP ;
  wire \$procmux$1497_CMP ;
  wire \$procmux$1498_CMP ;
  wire \$procmux$1499_CMP ;
  wire \$procmux$1501_Y ;
  wire \$procmux$1502_CMP ;
  wire \$procmux$1504_Y ;
  wire \$procmux$1505_CMP ;
  wire \$procmux$1509_Y ;
  wire \$procmux$1510_CMP ;
  wire \$procmux$1514_Y ;
  wire \$procmux$1515_CMP ;
  wire \$procmux$1519_Y ;
  wire \$procmux$1520_CMP ;
  wire \$procmux$1522_Y ;
  wire \$procmux$1523_CMP ;
  wire \$procmux$1524_CMP ;
  wire \$procmux$1525_CMP ;
  wire \$procmux$1526_CMP ;
  wire \$procmux$1527_Y ;
  wire \$procmux$1528_CMP ;
  wire \$procmux$1530_Y ;
  wire \$procmux$1531_CMP ;
  wire \$procmux$1532_CMP ;
  wire \$procmux$1533_CMP ;
  wire \$procmux$1534_CMP ;
  wire \$procmux$1535_Y ;
  wire \$procmux$1536_CMP ;
  wire \$procmux$1538_Y ;
  wire \$procmux$1539_CMP ;
  wire \$procmux$1540_CMP ;
  wire \$procmux$1541_CMP ;
  wire \$procmux$1542_CMP ;
  wire \$procmux$1543_Y ;
  wire \$procmux$1544_CMP ;
  wire [1:0] \$procmux$1545_Y ;
  wire \$procmux$1546_CMP ;
  wire [3:0] \$procmux$1548_Y ;
  wire \$procmux$1549_CMP ;
  wire [3:0] \$procmux$1550_Y ;
  wire \$procmux$1551_CMP ;
  wire [3:0] \$procmux$1554_Y ;
  wire \$procmux$1555_CMP ;
  wire [3:0] \$procmux$1556_Y ;
  wire \$procmux$1557_CMP ;
  wire [3:0] \$procmux$1561_Y ;
  wire \$procmux$1562_CMP ;
  wire [3:0] \$procmux$1563_Y ;
  wire \$procmux$1564_CMP ;
  wire [3:0] \$procmux$1569_Y ;
  wire \$procmux$1570_CMP ;
  wire [3:0] \$procmux$1571_Y ;
  wire \$procmux$1572_CMP ;
  wire [3:0] \$procmux$1578_Y ;
  wire \$procmux$1579_CMP ;
  wire [3:0] \$procmux$1581_Y ;
  wire \$procmux$1582_CMP ;
  wire [3:0] \$procmux$1584_Y ;
  wire \$procmux$1585_CMP ;
  wire [3:0] \$procmux$1586_Y ;
  wire \$procmux$1587_CMP ;
  wire [3:0] \$procmux$1595_Y ;
  wire \$procmux$1596_CMP ;
  wire [3:0] \$procmux$1598_Y ;
  wire \$procmux$1599_CMP ;
  wire [3:0] \$procmux$1600_Y ;
  wire \$procmux$1601_CMP ;
  wire [3:0] \$procmux$1609_Y ;
  wire \$procmux$1610_CMP ;
  wire [3:0] \$procmux$1611_Y ;
  wire \$procmux$1612_CMP ;
  wire [3:0] \$procmux$1619_Y ;
  wire \$procmux$1620_CMP ;
  wire [3:0] \$procmux$1621_Y ;
  wire \$procmux$1622_CMP ;
  wire [3:0] \$procmux$1630_Y ;
  wire \$procmux$1631_CMP ;
  wire [3:0] \$procmux$1632_Y ;
  wire \$procmux$1633_CMP ;
  wire [3:0] \$procmux$1642_Y ;
  wire \$procmux$1643_CMP ;
  wire [3:0] \$procmux$1645_Y ;
  wire \$procmux$1646_CMP ;
  wire [3:0] \$procmux$1648_Y ;
  wire \$procmux$1649_CMP ;
  wire [3:0] \$procmux$1650_Y ;
  wire \$procmux$1651_CMP ;
  wire [3:0] \$procmux$1662_Y ;
  wire \$procmux$1663_CMP ;
  wire [3:0] \$procmux$1665_Y ;
  wire \$procmux$1666_CMP ;
  wire [3:0] \$procmux$1667_Y ;
  wire \$procmux$1668_CMP ;
  wire [3:0] \$procmux$1679_Y ;
  wire \$procmux$1680_CMP ;
  wire [3:0] \$procmux$1681_Y ;
  wire \$procmux$1682_CMP ;
  wire [3:0] \$procmux$1685_Y ;
  wire \$procmux$1686_CMP ;
  wire \$procmux$1688_CMP ;
  wire \$procmux$1690_CMP ;
  wire \$procmux$1692_CMP ;
  wire \$procmux$1694_CMP ;
  wire \$procmux$1696_CMP ;
  wire \$procmux$1698_CMP ;
  wire \$procmux$1700_CMP ;
  wire \$procmux$1702_CMP ;
  wire [3:0] \$procmux$1712_Y ;
  wire \$procmux$1713_CMP ;
  wire [3:0] \$procmux$1714_Y ;
  wire \$procmux$1715_CMP ;
  wire \$procmux$1722_Y ;
  wire \$procmux$1723_CMP ;
  wire \$procmux$1725_CMP ;
  wire \$procmux$1727_CMP ;
  wire \$procmux$1733_Y ;
  wire \$procmux$1734_CMP ;
  wire \$procmux$1736_CMP ;
  wire \$procmux$1738_CMP ;
  wire \$procmux$1740_CMP ;
  wire \$procmux$1742_CMP ;
  wire \$procmux$1744_CMP ;
  wire \$procmux$1746_CMP ;
  wire \$procmux$1748_CMP ;
  wire \$procmux$1751_Y ;
  wire \$procmux$1752_CMP ;
  wire \$procmux$1754_CMP ;
  wire \$procmux$1756_CMP ;
  wire \$procmux$1758_CMP ;
  wire \$procmux$1760_CMP ;
  wire \$procmux$1762_CMP ;
  wire [1:0] \$procmux$1767_Y ;
  wire \$procmux$1768_CMP ;
  wire \$procmux$1770_CMP ;
  wire \$procmux$1772_CMP ;
  wire \$procmux$1774_CMP ;
  wire \$procmux$1776_CMP ;
  wire \$procmux$1778_CMP ;
  wire \$procmux$1780_CMP ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_clear_out$33 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_clear_out$36 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_clear_out$39 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_isolate_out$32 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_isolate_out$35 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_isolate_out$38 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_phase_ack$31 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_phase_ack$34 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_phase_ack$37 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$receiver_phase_q$29 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.13-284.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(rst_ni),
    .Y(\$22y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(rst_ni),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.18-441.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:526.20-526.61" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:527.22-527.67" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.13-317.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$receiver_phase_q$29 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1487  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$1491_CMP , \$procmux$1490_CMP , \$procmux$1489_CMP , \$procmux$1488_CMP  }),
    .Y(\$procmux$1487_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1488_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$1488_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1489_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$1489_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1490_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$1490_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1491_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$1491_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1493  (
    .A(\$procmux$1487_Y ),
    .B(1'hx),
    .S(\$procmux$1494_CMP ),
    .Y(\$procmux$1493_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1495  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$1499_CMP , \$procmux$1498_CMP , \$procmux$1497_CMP , \$procmux$1496_CMP  }),
    .Y(\$procmux$1495_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1496_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$1496_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1497_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$1497_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1498_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$1498_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1499_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$1499_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1501  (
    .A(\$procmux$1495_Y ),
    .B(1'hx),
    .S(\$procmux$1502_CMP ),
    .Y(\$procmux$1501_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1504  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$1505_CMP ),
    .Y(\$procmux$1504_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1509  (
    .A(\$receiver_clear_out$36 ),
    .B(\$receiver_clear_out$33 ),
    .S(\$procmux$1510_CMP ),
    .Y(\$procmux$1509_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1514  (
    .A(\$receiver_isolate_out$35 ),
    .B(\$receiver_isolate_out$32 ),
    .S(\$procmux$1515_CMP ),
    .Y(\$procmux$1514_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1519  (
    .A(\$receiver_phase_ack$34 ),
    .B(\$receiver_phase_ack$31 ),
    .S(\$procmux$1520_CMP ),
    .Y(\$procmux$1519_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1522  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$1526_CMP , \$procmux$1525_CMP , \$procmux$1524_CMP , \$procmux$1523_CMP  }),
    .Y(\$procmux$1522_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1523_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1523_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1524_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1524_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1525_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1525_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1526_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1526_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1527  (
    .A(1'hx),
    .B(\$procmux$1522_Y ),
    .S(\$procmux$1528_CMP ),
    .Y(\$procmux$1527_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1530  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$1534_CMP , \$procmux$1533_CMP , \$procmux$1532_CMP , \$procmux$1531_CMP  }),
    .Y(\$procmux$1530_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1531_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1531_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1532_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1532_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1533_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1533_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1534_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1534_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1535  (
    .A(1'hx),
    .B(\$procmux$1530_Y ),
    .S(\$procmux$1536_CMP ),
    .Y(\$procmux$1535_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1538  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$1542_CMP , \$procmux$1541_CMP , \$procmux$1540_CMP , \$procmux$1539_CMP  }),
    .Y(\$procmux$1538_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1539_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1539_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1540_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1540_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1541_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1541_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1542_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1542_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1543  (
    .A(1'hx),
    .B(\$procmux$1538_Y ),
    .S(\$procmux$1544_CMP ),
    .Y(\$procmux$1543_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1545  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$1546_CMP ),
    .Y(\$procmux$1545_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1548  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$1549_CMP ),
    .Y(\$procmux$1548_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1550  (
    .A(4'hx),
    .B(\$procmux$1548_Y ),
    .S(\$procmux$1551_CMP ),
    .Y(\$procmux$1550_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1551_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1551_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1554  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$1555_CMP ),
    .Y(\$procmux$1554_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1556  (
    .A(4'hx),
    .B(\$procmux$1554_Y ),
    .S(\$procmux$1557_CMP ),
    .Y(\$procmux$1556_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1557_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1557_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1561  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$1562_CMP ),
    .Y(\$procmux$1561_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1563  (
    .A(4'hx),
    .B(\$procmux$1561_Y ),
    .S(\$procmux$1564_CMP ),
    .Y(\$procmux$1563_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1564_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1564_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1569  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$1570_CMP ),
    .Y(\$procmux$1569_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1571  (
    .A(4'hx),
    .B(\$procmux$1569_Y ),
    .S(\$procmux$1572_CMP ),
    .Y(\$procmux$1571_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1572_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1572_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1578  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$1579_CMP ),
    .Y(\$procmux$1578_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1581  (
    .A(\$procmux$1578_Y ),
    .B(4'hx),
    .S(\$procmux$1582_CMP ),
    .Y(\$procmux$1581_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1584  (
    .A(\$procmux$1581_Y ),
    .B(4'hx),
    .S(\$procmux$1585_CMP ),
    .Y(\$procmux$1584_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1586  (
    .A(4'hx),
    .B(\$procmux$1584_Y ),
    .S(\$procmux$1587_CMP ),
    .Y(\$procmux$1586_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1587_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1587_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1595  (
    .A(\$initiator_state_d$9 ),
    .B(4'h6),
    .S(\$procmux$1596_CMP ),
    .Y(\$procmux$1595_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1598  (
    .A(\$procmux$1595_Y ),
    .B(4'hx),
    .S(\$procmux$1599_CMP ),
    .Y(\$procmux$1598_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1600  (
    .A(4'hx),
    .B(\$procmux$1598_Y ),
    .S(\$procmux$1601_CMP ),
    .Y(\$procmux$1600_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1601_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1601_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1609  (
    .A(\$initiator_state_d$10 ),
    .B(4'h7),
    .S(\$procmux$1610_CMP ),
    .Y(\$procmux$1609_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1611  (
    .A(4'hx),
    .B(\$procmux$1609_Y ),
    .S(\$procmux$1612_CMP ),
    .Y(\$procmux$1611_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1612_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1612_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1619  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1620_CMP ),
    .Y(\$procmux$1619_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1621  (
    .A(4'hx),
    .B(\$procmux$1619_Y ),
    .S(\$procmux$1622_CMP ),
    .Y(\$procmux$1621_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1622_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1622_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1630  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1631_CMP ),
    .Y(\$procmux$1630_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1632  (
    .A(4'hx),
    .B(\$procmux$1630_Y ),
    .S(\$procmux$1633_CMP ),
    .Y(\$procmux$1632_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1633_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1633_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1642  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$1643_CMP ),
    .Y(\$procmux$1642_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1645  (
    .A(\$procmux$1642_Y ),
    .B(4'hx),
    .S(\$procmux$1646_CMP ),
    .Y(\$procmux$1645_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1648  (
    .A(\$procmux$1645_Y ),
    .B(4'hx),
    .S(\$procmux$1649_CMP ),
    .Y(\$procmux$1648_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1650  (
    .A(4'hx),
    .B(\$procmux$1648_Y ),
    .S(\$procmux$1651_CMP ),
    .Y(\$procmux$1650_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1651_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1651_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1662  (
    .A(\$initiator_state_d$3 ),
    .B(4'h3),
    .S(\$procmux$1663_CMP ),
    .Y(\$procmux$1662_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1665  (
    .A(\$procmux$1662_Y ),
    .B(4'hx),
    .S(\$procmux$1666_CMP ),
    .Y(\$procmux$1665_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1667  (
    .A(4'hx),
    .B(\$procmux$1665_Y ),
    .S(\$procmux$1668_CMP ),
    .Y(\$procmux$1667_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1668_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1668_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1679  (
    .A(\$initiator_state_d$4 ),
    .B(4'h4),
    .S(\$procmux$1680_CMP ),
    .Y(\$procmux$1679_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1681  (
    .A(4'hx),
    .B(\$procmux$1679_Y ),
    .S(\$procmux$1682_CMP ),
    .Y(\$procmux$1681_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1682_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1682_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$1685  (
    .A(4'h1),
    .B({ \$initiator_state_d$1 , \$initiator_state_d$5 , \$initiator_state_d$6 , \$initiator_state_d$7 , \$initiator_state_d$11 , \$initiator_state_d$12 , \$initiator_state_d$13 , \$initiator_state_d$14 , \$initiator_state_d$15  }),
    .S({ \$procmux$1702_CMP , \$procmux$1700_CMP , \$procmux$1698_CMP , \$procmux$1696_CMP , \$procmux$1694_CMP , \$procmux$1692_CMP , \$procmux$1690_CMP , \$procmux$1688_CMP , \$procmux$1686_CMP  }),
    .Y(\$procmux$1685_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1686_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1686_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1688_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1688_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1690_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1690_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1692_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1692_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1694_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1694_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1696_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1696_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1698_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1698_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1700_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1700_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1702_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1702_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1712  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$1713_CMP ),
    .Y(\$procmux$1712_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1714  (
    .A(4'hx),
    .B(\$procmux$1712_Y ),
    .S(\$procmux$1715_CMP ),
    .Y(\$procmux$1714_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1715_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1715_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$1722  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$1727_CMP , \$procmux$1725_CMP , \$procmux$1723_CMP  }),
    .Y(\$procmux$1722_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1723_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1723_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1725_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1725_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1727_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1727_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$1733  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$1748_CMP , \$procmux$1746_CMP , \$procmux$1744_CMP , \$procmux$1742_CMP , \$procmux$1740_CMP , \$procmux$1738_CMP , \$procmux$1736_CMP , \$procmux$1734_CMP  }),
    .Y(\$procmux$1733_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1734_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1734_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1736_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1736_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1738_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1738_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1740_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1740_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1742_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1742_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1744_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1744_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1746_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1746_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1748_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1748_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$1751  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$1762_CMP , \$procmux$1760_CMP , \$procmux$1758_CMP , \$procmux$1756_CMP , \$procmux$1754_CMP , \$procmux$1752_CMP  }),
    .Y(\$procmux$1751_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1752_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1752_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1754_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1754_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1756_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1756_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1758_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1758_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1760_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1760_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1762_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1762_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$1767  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$1780_CMP , \$procmux$1778_CMP , \$procmux$1776_CMP , \$procmux$1774_CMP , \$procmux$1772_CMP , \$procmux$1770_CMP , \$procmux$1768_CMP  }),
    .Y(\$procmux$1767_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1768_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1768_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1770_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1770_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1772_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1772_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1774_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1774_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1776_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1776_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1778_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1778_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1780_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1780_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$initiator_state_d$16 ;
  assign initiator_clear_seq_phase = \$initiator_clear_seq_phase$17 ;
  assign initiator_phase_transition_req = \$initiator_phase_transition_req$18 ;
  assign initiator_isolate_out = \$initiator_isolate_out$19 ;
  assign initiator_clear_out = \$initiator_clear_out$20 ;
  assign receiver_phase_ack = \$receiver_phase_ack$37 ;
  assign receiver_isolate_out = \$receiver_isolate_out$38 ;
  assign receiver_clear_out = \$receiver_clear_out$39 ;
  assign clear_o = \$40y ;
  assign isolate_o = \$41y ;
  assign \$initiator_state_q$23  = 4'h1;
  assign \$procmux$1494_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$36  = \$procmux$1493_Y ;
  assign \$procmux$1502_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$35  = \$procmux$1501_Y ;
  assign \$procmux$1505_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$34  = \$procmux$1504_Y ;
  assign \$procmux$1510_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$39  = \$procmux$1509_Y ;
  assign \$procmux$1515_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$38  = \$procmux$1514_Y ;
  assign \$procmux$1520_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$37  = \$procmux$1519_Y ;
  assign \$procmux$1528_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$33  = \$procmux$1527_Y ;
  assign \$procmux$1536_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$32  = \$procmux$1535_Y ;
  assign \$procmux$1544_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$31  = \$procmux$1543_Y ;
  assign \$procmux$1546_CMP  = \$28y ;
  assign \$receiver_phase_q$29  = \$procmux$1545_Y ;
  assign \$procmux$1549_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$15  = \$procmux$1550_Y ;
  assign \$procmux$1555_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$14  = \$procmux$1556_Y ;
  assign \$procmux$1562_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$13  = \$procmux$1563_Y ;
  assign \$procmux$1570_CMP  = clear_ack_i;
  assign \$initiator_state_d$12  = \$procmux$1571_Y ;
  assign \$procmux$1579_CMP  = clear_ack_i;
  assign \$procmux$1582_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1585_CMP  = \$8y ;
  assign \$initiator_state_d$9  = \$procmux$1586_Y ;
  assign \$procmux$1596_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1599_CMP  = \$8y ;
  assign \$initiator_state_d$10  = \$procmux$1600_Y ;
  assign \$procmux$1610_CMP  = \$8y ;
  assign \$initiator_state_d$11  = \$procmux$1611_Y ;
  assign \$procmux$1620_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$7  = \$procmux$1621_Y ;
  assign \$procmux$1631_CMP  = isolate_ack_i;
  assign \$initiator_state_d$6  = \$procmux$1632_Y ;
  assign \$procmux$1643_CMP  = isolate_ack_i;
  assign \$procmux$1646_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1649_CMP  = \$2y ;
  assign \$initiator_state_d$3  = \$procmux$1650_Y ;
  assign \$procmux$1663_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1666_CMP  = \$2y ;
  assign \$initiator_state_d$4  = \$procmux$1667_Y ;
  assign \$procmux$1680_CMP  = \$2y ;
  assign \$initiator_state_d$5  = \$procmux$1681_Y ;
  assign \$initiator_state_d$16  = \$procmux$1685_Y ;
  assign \$procmux$1713_CMP  = clear_i;
  assign \$initiator_state_d$1  = \$procmux$1714_Y ;
  assign \$initiator_clear_out$20  = \$procmux$1722_Y ;
  assign \$initiator_isolate_out$19  = \$procmux$1733_Y ;
  assign \$initiator_phase_transition_req$18  = \$procmux$1751_Y ;
  assign \$initiator_clear_seq_phase$17  = \$procmux$1767_Y ;
  assign \$24y  = rst_ni;
  assign \$27y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$22y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$40y ;
  wire \$41y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_clear_out$20 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$initiator_clear_seq_phase$17 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_isolate_out$19 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_phase_transition_req$18 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$initiator_state_d$1 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$initiator_state_d$10 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$initiator_state_d$11 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$initiator_state_d$12 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$initiator_state_d$13 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$initiator_state_d$14 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$initiator_state_d$15 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$initiator_state_d$16 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$initiator_state_d$3 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$initiator_state_d$4 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$initiator_state_d$5 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$initiator_state_d$6 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$initiator_state_d$7 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$initiator_state_d$9 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$initiator_state_q$23 ;
  wire \$procmux$1193_Y ;
  wire \$procmux$1194_CMP ;
  wire \$procmux$1195_CMP ;
  wire \$procmux$1196_CMP ;
  wire \$procmux$1197_CMP ;
  wire \$procmux$1199_Y ;
  wire \$procmux$1200_CMP ;
  wire \$procmux$1201_Y ;
  wire \$procmux$1202_CMP ;
  wire \$procmux$1203_CMP ;
  wire \$procmux$1204_CMP ;
  wire \$procmux$1205_CMP ;
  wire \$procmux$1207_Y ;
  wire \$procmux$1208_CMP ;
  wire \$procmux$1210_Y ;
  wire \$procmux$1211_CMP ;
  wire \$procmux$1215_Y ;
  wire \$procmux$1216_CMP ;
  wire \$procmux$1220_Y ;
  wire \$procmux$1221_CMP ;
  wire \$procmux$1225_Y ;
  wire \$procmux$1226_CMP ;
  wire \$procmux$1228_Y ;
  wire \$procmux$1229_CMP ;
  wire \$procmux$1230_CMP ;
  wire \$procmux$1231_CMP ;
  wire \$procmux$1232_CMP ;
  wire \$procmux$1233_Y ;
  wire \$procmux$1234_CMP ;
  wire \$procmux$1236_Y ;
  wire \$procmux$1237_CMP ;
  wire \$procmux$1238_CMP ;
  wire \$procmux$1239_CMP ;
  wire \$procmux$1240_CMP ;
  wire \$procmux$1241_Y ;
  wire \$procmux$1242_CMP ;
  wire \$procmux$1244_Y ;
  wire \$procmux$1245_CMP ;
  wire \$procmux$1246_CMP ;
  wire \$procmux$1247_CMP ;
  wire \$procmux$1248_CMP ;
  wire \$procmux$1249_Y ;
  wire \$procmux$1250_CMP ;
  wire [1:0] \$procmux$1251_Y ;
  wire \$procmux$1252_CMP ;
  wire [3:0] \$procmux$1254_Y ;
  wire \$procmux$1255_CMP ;
  wire [3:0] \$procmux$1256_Y ;
  wire \$procmux$1257_CMP ;
  wire [3:0] \$procmux$1260_Y ;
  wire \$procmux$1261_CMP ;
  wire [3:0] \$procmux$1262_Y ;
  wire \$procmux$1263_CMP ;
  wire [3:0] \$procmux$1267_Y ;
  wire \$procmux$1268_CMP ;
  wire [3:0] \$procmux$1269_Y ;
  wire \$procmux$1270_CMP ;
  wire [3:0] \$procmux$1275_Y ;
  wire \$procmux$1276_CMP ;
  wire [3:0] \$procmux$1277_Y ;
  wire \$procmux$1278_CMP ;
  wire [3:0] \$procmux$1284_Y ;
  wire \$procmux$1285_CMP ;
  wire [3:0] \$procmux$1287_Y ;
  wire \$procmux$1288_CMP ;
  wire [3:0] \$procmux$1290_Y ;
  wire \$procmux$1291_CMP ;
  wire [3:0] \$procmux$1292_Y ;
  wire \$procmux$1293_CMP ;
  wire [3:0] \$procmux$1301_Y ;
  wire \$procmux$1302_CMP ;
  wire [3:0] \$procmux$1304_Y ;
  wire \$procmux$1305_CMP ;
  wire [3:0] \$procmux$1306_Y ;
  wire \$procmux$1307_CMP ;
  wire [3:0] \$procmux$1315_Y ;
  wire \$procmux$1316_CMP ;
  wire [3:0] \$procmux$1317_Y ;
  wire \$procmux$1318_CMP ;
  wire [3:0] \$procmux$1325_Y ;
  wire \$procmux$1326_CMP ;
  wire [3:0] \$procmux$1327_Y ;
  wire \$procmux$1328_CMP ;
  wire [3:0] \$procmux$1336_Y ;
  wire \$procmux$1337_CMP ;
  wire [3:0] \$procmux$1338_Y ;
  wire \$procmux$1339_CMP ;
  wire [3:0] \$procmux$1348_Y ;
  wire \$procmux$1349_CMP ;
  wire [3:0] \$procmux$1351_Y ;
  wire \$procmux$1352_CMP ;
  wire [3:0] \$procmux$1354_Y ;
  wire \$procmux$1355_CMP ;
  wire [3:0] \$procmux$1356_Y ;
  wire \$procmux$1357_CMP ;
  wire [3:0] \$procmux$1368_Y ;
  wire \$procmux$1369_CMP ;
  wire [3:0] \$procmux$1371_Y ;
  wire \$procmux$1372_CMP ;
  wire [3:0] \$procmux$1373_Y ;
  wire \$procmux$1374_CMP ;
  wire [3:0] \$procmux$1385_Y ;
  wire \$procmux$1386_CMP ;
  wire [3:0] \$procmux$1387_Y ;
  wire \$procmux$1388_CMP ;
  wire [3:0] \$procmux$1391_Y ;
  wire \$procmux$1392_CMP ;
  wire \$procmux$1394_CMP ;
  wire \$procmux$1396_CMP ;
  wire \$procmux$1398_CMP ;
  wire \$procmux$1400_CMP ;
  wire \$procmux$1402_CMP ;
  wire \$procmux$1404_CMP ;
  wire \$procmux$1406_CMP ;
  wire \$procmux$1408_CMP ;
  wire [3:0] \$procmux$1418_Y ;
  wire \$procmux$1419_CMP ;
  wire [3:0] \$procmux$1420_Y ;
  wire \$procmux$1421_CMP ;
  wire \$procmux$1428_Y ;
  wire \$procmux$1429_CMP ;
  wire \$procmux$1431_CMP ;
  wire \$procmux$1433_CMP ;
  wire \$procmux$1439_Y ;
  wire \$procmux$1440_CMP ;
  wire \$procmux$1442_CMP ;
  wire \$procmux$1444_CMP ;
  wire \$procmux$1446_CMP ;
  wire \$procmux$1448_CMP ;
  wire \$procmux$1450_CMP ;
  wire \$procmux$1452_CMP ;
  wire \$procmux$1454_CMP ;
  wire \$procmux$1457_Y ;
  wire \$procmux$1458_CMP ;
  wire \$procmux$1460_CMP ;
  wire \$procmux$1462_CMP ;
  wire \$procmux$1464_CMP ;
  wire \$procmux$1466_CMP ;
  wire \$procmux$1468_CMP ;
  wire [1:0] \$procmux$1473_Y ;
  wire \$procmux$1474_CMP ;
  wire \$procmux$1476_CMP ;
  wire \$procmux$1478_CMP ;
  wire \$procmux$1480_CMP ;
  wire \$procmux$1482_CMP ;
  wire \$procmux$1484_CMP ;
  wire \$procmux$1486_CMP ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_clear_out$33 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_clear_out$36 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_clear_out$39 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_isolate_out$32 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_isolate_out$35 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_isolate_out$38 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_phase_ack$31 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_phase_ack$34 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_phase_ack$37 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$receiver_phase_q$29 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.13-284.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(rst_ni),
    .Y(\$22y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(rst_ni),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.18-441.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:526.20-526.61" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:527.22-527.67" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.13-317.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$receiver_phase_q$29 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1193  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$1197_CMP , \$procmux$1196_CMP , \$procmux$1195_CMP , \$procmux$1194_CMP  }),
    .Y(\$procmux$1193_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1194_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$1194_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1195_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$1195_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1196_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$1196_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1197_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$1197_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1199  (
    .A(\$procmux$1193_Y ),
    .B(1'hx),
    .S(\$procmux$1200_CMP ),
    .Y(\$procmux$1199_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1201  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$1205_CMP , \$procmux$1204_CMP , \$procmux$1203_CMP , \$procmux$1202_CMP  }),
    .Y(\$procmux$1201_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1202_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$1202_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1203_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$1203_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1204_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$1204_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1205_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$1205_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1207  (
    .A(\$procmux$1201_Y ),
    .B(1'hx),
    .S(\$procmux$1208_CMP ),
    .Y(\$procmux$1207_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1210  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$1211_CMP ),
    .Y(\$procmux$1210_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1215  (
    .A(\$receiver_clear_out$36 ),
    .B(\$receiver_clear_out$33 ),
    .S(\$procmux$1216_CMP ),
    .Y(\$procmux$1215_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1220  (
    .A(\$receiver_isolate_out$35 ),
    .B(\$receiver_isolate_out$32 ),
    .S(\$procmux$1221_CMP ),
    .Y(\$procmux$1220_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1225  (
    .A(\$receiver_phase_ack$34 ),
    .B(\$receiver_phase_ack$31 ),
    .S(\$procmux$1226_CMP ),
    .Y(\$procmux$1225_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1228  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$1232_CMP , \$procmux$1231_CMP , \$procmux$1230_CMP , \$procmux$1229_CMP  }),
    .Y(\$procmux$1228_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1229_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1229_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1230_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1230_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1231_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1231_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1232_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1232_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1233  (
    .A(1'hx),
    .B(\$procmux$1228_Y ),
    .S(\$procmux$1234_CMP ),
    .Y(\$procmux$1233_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1236  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$1240_CMP , \$procmux$1239_CMP , \$procmux$1238_CMP , \$procmux$1237_CMP  }),
    .Y(\$procmux$1236_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1237_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1237_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1238_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1238_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1239_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1239_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1240_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1240_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1241  (
    .A(1'hx),
    .B(\$procmux$1236_Y ),
    .S(\$procmux$1242_CMP ),
    .Y(\$procmux$1241_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$1244  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$1248_CMP , \$procmux$1247_CMP , \$procmux$1246_CMP , \$procmux$1245_CMP  }),
    .Y(\$procmux$1244_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1245_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$1245_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1246_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$1246_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1247_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$1247_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$1248_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$1248_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1249  (
    .A(1'hx),
    .B(\$procmux$1244_Y ),
    .S(\$procmux$1250_CMP ),
    .Y(\$procmux$1249_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1251  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$1252_CMP ),
    .Y(\$procmux$1251_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1254  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$1255_CMP ),
    .Y(\$procmux$1254_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1256  (
    .A(4'hx),
    .B(\$procmux$1254_Y ),
    .S(\$procmux$1257_CMP ),
    .Y(\$procmux$1256_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1257_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1257_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1260  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$1261_CMP ),
    .Y(\$procmux$1260_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1262  (
    .A(4'hx),
    .B(\$procmux$1260_Y ),
    .S(\$procmux$1263_CMP ),
    .Y(\$procmux$1262_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1263_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1263_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1267  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$1268_CMP ),
    .Y(\$procmux$1267_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1269  (
    .A(4'hx),
    .B(\$procmux$1267_Y ),
    .S(\$procmux$1270_CMP ),
    .Y(\$procmux$1269_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1270_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1270_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1275  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$1276_CMP ),
    .Y(\$procmux$1275_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1277  (
    .A(4'hx),
    .B(\$procmux$1275_Y ),
    .S(\$procmux$1278_CMP ),
    .Y(\$procmux$1277_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1278_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1278_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1284  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$1285_CMP ),
    .Y(\$procmux$1284_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1287  (
    .A(\$procmux$1284_Y ),
    .B(4'hx),
    .S(\$procmux$1288_CMP ),
    .Y(\$procmux$1287_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1290  (
    .A(\$procmux$1287_Y ),
    .B(4'hx),
    .S(\$procmux$1291_CMP ),
    .Y(\$procmux$1290_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1292  (
    .A(4'hx),
    .B(\$procmux$1290_Y ),
    .S(\$procmux$1293_CMP ),
    .Y(\$procmux$1292_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1293_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1293_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1301  (
    .A(\$initiator_state_d$9 ),
    .B(4'h6),
    .S(\$procmux$1302_CMP ),
    .Y(\$procmux$1301_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1304  (
    .A(\$procmux$1301_Y ),
    .B(4'hx),
    .S(\$procmux$1305_CMP ),
    .Y(\$procmux$1304_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1306  (
    .A(4'hx),
    .B(\$procmux$1304_Y ),
    .S(\$procmux$1307_CMP ),
    .Y(\$procmux$1306_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1307_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1307_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1315  (
    .A(\$initiator_state_d$10 ),
    .B(4'h7),
    .S(\$procmux$1316_CMP ),
    .Y(\$procmux$1315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1317  (
    .A(4'hx),
    .B(\$procmux$1315_Y ),
    .S(\$procmux$1318_CMP ),
    .Y(\$procmux$1317_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1318_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1318_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1325  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1326_CMP ),
    .Y(\$procmux$1325_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1327  (
    .A(4'hx),
    .B(\$procmux$1325_Y ),
    .S(\$procmux$1328_CMP ),
    .Y(\$procmux$1327_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1328_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1328_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1336  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1337_CMP ),
    .Y(\$procmux$1336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1338  (
    .A(4'hx),
    .B(\$procmux$1336_Y ),
    .S(\$procmux$1339_CMP ),
    .Y(\$procmux$1338_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1339_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1339_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1348  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$1349_CMP ),
    .Y(\$procmux$1348_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1351  (
    .A(\$procmux$1348_Y ),
    .B(4'hx),
    .S(\$procmux$1352_CMP ),
    .Y(\$procmux$1351_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1354  (
    .A(\$procmux$1351_Y ),
    .B(4'hx),
    .S(\$procmux$1355_CMP ),
    .Y(\$procmux$1354_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1356  (
    .A(4'hx),
    .B(\$procmux$1354_Y ),
    .S(\$procmux$1357_CMP ),
    .Y(\$procmux$1356_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1357_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1357_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1368  (
    .A(\$initiator_state_d$3 ),
    .B(4'h3),
    .S(\$procmux$1369_CMP ),
    .Y(\$procmux$1368_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1371  (
    .A(\$procmux$1368_Y ),
    .B(4'hx),
    .S(\$procmux$1372_CMP ),
    .Y(\$procmux$1371_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1373  (
    .A(4'hx),
    .B(\$procmux$1371_Y ),
    .S(\$procmux$1374_CMP ),
    .Y(\$procmux$1373_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1374_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1374_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1385  (
    .A(\$initiator_state_d$4 ),
    .B(4'h4),
    .S(\$procmux$1386_CMP ),
    .Y(\$procmux$1385_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1387  (
    .A(4'hx),
    .B(\$procmux$1385_Y ),
    .S(\$procmux$1388_CMP ),
    .Y(\$procmux$1387_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1388_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1388_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$1391  (
    .A(4'h1),
    .B({ \$initiator_state_d$1 , \$initiator_state_d$5 , \$initiator_state_d$6 , \$initiator_state_d$7 , \$initiator_state_d$11 , \$initiator_state_d$12 , \$initiator_state_d$13 , \$initiator_state_d$14 , \$initiator_state_d$15  }),
    .S({ \$procmux$1408_CMP , \$procmux$1406_CMP , \$procmux$1404_CMP , \$procmux$1402_CMP , \$procmux$1400_CMP , \$procmux$1398_CMP , \$procmux$1396_CMP , \$procmux$1394_CMP , \$procmux$1392_CMP  }),
    .Y(\$procmux$1391_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1392_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1392_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1394_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1394_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1396_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1396_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1398_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1398_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1400_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1400_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1402_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1402_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1404_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1404_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1406_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1406_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1408_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1408_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1418  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$1419_CMP ),
    .Y(\$procmux$1418_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1420  (
    .A(4'hx),
    .B(\$procmux$1418_Y ),
    .S(\$procmux$1421_CMP ),
    .Y(\$procmux$1420_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1421_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1421_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$1428  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$1433_CMP , \$procmux$1431_CMP , \$procmux$1429_CMP  }),
    .Y(\$procmux$1428_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1429_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1429_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1431_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1431_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1433_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1433_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$1439  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$1454_CMP , \$procmux$1452_CMP , \$procmux$1450_CMP , \$procmux$1448_CMP , \$procmux$1446_CMP , \$procmux$1444_CMP , \$procmux$1442_CMP , \$procmux$1440_CMP  }),
    .Y(\$procmux$1439_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1440_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1440_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1442_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1442_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1444_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1444_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1446_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1446_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1448_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1448_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1450_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1450_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1452_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1452_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1454_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1454_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$1457  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$1468_CMP , \$procmux$1466_CMP , \$procmux$1464_CMP , \$procmux$1462_CMP , \$procmux$1460_CMP , \$procmux$1458_CMP  }),
    .Y(\$procmux$1457_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1458_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1458_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1460_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1460_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1462_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1462_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1464_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1464_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1466_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1466_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1468_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1468_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$1473  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$1486_CMP , \$procmux$1484_CMP , \$procmux$1482_CMP , \$procmux$1480_CMP , \$procmux$1478_CMP , \$procmux$1476_CMP , \$procmux$1474_CMP  }),
    .Y(\$procmux$1473_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1474_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1474_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1476_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1476_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1478_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1478_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1480_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1480_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1482_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1482_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1484_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1484_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1486_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1486_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$initiator_state_d$16 ;
  assign initiator_clear_seq_phase = \$initiator_clear_seq_phase$17 ;
  assign initiator_phase_transition_req = \$initiator_phase_transition_req$18 ;
  assign initiator_isolate_out = \$initiator_isolate_out$19 ;
  assign initiator_clear_out = \$initiator_clear_out$20 ;
  assign receiver_phase_ack = \$receiver_phase_ack$37 ;
  assign receiver_isolate_out = \$receiver_isolate_out$38 ;
  assign receiver_clear_out = \$receiver_clear_out$39 ;
  assign clear_o = \$40y ;
  assign isolate_o = \$41y ;
  assign \$initiator_state_q$23  = 4'h1;
  assign \$procmux$1200_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$36  = \$procmux$1199_Y ;
  assign \$procmux$1208_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$35  = \$procmux$1207_Y ;
  assign \$procmux$1211_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$34  = \$procmux$1210_Y ;
  assign \$procmux$1216_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$39  = \$procmux$1215_Y ;
  assign \$procmux$1221_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$38  = \$procmux$1220_Y ;
  assign \$procmux$1226_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$37  = \$procmux$1225_Y ;
  assign \$procmux$1234_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$33  = \$procmux$1233_Y ;
  assign \$procmux$1242_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$32  = \$procmux$1241_Y ;
  assign \$procmux$1250_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$31  = \$procmux$1249_Y ;
  assign \$procmux$1252_CMP  = \$28y ;
  assign \$receiver_phase_q$29  = \$procmux$1251_Y ;
  assign \$procmux$1255_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$15  = \$procmux$1256_Y ;
  assign \$procmux$1261_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$14  = \$procmux$1262_Y ;
  assign \$procmux$1268_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$13  = \$procmux$1269_Y ;
  assign \$procmux$1276_CMP  = clear_ack_i;
  assign \$initiator_state_d$12  = \$procmux$1277_Y ;
  assign \$procmux$1285_CMP  = clear_ack_i;
  assign \$procmux$1288_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1291_CMP  = \$8y ;
  assign \$initiator_state_d$9  = \$procmux$1292_Y ;
  assign \$procmux$1302_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1305_CMP  = \$8y ;
  assign \$initiator_state_d$10  = \$procmux$1306_Y ;
  assign \$procmux$1316_CMP  = \$8y ;
  assign \$initiator_state_d$11  = \$procmux$1317_Y ;
  assign \$procmux$1326_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$7  = \$procmux$1327_Y ;
  assign \$procmux$1337_CMP  = isolate_ack_i;
  assign \$initiator_state_d$6  = \$procmux$1338_Y ;
  assign \$procmux$1349_CMP  = isolate_ack_i;
  assign \$procmux$1352_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1355_CMP  = \$2y ;
  assign \$initiator_state_d$3  = \$procmux$1356_Y ;
  assign \$procmux$1369_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1372_CMP  = \$2y ;
  assign \$initiator_state_d$4  = \$procmux$1373_Y ;
  assign \$procmux$1386_CMP  = \$2y ;
  assign \$initiator_state_d$5  = \$procmux$1387_Y ;
  assign \$initiator_state_d$16  = \$procmux$1391_Y ;
  assign \$procmux$1419_CMP  = clear_i;
  assign \$initiator_state_d$1  = \$procmux$1420_Y ;
  assign \$initiator_clear_out$20  = \$procmux$1428_Y ;
  assign \$initiator_isolate_out$19  = \$procmux$1439_Y ;
  assign \$initiator_phase_transition_req$18  = \$procmux$1457_Y ;
  assign \$initiator_clear_seq_phase$17  = \$procmux$1473_Y ;
  assign \$24y  = rst_ni;
  assign \$27y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$22y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$40y ;
  wire \$41y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_clear_out$20 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$initiator_clear_seq_phase$17 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_isolate_out$19 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_phase_transition_req$18 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$initiator_state_d$1 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$initiator_state_d$10 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$initiator_state_d$11 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$initiator_state_d$12 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$initiator_state_d$13 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$initiator_state_d$14 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$initiator_state_d$15 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$initiator_state_d$16 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$initiator_state_d$3 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$initiator_state_d$4 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$initiator_state_d$5 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$initiator_state_d$6 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$initiator_state_d$7 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$initiator_state_d$9 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$initiator_state_q$23 ;
  wire [3:0] \$procmux$1007_Y ;
  wire \$procmux$1008_CMP ;
  wire [3:0] \$procmux$1010_Y ;
  wire \$procmux$1011_CMP ;
  wire [3:0] \$procmux$1012_Y ;
  wire \$procmux$1013_CMP ;
  wire [3:0] \$procmux$1021_Y ;
  wire \$procmux$1022_CMP ;
  wire [3:0] \$procmux$1023_Y ;
  wire \$procmux$1024_CMP ;
  wire [3:0] \$procmux$1031_Y ;
  wire \$procmux$1032_CMP ;
  wire [3:0] \$procmux$1033_Y ;
  wire \$procmux$1034_CMP ;
  wire [3:0] \$procmux$1042_Y ;
  wire \$procmux$1043_CMP ;
  wire [3:0] \$procmux$1044_Y ;
  wire \$procmux$1045_CMP ;
  wire [3:0] \$procmux$1054_Y ;
  wire \$procmux$1055_CMP ;
  wire [3:0] \$procmux$1057_Y ;
  wire \$procmux$1058_CMP ;
  wire [3:0] \$procmux$1060_Y ;
  wire \$procmux$1061_CMP ;
  wire [3:0] \$procmux$1062_Y ;
  wire \$procmux$1063_CMP ;
  wire [3:0] \$procmux$1074_Y ;
  wire \$procmux$1075_CMP ;
  wire [3:0] \$procmux$1077_Y ;
  wire \$procmux$1078_CMP ;
  wire [3:0] \$procmux$1079_Y ;
  wire \$procmux$1080_CMP ;
  wire [3:0] \$procmux$1091_Y ;
  wire \$procmux$1092_CMP ;
  wire [3:0] \$procmux$1093_Y ;
  wire \$procmux$1094_CMP ;
  wire [3:0] \$procmux$1097_Y ;
  wire \$procmux$1098_CMP ;
  wire \$procmux$1100_CMP ;
  wire \$procmux$1102_CMP ;
  wire \$procmux$1104_CMP ;
  wire \$procmux$1106_CMP ;
  wire \$procmux$1108_CMP ;
  wire \$procmux$1110_CMP ;
  wire \$procmux$1112_CMP ;
  wire \$procmux$1114_CMP ;
  wire [3:0] \$procmux$1124_Y ;
  wire \$procmux$1125_CMP ;
  wire [3:0] \$procmux$1126_Y ;
  wire \$procmux$1127_CMP ;
  wire \$procmux$1134_Y ;
  wire \$procmux$1135_CMP ;
  wire \$procmux$1137_CMP ;
  wire \$procmux$1139_CMP ;
  wire \$procmux$1145_Y ;
  wire \$procmux$1146_CMP ;
  wire \$procmux$1148_CMP ;
  wire \$procmux$1150_CMP ;
  wire \$procmux$1152_CMP ;
  wire \$procmux$1154_CMP ;
  wire \$procmux$1156_CMP ;
  wire \$procmux$1158_CMP ;
  wire \$procmux$1160_CMP ;
  wire \$procmux$1163_Y ;
  wire \$procmux$1164_CMP ;
  wire \$procmux$1166_CMP ;
  wire \$procmux$1168_CMP ;
  wire \$procmux$1170_CMP ;
  wire \$procmux$1172_CMP ;
  wire \$procmux$1174_CMP ;
  wire [1:0] \$procmux$1179_Y ;
  wire \$procmux$1180_CMP ;
  wire \$procmux$1182_CMP ;
  wire \$procmux$1184_CMP ;
  wire \$procmux$1186_CMP ;
  wire \$procmux$1188_CMP ;
  wire \$procmux$1190_CMP ;
  wire \$procmux$1192_CMP ;
  wire \$procmux$899_Y ;
  wire \$procmux$900_CMP ;
  wire \$procmux$901_CMP ;
  wire \$procmux$902_CMP ;
  wire \$procmux$903_CMP ;
  wire \$procmux$905_Y ;
  wire \$procmux$906_CMP ;
  wire \$procmux$907_Y ;
  wire \$procmux$908_CMP ;
  wire \$procmux$909_CMP ;
  wire \$procmux$910_CMP ;
  wire \$procmux$911_CMP ;
  wire \$procmux$913_Y ;
  wire \$procmux$914_CMP ;
  wire \$procmux$916_Y ;
  wire \$procmux$917_CMP ;
  wire \$procmux$921_Y ;
  wire \$procmux$922_CMP ;
  wire \$procmux$926_Y ;
  wire \$procmux$927_CMP ;
  wire \$procmux$931_Y ;
  wire \$procmux$932_CMP ;
  wire \$procmux$934_Y ;
  wire \$procmux$935_CMP ;
  wire \$procmux$936_CMP ;
  wire \$procmux$937_CMP ;
  wire \$procmux$938_CMP ;
  wire \$procmux$939_Y ;
  wire \$procmux$940_CMP ;
  wire \$procmux$942_Y ;
  wire \$procmux$943_CMP ;
  wire \$procmux$944_CMP ;
  wire \$procmux$945_CMP ;
  wire \$procmux$946_CMP ;
  wire \$procmux$947_Y ;
  wire \$procmux$948_CMP ;
  wire \$procmux$950_Y ;
  wire \$procmux$951_CMP ;
  wire \$procmux$952_CMP ;
  wire \$procmux$953_CMP ;
  wire \$procmux$954_CMP ;
  wire \$procmux$955_Y ;
  wire \$procmux$956_CMP ;
  wire [1:0] \$procmux$957_Y ;
  wire \$procmux$958_CMP ;
  wire [3:0] \$procmux$960_Y ;
  wire \$procmux$961_CMP ;
  wire [3:0] \$procmux$962_Y ;
  wire \$procmux$963_CMP ;
  wire [3:0] \$procmux$966_Y ;
  wire \$procmux$967_CMP ;
  wire [3:0] \$procmux$968_Y ;
  wire \$procmux$969_CMP ;
  wire [3:0] \$procmux$973_Y ;
  wire \$procmux$974_CMP ;
  wire [3:0] \$procmux$975_Y ;
  wire \$procmux$976_CMP ;
  wire [3:0] \$procmux$981_Y ;
  wire \$procmux$982_CMP ;
  wire [3:0] \$procmux$983_Y ;
  wire \$procmux$984_CMP ;
  wire [3:0] \$procmux$990_Y ;
  wire \$procmux$991_CMP ;
  wire [3:0] \$procmux$993_Y ;
  wire \$procmux$994_CMP ;
  wire [3:0] \$procmux$996_Y ;
  wire \$procmux$997_CMP ;
  wire [3:0] \$procmux$998_Y ;
  wire \$procmux$999_CMP ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_clear_out$33 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_clear_out$36 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_clear_out$39 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_isolate_out$32 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_isolate_out$35 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_isolate_out$38 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_phase_ack$31 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_phase_ack$34 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_phase_ack$37 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$receiver_phase_q$29 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.13-284.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(rst_ni),
    .Y(\$22y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(rst_ni),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.18-441.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:526.20-526.61" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:527.22-527.67" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.13-317.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$receiver_phase_q$29 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1007  (
    .A(\$initiator_state_d$9 ),
    .B(4'h6),
    .S(\$procmux$1008_CMP ),
    .Y(\$procmux$1007_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1010  (
    .A(\$procmux$1007_Y ),
    .B(4'hx),
    .S(\$procmux$1011_CMP ),
    .Y(\$procmux$1010_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1012  (
    .A(4'hx),
    .B(\$procmux$1010_Y ),
    .S(\$procmux$1013_CMP ),
    .Y(\$procmux$1012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1013_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1013_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1021  (
    .A(\$initiator_state_d$10 ),
    .B(4'h7),
    .S(\$procmux$1022_CMP ),
    .Y(\$procmux$1021_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1023  (
    .A(4'hx),
    .B(\$procmux$1021_Y ),
    .S(\$procmux$1024_CMP ),
    .Y(\$procmux$1023_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1024_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1024_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1031  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1032_CMP ),
    .Y(\$procmux$1031_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1033  (
    .A(4'hx),
    .B(\$procmux$1031_Y ),
    .S(\$procmux$1034_CMP ),
    .Y(\$procmux$1033_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1034_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1034_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1042  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$1043_CMP ),
    .Y(\$procmux$1042_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1044  (
    .A(4'hx),
    .B(\$procmux$1042_Y ),
    .S(\$procmux$1045_CMP ),
    .Y(\$procmux$1044_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1045_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1045_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1054  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$1055_CMP ),
    .Y(\$procmux$1054_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1057  (
    .A(\$procmux$1054_Y ),
    .B(4'hx),
    .S(\$procmux$1058_CMP ),
    .Y(\$procmux$1057_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1060  (
    .A(\$procmux$1057_Y ),
    .B(4'hx),
    .S(\$procmux$1061_CMP ),
    .Y(\$procmux$1060_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1062  (
    .A(4'hx),
    .B(\$procmux$1060_Y ),
    .S(\$procmux$1063_CMP ),
    .Y(\$procmux$1062_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1063_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1063_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1074  (
    .A(\$initiator_state_d$3 ),
    .B(4'h3),
    .S(\$procmux$1075_CMP ),
    .Y(\$procmux$1074_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1077  (
    .A(\$procmux$1074_Y ),
    .B(4'hx),
    .S(\$procmux$1078_CMP ),
    .Y(\$procmux$1077_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1079  (
    .A(4'hx),
    .B(\$procmux$1077_Y ),
    .S(\$procmux$1080_CMP ),
    .Y(\$procmux$1079_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1080_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1080_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1091  (
    .A(\$initiator_state_d$4 ),
    .B(4'h4),
    .S(\$procmux$1092_CMP ),
    .Y(\$procmux$1091_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1093  (
    .A(4'hx),
    .B(\$procmux$1091_Y ),
    .S(\$procmux$1094_CMP ),
    .Y(\$procmux$1093_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1094_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1094_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$1097  (
    .A(4'h1),
    .B({ \$initiator_state_d$1 , \$initiator_state_d$5 , \$initiator_state_d$6 , \$initiator_state_d$7 , \$initiator_state_d$11 , \$initiator_state_d$12 , \$initiator_state_d$13 , \$initiator_state_d$14 , \$initiator_state_d$15  }),
    .S({ \$procmux$1114_CMP , \$procmux$1112_CMP , \$procmux$1110_CMP , \$procmux$1108_CMP , \$procmux$1106_CMP , \$procmux$1104_CMP , \$procmux$1102_CMP , \$procmux$1100_CMP , \$procmux$1098_CMP  }),
    .Y(\$procmux$1097_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1098_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1098_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1100_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1100_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1102_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1102_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1104_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1104_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1106_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1106_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1108_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1108_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1110_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1110_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1112_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1112_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1114_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1114_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1124  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$1125_CMP ),
    .Y(\$procmux$1124_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$1126  (
    .A(4'hx),
    .B(\$procmux$1124_Y ),
    .S(\$procmux$1127_CMP ),
    .Y(\$procmux$1126_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1127_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$1127_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$1134  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$1139_CMP , \$procmux$1137_CMP , \$procmux$1135_CMP  }),
    .Y(\$procmux$1134_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1135_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1135_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1137_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1137_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1139_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1139_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$1145  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$1160_CMP , \$procmux$1158_CMP , \$procmux$1156_CMP , \$procmux$1154_CMP , \$procmux$1152_CMP , \$procmux$1150_CMP , \$procmux$1148_CMP , \$procmux$1146_CMP  }),
    .Y(\$procmux$1145_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1146_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1146_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1148_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1148_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1150_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1150_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1152_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1152_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1154_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1154_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1156_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1156_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1158_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1158_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1160_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1160_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$1163  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$1174_CMP , \$procmux$1172_CMP , \$procmux$1170_CMP , \$procmux$1168_CMP , \$procmux$1166_CMP , \$procmux$1164_CMP  }),
    .Y(\$procmux$1163_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1164_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$1164_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1166_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1166_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1168_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1168_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1170_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1170_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1172_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1172_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1174_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1174_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$1179  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$1192_CMP , \$procmux$1190_CMP , \$procmux$1188_CMP , \$procmux$1186_CMP , \$procmux$1184_CMP , \$procmux$1182_CMP , \$procmux$1180_CMP  }),
    .Y(\$procmux$1179_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1180_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$1180_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1182_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$1182_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1184_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$1184_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1186_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$1186_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1188_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$1188_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1190_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$1190_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$1192_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$1192_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$899  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$903_CMP , \$procmux$902_CMP , \$procmux$901_CMP , \$procmux$900_CMP  }),
    .Y(\$procmux$899_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$900_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$900_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$901_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$901_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$902_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$902_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$903_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$903_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$905  (
    .A(\$procmux$899_Y ),
    .B(1'hx),
    .S(\$procmux$906_CMP ),
    .Y(\$procmux$905_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$907  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$911_CMP , \$procmux$910_CMP , \$procmux$909_CMP , \$procmux$908_CMP  }),
    .Y(\$procmux$907_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$908_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$908_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$909_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$909_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$910_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$910_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$911_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$911_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$913  (
    .A(\$procmux$907_Y ),
    .B(1'hx),
    .S(\$procmux$914_CMP ),
    .Y(\$procmux$913_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$916  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$917_CMP ),
    .Y(\$procmux$916_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$921  (
    .A(\$receiver_clear_out$36 ),
    .B(\$receiver_clear_out$33 ),
    .S(\$procmux$922_CMP ),
    .Y(\$procmux$921_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$926  (
    .A(\$receiver_isolate_out$35 ),
    .B(\$receiver_isolate_out$32 ),
    .S(\$procmux$927_CMP ),
    .Y(\$procmux$926_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$931  (
    .A(\$receiver_phase_ack$34 ),
    .B(\$receiver_phase_ack$31 ),
    .S(\$procmux$932_CMP ),
    .Y(\$procmux$931_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$934  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$938_CMP , \$procmux$937_CMP , \$procmux$936_CMP , \$procmux$935_CMP  }),
    .Y(\$procmux$934_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$935_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$935_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$936_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$936_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$937_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$937_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$938_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$938_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$939  (
    .A(1'hx),
    .B(\$procmux$934_Y ),
    .S(\$procmux$940_CMP ),
    .Y(\$procmux$939_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$942  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$946_CMP , \$procmux$945_CMP , \$procmux$944_CMP , \$procmux$943_CMP  }),
    .Y(\$procmux$942_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$943_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$943_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$944_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$944_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$945_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$945_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$946_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$946_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$947  (
    .A(1'hx),
    .B(\$procmux$942_Y ),
    .S(\$procmux$948_CMP ),
    .Y(\$procmux$947_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$950  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$954_CMP , \$procmux$953_CMP , \$procmux$952_CMP , \$procmux$951_CMP  }),
    .Y(\$procmux$950_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$951_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$951_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$952_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$952_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$953_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$953_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$954_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$954_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$955  (
    .A(1'hx),
    .B(\$procmux$950_Y ),
    .S(\$procmux$956_CMP ),
    .Y(\$procmux$955_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$957  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$958_CMP ),
    .Y(\$procmux$957_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$960  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$961_CMP ),
    .Y(\$procmux$960_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$962  (
    .A(4'hx),
    .B(\$procmux$960_Y ),
    .S(\$procmux$963_CMP ),
    .Y(\$procmux$962_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$963_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$963_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$966  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$967_CMP ),
    .Y(\$procmux$966_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$968  (
    .A(4'hx),
    .B(\$procmux$966_Y ),
    .S(\$procmux$969_CMP ),
    .Y(\$procmux$968_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$969_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$969_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$973  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$974_CMP ),
    .Y(\$procmux$973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$975  (
    .A(4'hx),
    .B(\$procmux$973_Y ),
    .S(\$procmux$976_CMP ),
    .Y(\$procmux$975_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$976_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$976_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$981  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$982_CMP ),
    .Y(\$procmux$981_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$983  (
    .A(4'hx),
    .B(\$procmux$981_Y ),
    .S(\$procmux$984_CMP ),
    .Y(\$procmux$983_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$984_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$984_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$990  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$991_CMP ),
    .Y(\$procmux$990_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$993  (
    .A(\$procmux$990_Y ),
    .B(4'hx),
    .S(\$procmux$994_CMP ),
    .Y(\$procmux$993_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$996  (
    .A(\$procmux$993_Y ),
    .B(4'hx),
    .S(\$procmux$997_CMP ),
    .Y(\$procmux$996_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$998  (
    .A(4'hx),
    .B(\$procmux$996_Y ),
    .S(\$procmux$999_CMP ),
    .Y(\$procmux$998_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$999_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$999_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$initiator_state_d$16 ;
  assign initiator_clear_seq_phase = \$initiator_clear_seq_phase$17 ;
  assign initiator_phase_transition_req = \$initiator_phase_transition_req$18 ;
  assign initiator_isolate_out = \$initiator_isolate_out$19 ;
  assign initiator_clear_out = \$initiator_clear_out$20 ;
  assign receiver_phase_ack = \$receiver_phase_ack$37 ;
  assign receiver_isolate_out = \$receiver_isolate_out$38 ;
  assign receiver_clear_out = \$receiver_clear_out$39 ;
  assign clear_o = \$40y ;
  assign isolate_o = \$41y ;
  assign \$initiator_state_q$23  = 4'h1;
  assign \$procmux$906_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$36  = \$procmux$905_Y ;
  assign \$procmux$914_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$35  = \$procmux$913_Y ;
  assign \$procmux$917_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$34  = \$procmux$916_Y ;
  assign \$procmux$922_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$39  = \$procmux$921_Y ;
  assign \$procmux$927_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$38  = \$procmux$926_Y ;
  assign \$procmux$932_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$37  = \$procmux$931_Y ;
  assign \$procmux$940_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$33  = \$procmux$939_Y ;
  assign \$procmux$948_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$32  = \$procmux$947_Y ;
  assign \$procmux$956_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$31  = \$procmux$955_Y ;
  assign \$procmux$958_CMP  = \$28y ;
  assign \$receiver_phase_q$29  = \$procmux$957_Y ;
  assign \$procmux$961_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$15  = \$procmux$962_Y ;
  assign \$procmux$967_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$14  = \$procmux$968_Y ;
  assign \$procmux$974_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$13  = \$procmux$975_Y ;
  assign \$procmux$982_CMP  = clear_ack_i;
  assign \$initiator_state_d$12  = \$procmux$983_Y ;
  assign \$procmux$991_CMP  = clear_ack_i;
  assign \$procmux$994_CMP  = initiator_phase_transition_ack;
  assign \$procmux$997_CMP  = \$8y ;
  assign \$initiator_state_d$9  = \$procmux$998_Y ;
  assign \$procmux$1008_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1011_CMP  = \$8y ;
  assign \$initiator_state_d$10  = \$procmux$1012_Y ;
  assign \$procmux$1022_CMP  = \$8y ;
  assign \$initiator_state_d$11  = \$procmux$1023_Y ;
  assign \$procmux$1032_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$7  = \$procmux$1033_Y ;
  assign \$procmux$1043_CMP  = isolate_ack_i;
  assign \$initiator_state_d$6  = \$procmux$1044_Y ;
  assign \$procmux$1055_CMP  = isolate_ack_i;
  assign \$procmux$1058_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1061_CMP  = \$2y ;
  assign \$initiator_state_d$3  = \$procmux$1062_Y ;
  assign \$procmux$1075_CMP  = initiator_phase_transition_ack;
  assign \$procmux$1078_CMP  = \$2y ;
  assign \$initiator_state_d$4  = \$procmux$1079_Y ;
  assign \$procmux$1092_CMP  = \$2y ;
  assign \$initiator_state_d$5  = \$procmux$1093_Y ;
  assign \$initiator_state_d$16  = \$procmux$1097_Y ;
  assign \$procmux$1125_CMP  = clear_i;
  assign \$initiator_state_d$1  = \$procmux$1126_Y ;
  assign \$initiator_clear_out$20  = \$procmux$1134_Y ;
  assign \$initiator_isolate_out$19  = \$procmux$1145_Y ;
  assign \$initiator_phase_transition_req$18  = \$procmux$1163_Y ;
  assign \$initiator_clear_seq_phase$17  = \$procmux$1179_Y ;
  assign \$24y  = rst_ni;
  assign \$27y  = rst_ni;
endmodule

/* src = "rtl/common_cells/cdc_reset_ctrlr.sv:187.8" */
module \cdc_reset_ctrlr_half$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b (clk_i, rst_ni, clear_i, async_req_o, async_ack_i, async_req_i, async_ack_o, isolate_o, isolate_ack_i, clear_o, clear_ack_i, async_next_phase_o, async_next_phase_i);
  wire \$22y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$40y ;
  wire \$41y ;
  wire \$8y ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_clear_out$20 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [1:0] \$initiator_clear_seq_phase$17 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_isolate_out$19 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire \$initiator_phase_transition_req$18 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  wire [3:0] \$initiator_state_d$1 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  wire [3:0] \$initiator_state_d$10 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  wire [3:0] \$initiator_state_d$11 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  wire [3:0] \$initiator_state_d$12 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  wire [3:0] \$initiator_state_d$13 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  wire [3:0] \$initiator_state_d$14 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  wire [3:0] \$initiator_state_d$15 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  wire [3:0] \$initiator_state_d$16 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  wire [3:0] \$initiator_state_d$3 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  wire [3:0] \$initiator_state_d$4 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  wire [3:0] \$initiator_state_d$5 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  wire [3:0] \$initiator_state_d$6 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  wire [3:0] \$initiator_state_d$7 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  wire [3:0] \$initiator_state_d$9 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:373.7-378.10" */
  wire [3:0] \$initiator_state_q$23 ;
  wire \$procmux$605_Y ;
  wire \$procmux$606_CMP ;
  wire \$procmux$607_CMP ;
  wire \$procmux$608_CMP ;
  wire \$procmux$609_CMP ;
  wire \$procmux$611_Y ;
  wire \$procmux$612_CMP ;
  wire \$procmux$613_Y ;
  wire \$procmux$614_CMP ;
  wire \$procmux$615_CMP ;
  wire \$procmux$616_CMP ;
  wire \$procmux$617_CMP ;
  wire \$procmux$619_Y ;
  wire \$procmux$620_CMP ;
  wire \$procmux$622_Y ;
  wire \$procmux$623_CMP ;
  wire \$procmux$627_Y ;
  wire \$procmux$628_CMP ;
  wire \$procmux$632_Y ;
  wire \$procmux$633_CMP ;
  wire \$procmux$637_Y ;
  wire \$procmux$638_CMP ;
  wire \$procmux$640_Y ;
  wire \$procmux$641_CMP ;
  wire \$procmux$642_CMP ;
  wire \$procmux$643_CMP ;
  wire \$procmux$644_CMP ;
  wire \$procmux$645_Y ;
  wire \$procmux$646_CMP ;
  wire \$procmux$648_Y ;
  wire \$procmux$649_CMP ;
  wire \$procmux$650_CMP ;
  wire \$procmux$651_CMP ;
  wire \$procmux$652_CMP ;
  wire \$procmux$653_Y ;
  wire \$procmux$654_CMP ;
  wire \$procmux$656_Y ;
  wire \$procmux$657_CMP ;
  wire \$procmux$658_CMP ;
  wire \$procmux$659_CMP ;
  wire \$procmux$660_CMP ;
  wire \$procmux$661_Y ;
  wire \$procmux$662_CMP ;
  wire [1:0] \$procmux$663_Y ;
  wire \$procmux$664_CMP ;
  wire [3:0] \$procmux$666_Y ;
  wire \$procmux$667_CMP ;
  wire [3:0] \$procmux$668_Y ;
  wire \$procmux$669_CMP ;
  wire [3:0] \$procmux$672_Y ;
  wire \$procmux$673_CMP ;
  wire [3:0] \$procmux$674_Y ;
  wire \$procmux$675_CMP ;
  wire [3:0] \$procmux$679_Y ;
  wire \$procmux$680_CMP ;
  wire [3:0] \$procmux$681_Y ;
  wire \$procmux$682_CMP ;
  wire [3:0] \$procmux$687_Y ;
  wire \$procmux$688_CMP ;
  wire [3:0] \$procmux$689_Y ;
  wire \$procmux$690_CMP ;
  wire [3:0] \$procmux$696_Y ;
  wire \$procmux$697_CMP ;
  wire [3:0] \$procmux$699_Y ;
  wire \$procmux$700_CMP ;
  wire [3:0] \$procmux$702_Y ;
  wire \$procmux$703_CMP ;
  wire [3:0] \$procmux$704_Y ;
  wire \$procmux$705_CMP ;
  wire [3:0] \$procmux$713_Y ;
  wire \$procmux$714_CMP ;
  wire [3:0] \$procmux$716_Y ;
  wire \$procmux$717_CMP ;
  wire [3:0] \$procmux$718_Y ;
  wire \$procmux$719_CMP ;
  wire [3:0] \$procmux$727_Y ;
  wire \$procmux$728_CMP ;
  wire [3:0] \$procmux$729_Y ;
  wire \$procmux$730_CMP ;
  wire [3:0] \$procmux$737_Y ;
  wire \$procmux$738_CMP ;
  wire [3:0] \$procmux$739_Y ;
  wire \$procmux$740_CMP ;
  wire [3:0] \$procmux$748_Y ;
  wire \$procmux$749_CMP ;
  wire [3:0] \$procmux$750_Y ;
  wire \$procmux$751_CMP ;
  wire [3:0] \$procmux$760_Y ;
  wire \$procmux$761_CMP ;
  wire [3:0] \$procmux$763_Y ;
  wire \$procmux$764_CMP ;
  wire [3:0] \$procmux$766_Y ;
  wire \$procmux$767_CMP ;
  wire [3:0] \$procmux$768_Y ;
  wire \$procmux$769_CMP ;
  wire [3:0] \$procmux$780_Y ;
  wire \$procmux$781_CMP ;
  wire [3:0] \$procmux$783_Y ;
  wire \$procmux$784_CMP ;
  wire [3:0] \$procmux$785_Y ;
  wire \$procmux$786_CMP ;
  wire [3:0] \$procmux$797_Y ;
  wire \$procmux$798_CMP ;
  wire [3:0] \$procmux$799_Y ;
  wire \$procmux$800_CMP ;
  wire [3:0] \$procmux$803_Y ;
  wire \$procmux$804_CMP ;
  wire \$procmux$806_CMP ;
  wire \$procmux$808_CMP ;
  wire \$procmux$810_CMP ;
  wire \$procmux$812_CMP ;
  wire \$procmux$814_CMP ;
  wire \$procmux$816_CMP ;
  wire \$procmux$818_CMP ;
  wire \$procmux$820_CMP ;
  wire [3:0] \$procmux$830_Y ;
  wire \$procmux$831_CMP ;
  wire [3:0] \$procmux$832_Y ;
  wire \$procmux$833_CMP ;
  wire \$procmux$840_Y ;
  wire \$procmux$841_CMP ;
  wire \$procmux$843_CMP ;
  wire \$procmux$845_CMP ;
  wire \$procmux$851_Y ;
  wire \$procmux$852_CMP ;
  wire \$procmux$854_CMP ;
  wire \$procmux$856_CMP ;
  wire \$procmux$858_CMP ;
  wire \$procmux$860_CMP ;
  wire \$procmux$862_CMP ;
  wire \$procmux$864_CMP ;
  wire \$procmux$866_CMP ;
  wire \$procmux$869_Y ;
  wire \$procmux$870_CMP ;
  wire \$procmux$872_CMP ;
  wire \$procmux$874_CMP ;
  wire \$procmux$876_CMP ;
  wire \$procmux$878_CMP ;
  wire \$procmux$880_CMP ;
  wire [1:0] \$procmux$885_Y ;
  wire \$procmux$886_CMP ;
  wire \$procmux$888_CMP ;
  wire \$procmux$890_CMP ;
  wire \$procmux$892_CMP ;
  wire \$procmux$894_CMP ;
  wire \$procmux$896_CMP ;
  wire \$procmux$898_CMP ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_clear_out$33 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_clear_out$36 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_clear_out$39 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_isolate_out$32 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_isolate_out$35 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_isolate_out$38 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  wire \$receiver_phase_ack$31 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  wire \$receiver_phase_ack$34 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  wire \$receiver_phase_ack$37 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  wire [1:0] \$receiver_phase_q$29 ;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:209.30" */
  input async_ack_i;
  wire async_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:212.30" */
  output async_ack_o;
  wire async_ack_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:210.30" */
  input [1:0] async_next_phase_i;
  wire [1:0] async_next_phase_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:207.30" */
  output [1:0] async_next_phase_o;
  wire [1:0] async_next_phase_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:211.30" */
  input async_req_i;
  wire async_req_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:208.30" */
  output async_req_o;
  wire async_req_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:205.30" */
  input clear_ack_i;
  wire clear_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:201.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:204.30" */
  output clear_o;
  wire clear_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:199.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:263.30" */
  wire initiator_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:259.30" */
  wire [1:0] initiator_clear_seq_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:262.30" */
  wire initiator_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:261.30" */
  wire initiator_phase_transition_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:260.30" */
  wire initiator_phase_transition_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.21" */
  wire [3:0] initiator_state_d;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:255.40" */
  wire [3:0] initiator_state_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:203.30" */
  input isolate_ack_i;
  wire isolate_ack_i;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:202.30" */
  output isolate_o;
  wire isolate_o;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:419.9" */
  wire receiver_clear_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:418.9" */
  wire receiver_isolate_out;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:415.21" */
  wire [1:0] receiver_next_phase;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.29" */
  wire receiver_phase_ack;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:414.21" */
  wire [1:0] receiver_phase_q;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:416.9" */
  wire receiver_phase_req;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:200.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:284.13-284.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(initiator_phase_transition_ack),
    .B(isolate_ack_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(rst_ni),
    .Y(\$22y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(rst_ni),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:441.18-441.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(receiver_phase_req),
    .B(receiver_phase_ack),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:526.20-526.61" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(initiator_clear_out),
    .B(receiver_clear_out),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:527.22-527.67" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(initiator_isolate_out),
    .B(receiver_isolate_out),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:317.13-317.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(initiator_phase_transition_ack),
    .B(clear_ack_i),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:371.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$initiator_state_q  (
    .AD(4'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(initiator_state_d),
    .Q(initiator_state_q)
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:438.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$receiver_phase_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$receiver_phase_q$29 ),
    .Q(receiver_phase_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$605  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$609_CMP , \$procmux$608_CMP , \$procmux$607_CMP , \$procmux$606_CMP  }),
    .Y(\$procmux$605_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$606_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$606_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$607_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$607_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$608_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$608_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$609_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$609_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$611  (
    .A(\$procmux$605_Y ),
    .B(1'hx),
    .S(\$procmux$612_CMP ),
    .Y(\$procmux$611_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$613  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$617_CMP , \$procmux$616_CMP , \$procmux$615_CMP , \$procmux$614_CMP  }),
    .Y(\$procmux$613_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:506.33-509.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$614_CMP0  (
    .A(receiver_phase_q),
    .B(2'h3),
    .Y(\$procmux$614_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:501.28-504.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$615_CMP0  (
    .A(receiver_phase_q),
    .B(2'h2),
    .Y(\$procmux$615_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:496.30-499.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$616_CMP0  (
    .A(receiver_phase_q),
    .B(2'h1),
    .Y(\$procmux$616_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:491.27-494.12|rtl/common_cells/cdc_reset_ctrlr.sv:490.7-516.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$617_CMP0  (
    .A(receiver_phase_q),
    .Y(\$procmux$617_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$619  (
    .A(\$procmux$613_Y ),
    .B(1'hx),
    .S(\$procmux$620_CMP ),
    .Y(\$procmux$619_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$622  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$623_CMP ),
    .Y(\$procmux$622_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$627  (
    .A(\$receiver_clear_out$36 ),
    .B(\$receiver_clear_out$33 ),
    .S(\$procmux$628_CMP ),
    .Y(\$procmux$627_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$632  (
    .A(\$receiver_isolate_out$35 ),
    .B(\$receiver_isolate_out$32 ),
    .S(\$procmux$633_CMP ),
    .Y(\$procmux$632_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$637  (
    .A(\$receiver_phase_ack$34 ),
    .B(\$receiver_phase_ack$31 ),
    .S(\$procmux$638_CMP ),
    .Y(\$procmux$637_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$640  (
    .A(1'hx),
    .B(4'h2),
    .S({ \$procmux$644_CMP , \$procmux$643_CMP , \$procmux$642_CMP , \$procmux$641_CMP  }),
    .Y(\$procmux$640_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$641_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$641_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$642_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$642_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$643_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$643_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$644_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$644_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$645  (
    .A(1'hx),
    .B(\$procmux$640_Y ),
    .S(\$procmux$646_CMP ),
    .Y(\$procmux$645_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$648  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$652_CMP , \$procmux$651_CMP , \$procmux$650_CMP , \$procmux$649_CMP  }),
    .Y(\$procmux$648_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$649_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$649_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$650_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$650_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$651_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$651_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$652_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$652_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$653  (
    .A(1'hx),
    .B(\$procmux$648_Y ),
    .S(\$procmux$654_CMP ),
    .Y(\$procmux$653_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$656  (
    .A(1'hx),
    .B({ 1'h1, isolate_ack_i, clear_ack_i, 1'h1 }),
    .S({ \$procmux$660_CMP , \$procmux$659_CMP , \$procmux$658_CMP , \$procmux$657_CMP  }),
    .Y(\$procmux$656_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:474.33-478.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$657_CMP0  (
    .A(receiver_next_phase),
    .B(2'h3),
    .Y(\$procmux$657_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:467.28-472.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$658_CMP0  (
    .A(receiver_next_phase),
    .B(2'h2),
    .Y(\$procmux$658_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:460.30-465.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$659_CMP0  (
    .A(receiver_next_phase),
    .B(2'h1),
    .Y(\$procmux$659_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:454.27-458.12|rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$660_CMP0  (
    .A(receiver_next_phase),
    .Y(\$procmux$660_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:453.7-485.14|rtl/common_cells/cdc_reset_ctrlr.sv:452.5-517.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$661  (
    .A(1'hx),
    .B(\$procmux$656_Y ),
    .S(\$procmux$662_CMP ),
    .Y(\$procmux$661_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:442.7-442.47|rtl/common_cells/cdc_reset_ctrlr.sv:441.14-443.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$663  (
    .A(receiver_phase_q),
    .B(receiver_next_phase),
    .S(\$procmux$664_CMP ),
    .Y(\$procmux$663_Y )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:361.11-361.36|rtl/common_cells/cdc_reset_ctrlr.sv:360.9-362.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$666  (
    .A(initiator_state_q),
    .B(4'h0),
    .S(\$procmux$667_CMP ),
    .Y(\$procmux$666_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$668  (
    .A(4'hx),
    .B(\$procmux$666_Y ),
    .S(\$procmux$669_CMP ),
    .Y(\$procmux$668_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$669_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$669_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:351.11-351.40|rtl/common_cells/cdc_reset_ctrlr.sv:350.9-352.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$672  (
    .A(initiator_state_q),
    .B(4'h8),
    .S(\$procmux$673_CMP ),
    .Y(\$procmux$672_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$674  (
    .A(4'hx),
    .B(\$procmux$672_Y ),
    .S(\$procmux$675_CMP ),
    .Y(\$procmux$674_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$675_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$675_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:341.11-341.42|rtl/common_cells/cdc_reset_ctrlr.sv:340.9-342.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$679  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$680_CMP ),
    .Y(\$procmux$679_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$681  (
    .A(4'hx),
    .B(\$procmux$679_Y ),
    .S(\$procmux$682_CMP ),
    .Y(\$procmux$681_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$682_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$682_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:331.11-331.42|rtl/common_cells/cdc_reset_ctrlr.sv:330.9-332.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$687  (
    .A(initiator_state_q),
    .B(4'h7),
    .S(\$procmux$688_CMP ),
    .Y(\$procmux$687_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$689  (
    .A(4'hx),
    .B(\$procmux$687_Y ),
    .S(\$procmux$690_CMP ),
    .Y(\$procmux$689_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$690_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$690_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:322.11-322.52|rtl/common_cells/cdc_reset_ctrlr.sv:321.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$696  (
    .A(initiator_state_q),
    .B(4'h5),
    .S(\$procmux$697_CMP ),
    .Y(\$procmux$696_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$699  (
    .A(\$procmux$696_Y ),
    .B(4'hx),
    .S(\$procmux$700_CMP ),
    .Y(\$procmux$699_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$702  (
    .A(\$procmux$699_Y ),
    .B(4'hx),
    .S(\$procmux$703_CMP ),
    .Y(\$procmux$702_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$704  (
    .A(4'hx),
    .B(\$procmux$702_Y ),
    .S(\$procmux$705_CMP ),
    .Y(\$procmux$704_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$705_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$705_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:320.11-320.46|rtl/common_cells/cdc_reset_ctrlr.sv:319.18-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$713  (
    .A(\$initiator_state_d$9 ),
    .B(4'h6),
    .S(\$procmux$714_CMP ),
    .Y(\$procmux$713_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$716  (
    .A(\$procmux$713_Y ),
    .B(4'hx),
    .S(\$procmux$717_CMP ),
    .Y(\$procmux$716_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$718  (
    .A(4'hx),
    .B(\$procmux$716_Y ),
    .S(\$procmux$719_CMP ),
    .Y(\$procmux$718_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$719_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$719_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:318.11-318.42|rtl/common_cells/cdc_reset_ctrlr.sv:317.9-323.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$727  (
    .A(\$initiator_state_d$10 ),
    .B(4'h7),
    .S(\$procmux$728_CMP ),
    .Y(\$procmux$727_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$729  (
    .A(4'hx),
    .B(\$procmux$727_Y ),
    .S(\$procmux$730_CMP ),
    .Y(\$procmux$729_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$730_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$730_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:308.11-308.37|rtl/common_cells/cdc_reset_ctrlr.sv:307.9-309.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$737  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$738_CMP ),
    .Y(\$procmux$737_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$739  (
    .A(4'hx),
    .B(\$procmux$737_Y ),
    .S(\$procmux$740_CMP ),
    .Y(\$procmux$739_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$740_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$740_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:298.11-298.37|rtl/common_cells/cdc_reset_ctrlr.sv:297.9-299.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$748  (
    .A(initiator_state_q),
    .B(4'h4),
    .S(\$procmux$749_CMP ),
    .Y(\$procmux$748_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$750  (
    .A(4'hx),
    .B(\$procmux$748_Y ),
    .S(\$procmux$751_CMP ),
    .Y(\$procmux$750_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$751_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$751_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:289.11-289.54|rtl/common_cells/cdc_reset_ctrlr.sv:288.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$760  (
    .A(initiator_state_q),
    .B(4'h2),
    .S(\$procmux$761_CMP ),
    .Y(\$procmux$760_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$763  (
    .A(\$procmux$760_Y ),
    .B(4'hx),
    .S(\$procmux$764_CMP ),
    .Y(\$procmux$763_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$766  (
    .A(\$procmux$763_Y ),
    .B(4'hx),
    .S(\$procmux$767_CMP ),
    .Y(\$procmux$766_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$768  (
    .A(4'hx),
    .B(\$procmux$766_Y ),
    .S(\$procmux$769_CMP ),
    .Y(\$procmux$768_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$769_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$769_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:287.11-287.48|rtl/common_cells/cdc_reset_ctrlr.sv:286.18-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$780  (
    .A(\$initiator_state_d$3 ),
    .B(4'h3),
    .S(\$procmux$781_CMP ),
    .Y(\$procmux$780_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$783  (
    .A(\$procmux$780_Y ),
    .B(4'hx),
    .S(\$procmux$784_CMP ),
    .Y(\$procmux$783_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$785  (
    .A(4'hx),
    .B(\$procmux$783_Y ),
    .S(\$procmux$786_CMP ),
    .Y(\$procmux$785_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$786_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$786_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:285.11-285.37|rtl/common_cells/cdc_reset_ctrlr.sv:284.9-290.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$797  (
    .A(\$initiator_state_d$4 ),
    .B(4'h4),
    .S(\$procmux$798_CMP ),
    .Y(\$procmux$797_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$799  (
    .A(4'hx),
    .B(\$procmux$797_Y ),
    .S(\$procmux$800_CMP ),
    .Y(\$procmux$799_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$800_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$800_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd9),
    .WIDTH(32'd4)
  ) \$procmux$803  (
    .A(4'h1),
    .B({ \$initiator_state_d$1 , \$initiator_state_d$5 , \$initiator_state_d$6 , \$initiator_state_d$7 , \$initiator_state_d$11 , \$initiator_state_d$12 , \$initiator_state_d$13 , \$initiator_state_d$14 , \$initiator_state_d$15  }),
    .S({ \$procmux$820_CMP , \$procmux$818_CMP , \$procmux$816_CMP , \$procmux$814_CMP , \$procmux$812_CMP , \$procmux$810_CMP , \$procmux$808_CMP , \$procmux$806_CMP , \$procmux$804_CMP  }),
    .Y(\$procmux$803_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$804_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$804_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$806_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$806_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$808_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$808_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$810_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$810_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$812_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$812_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$814_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$814_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$816_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$816_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$818_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$818_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$820_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$820_CMP )
  );
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:275.11-275.39|rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$830  (
    .A(initiator_state_q),
    .B(4'h1),
    .S(\$procmux$831_CMP ),
    .Y(\$procmux$830_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$832  (
    .A(4'hx),
    .B(\$procmux$830_Y ),
    .S(\$procmux$833_CMP ),
    .Y(\$procmux$832_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:274.9-276.12|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$833_CMP0  (
    .A(initiator_state_q),
    .Y(\$procmux$833_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$840  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$845_CMP , \$procmux$843_CMP , \$procmux$841_CMP  }),
    .Y(\$procmux$840_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$841_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$841_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$843_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$843_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$845_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$845_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$851  (
    .A(1'h0),
    .B(8'hff),
    .S({ \$procmux$866_CMP , \$procmux$864_CMP , \$procmux$862_CMP , \$procmux$860_CMP , \$procmux$858_CMP , \$procmux$856_CMP , \$procmux$854_CMP , \$procmux$852_CMP  }),
    .Y(\$procmux$851_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$852_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$852_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$854_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$854_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$856_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$856_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$858_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$858_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$860_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$860_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$862_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$862_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$864_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$864_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$866_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$866_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$869  (
    .A(1'h0),
    .B(6'h3f),
    .S({ \$procmux$880_CMP , \$procmux$878_CMP , \$procmux$876_CMP , \$procmux$874_CMP , \$procmux$872_CMP , \$procmux$870_CMP  }),
    .Y(\$procmux$869_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:355.17-363.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$870_CMP0  (
    .A(initiator_state_q),
    .B(4'h8),
    .Y(\$procmux$870_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$872_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$872_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$874_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$874_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$876_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$876_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$878_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$878_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$880_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$880_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$885  (
    .A(2'h0),
    .B(14'h15ab),
    .S({ \$procmux$898_CMP , \$procmux$896_CMP , \$procmux$894_CMP , \$procmux$892_CMP , \$procmux$890_CMP , \$procmux$888_CMP , \$procmux$886_CMP  }),
    .Y(\$procmux$885_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:345.19-353.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$886_CMP0  (
    .A(initiator_state_q),
    .B(4'h7),
    .Y(\$procmux$886_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:335.29-343.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$888_CMP0  (
    .A(initiator_state_q),
    .B(4'h5),
    .Y(\$procmux$888_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:326.23-333.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$890_CMP0  (
    .A(initiator_state_q),
    .B(4'h6),
    .Y(\$procmux$890_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:312.14-324.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$892_CMP0  (
    .A(initiator_state_q),
    .B(4'h4),
    .Y(\$procmux$892_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:302.31-310.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$894_CMP0  (
    .A(initiator_state_q),
    .B(4'h2),
    .Y(\$procmux$894_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:293.25-300.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$896_CMP0  (
    .A(initiator_state_q),
    .B(4'h3),
    .Y(\$procmux$896_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:279.16-291.10|rtl/common_cells/cdc_reset_ctrlr.sv:272.5-368.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$898_CMP0  (
    .A(initiator_state_q),
    .B(4'h1),
    .Y(\$procmux$898_CMP )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:427.5" */
  \cdc_4phase_dst$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst  i_state_transition_cdc_dst (
    .async_ack_o(async_ack_o),
    .async_data_i(async_next_phase_i),
    .async_req_i(async_req_i),
    .clk_i(clk_i),
    .data_o(receiver_next_phase),
    .ready_i(receiver_phase_ack),
    .rst_ni(rst_ni),
    .valid_o(receiver_phase_req)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/cdc_reset_ctrlr.sv:398.5" */
  \cdc_4phase_src$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src  i_state_transition_cdc_src (
    .async_ack_i(async_ack_i),
    .async_data_o(async_next_phase_o),
    .async_req_o(async_req_o),
    .clk_i(clk_i),
    .data_i(initiator_clear_seq_phase),
    .ready_o(initiator_phase_transition_ack),
    .rst_ni(rst_ni),
    .valid_i(initiator_phase_transition_req)
  );
  assign initiator_state_d = \$initiator_state_d$16 ;
  assign initiator_clear_seq_phase = \$initiator_clear_seq_phase$17 ;
  assign initiator_phase_transition_req = \$initiator_phase_transition_req$18 ;
  assign initiator_isolate_out = \$initiator_isolate_out$19 ;
  assign initiator_clear_out = \$initiator_clear_out$20 ;
  assign receiver_phase_ack = \$receiver_phase_ack$37 ;
  assign receiver_isolate_out = \$receiver_isolate_out$38 ;
  assign receiver_clear_out = \$receiver_clear_out$39 ;
  assign clear_o = \$40y ;
  assign isolate_o = \$41y ;
  assign \$initiator_state_q$23  = 4'h1;
  assign \$procmux$612_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$36  = \$procmux$611_Y ;
  assign \$procmux$620_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$35  = \$procmux$619_Y ;
  assign \$procmux$623_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$34  = \$procmux$622_Y ;
  assign \$procmux$628_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$39  = \$procmux$627_Y ;
  assign \$procmux$633_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$38  = \$procmux$632_Y ;
  assign \$procmux$638_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$37  = \$procmux$637_Y ;
  assign \$procmux$646_CMP  = receiver_phase_req;
  assign \$receiver_clear_out$33  = \$procmux$645_Y ;
  assign \$procmux$654_CMP  = receiver_phase_req;
  assign \$receiver_isolate_out$32  = \$procmux$653_Y ;
  assign \$procmux$662_CMP  = receiver_phase_req;
  assign \$receiver_phase_ack$31  = \$procmux$661_Y ;
  assign \$procmux$664_CMP  = \$28y ;
  assign \$receiver_phase_q$29  = \$procmux$663_Y ;
  assign \$procmux$667_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$15  = \$procmux$668_Y ;
  assign \$procmux$673_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$14  = \$procmux$674_Y ;
  assign \$procmux$680_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$13  = \$procmux$681_Y ;
  assign \$procmux$688_CMP  = clear_ack_i;
  assign \$initiator_state_d$12  = \$procmux$689_Y ;
  assign \$procmux$697_CMP  = clear_ack_i;
  assign \$procmux$700_CMP  = initiator_phase_transition_ack;
  assign \$procmux$703_CMP  = \$8y ;
  assign \$initiator_state_d$9  = \$procmux$704_Y ;
  assign \$procmux$714_CMP  = initiator_phase_transition_ack;
  assign \$procmux$717_CMP  = \$8y ;
  assign \$initiator_state_d$10  = \$procmux$718_Y ;
  assign \$procmux$728_CMP  = \$8y ;
  assign \$initiator_state_d$11  = \$procmux$729_Y ;
  assign \$procmux$738_CMP  = initiator_phase_transition_ack;
  assign \$initiator_state_d$7  = \$procmux$739_Y ;
  assign \$procmux$749_CMP  = isolate_ack_i;
  assign \$initiator_state_d$6  = \$procmux$750_Y ;
  assign \$procmux$761_CMP  = isolate_ack_i;
  assign \$procmux$764_CMP  = initiator_phase_transition_ack;
  assign \$procmux$767_CMP  = \$2y ;
  assign \$initiator_state_d$3  = \$procmux$768_Y ;
  assign \$procmux$781_CMP  = initiator_phase_transition_ack;
  assign \$procmux$784_CMP  = \$2y ;
  assign \$initiator_state_d$4  = \$procmux$785_Y ;
  assign \$procmux$798_CMP  = \$2y ;
  assign \$initiator_state_d$5  = \$procmux$799_Y ;
  assign \$initiator_state_d$16  = \$procmux$803_Y ;
  assign \$procmux$831_CMP  = clear_i;
  assign \$initiator_state_d$1  = \$procmux$832_Y ;
  assign \$initiator_clear_out$20  = \$procmux$840_Y ;
  assign \$initiator_isolate_out$19  = \$procmux$851_Y ;
  assign \$initiator_phase_transition_req$18  = \$procmux$869_Y ;
  assign \$initiator_clear_seq_phase$17  = \$procmux$885_Y ;
  assign \$24y  = rst_ni;
  assign \$27y  = rst_ni;
endmodule

/* src = "rtl/core_wrap.sv:8.8" */
module \core_wrap$croc_chip.i_croc_soc.i_croc.i_core_wrap (clk_i, rst_ni, ref_clk_i, core_busy_o, test_enable_i, irqs_i, timer0_irq_i, boot_addr_i, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_addr_o, instr_rdata_i, instr_err_i, data_req_o, data_gnt_i, data_rvalid_i, data_we_o, data_be_o, data_addr_o, data_wdata_o
, data_rdata_i, data_err_i, debug_req_i, fetch_enable_i);
  wire [31:0] \$0y ;
  /* src = "rtl/core_wrap.sv:17.23" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "rtl/core_wrap.sv:9.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/core_wrap.sv:44.23" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "rtl/core_wrap.sv:33.23" */
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  /* src = "rtl/core_wrap.sv:32.23" */
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  /* src = "rtl/core_wrap.sv:36.23" */
  input data_err_i;
  wire data_err_i;
  /* src = "rtl/core_wrap.sv:29.23" */
  input data_gnt_i;
  wire data_gnt_i;
  /* src = "rtl/core_wrap.sv:35.23" */
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  /* src = "rtl/core_wrap.sv:28.23" */
  output data_req_o;
  wire data_req_o;
  /* src = "rtl/core_wrap.sv:30.23" */
  input data_rvalid_i;
  wire data_rvalid_i;
  /* src = "rtl/core_wrap.sv:34.23" */
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  /* src = "rtl/core_wrap.sv:31.23" */
  output data_we_o;
  wire data_we_o;
  /* src = "rtl/core_wrap.sv:39.23" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "rtl/core_wrap.sv:42.23" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "rtl/core_wrap.sv:48.15" */
  wire [31:0] ibex_boot_addr;
  /* src = "rtl/core_wrap.sv:23.23" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "rtl/core_wrap.sv:25.23" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "rtl/core_wrap.sv:21.23" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "rtl/core_wrap.sv:24.23" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/core_wrap.sv:20.23" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/core_wrap.sv:22.23" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "rtl/core_wrap.sv:14.22" */
  input [15:0] irqs_i;
  wire [15:0] irqs_i;
  /* src = "rtl/core_wrap.sv:11.16" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/core_wrap.sv:10.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/core_wrap.sv:12.16" */
  input test_enable_i;
  wire test_enable_i;
  /* src = "rtl/core_wrap.sv:15.15" */
  input timer0_irq_i;
  wire timer0_irq_i;
  /* src = "rtl/core_wrap.sv:68.5" */
  \cve2_core$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex  i_ibex (
    .boot_addr_i(ibex_boot_addr),
    .clk_i(clk_i),
    .core_busy_o(core_busy_o),
    .data_addr_o(data_addr_o),
    .data_be_o(data_be_o),
    .data_err_i(data_err_i),
    .data_gnt_i(data_gnt_i),
    .data_rdata_i(data_rdata_i),
    .data_req_o(data_req_o),
    .data_rvalid_i(data_rvalid_i),
    .data_wdata_o(data_wdata_o),
    .data_we_o(data_we_o),
    .debug_req_i(debug_req_i),
    .fetch_enable_i(fetch_enable_i),
    .hart_id_i(32'd0),
    .instr_addr_o(instr_addr_o),
    .instr_err_i(instr_err_i),
    .instr_gnt_i(instr_gnt_i),
    .instr_rdata_i(instr_rdata_i),
    .instr_req_o(instr_req_o),
    .instr_rvalid_i(instr_rvalid_i),
    .irq_external_i(1'h0),
    .irq_fast_i(irqs_i),
    .irq_nm_i(1'h0),
    .irq_software_i(1'h0),
    .irq_timer_i(timer0_irq_i),
    .rst_ni(rst_ni),
    .test_en_i(test_enable_i)
  );
  assign ibex_boot_addr = \$0y ;
  assign \$0y [7:0] = 8'h00;
  assign \$0y [31:8] = boot_addr_i[31:8];
endmodule

/* top =  1  */
/* src = "rtl/croc_chip.sv:8.8" */
module croc_chip(clk_i, rst_ni, ref_clk_i, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, status_o, gpio0_io, gpio1_io, gpio2_io, gpio3_io, gpio4_io, gpio5_io, gpio6_io, gpio7_io, gpio8_io
, gpio9_io, gpio10_io, gpio11_io, gpio12_io, gpio13_io, gpio14_io, gpio15_io, gpio16_io, gpio17_io, gpio18_io, gpio19_io, gpio20_io, gpio21_io, gpio22_io, gpio23_io, gpio24_io, gpio25_io, gpio26_io, gpio27_io, gpio28_io, gpio29_io
, gpio30_io, gpio31_io, unused0_o, unused1_o, unused2_o, unused3_o);
  /* src = "rtl/croc_chip.sv:9.15" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/croc_chip.sv:22.15" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "rtl/croc_chip.sv:25.15" */
  inout gpio0_io;
  wire gpio0_io;
  /* src = "rtl/croc_chip.sv:35.15" */
  inout gpio10_io;
  wire gpio10_io;
  /* src = "rtl/croc_chip.sv:36.15" */
  inout gpio11_io;
  wire gpio11_io;
  /* src = "rtl/croc_chip.sv:37.15" */
  inout gpio12_io;
  wire gpio12_io;
  /* src = "rtl/croc_chip.sv:38.15" */
  inout gpio13_io;
  wire gpio13_io;
  /* src = "rtl/croc_chip.sv:39.15" */
  inout gpio14_io;
  wire gpio14_io;
  /* src = "rtl/croc_chip.sv:40.15" */
  inout gpio15_io;
  wire gpio15_io;
  /* src = "rtl/croc_chip.sv:41.15" */
  inout gpio16_io;
  wire gpio16_io;
  /* src = "rtl/croc_chip.sv:42.15" */
  inout gpio17_io;
  wire gpio17_io;
  /* src = "rtl/croc_chip.sv:43.15" */
  inout gpio18_io;
  wire gpio18_io;
  /* src = "rtl/croc_chip.sv:44.15" */
  inout gpio19_io;
  wire gpio19_io;
  /* src = "rtl/croc_chip.sv:26.15" */
  inout gpio1_io;
  wire gpio1_io;
  /* src = "rtl/croc_chip.sv:45.15" */
  inout gpio20_io;
  wire gpio20_io;
  /* src = "rtl/croc_chip.sv:46.15" */
  inout gpio21_io;
  wire gpio21_io;
  /* src = "rtl/croc_chip.sv:47.15" */
  inout gpio22_io;
  wire gpio22_io;
  /* src = "rtl/croc_chip.sv:48.15" */
  inout gpio23_io;
  wire gpio23_io;
  /* src = "rtl/croc_chip.sv:49.15" */
  inout gpio24_io;
  wire gpio24_io;
  /* src = "rtl/croc_chip.sv:50.15" */
  inout gpio25_io;
  wire gpio25_io;
  /* src = "rtl/croc_chip.sv:51.15" */
  inout gpio26_io;
  wire gpio26_io;
  /* src = "rtl/croc_chip.sv:52.15" */
  inout gpio27_io;
  wire gpio27_io;
  /* src = "rtl/croc_chip.sv:53.15" */
  inout gpio28_io;
  wire gpio28_io;
  /* src = "rtl/croc_chip.sv:54.15" */
  inout gpio29_io;
  wire gpio29_io;
  /* src = "rtl/croc_chip.sv:27.15" */
  inout gpio2_io;
  wire gpio2_io;
  /* src = "rtl/croc_chip.sv:55.15" */
  inout gpio30_io;
  wire gpio30_io;
  /* src = "rtl/croc_chip.sv:56.15" */
  inout gpio31_io;
  wire gpio31_io;
  /* src = "rtl/croc_chip.sv:28.15" */
  inout gpio3_io;
  wire gpio3_io;
  /* src = "rtl/croc_chip.sv:29.15" */
  inout gpio4_io;
  wire gpio4_io;
  /* src = "rtl/croc_chip.sv:30.15" */
  inout gpio5_io;
  wire gpio5_io;
  /* src = "rtl/croc_chip.sv:31.15" */
  inout gpio6_io;
  wire gpio6_io;
  /* src = "rtl/croc_chip.sv:32.15" */
  inout gpio7_io;
  wire gpio7_io;
  /* src = "rtl/croc_chip.sv:33.15" */
  inout gpio8_io;
  wire gpio8_io;
  /* src = "rtl/croc_chip.sv:34.15" */
  inout gpio9_io;
  wire gpio9_io;
  /* src = "rtl/croc_chip.sv:13.15" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "rtl/croc_chip.sv:16.15" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "rtl/croc_chip.sv:17.15" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "rtl/croc_chip.sv:15.15" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "rtl/croc_chip.sv:14.15" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "rtl/croc_chip.sv:11.15" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/croc_chip.sv:10.15" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/croc_chip.sv:62.11" */
  wire soc_clk_i;
  /* src = "rtl/croc_chip.sv:73.11" */
  wire soc_fetch_en_i;
  /* src = "rtl/croc_chip.sv:78.27" */
  wire [31:0] soc_gpio_i;
  /* src = "rtl/croc_chip.sv:79.27" */
  wire [31:0] soc_gpio_o;
  /* src = "rtl/croc_chip.sv:80.27" */
  wire [31:0] soc_gpio_out_en_o;
  /* src = "rtl/croc_chip.sv:67.11" */
  wire soc_jtag_tck_i;
  /* src = "rtl/croc_chip.sv:70.11" */
  wire soc_jtag_tdi_i;
  /* src = "rtl/croc_chip.sv:71.11" */
  wire soc_jtag_tdo_o;
  /* src = "rtl/croc_chip.sv:69.11" */
  wire soc_jtag_tms_i;
  /* src = "rtl/croc_chip.sv:68.11" */
  wire soc_jtag_trst_ni;
  /* src = "rtl/croc_chip.sv:64.11" */
  wire soc_ref_clk_i;
  /* src = "rtl/croc_chip.sv:63.11" */
  wire soc_rst_ni;
  /* src = "rtl/croc_chip.sv:74.11" */
  wire soc_status_o;
  /* src = "rtl/croc_chip.sv:65.11" */
  wire soc_testmode;
  /* src = "rtl/croc_chip.sv:85.12" */
  wire soc_testmode_i;
  /* src = "rtl/croc_chip.sv:93.70" */
  wire soc_uart_rx_i;
  /* src = "rtl/croc_chip.sv:94.70" */
  wire soc_uart_tx_o;
  /* src = "rtl/croc_chip.sv:23.15" */
  output status_o;
  wire status_o;
  /* src = "rtl/croc_chip.sv:19.15" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "rtl/croc_chip.sv:20.15" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "rtl/croc_chip.sv:57.15" */
  output unused0_o;
  wire unused0_o;
  /* src = "rtl/croc_chip.sv:58.15" */
  output unused1_o;
  wire unused1_o;
  /* src = "rtl/croc_chip.sv:59.15" */
  output unused2_o;
  wire unused2_o;
  /* src = "rtl/croc_chip.sv:60.15" */
  output unused3_o;
  wire unused3_o;
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_chip.sv:159.3" */
  \croc_soc$croc_chip.i_croc_soc  i_croc_soc (
    .clk_i(soc_clk_i),
    .fetch_en_i(soc_fetch_en_i),
    .gpio_i(soc_gpio_i),
    .gpio_o(soc_gpio_o),
    .gpio_out_en_o(soc_gpio_out_en_o),
    .jtag_tck_i(soc_jtag_tck_i),
    .jtag_tdi_i(soc_jtag_tdi_i),
    .jtag_tdo_o(soc_jtag_tdo_o),
    .jtag_tms_i(soc_jtag_tms_i),
    .jtag_trst_ni(soc_jtag_trst_ni),
    .ref_clk_i(soc_ref_clk_i),
    .rst_ni(soc_rst_ni),
    .status_o(soc_status_o),
    .testmode_i(1'h0),
    .uart_rx_i(soc_uart_rx_i),
    .uart_tx_o(soc_uart_tx_o)
  );
  /* src = "rtl/croc_chip.sv:82.27" */
  sg13g2_IOPadIn pad_clk_i (
    .p2c(soc_clk_i),
    .pad(clk_i)
  );
  /* src = "rtl/croc_chip.sv:96.27" */
  sg13g2_IOPadIn pad_fetch_en_i (
    .p2c(soc_fetch_en_i),
    .pad(fetch_en_i)
  );
  /* src = "rtl/croc_chip.sv:99.27" */
  sg13g2_IOPadInOut30mA pad_gpio0_io (
    .c2p(soc_gpio_o[0]),
    .c2p_en(soc_gpio_out_en_o[0]),
    .p2c(soc_gpio_i[0]),
    .pad(gpio0_io)
  );
  /* src = "rtl/croc_chip.sv:109.27" */
  sg13g2_IOPadInOut30mA pad_gpio10_io (
    .c2p(soc_gpio_o[10]),
    .c2p_en(soc_gpio_out_en_o[10]),
    .p2c(soc_gpio_i[10]),
    .pad(gpio10_io)
  );
  /* src = "rtl/croc_chip.sv:110.27" */
  sg13g2_IOPadInOut30mA pad_gpio11_io (
    .c2p(soc_gpio_o[11]),
    .c2p_en(soc_gpio_out_en_o[11]),
    .p2c(soc_gpio_i[11]),
    .pad(gpio11_io)
  );
  /* src = "rtl/croc_chip.sv:111.27" */
  sg13g2_IOPadInOut30mA pad_gpio12_io (
    .c2p(soc_gpio_o[12]),
    .c2p_en(soc_gpio_out_en_o[12]),
    .p2c(soc_gpio_i[12]),
    .pad(gpio12_io)
  );
  /* src = "rtl/croc_chip.sv:112.27" */
  sg13g2_IOPadInOut30mA pad_gpio13_io (
    .c2p(soc_gpio_o[13]),
    .c2p_en(soc_gpio_out_en_o[13]),
    .p2c(soc_gpio_i[13]),
    .pad(gpio13_io)
  );
  /* src = "rtl/croc_chip.sv:113.27" */
  sg13g2_IOPadInOut30mA pad_gpio14_io (
    .c2p(soc_gpio_o[14]),
    .c2p_en(soc_gpio_out_en_o[14]),
    .p2c(soc_gpio_i[14]),
    .pad(gpio14_io)
  );
  /* src = "rtl/croc_chip.sv:114.27" */
  sg13g2_IOPadInOut30mA pad_gpio15_io (
    .c2p(soc_gpio_o[15]),
    .c2p_en(soc_gpio_out_en_o[15]),
    .p2c(soc_gpio_i[15]),
    .pad(gpio15_io)
  );
  /* src = "rtl/croc_chip.sv:115.27" */
  sg13g2_IOPadInOut30mA pad_gpio16_io (
    .c2p(soc_gpio_o[16]),
    .c2p_en(soc_gpio_out_en_o[16]),
    .p2c(soc_gpio_i[16]),
    .pad(gpio16_io)
  );
  /* src = "rtl/croc_chip.sv:116.27" */
  sg13g2_IOPadInOut30mA pad_gpio17_io (
    .c2p(soc_gpio_o[17]),
    .c2p_en(soc_gpio_out_en_o[17]),
    .p2c(soc_gpio_i[17]),
    .pad(gpio17_io)
  );
  /* src = "rtl/croc_chip.sv:117.27" */
  sg13g2_IOPadInOut30mA pad_gpio18_io (
    .c2p(soc_gpio_o[18]),
    .c2p_en(soc_gpio_out_en_o[18]),
    .p2c(soc_gpio_i[18]),
    .pad(gpio18_io)
  );
  /* src = "rtl/croc_chip.sv:118.27" */
  sg13g2_IOPadInOut30mA pad_gpio19_io (
    .c2p(soc_gpio_o[19]),
    .c2p_en(soc_gpio_out_en_o[19]),
    .p2c(soc_gpio_i[19]),
    .pad(gpio19_io)
  );
  /* src = "rtl/croc_chip.sv:100.27" */
  sg13g2_IOPadInOut30mA pad_gpio1_io (
    .c2p(soc_gpio_o[1]),
    .c2p_en(soc_gpio_out_en_o[1]),
    .p2c(soc_gpio_i[1]),
    .pad(gpio1_io)
  );
  /* src = "rtl/croc_chip.sv:119.27" */
  sg13g2_IOPadInOut30mA pad_gpio20_io (
    .c2p(soc_gpio_o[20]),
    .c2p_en(soc_gpio_out_en_o[20]),
    .p2c(soc_gpio_i[20]),
    .pad(gpio20_io)
  );
  /* src = "rtl/croc_chip.sv:120.27" */
  sg13g2_IOPadInOut30mA pad_gpio21_io (
    .c2p(soc_gpio_o[21]),
    .c2p_en(soc_gpio_out_en_o[21]),
    .p2c(soc_gpio_i[21]),
    .pad(gpio21_io)
  );
  /* src = "rtl/croc_chip.sv:121.27" */
  sg13g2_IOPadInOut30mA pad_gpio22_io (
    .c2p(soc_gpio_o[22]),
    .c2p_en(soc_gpio_out_en_o[22]),
    .p2c(soc_gpio_i[22]),
    .pad(gpio22_io)
  );
  /* src = "rtl/croc_chip.sv:122.27" */
  sg13g2_IOPadInOut30mA pad_gpio23_io (
    .c2p(soc_gpio_o[23]),
    .c2p_en(soc_gpio_out_en_o[23]),
    .p2c(soc_gpio_i[23]),
    .pad(gpio23_io)
  );
  /* src = "rtl/croc_chip.sv:123.27" */
  sg13g2_IOPadInOut30mA pad_gpio24_io (
    .c2p(soc_gpio_o[24]),
    .c2p_en(soc_gpio_out_en_o[24]),
    .p2c(soc_gpio_i[24]),
    .pad(gpio24_io)
  );
  /* src = "rtl/croc_chip.sv:124.27" */
  sg13g2_IOPadInOut30mA pad_gpio25_io (
    .c2p(soc_gpio_o[25]),
    .c2p_en(soc_gpio_out_en_o[25]),
    .p2c(soc_gpio_i[25]),
    .pad(gpio25_io)
  );
  /* src = "rtl/croc_chip.sv:125.27" */
  sg13g2_IOPadInOut30mA pad_gpio26_io (
    .c2p(soc_gpio_o[26]),
    .c2p_en(soc_gpio_out_en_o[26]),
    .p2c(soc_gpio_i[26]),
    .pad(gpio26_io)
  );
  /* src = "rtl/croc_chip.sv:126.27" */
  sg13g2_IOPadInOut30mA pad_gpio27_io (
    .c2p(soc_gpio_o[27]),
    .c2p_en(soc_gpio_out_en_o[27]),
    .p2c(soc_gpio_i[27]),
    .pad(gpio27_io)
  );
  /* src = "rtl/croc_chip.sv:127.27" */
  sg13g2_IOPadInOut30mA pad_gpio28_io (
    .c2p(soc_gpio_o[28]),
    .c2p_en(soc_gpio_out_en_o[28]),
    .p2c(soc_gpio_i[28]),
    .pad(gpio28_io)
  );
  /* src = "rtl/croc_chip.sv:128.27" */
  sg13g2_IOPadInOut30mA pad_gpio29_io (
    .c2p(soc_gpio_o[29]),
    .c2p_en(soc_gpio_out_en_o[29]),
    .p2c(soc_gpio_i[29]),
    .pad(gpio29_io)
  );
  /* src = "rtl/croc_chip.sv:101.27" */
  sg13g2_IOPadInOut30mA pad_gpio2_io (
    .c2p(soc_gpio_o[2]),
    .c2p_en(soc_gpio_out_en_o[2]),
    .p2c(soc_gpio_i[2]),
    .pad(gpio2_io)
  );
  /* src = "rtl/croc_chip.sv:129.27" */
  sg13g2_IOPadInOut30mA pad_gpio30_io (
    .c2p(soc_gpio_o[30]),
    .c2p_en(soc_gpio_out_en_o[30]),
    .p2c(soc_gpio_i[30]),
    .pad(gpio30_io)
  );
  /* src = "rtl/croc_chip.sv:130.27" */
  sg13g2_IOPadInOut30mA pad_gpio31_io (
    .c2p(soc_gpio_o[31]),
    .c2p_en(soc_gpio_out_en_o[31]),
    .p2c(soc_gpio_i[31]),
    .pad(gpio31_io)
  );
  /* src = "rtl/croc_chip.sv:102.27" */
  sg13g2_IOPadInOut30mA pad_gpio3_io (
    .c2p(soc_gpio_o[3]),
    .c2p_en(soc_gpio_out_en_o[3]),
    .p2c(soc_gpio_i[3]),
    .pad(gpio3_io)
  );
  /* src = "rtl/croc_chip.sv:103.27" */
  sg13g2_IOPadInOut30mA pad_gpio4_io (
    .c2p(soc_gpio_o[4]),
    .c2p_en(soc_gpio_out_en_o[4]),
    .p2c(soc_gpio_i[4]),
    .pad(gpio4_io)
  );
  /* src = "rtl/croc_chip.sv:104.27" */
  sg13g2_IOPadInOut30mA pad_gpio5_io (
    .c2p(soc_gpio_o[5]),
    .c2p_en(soc_gpio_out_en_o[5]),
    .p2c(soc_gpio_i[5]),
    .pad(gpio5_io)
  );
  /* src = "rtl/croc_chip.sv:105.27" */
  sg13g2_IOPadInOut30mA pad_gpio6_io (
    .c2p(soc_gpio_o[6]),
    .c2p_en(soc_gpio_out_en_o[6]),
    .p2c(soc_gpio_i[6]),
    .pad(gpio6_io)
  );
  /* src = "rtl/croc_chip.sv:106.27" */
  sg13g2_IOPadInOut30mA pad_gpio7_io (
    .c2p(soc_gpio_o[7]),
    .c2p_en(soc_gpio_out_en_o[7]),
    .p2c(soc_gpio_i[7]),
    .pad(gpio7_io)
  );
  /* src = "rtl/croc_chip.sv:107.27" */
  sg13g2_IOPadInOut30mA pad_gpio8_io (
    .c2p(soc_gpio_o[8]),
    .c2p_en(soc_gpio_out_en_o[8]),
    .p2c(soc_gpio_i[8]),
    .pad(gpio8_io)
  );
  /* src = "rtl/croc_chip.sv:108.27" */
  sg13g2_IOPadInOut30mA pad_gpio9_io (
    .c2p(soc_gpio_o[9]),
    .c2p_en(soc_gpio_out_en_o[9]),
    .p2c(soc_gpio_i[9]),
    .pad(gpio9_io)
  );
  /* src = "rtl/croc_chip.sv:87.27" */
  sg13g2_IOPadIn pad_jtag_tck_i (
    .p2c(soc_jtag_tck_i),
    .pad(jtag_tck_i)
  );
  /* src = "rtl/croc_chip.sv:90.27" */
  sg13g2_IOPadIn pad_jtag_tdi_i (
    .p2c(soc_jtag_tdi_i),
    .pad(jtag_tdi_i)
  );
  /* src = "rtl/croc_chip.sv:91.27" */
  sg13g2_IOPadOut16mA pad_jtag_tdo_o (
    .c2p(soc_jtag_tdo_o),
    .pad(jtag_tdo_o)
  );
  /* src = "rtl/croc_chip.sv:89.27" */
  sg13g2_IOPadIn pad_jtag_tms_i (
    .p2c(soc_jtag_tms_i),
    .pad(jtag_tms_i)
  );
  /* src = "rtl/croc_chip.sv:88.27" */
  sg13g2_IOPadIn pad_jtag_trst_ni (
    .p2c(soc_jtag_trst_ni),
    .pad(jtag_trst_ni)
  );
  /* src = "rtl/croc_chip.sv:84.27" */
  sg13g2_IOPadIn pad_ref_clk_i (
    .p2c(soc_ref_clk_i),
    .pad(ref_clk_i)
  );
  /* src = "rtl/croc_chip.sv:83.27" */
  sg13g2_IOPadIn pad_rst_ni (
    .p2c(soc_rst_ni),
    .pad(rst_ni)
  );
  /* src = "rtl/croc_chip.sv:97.27" */
  sg13g2_IOPadOut16mA pad_status_o (
    .c2p(soc_status_o),
    .pad(status_o)
  );
  /* src = "rtl/croc_chip.sv:93.27" */
  sg13g2_IOPadIn pad_uart_rx_i (
    .p2c(soc_uart_rx_i),
    .pad(uart_rx_i)
  );
  /* src = "rtl/croc_chip.sv:94.27" */
  sg13g2_IOPadOut16mA pad_uart_tx_o (
    .c2p(soc_uart_tx_o),
    .pad(uart_tx_o)
  );
  /* src = "rtl/croc_chip.sv:131.25" */
  sg13g2_IOPadOut16mA pad_unused0_o (
    .c2p(soc_status_o),
    .pad(unused0_o)
  );
  /* src = "rtl/croc_chip.sv:132.25" */
  sg13g2_IOPadOut16mA pad_unused1_o (
    .c2p(soc_status_o),
    .pad(unused1_o)
  );
  /* src = "rtl/croc_chip.sv:133.25" */
  sg13g2_IOPadOut16mA pad_unused2_o (
    .c2p(soc_status_o),
    .pad(unused2_o)
  );
  /* src = "rtl/croc_chip.sv:134.25" */
  sg13g2_IOPadOut16mA pad_unused3_o (
    .c2p(soc_status_o),
    .pad(unused3_o)
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:136.46" */
  sg13g2_IOPadVdd pad_vdd0 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:137.46" */
  sg13g2_IOPadVdd pad_vdd1 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:138.46" */
  sg13g2_IOPadVdd pad_vdd2 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:139.46" */
  sg13g2_IOPadVdd pad_vdd3 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:146.48" */
  sg13g2_IOPadIOVdd pad_vddio0 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:147.48" */
  sg13g2_IOPadIOVdd pad_vddio1 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:148.48" */
  sg13g2_IOPadIOVdd pad_vddio2 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:149.48" */
  sg13g2_IOPadIOVdd pad_vddio3 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:141.46" */
  sg13g2_IOPadVss pad_vss0 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:142.46" */
  sg13g2_IOPadVss pad_vss1 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:143.46" */
  sg13g2_IOPadVss pad_vss2 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:144.46" */
  sg13g2_IOPadVss pad_vss3 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:151.48" */
  sg13g2_IOPadIOVss pad_vssio0 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:152.48" */
  sg13g2_IOPadIOVss pad_vssio1 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:153.48" */
  sg13g2_IOPadIOVss pad_vssio2 (
  );
  /* keep = "true" */
  /* src = "rtl/croc_chip.sv:154.48" */
  sg13g2_IOPadIOVss pad_vssio3 (
  );
  assign soc_testmode_i = 1'h0;
endmodule

/* src = "rtl/croc_domain.sv:8.8" */
module \croc_domain$croc_chip.i_croc_soc.i_croc (clk_i, rst_ni, ref_clk_i, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, testmode_i, gpio_i, gpio_o, gpio_out_en_o, gpio_in_sync_o, user_sbr_obi_req_o, user_sbr_obi_rsp_i, user_mgr_obi_req_i, user_mgr_obi_rsp_o, interrupts_i
, core_busy_o);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  /* src = "rtl/croc_domain.sv:133.34" */
  wire [443:0] all_periph_obi_req;
  /* src = "rtl/croc_domain.sv:134.34" */
  wire [233:0] all_periph_obi_rsp;
  /* src = "rtl/croc_domain.sv:97.34" */
  wire [369:0] all_sbr_obi_req;
  /* src = "rtl/croc_domain.sv:98.34" */
  wire [194:0] all_sbr_obi_rsp;
  /* src = "rtl/croc_domain.sv:52.16" */
  wire [31:0] boot_addr;
  /* src = "rtl/croc_domain.sv:11.21" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/croc_domain.sv:43.16" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "rtl/croc_domain.sv:82.17" */
  wire [71:0] core_data_obi_req;
  /* src = "rtl/croc_domain.sv:83.17" */
  wire [36:0] core_data_obi_rsp;
  /* src = "rtl/croc_domain.sv:73.17" */
  wire [71:0] core_instr_obi_req;
  /* src = "rtl/croc_domain.sv:74.17" */
  wire [36:0] core_instr_obi_rsp;
  /* src = "rtl/croc_domain.sv:141.17" */
  wire [73:0] dbg_mem_obi_req;
  /* src = "rtl/croc_domain.sv:142.17" */
  wire [38:0] dbg_mem_obi_rsp;
  /* src = "rtl/croc_domain.sv:88.17" */
  wire [71:0] dbg_req_obi_req;
  /* src = "rtl/croc_domain.sv:89.17" */
  wire [36:0] dbg_req_obi_rsp;
  /* src = "rtl/croc_domain.sv:50.9" */
  wire debug_req;
  /* src = "rtl/croc_domain.sv:228.17" */
  wire [40:0] dmi_req;
  /* src = "rtl/croc_domain.sv:227.35" */
  wire dmi_req_ready;
  /* src = "rtl/croc_domain.sv:227.20" */
  wire dmi_req_valid;
  /* src = "rtl/croc_domain.sv:229.18" */
  wire [33:0] dmi_resp;
  /* src = "rtl/croc_domain.sv:227.66" */
  wire dmi_resp_ready;
  /* src = "rtl/croc_domain.sv:227.50" */
  wire dmi_resp_valid;
  /* src = "rtl/croc_domain.sv:227.9" */
  wire dmi_rst_n;
  /* src = "rtl/croc_domain.sv:137.17" */
  wire [73:0] error_obi_req;
  /* src = "rtl/croc_domain.sv:138.17" */
  wire [38:0] error_obi_rsp;
  /* src = "rtl/croc_domain.sv:15.21" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "rtl/croc_domain.sv:51.9" */
  wire fetch_enable;
  /* src = "rtl/croc_domain.sv:347.39" */
  wire [3:0] \gen_sram_bank[0].bank_be ;
  /* src = "rtl/croc_domain.sv:344.37" */
  wire [31:0] \gen_sram_bank[0].bank_byte_addr ;
  /* src = "rtl/croc_domain.sv:343.30" */
  wire \gen_sram_bank[0].bank_gnt ;
  /* src = "rtl/croc_domain.sv:346.49" */
  wire [31:0] \gen_sram_bank[0].bank_rdata ;
  /* src = "rtl/croc_domain.sv:343.11" */
  wire \gen_sram_bank[0].bank_req ;
  /* src = "rtl/croc_domain.sv:343.40" */
  wire \gen_sram_bank[0].bank_single_err ;
  /* src = "rtl/croc_domain.sv:346.37" */
  wire [31:0] \gen_sram_bank[0].bank_wdata ;
  /* src = "rtl/croc_domain.sv:343.21" */
  wire \gen_sram_bank[0].bank_we ;
  /* src = "rtl/croc_domain.sv:345.35" */
  wire [8:0] \gen_sram_bank[0].bank_word_addr ;
  /* src = "rtl/croc_domain.sv:347.39" */
  wire [3:0] \gen_sram_bank[1].bank_be ;
  /* src = "rtl/croc_domain.sv:344.37" */
  wire [31:0] \gen_sram_bank[1].bank_byte_addr ;
  /* src = "rtl/croc_domain.sv:343.30" */
  wire \gen_sram_bank[1].bank_gnt ;
  /* src = "rtl/croc_domain.sv:346.49" */
  wire [31:0] \gen_sram_bank[1].bank_rdata ;
  /* src = "rtl/croc_domain.sv:343.11" */
  wire \gen_sram_bank[1].bank_req ;
  /* src = "rtl/croc_domain.sv:343.40" */
  wire \gen_sram_bank[1].bank_single_err ;
  /* src = "rtl/croc_domain.sv:346.37" */
  wire [31:0] \gen_sram_bank[1].bank_wdata ;
  /* src = "rtl/croc_domain.sv:343.21" */
  wire \gen_sram_bank[1].bank_we ;
  /* src = "rtl/croc_domain.sv:345.35" */
  wire [8:0] \gen_sram_bank[1].bank_word_addr ;
  /* src = "rtl/croc_domain.sv:26.32" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "rtl/croc_domain.sv:30.32" */
  output [31:0] gpio_in_sync_o;
  wire [31:0] gpio_in_sync_o;
  /* src = "rtl/croc_domain.sv:56.9" */
  wire gpio_irq;
  /* src = "rtl/croc_domain.sv:27.32" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "rtl/croc_domain.sv:153.17" */
  wire [73:0] gpio_obi_req;
  /* src = "rtl/croc_domain.sv:154.17" */
  wire [38:0] gpio_obi_rsp;
  /* src = "rtl/croc_domain.sv:28.32" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* init = 32'd2171776 */
  /* src = "rtl/croc_domain.sv:225.18" */
  wire [31:0] hartinfo;
  /* src = "rtl/croc_domain.sv:59.16" */
  wire [15:0] interrupts;
  /* src = "rtl/croc_domain.sv:42.38" */
  input [3:0] interrupts_i;
  wire [3:0] interrupts_i;
  /* src = "rtl/croc_domain.sv:17.21" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "rtl/croc_domain.sv:18.21" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "rtl/croc_domain.sv:19.21" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "rtl/croc_domain.sv:20.21" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "rtl/croc_domain.sv:21.21" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "rtl/croc_domain.sv:418.50" */
  wire [2:0] periph_idx;
  /* src = "rtl/croc_domain.sv:13.21" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/croc_domain.sv:12.21" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/croc_domain.sv:503.39" */
  wire [3:0] soc_ctrl_hw2reg;
  /* src = "rtl/croc_domain.sv:145.17" */
  wire [73:0] soc_ctrl_obi_req;
  /* src = "rtl/croc_domain.sv:146.17" */
  wire [38:0] soc_ctrl_obi_rsp;
  /* src = "rtl/croc_domain.sv:502.39" */
  wire [66:0] soc_ctrl_reg2hw;
  /* src = "rtl/croc_domain.sv:470.13" */
  wire [69:0] soc_ctrl_reg_req;
  /* src = "rtl/croc_domain.sv:471.13" */
  wire [33:0] soc_ctrl_reg_rsp;
  /* src = "rtl/croc_domain.sv:49.9" */
  wire sram_impl;
  /* src = "rtl/croc_domain.sv:14.21" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/croc_domain.sv:57.9" */
  wire timer0_irq0;
  /* src = "rtl/croc_domain.sv:58.9" */
  wire timer0_irq1;
  /* src = "rtl/croc_domain.sv:157.17" */
  wire [73:0] timer_obi_req;
  /* src = "rtl/croc_domain.sv:158.17" */
  wire [38:0] timer_obi_rsp;
  /* src = "rtl/croc_domain.sv:55.9" */
  wire uart_irq;
  /* src = "rtl/croc_domain.sv:149.17" */
  wire [73:0] uart_obi_req;
  /* src = "rtl/croc_domain.sv:150.17" */
  wire [38:0] uart_obi_rsp;
  /* src = "rtl/croc_domain.sv:524.13" */
  wire [69:0] uart_reg_req;
  /* src = "rtl/croc_domain.sv:525.13" */
  wire [33:0] uart_reg_rsp;
  /* src = "rtl/croc_domain.sv:23.21" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "rtl/croc_domain.sv:24.21" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "rtl/croc_domain.sv:39.24" */
  input [71:0] user_mgr_obi_req_i;
  wire [71:0] user_mgr_obi_req_i;
  /* src = "rtl/croc_domain.sv:40.24" */
  output [36:0] user_mgr_obi_rsp_o;
  wire [36:0] user_mgr_obi_rsp_o;
  /* src = "rtl/croc_domain.sv:35.24" */
  output [73:0] user_sbr_obi_req_o;
  wire [73:0] user_sbr_obi_req_o;
  /* src = "rtl/croc_domain.sv:36.24" */
  input [38:0] user_sbr_obi_rsp_i;
  wire [38:0] user_sbr_obi_rsp_i;
  /* src = "rtl/croc_domain.sv:111.17" */
  wire [73:0] xbar_error_obi_req;
  /* src = "rtl/croc_domain.sv:112.17" */
  wire [38:0] xbar_error_obi_rsp;
  /* src = "rtl/croc_domain.sv:103.36" */
  wire [147:0] xbar_mem_bank_obi_req;
  /* src = "rtl/croc_domain.sv:104.36" */
  wire [77:0] xbar_mem_bank_obi_rsp;
  /* src = "rtl/croc_domain.sv:107.17" */
  wire [73:0] xbar_periph_obi_req;
  /* src = "rtl/croc_domain.sv:108.17" */
  wire [38:0] xbar_periph_obi_rsp;
  /* src = "rtl/croc_domain.sv:486.18-486.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(soc_ctrl_obi_req[41]),
    .Y(\$1y )
  );
  /* src = "rtl/croc_domain.sv:504.28-504.66" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(soc_ctrl_reg2hw[34]),
    .B(fetch_en_i),
    .Y(\$2y )
  );
  /* src = "rtl/croc_domain.sv:540.18-540.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(uart_obi_req[41]),
    .Y(\$3y )
  );
  /* src = "rtl/croc_domain.sv:606.19-606.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(timer_obi_req[41]),
    .Y(\$4y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:377.7" */
  \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram  \gen_sram_bank[0].i_sram  (
    .addr_i(\gen_sram_bank[0].bank_word_addr ),
    .be_i(\gen_sram_bank[0].bank_be ),
    .clk_i(clk_i),
    .impl_i(sram_impl),
    .rdata_o(\gen_sram_bank[0].bank_rdata ),
    .req_i(\gen_sram_bank[0].bank_req ),
    .rst_ni(rst_ni),
    .wdata_i(\gen_sram_bank[0].bank_wdata ),
    .we_i(\gen_sram_bank[0].bank_we )
  );
  /* src = "rtl/croc_domain.sv:353.7" */
  \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram_shim  \gen_sram_bank[0].i_sram_shim  (
    .addr_o(\gen_sram_bank[0].bank_byte_addr ),
    .be_o(\gen_sram_bank[0].bank_be ),
    .clk_i(clk_i),
    .gnt_i(1'h1),
    .obi_req_i(xbar_mem_bank_obi_req[73:0]),
    .obi_rsp_o(xbar_mem_bank_obi_rsp[38:0]),
    .rdata_i(\gen_sram_bank[0].bank_rdata ),
    .req_o(\gen_sram_bank[0].bank_req ),
    .rst_ni(rst_ni),
    .wdata_o(\gen_sram_bank[0].bank_wdata ),
    .we_o(\gen_sram_bank[0].bank_we )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:377.7" */
  \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram  \gen_sram_bank[1].i_sram  (
    .addr_i(\gen_sram_bank[1].bank_word_addr ),
    .be_i(\gen_sram_bank[1].bank_be ),
    .clk_i(clk_i),
    .impl_i(sram_impl),
    .rdata_o(\gen_sram_bank[1].bank_rdata ),
    .req_i(\gen_sram_bank[1].bank_req ),
    .rst_ni(rst_ni),
    .wdata_i(\gen_sram_bank[1].bank_wdata ),
    .we_i(\gen_sram_bank[1].bank_we )
  );
  /* src = "rtl/croc_domain.sv:353.7" */
  \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram_shim  \gen_sram_bank[1].i_sram_shim  (
    .addr_o(\gen_sram_bank[1].bank_byte_addr ),
    .be_o(\gen_sram_bank[1].bank_be ),
    .clk_i(clk_i),
    .gnt_i(1'h1),
    .obi_req_i(xbar_mem_bank_obi_req[147:74]),
    .obi_rsp_o(xbar_mem_bank_obi_rsp[77:39]),
    .rdata_i(\gen_sram_bank[1].bank_rdata ),
    .req_o(\gen_sram_bank[1].bank_req ),
    .rst_ni(rst_ni),
    .wdata_o(\gen_sram_bank[1].bank_wdata ),
    .we_o(\gen_sram_bank[1].bank_we )
  );
  /* src = "rtl/croc_domain.sv:426.5" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_addr_decode_periphs  i_addr_decode_periphs (
    .addr_i(xbar_periph_obi_req[73:42]),
    .addr_map_i(480'h000000010000000000040000000000020300000003001000000000030300200003003000000000040300500003006000000000050300a0000300b000),
    .default_idx_i(3'h0),
    .en_default_idx_i(1'h1),
    .idx_o(periph_idx)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:179.5" */
  \core_wrap$croc_chip.i_croc_soc.i_croc.i_core_wrap  i_core_wrap (
    .boot_addr_i(boot_addr),
    .clk_i(clk_i),
    .core_busy_o(core_busy_o),
    .data_addr_o(core_data_obi_req[71:40]),
    .data_be_o(core_data_obi_req[38:35]),
    .data_err_i(core_data_obi_rsp[3]),
    .data_gnt_i(core_data_obi_rsp[1]),
    .data_rdata_i(core_data_obi_rsp[36:5]),
    .data_req_o(core_data_obi_req[0]),
    .data_rvalid_i(core_data_obi_rsp[0]),
    .data_wdata_o(core_data_obi_req[34:3]),
    .data_we_o(core_data_obi_req[39]),
    .debug_req_i(debug_req),
    .fetch_enable_i(fetch_enable),
    .instr_addr_o(core_instr_obi_req[71:40]),
    .instr_err_i(core_instr_obi_rsp[3]),
    .instr_gnt_i(core_instr_obi_rsp[1]),
    .instr_rdata_i(core_instr_obi_rsp[36:5]),
    .instr_req_o(core_instr_obi_req[0]),
    .instr_rvalid_i(core_instr_obi_rsp[0]),
    .irqs_i(interrupts),
    .ref_clk_i(ref_clk_i),
    .rst_ni(rst_ni),
    .test_enable_i(testmode_i),
    .timer0_irq_i(timer0_irq0)
  );
  /* src = "rtl/croc_domain.sv:258.5" */
  \dm_obi_top$croc_chip.i_croc_soc.i_croc.i_dm_top  i_dm_top (
    .clk_i(clk_i),
    .debug_req_o(debug_req),
    .dmi_req_i(dmi_req),
    .dmi_req_ready_o(dmi_req_ready),
    .dmi_req_valid_i(dmi_req_valid),
    .dmi_resp_o(dmi_resp),
    .dmi_resp_ready_i(dmi_resp_ready),
    .dmi_resp_valid_o(dmi_resp_valid),
    .dmi_rst_ni(dmi_rst_n),
    .hartinfo_i(32'd2171776),
    .master_addr_o(dbg_req_obi_req[71:40]),
    .master_be_o(dbg_req_obi_req[38:35]),
    .master_err_i(dbg_req_obi_rsp[3]),
    .master_gnt_i(dbg_req_obi_rsp[1]),
    .master_other_err_i(1'h0),
    .master_rdata_i(dbg_req_obi_rsp[36:5]),
    .master_req_o(dbg_req_obi_req[0]),
    .master_rvalid_i(dbg_req_obi_rsp[0]),
    .master_wdata_o(dbg_req_obi_req[34:3]),
    .master_we_o(dbg_req_obi_req[39]),
    .rst_ni(rst_ni),
    .slave_addr_i(dbg_mem_obi_req[73:42]),
    .slave_aid_i(dbg_mem_obi_req[4:2]),
    .slave_be_i(dbg_mem_obi_req[40:37]),
    .slave_gnt_o(dbg_mem_obi_rsp[1]),
    .slave_rdata_o(dbg_mem_obi_rsp[38:7]),
    .slave_req_i(dbg_mem_obi_req[0]),
    .slave_rid_o(dbg_mem_obi_rsp[6:4]),
    .slave_rvalid_o(dbg_mem_obi_rsp[0]),
    .slave_wdata_i(dbg_mem_obi_req[36:5]),
    .slave_we_i(dbg_mem_obi_req[41]),
    .testmode_i(testmode_i),
    .unavailable_i(1'h0)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:233.5" */
  \dmi_jtag$croc_chip.i_croc_soc.i_croc.i_dmi_jtag  i_dmi_jtag (
    .clk_i(clk_i),
    .dmi_req_o(dmi_req),
    .dmi_req_ready_i(dmi_req_ready),
    .dmi_req_valid_o(dmi_req_valid),
    .dmi_resp_i(dmi_resp),
    .dmi_resp_ready_o(dmi_resp_ready),
    .dmi_resp_valid_i(dmi_resp_valid),
    .dmi_rst_no(dmi_rst_n),
    .rst_ni(rst_ni),
    .tck_i(jtag_tck_i),
    .td_i(jtag_tdi_i),
    .td_o(jtag_tdo_o),
    .testmode_i(testmode_i),
    .tms_i(jtag_tms_i),
    .trst_ni(jtag_trst_ni)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:584.5" */
  \gpio$croc_chip.i_croc_soc.i_croc.i_gpio  i_gpio (
    .clk_i(clk_i),
    .gpio_i(gpio_i),
    .gpio_in_sync_o(gpio_in_sync_o),
    .gpio_o(gpio_o),
    .gpio_out_en_o(gpio_out_en_o),
    .interrupt_o(gpio_irq),
    .obi_req_i(gpio_obi_req),
    .obi_rsp_o(gpio_obi_rsp),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/croc_domain.sv:323.5" */
  \obi_xbar$croc_chip.i_croc_soc.i_croc.i_main_xbar  i_main_xbar (
    .addr_map_i(384'h000000042000000080000000000000031000080010001000000000021000000010000800000000010000000010000000),
    .clk_i(clk_i),
    .default_idx_i(12'h000),
    .en_default_idx_i(4'hf),
    .mgr_ports_req_o(all_sbr_obi_req),
    .mgr_ports_rsp_i(all_sbr_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_ports_req_i({ core_instr_obi_req, core_data_obi_req, dbg_req_obi_req, user_mgr_obi_req_i }),
    .sbr_ports_rsp_o({ core_instr_obi_rsp, core_data_obi_rsp, dbg_req_obi_rsp, user_mgr_obi_rsp_o }),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/croc_domain.sv:442.5" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_obi_demux  i_obi_demux (
    .clk_i(clk_i),
    .mgr_ports_req_o(all_periph_obi_req),
    .mgr_ports_rsp_i(all_periph_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_port_req_i(xbar_periph_obi_req),
    .sbr_port_rsp_o(xbar_periph_obi_rsp),
    .sbr_port_select_i(periph_idx)
  );
  /* src = "rtl/croc_domain.sv:461.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_periph_err  i_periph_err (
    .clk_i(clk_i),
    .obi_req_i(error_obi_req),
    .obi_rsp_o(error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:513.5" */
  \soc_ctrl_reg_top$croc_chip.i_croc_soc.i_croc.i_soc_ctrl  i_soc_ctrl (
    .clk_i(clk_i),
    .devmode_i(1'h0),
    .hw2reg(4'h0),
    .reg2hw(soc_ctrl_reg2hw),
    .reg_req_i(soc_ctrl_reg_req),
    .reg_rsp_o(soc_ctrl_reg_rsp),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/croc_domain.sv:480.5" */
  \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl_translate  i_soc_ctrl_translate (
    .add_i(soc_ctrl_obi_req[73:42]),
    .be_i(soc_ctrl_obi_req[40:37]),
    .clk_i(clk_i),
    .gnt_o(soc_ctrl_obi_rsp[1]),
    .id_i(soc_ctrl_obi_req[4:2]),
    .r_id_o(soc_ctrl_obi_rsp[6:4]),
    .r_opc_o(soc_ctrl_obi_rsp[3]),
    .r_rdata_o(soc_ctrl_obi_rsp[38:7]),
    .r_valid_o(soc_ctrl_obi_rsp[0]),
    .reg_req_o(soc_ctrl_reg_req),
    .reg_rsp_i(soc_ctrl_reg_rsp),
    .req_i(soc_ctrl_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(soc_ctrl_obi_req[36:5]),
    .wen_i(\$1y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:599.5" */
  \timer_unit$croc_chip.i_croc_soc.i_croc.i_timer  i_timer (
    .addr_i(timer_obi_req[73:42]),
    .be_i(timer_obi_req[40:37]),
    .clk_i(clk_i),
    .event_hi_i(1'h0),
    .event_lo_i(1'h0),
    .gnt_o(timer_obi_rsp[1]),
    .id_i(timer_obi_req[4:2]),
    .irq_hi_o(timer0_irq1),
    .irq_lo_o(timer0_irq0),
    .r_id_o(timer_obi_rsp[6:4]),
    .r_rdata_o(timer_obi_rsp[38:7]),
    .r_valid_o(timer_obi_rsp[0]),
    .ref_clk_i(ref_clk_i),
    .req_i(timer_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(timer_obi_req[36:5]),
    .wen_i(\$4y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_domain.sv:559.5" */
  \reg_uart_wrap$croc_chip.i_croc_soc.i_croc.i_uart  i_uart (
    .clk_i(clk_i),
    .cts_ni(1'h0),
    .dcd_ni(1'h0),
    .dsr_ni(1'h0),
    .intr_o(uart_irq),
    .reg_req_i(uart_reg_req),
    .reg_rsp_o(uart_reg_rsp),
    .rin_ni(1'h0),
    .rst_ni(rst_ni),
    .sin_i(uart_rx_i),
    .sout_o(uart_tx_o)
  );
  /* src = "rtl/croc_domain.sv:534.5" */
  \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_uart_translate  i_uart_translate (
    .add_i(uart_obi_req[73:42]),
    .be_i(uart_obi_req[40:37]),
    .clk_i(clk_i),
    .gnt_o(uart_obi_rsp[1]),
    .id_i(uart_obi_req[4:2]),
    .r_id_o(uart_obi_rsp[6:4]),
    .r_opc_o(uart_obi_rsp[3]),
    .r_rdata_o(uart_obi_rsp[38:7]),
    .r_valid_o(uart_obi_rsp[0]),
    .reg_req_o(uart_reg_req),
    .reg_rsp_i(uart_reg_rsp),
    .req_i(uart_obi_req[0]),
    .rst_ni(rst_ni),
    .wdata_i(uart_obi_req[36:5]),
    .wen_i(\$3y )
  );
  /* src = "rtl/croc_domain.sv:404.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_xbar_err  i_xbar_err (
    .clk_i(clk_i),
    .obi_req_i(xbar_error_obi_req),
    .obi_rsp_o(xbar_error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign interrupts = { 9'h000, interrupts_i, gpio_irq, uart_irq, timer0_irq1 };
  assign core_instr_obi_req[2] = 1'h0;
  assign core_instr_obi_req[39] = 1'h0;
  assign core_instr_obi_req[38:35] = 4'hf;
  assign core_instr_obi_req[34:3] = 32'd0;
  assign core_instr_obi_req[1] = 1'h0;
  assign core_data_obi_req[2] = 1'h0;
  assign core_data_obi_req[1] = 1'h0;
  assign dbg_req_obi_req[2] = 1'h0;
  assign dbg_req_obi_req[1] = 1'h0;
  assign xbar_error_obi_req = all_sbr_obi_req[73:0];
  assign all_sbr_obi_rsp[38:0] = xbar_error_obi_rsp;
  assign xbar_periph_obi_req = all_sbr_obi_req[147:74];
  assign all_sbr_obi_rsp[77:39] = xbar_periph_obi_rsp;
  assign xbar_mem_bank_obi_req[73:0] = all_sbr_obi_req[221:148];
  assign all_sbr_obi_rsp[116:78] = xbar_mem_bank_obi_rsp[38:0];
  assign xbar_mem_bank_obi_req[147:74] = all_sbr_obi_req[295:222];
  assign all_sbr_obi_rsp[155:117] = xbar_mem_bank_obi_rsp[77:39];
  assign user_sbr_obi_req_o = all_sbr_obi_req[369:296];
  assign all_sbr_obi_rsp[194:156] = user_sbr_obi_rsp_i;
  assign error_obi_req = all_periph_obi_req[73:0];
  assign all_periph_obi_rsp[38:0] = error_obi_rsp;
  assign dbg_mem_obi_req = all_periph_obi_req[147:74];
  assign all_periph_obi_rsp[77:39] = dbg_mem_obi_rsp;
  assign soc_ctrl_obi_req = all_periph_obi_req[221:148];
  assign all_periph_obi_rsp[116:78] = soc_ctrl_obi_rsp;
  assign uart_obi_req = all_periph_obi_req[295:222];
  assign all_periph_obi_rsp[155:117] = uart_obi_rsp;
  assign gpio_obi_req = all_periph_obi_req[369:296];
  assign all_periph_obi_rsp[194:156] = gpio_obi_rsp;
  assign timer_obi_req = all_periph_obi_req[443:370];
  assign all_periph_obi_rsp[233:195] = timer_obi_rsp;
  assign dbg_mem_obi_rsp[2] = 1'h0;
  assign dbg_mem_obi_rsp[3] = 1'h0;
  assign \gen_sram_bank[0].bank_word_addr  = \gen_sram_bank[0].bank_byte_addr [10:2];
  assign \gen_sram_bank[0].bank_gnt  = 1'h1;
  assign \gen_sram_bank[1].bank_word_addr  = \gen_sram_bank[1].bank_byte_addr [10:2];
  assign \gen_sram_bank[1].bank_gnt  = 1'h1;
  assign soc_ctrl_obi_rsp[2] = 1'h0;
  assign fetch_enable = \$2y ;
  assign boot_addr = soc_ctrl_reg2hw[66:35];
  assign sram_impl = soc_ctrl_reg2hw[0];
  assign soc_ctrl_hw2reg = 4'h0;
  assign uart_obi_rsp[2] = 1'h0;
  assign timer_obi_rsp[3] = 1'h0;
  assign timer_obi_rsp[2] = 1'h0;
  assign hartinfo[0] = 1'h0;
  assign hartinfo[1] = 1'h0;
  assign hartinfo[2] = 1'h0;
  assign hartinfo[3] = 1'h0;
  assign hartinfo[4] = 1'h0;
  assign hartinfo[5] = 1'h0;
  assign hartinfo[6] = 1'h0;
  assign hartinfo[7] = 1'h1;
  assign hartinfo[8] = 1'h1;
  assign hartinfo[9] = 1'h1;
  assign hartinfo[10] = 1'h0;
  assign hartinfo[11] = 1'h0;
  assign hartinfo[12] = 1'h0;
  assign hartinfo[13] = 1'h1;
  assign hartinfo[14] = 1'h0;
  assign hartinfo[15] = 1'h0;
  assign hartinfo[16] = 1'h1;
  assign hartinfo[17] = 1'h0;
  assign hartinfo[18] = 1'h0;
  assign hartinfo[19] = 1'h0;
  assign hartinfo[20] = 1'h0;
  assign hartinfo[21] = 1'h1;
  assign hartinfo[22] = 1'h0;
  assign hartinfo[23] = 1'h0;
  assign hartinfo[24] = 1'h0;
  assign hartinfo[25] = 1'h0;
  assign hartinfo[26] = 1'h0;
  assign hartinfo[27] = 1'h0;
  assign hartinfo[28] = 1'h0;
  assign hartinfo[29] = 1'h0;
  assign hartinfo[30] = 1'h0;
  assign hartinfo[31] = 1'h0;
endmodule

/* src = "rtl/croc_soc.sv:8.8" */
module \croc_soc$croc_chip.i_croc_soc (clk_i, rst_ni, ref_clk_i, jtag_tck_i, jtag_trst_ni, jtag_tms_i, jtag_tdi_i, jtag_tdo_o, uart_rx_i, uart_tx_o, fetch_en_i, status_o, testmode_i, gpio_i, gpio_o, gpio_out_en_o);
  /* src = "rtl/croc_soc.sv:11.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/croc_soc.sv:15.16" */
  input fetch_en_i;
  wire fetch_en_i;
  /* src = "rtl/croc_soc.sv:27.32" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "rtl/croc_soc.sv:61.23" */
  wire [31:0] gpio_in_sync;
  /* src = "rtl/croc_soc.sv:28.32" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "rtl/croc_soc.sv:29.32" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* src = "rtl/croc_soc.sv:60.29" */
  wire [3:0] interrupts;
  /* src = "rtl/croc_soc.sv:18.16" */
  input jtag_tck_i;
  wire jtag_tck_i;
  /* src = "rtl/croc_soc.sv:19.16" */
  input jtag_tdi_i;
  wire jtag_tdi_i;
  /* src = "rtl/croc_soc.sv:20.16" */
  output jtag_tdo_o;
  wire jtag_tdo_o;
  /* src = "rtl/croc_soc.sv:21.16" */
  input jtag_tms_i;
  wire jtag_tms_i;
  /* src = "rtl/croc_soc.sv:22.16" */
  input jtag_trst_ni;
  wire jtag_trst_ni;
  /* src = "rtl/croc_soc.sv:13.16" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/croc_soc.sv:12.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/croc_soc.sv:16.16" */
  output status_o;
  wire status_o;
  /* src = "rtl/croc_soc.sv:32.23" */
  wire synced_fetch_en;
  /* src = "rtl/croc_soc.sv:32.9" */
  wire synced_rst_n;
  /* src = "rtl/croc_soc.sv:14.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/croc_soc.sv:24.16" */
  input uart_rx_i;
  wire uart_rx_i;
  /* src = "rtl/croc_soc.sv:25.16" */
  output uart_tx_o;
  wire uart_tx_o;
  /* src = "rtl/croc_soc.sv:57.15" */
  wire [71:0] user_mgr_obi_req;
  /* src = "rtl/croc_soc.sv:58.15" */
  wire [36:0] user_mgr_obi_rsp;
  /* src = "rtl/croc_soc.sv:53.15" */
  wire [73:0] user_sbr_obi_req;
  /* src = "rtl/croc_soc.sv:54.15" */
  wire [38:0] user_sbr_obi_rsp;
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_soc.sv:65.3" */
  \croc_domain$croc_chip.i_croc_soc.i_croc  i_croc (
    .clk_i(clk_i),
    .core_busy_o(status_o),
    .fetch_en_i(synced_fetch_en),
    .gpio_i(gpio_i),
    .gpio_in_sync_o(gpio_in_sync),
    .gpio_o(gpio_o),
    .gpio_out_en_o(gpio_out_en_o),
    .interrupts_i(interrupts),
    .jtag_tck_i(jtag_tck_i),
    .jtag_tdi_i(jtag_tdi_i),
    .jtag_tdo_o(jtag_tdo_o),
    .jtag_tms_i(jtag_tms_i),
    .jtag_trst_ni(jtag_trst_ni),
    .ref_clk_i(ref_clk_i),
    .rst_ni(synced_rst_n),
    .testmode_i(testmode_i),
    .uart_rx_i(uart_rx_i),
    .uart_tx_o(uart_tx_o),
    .user_mgr_obi_req_i(user_mgr_obi_req),
    .user_mgr_obi_rsp_o(user_mgr_obi_rsp),
    .user_sbr_obi_req_o(user_sbr_obi_req),
    .user_sbr_obi_rsp_i(user_sbr_obi_rsp)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_soc.sv:45.7" */
  \sync$croc_chip.i_croc_soc.i_ext_intr_sync  i_ext_intr_sync (
    .clk_i(clk_i),
    .rst_ni(synced_rst_n),
    .serial_i(fetch_en_i),
    .serial_o(synced_fetch_en)
  );
  /* src = "rtl/croc_soc.sv:34.10" */
  \rstgen$croc_chip.i_croc_soc.i_rstgen  i_rstgen (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .rst_no(synced_rst_n),
    .test_mode_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/croc_soc.sv:99.3" */
  \user_domain$croc_chip.i_croc_soc.i_user  i_user (
    .clk_i(clk_i),
    .gpio_in_sync_i(gpio_in_sync),
    .interrupts_o(interrupts),
    .ref_clk_i(ref_clk_i),
    .rst_ni(synced_rst_n),
    .testmode_i(testmode_i),
    .user_mgr_obi_req_o(user_mgr_obi_req),
    .user_mgr_obi_rsp_i(user_mgr_obi_rsp),
    .user_sbr_obi_req_i(user_sbr_obi_req),
    .user_sbr_obi_rsp_o(user_sbr_obi_rsp)
  );
endmodule

/* src = "rtl/cve2/cve2_alu.sv:9.8" */
module \cve2_alu$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.ex_block_i.alu_i (multdiv_operand_a_i, multdiv_operand_b_i, imd_val_we_o, imd_val_d_o, imd_val_q_i, instr_first_cycle_i, operator_i, operand_a_i, operand_b_i, multdiv_sel_i, adder_result_o, adder_result_ext_o, result_o, comparison_result_o, is_equal_result_o);
  wire \$10y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$18y ;
  wire \$19y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [31:0] \$24y ;
  wire \$26y ;
  wire [4:0] \$27y ;
  wire \$28y ;
  wire [4:0] \$29y ;
  wire [4:0] \$30y ;
  wire \$35y ;
  wire [31:0] \$37y ;
  wire [31:0] \$38y ;
  wire \$41y ;
  wire \$42y ;
  wire [32:0] \$43y ;
  wire [31:0] \$44y ;
  wire [31:0] \$47y ;
  wire [31:0] \$48y ;
  wire [31:0] \$49y ;
  wire [32:0] \$4y ;
  wire [31:0] \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire [33:0] \$7y ;
  /* src = "rtl/cve2/cve2_alu.sv:85.5-91.12" */
  wire [32:0] \$adder_in_a$3 ;
  /* src = "rtl/cve2/cve2_alu.sv:97.5-101.12" */
  wire [32:0] \$adder_in_b$6 ;
  /* src = "rtl/cve2/cve2_alu.sv:60.5-80.12" */
  wire \$adder_op_b_negate$1 ;
  wire [32:0] \$auto$rtlil.cc:2957:Not$13165 ;
  /* src = "rtl/cve2/cve2_alu.sv:372.5-379.12" */
  wire \$bwlogic_op_b_negate$46 ;
  /* src = "rtl/cve2/cve2_alu.sv:392.5-396.12" */
  wire [31:0] \$bwlogic_result$58 ;
  /* src = "rtl/cve2/cve2_alu.sv:160.5-170.12" */
  wire \$cmp_result$20 ;
  /* src = "rtl/cve2/cve2_alu.sv:120.5-129.12" */
  wire \$cmp_signed$9 ;
  /* src = "rtl/cve2/cve2_alu.sv:137.5-141.8" */
  wire \$is_greater_equal$16 ;
  wire [31:0] \$procmux$2066_Y ;
  wire [7:0] \$procmux$2067_CMP ;
  wire \$procmux$2067_CTRL ;
  wire [4:0] \$procmux$2068_CMP ;
  wire \$procmux$2068_CTRL ;
  wire [4:0] \$procmux$2069_CMP ;
  wire \$procmux$2069_CTRL ;
  wire [5:0] \$procmux$2070_CMP ;
  wire \$procmux$2070_CTRL ;
  wire [31:0] \$procmux$2072_Y ;
  wire \$procmux$2073_CMP ;
  wire \$procmux$2074_CMP ;
  wire \$procmux$2079_Y ;
  wire \$procmux$2080_CMP ;
  wire \$procmux$2088_Y ;
  wire \$procmux$2089_CMP ;
  wire [4:0] \$procmux$2091_Y ;
  wire \$procmux$2092_CMP ;
  wire \$procmux$2094_Y ;
  wire [5:0] \$procmux$2095_CMP ;
  wire \$procmux$2095_CTRL ;
  wire [3:0] \$procmux$2096_CMP ;
  wire \$procmux$2096_CTRL ;
  wire \$procmux$2097_CMP ;
  wire \$procmux$2099_Y ;
  wire \$procmux$2100_CMP ;
  wire \$procmux$2102_Y ;
  wire [4:0] \$procmux$2103_CMP ;
  wire \$procmux$2103_CTRL ;
  wire [32:0] \$procmux$2105_Y ;
  wire \$procmux$2106_CMP ;
  wire \$procmux$2107_CMP ;
  wire [32:0] \$procmux$2109_Y ;
  wire \$procmux$2110_CMP ;
  wire \$procmux$2111_CMP ;
  wire \$procmux$2112_CMP ;
  wire \$procmux$2113_CMP ;
  wire \$procmux$2118_Y ;
  wire [12:0] \$procmux$2119_CMP ;
  wire \$procmux$2119_CTRL ;
  /* src = "rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  wire [31:0] \$result_o$60 ;
  /* src = "rtl/cve2/cve2_alu.sv:283.5-289.8" */
  wire [4:0] \$shift_amt[4:0]$31 ;
  /* src = "rtl/cve2/cve2_alu.sv:305.5-316.12" */
  wire \$shift_left$33 ;
  /* src = "rtl/cve2/cve2_alu.sv:317.5-319.8" */
  wire \$shift_left$34 ;
  /* src = "rtl/cve2/cve2_alu.sv:335.7-339.14" */
  wire [31:0] \$shift_operand$39 ;
  /* src = "rtl/cve2/cve2_alu.sv:332.5-340.8" */
  wire [31:0] \$shift_operand$40 ;
  /* src = "rtl/cve2/cve2_alu.sv:52.16" */
  wire [32:0] adder_in_a;
  /* src = "rtl/cve2/cve2_alu.sv:52.28" */
  wire [32:0] adder_in_b;
  /* src = "rtl/cve2/cve2_alu.sv:48.16" */
  wire adder_op_a_shift1;
  /* src = "rtl/cve2/cve2_alu.sv:49.16" */
  wire adder_op_a_shift2;
  /* src = "rtl/cve2/cve2_alu.sv:50.16" */
  wire adder_op_a_shift3;
  /* src = "rtl/cve2/cve2_alu.sv:51.16" */
  wire adder_op_b_negate;
  /* src = "rtl/cve2/cve2_alu.sv:53.16" */
  wire [31:0] adder_result;
  /* src = "rtl/cve2/cve2_alu.sv:28.29" */
  output [33:0] adder_result_ext_o;
  wire [33:0] adder_result_ext_o;
  /* src = "rtl/cve2/cve2_alu.sv:27.29" */
  output [31:0] adder_result_o;
  wire [31:0] adder_result_o;
  /* src = "rtl/cve2/cve2_alu.sv:259.16" */
  wire [4:0] bfp_len;
  /* src = "rtl/cve2/cve2_alu.sv:261.16" */
  wire [31:0] bfp_mask;
  /* src = "rtl/cve2/cve2_alu.sv:262.16" */
  wire [31:0] bfp_mask_rev;
  /* src = "rtl/cve2/cve2_alu.sv:260.16" */
  wire [4:0] bfp_off;
  /* src = "rtl/cve2/cve2_alu.sv:258.9" */
  wire bfp_op;
  /* src = "rtl/cve2/cve2_alu.sv:263.16" */
  wire [31:0] bfp_result;
  /* src = "rtl/cve2/cve2_alu.sv:399.16" */
  wire [5:0] bitcnt_result;
  /* src = "rtl/cve2/cve2_alu.sv:407.16" */
  wire [31:0] butterfly_result;
  /* src = "rtl/cve2/cve2_alu.sv:362.9" */
  wire bwlogic_and;
  /* src = "rtl/cve2/cve2_alu.sv:365.16" */
  wire [31:0] bwlogic_and_result;
  /* src = "rtl/cve2/cve2_alu.sv:369.9" */
  wire bwlogic_op_b_negate;
  /* src = "rtl/cve2/cve2_alu.sv:363.16" */
  wire [31:0] bwlogic_operand_b;
  /* src = "rtl/cve2/cve2_alu.sv:361.9" */
  wire bwlogic_or;
  /* src = "rtl/cve2/cve2_alu.sv:364.16" */
  wire [31:0] bwlogic_or_result;
  /* src = "rtl/cve2/cve2_alu.sv:367.16" */
  wire [31:0] bwlogic_result;
  /* src = "rtl/cve2/cve2_alu.sv:366.16" */
  wire [31:0] bwlogic_xor_result;
  /* src = "rtl/cve2/cve2_alu.sv:409.16" */
  wire [31:0] clmul_result;
  /* src = "rtl/cve2/cve2_alu.sv:157.9" */
  wire cmp_result;
  /* src = "rtl/cve2/cve2_alu.sv:117.9" */
  wire cmp_signed;
  /* src = "rtl/cve2/cve2_alu.sv:31.29" */
  output comparison_result_o;
  wire comparison_result_o;
  /* src = "rtl/cve2/cve2_alu.sv:1293.18" */
  wire [31:0] \g_no_alu_rvb.unused_butterfly_result ;
  /* src = "rtl/cve2/cve2_alu.sv:1291.18" */
  wire [63:0] \g_no_alu_rvb.unused_imd_val_q ;
  /* src = "rtl/cve2/cve2_alu.sv:1295.18" */
  wire [31:0] \g_no_alu_rvb.unused_invbutterfly_result ;
  /* src = "rtl/cve2/cve2_alu.sv:24.29" */
  output [63:0] imd_val_d_o;
  wire [63:0] imd_val_d_o;
  /* src = "rtl/cve2/cve2_alu.sv:23.29" */
  input [63:0] imd_val_q_i;
  wire [63:0] imd_val_q_i;
  /* src = "rtl/cve2/cve2_alu.sv:25.29" */
  output [1:0] imd_val_we_o;
  wire [1:0] imd_val_we_o;
  /* src = "rtl/cve2/cve2_alu.sv:16.29" */
  input instr_first_cycle_i;
  wire instr_first_cycle_i;
  /* src = "rtl/cve2/cve2_alu.sv:408.16" */
  wire [31:0] invbutterfly_result;
  /* src = "rtl/cve2/cve2_alu.sv:115.9" */
  wire is_equal;
  /* src = "rtl/cve2/cve2_alu.sv:32.29" */
  output is_equal_result_o;
  wire is_equal_result_o;
  /* src = "rtl/cve2/cve2_alu.sv:116.9" */
  wire is_greater_equal;
  /* src = "rtl/cve2/cve2_alu.sv:400.16" */
  wire [31:0] minmax_result;
  /* src = "rtl/cve2/cve2_alu.sv:18.29" */
  input [32:0] multdiv_operand_a_i;
  wire [32:0] multdiv_operand_a_i;
  /* src = "rtl/cve2/cve2_alu.sv:19.29" */
  input [32:0] multdiv_operand_b_i;
  wire [32:0] multdiv_operand_b_i;
  /* src = "rtl/cve2/cve2_alu.sv:21.29" */
  input multdiv_sel_i;
  wire multdiv_sel_i;
  /* src = "rtl/cve2/cve2_alu.sv:410.16" */
  wire [31:0] multicycle_result;
  /* src = "rtl/cve2/cve2_alu.sv:13.29" */
  input [31:0] operand_a_i;
  wire [31:0] operand_a_i;
  /* src = "rtl/cve2/cve2_alu.sv:36.16" */
  wire [31:0] operand_a_rev;
  /* src = "rtl/cve2/cve2_alu.sv:14.29" */
  input [31:0] operand_b_i;
  wire [31:0] operand_b_i;
  /* src = "rtl/cve2/cve2_alu.sv:37.16" */
  wire [32:0] operand_b_neg;
  /* src = "rtl/cve2/cve2_alu.sv:12.29" */
  input [6:0] operator_i;
  wire [6:0] operator_i;
  /* src = "rtl/cve2/cve2_alu.sv:401.16" */
  wire [31:0] pack_result;
  /* src = "rtl/cve2/cve2_alu.sv:30.29" */
  output [31:0] result_o;
  wire [31:0] result_o;
  /* src = "rtl/cve2/cve2_alu.sv:404.16" */
  wire [31:0] rev_result;
  /* src = "rtl/cve2/cve2_alu.sv:402.16" */
  wire [31:0] sext_result;
  /* src = "rtl/cve2/cve2_alu.sv:247.15" */
  wire [5:0] shift_amt;
  /* src = "rtl/cve2/cve2_alu.sv:248.15" */
  wire [5:0] shift_amt_compl;
  /* src = "rtl/cve2/cve2_alu.sv:244.15" */
  wire shift_arith;
  /* src = "rtl/cve2/cve2_alu.sv:245.15" */
  wire shift_funnel;
  /* src = "rtl/cve2/cve2_alu.sv:242.15" */
  wire shift_left;
  /* src = "rtl/cve2/cve2_alu.sv:243.15" */
  wire shift_ones;
  /* src = "rtl/cve2/cve2_alu.sv:250.23" */
  wire [31:0] shift_operand;
  /* src = "rtl/cve2/cve2_alu.sv:254.23" */
  wire [31:0] shift_result;
  /* src = "rtl/cve2/cve2_alu.sv:252.23" */
  wire [32:0] shift_result_ext;
  /* src = "rtl/cve2/cve2_alu.sv:251.23" */
  wire [32:0] shift_result_ext_signed;
  /* src = "rtl/cve2/cve2_alu.sv:255.23" */
  wire [31:0] shift_result_rev;
  /* src = "rtl/cve2/cve2_alu.sv:246.15" */
  wire shift_sbmode;
  /* src = "rtl/cve2/cve2_alu.sv:405.16" */
  wire [31:0] shuffle_result;
  /* src = "rtl/cve2/cve2_alu.sv:403.16" */
  wire [31:0] singlebit_result;
  /* src = "rtl/cve2/cve2_alu.sv:1397.9" */
  wire unused_shift_amt_compl;
  /* src = "rtl/cve2/cve2_alu.sv:253.23" */
  wire unused_shift_result_ext;
  /* src = "rtl/cve2/cve2_alu.sv:406.16" */
  wire [31:0] xperm_result;
  /* src = "rtl/cve2/cve2_alu.sv:132.22-132.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(adder_result),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:137.10-137.43" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(operand_a_i[31]),
    .B(operand_b_i[31]),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:137.9-137.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:138.27-138.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(adder_result[31]),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:140.26-140.56" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(operand_a_i[31]),
    .B(cmp_signed),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:162.40-162.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(is_equal),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:167.40-167.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(is_greater_equal),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:267.23-267.42" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(operand_b_i[27:24]),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:267.21-267.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:280.28-280.49" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$24  (
    .A(32'd32),
    .B({ 27'h0000000, operand_b_i[4:0] }),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:286.24-288.85" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$30  (
    .A(\$27y ),
    .B(\$29y ),
    .S(instr_first_cycle_i),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:322.26-322.47" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(operator_i),
    .B(7'h08),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:333.23-333.63" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$37  (
    .A(operand_a_i),
    .B(operand_a_rev),
    .S(shift_left),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:338.39-338.79" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$38  (
    .A(operand_a_i),
    .B(operand_a_rev),
    .S(shift_left),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:343.32-343.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(shift_arith),
    .B(\$shift_operand$40 [31]),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:343.9-343.100" */
  \$sshr  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd33),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd33)
  ) \$43  (
    .A({ \$42y , \$shift_operand$40  }),
    .B(shift_amt[4:0]),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:353.20-353.64" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$44  (
    .A(\$43y [31:0]),
    .B({ \$43y [0], \$43y [1], \$43y [2], \$43y [3], \$43y [4], \$43y [5], \$43y [6], \$43y [7], \$43y [8], \$43y [9], \$43y [10], \$43y [11], \$43y [12], \$43y [13], \$43y [14], \$43y [15], \$43y [16], \$43y [17], \$43y [18], \$43y [19], \$43y [20], \$43y [21], \$43y [22], \$43y [23], \$43y [24], \$43y [25], \$43y [26], \$43y [27], \$43y [28], \$43y [29], \$43y [30], \$43y [31] }),
    .S(shift_left),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:384.31-384.62" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$48  (
    .A(operand_a_i),
    .B(bwlogic_operand_b),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:385.31-385.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$49  (
    .A(operand_a_i),
    .B(bwlogic_operand_b),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:386.31-386.62" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$50  (
    .A(operand_a_i),
    .B(bwlogic_operand_b),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:388.25-388.45" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(operator_i),
    .B(7'h03),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:388.51-388.72" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(operator_i),
    .B(7'h06),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:388.24-388.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\$51y ),
    .B(\$52y ),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:389.25-389.46" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(operator_i),
    .B(7'h04),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:389.51-389.73" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(operator_i),
    .B(7'h07),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:389.24-389.74" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(\$54y ),
    .B(\$55y ),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_alu.sv:105.31-105.76" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd34),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd34),
    .Y_WIDTH(32'd34)
  ) \$7  (
    .A({ 1'h0, adder_in_a }),
    .B({ 1'h0, adder_in_b }),
    .Y(\$7y )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd33),
    .Y_WIDTH(32'd33)
  ) \$auto$opt_expr.cc:716:replace_const_cells$13164  (
    .A({ operand_b_i, 1'h0 }),
    .Y(\$auto$rtlil.cc:2957:Not$13165 )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$2066  (
    .A(32'd0),
    .B({ \$bwlogic_result$58 , \$7y [32:1], \$44y , 31'h00000000, \$cmp_result$20  }),
    .S({ \$procmux$2070_CTRL , \$procmux$2069_CTRL , \$procmux$2068_CTRL , \$procmux$2067_CTRL  }),
    .Y(\$procmux$2066_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_ANY  (
    .A(\$procmux$2067_CMP ),
    .Y(\$procmux$2067_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP0  (
    .A(operator_i),
    .B(7'h1d),
    .Y(\$procmux$2067_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP1  (
    .A(operator_i),
    .B(7'h1e),
    .Y(\$procmux$2067_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP2  (
    .A(operator_i),
    .B(7'h1b),
    .Y(\$procmux$2067_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP3  (
    .A(operator_i),
    .B(7'h1c),
    .Y(\$procmux$2067_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP4  (
    .A(operator_i),
    .B(7'h19),
    .Y(\$procmux$2067_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP5  (
    .A(operator_i),
    .B(7'h1a),
    .Y(\$procmux$2067_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP6  (
    .A(operator_i),
    .B(7'h2b),
    .Y(\$procmux$2067_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1350.27-1350.57|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2067_CMP7  (
    .A(operator_i),
    .B(7'h2c),
    .Y(\$procmux$2067_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_ANY  (
    .A(\$procmux$2068_CMP ),
    .Y(\$procmux$2068_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_CMP0  (
    .A(operator_i),
    .B(7'h0a),
    .Y(\$procmux$2068_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_CMP1  (
    .A(operator_i),
    .B(7'h09),
    .Y(\$procmux$2068_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_CMP2  (
    .A(operator_i),
    .B(7'h08),
    .Y(\$procmux$2068_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_CMP3  (
    .A(operator_i),
    .B(7'h0c),
    .Y(\$procmux$2068_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1338.26-1338.50|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2068_CMP4  (
    .A(operator_i),
    .B(7'h0b),
    .Y(\$procmux$2068_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_ANY  (
    .A(\$procmux$2069_CMP ),
    .Y(\$procmux$2069_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_CMP0  (
    .A(operator_i),
    .Y(\$procmux$2069_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_CMP1  (
    .A(operator_i),
    .B(7'h01),
    .Y(\$procmux$2069_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_CMP2  (
    .A(operator_i),
    .B(7'h16),
    .Y(\$procmux$2069_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_CMP3  (
    .A(operator_i),
    .B(7'h17),
    .Y(\$procmux$2069_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1332.19-1332.43|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2069_CMP4  (
    .A(operator_i),
    .B(7'h18),
    .Y(\$procmux$2069_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_ANY  (
    .A(\$procmux$2070_CMP ),
    .Y(\$procmux$2070_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP0  (
    .A(operator_i),
    .B(7'h02),
    .Y(\$procmux$2070_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP1  (
    .A(operator_i),
    .B(7'h05),
    .Y(\$procmux$2070_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP2  (
    .A(operator_i),
    .B(7'h03),
    .Y(\$procmux$2070_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP3  (
    .A(operator_i),
    .B(7'h06),
    .Y(\$procmux$2070_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP4  (
    .A(operator_i),
    .B(7'h04),
    .Y(\$procmux$2070_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:1326.27-1326.53|rtl/cve2/cve2_alu.sv:1322.5-1394.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2070_CMP5  (
    .A(operator_i),
    .B(7'h07),
    .Y(\$procmux$2070_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:394.20-394.56|rtl/cve2/cve2_alu.sv:392.5-396.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd32)
  ) \$procmux$2072  (
    .A(\$50y ),
    .B({ \$48y , \$49y  }),
    .S({ \$procmux$2074_CMP , \$procmux$2073_CMP  }),
    .Y(\$procmux$2072_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:306.16-306.34|rtl/cve2/cve2_alu.sv:305.5-316.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2088  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2089_CMP ),
    .Y(\$procmux$2088_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:306.16-306.34|rtl/cve2/cve2_alu.sv:305.5-316.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2089_CMP0  (
    .A(operator_i),
    .B(7'h0a),
    .Y(\$procmux$2089_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$2094  (
    .A(\$10y ),
    .B({ \$18y , \$is_greater_equal$16 , \$19y  }),
    .S({ \$procmux$2097_CMP , \$procmux$2096_CTRL , \$procmux$2095_CTRL  }),
    .Y(\$procmux$2094_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_ANY  (
    .A(\$procmux$2095_CMP ),
    .Y(\$procmux$2095_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP0  (
    .A(operator_i),
    .B(7'h19),
    .Y(\$procmux$2095_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP1  (
    .A(operator_i),
    .B(7'h1a),
    .Y(\$procmux$2095_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP2  (
    .A(operator_i),
    .B(7'h1f),
    .Y(\$procmux$2095_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP3  (
    .A(operator_i),
    .B(7'h20),
    .Y(\$procmux$2095_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP4  (
    .A(operator_i),
    .B(7'h2b),
    .Y(\$procmux$2095_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:167.27-167.58|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2095_CMP5  (
    .A(operator_i),
    .B(7'h2c),
    .Y(\$procmux$2095_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:164.27-164.57|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2096_ANY  (
    .A(\$procmux$2096_CMP ),
    .Y(\$procmux$2096_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:164.27-164.57|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2096_CMP0  (
    .A(operator_i),
    .B(7'h1b),
    .Y(\$procmux$2096_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:164.27-164.57|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2096_CMP1  (
    .A(operator_i),
    .B(7'h1c),
    .Y(\$procmux$2096_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:164.27-164.57|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2096_CMP2  (
    .A(operator_i),
    .B(7'h21),
    .Y(\$procmux$2096_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:164.27-164.57|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2096_CMP3  (
    .A(operator_i),
    .B(7'h22),
    .Y(\$procmux$2096_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:162.27-162.50|rtl/cve2/cve2_alu.sv:160.5-170.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2097_CMP0  (
    .A(operator_i),
    .B(7'h1e),
    .Y(\$procmux$2097_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:138.7-138.53|rtl/cve2/cve2_alu.sv:137.5-141.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2099  (
    .A(\$14y ),
    .B(\$15y ),
    .S(\$12y ),
    .Y(\$procmux$2099_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2102  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2103_CTRL ),
    .Y(\$procmux$2102_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_ANY  (
    .A(\$procmux$2103_CMP ),
    .Y(\$procmux$2103_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_CMP0  (
    .A(operator_i),
    .B(7'h1b),
    .Y(\$procmux$2103_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_CMP1  (
    .A(operator_i),
    .B(7'h19),
    .Y(\$procmux$2103_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_CMP2  (
    .A(operator_i),
    .B(7'h2b),
    .Y(\$procmux$2103_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_CMP3  (
    .A(operator_i),
    .B(7'h1f),
    .Y(\$procmux$2103_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:126.16-126.34|rtl/cve2/cve2_alu.sv:120.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2103_CMP4  (
    .A(operator_i),
    .B(7'h21),
    .Y(\$procmux$2103_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:99.26-99.53|rtl/cve2/cve2_alu.sv:97.5-101.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd33)
  ) \$procmux$2105  (
    .A({ operand_b_i, 1'h0 }),
    .B({ multdiv_operand_b_i, \$4y  }),
    .S({ \$procmux$2107_CMP , \$procmux$2106_CMP  }),
    .Y(\$procmux$2105_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:89.26-89.67|rtl/cve2/cve2_alu.sv:85.5-91.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd33)
  ) \$procmux$2109  (
    .A({ operand_a_i, 1'h1 }),
    .B({ multdiv_operand_a_i, operand_a_i[30:0], 2'h1, operand_a_i[29:0], 3'h1, operand_a_i[28:0], 4'h1 }),
    .S({ \$procmux$2113_CMP , \$procmux$2112_CMP , \$procmux$2111_CMP , \$procmux$2110_CMP  }),
    .Y(\$procmux$2109_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2118  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2119_CTRL ),
    .Y(\$procmux$2118_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd13),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_ANY  (
    .A(\$procmux$2119_CMP ),
    .Y(\$procmux$2119_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP0  (
    .A(operator_i),
    .B(7'h01),
    .Y(\$procmux$2119_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP1  (
    .A(operator_i),
    .B(7'h1d),
    .Y(\$procmux$2119_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP10  (
    .A(operator_i),
    .B(7'h20),
    .Y(\$procmux$2119_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP11  (
    .A(operator_i),
    .B(7'h21),
    .Y(\$procmux$2119_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP12  (
    .A(operator_i),
    .B(7'h22),
    .Y(\$procmux$2119_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP2  (
    .A(operator_i),
    .B(7'h1e),
    .Y(\$procmux$2119_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP3  (
    .A(operator_i),
    .B(7'h1b),
    .Y(\$procmux$2119_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP4  (
    .A(operator_i),
    .B(7'h1c),
    .Y(\$procmux$2119_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP5  (
    .A(operator_i),
    .B(7'h19),
    .Y(\$procmux$2119_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP6  (
    .A(operator_i),
    .B(7'h1a),
    .Y(\$procmux$2119_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP7  (
    .A(operator_i),
    .B(7'h2b),
    .Y(\$procmux$2119_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP8  (
    .A(operator_i),
    .B(7'h2c),
    .Y(\$procmux$2119_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_alu.sv:72.27-72.52|rtl/cve2/cve2_alu.sv:60.5-80.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$2119_CMP9  (
    .A(operator_i),
    .B(7'h1f),
    .Y(\$procmux$2119_CMP [9])
  );
  assign operand_a_rev[0] = operand_a_i[31];
  assign operand_a_rev[1] = operand_a_i[30];
  assign operand_a_rev[2] = operand_a_i[29];
  assign operand_a_rev[3] = operand_a_i[28];
  assign operand_a_rev[4] = operand_a_i[27];
  assign operand_a_rev[5] = operand_a_i[26];
  assign operand_a_rev[6] = operand_a_i[25];
  assign operand_a_rev[7] = operand_a_i[24];
  assign operand_a_rev[8] = operand_a_i[23];
  assign operand_a_rev[9] = operand_a_i[22];
  assign operand_a_rev[10] = operand_a_i[21];
  assign operand_a_rev[11] = operand_a_i[20];
  assign operand_a_rev[12] = operand_a_i[19];
  assign operand_a_rev[13] = operand_a_i[18];
  assign operand_a_rev[14] = operand_a_i[17];
  assign operand_a_rev[15] = operand_a_i[16];
  assign operand_a_rev[16] = operand_a_i[15];
  assign operand_a_rev[17] = operand_a_i[14];
  assign operand_a_rev[18] = operand_a_i[13];
  assign operand_a_rev[19] = operand_a_i[12];
  assign operand_a_rev[20] = operand_a_i[11];
  assign operand_a_rev[21] = operand_a_i[10];
  assign operand_a_rev[22] = operand_a_i[9];
  assign operand_a_rev[23] = operand_a_i[8];
  assign operand_a_rev[24] = operand_a_i[7];
  assign operand_a_rev[25] = operand_a_i[6];
  assign operand_a_rev[26] = operand_a_i[5];
  assign operand_a_rev[27] = operand_a_i[4];
  assign operand_a_rev[28] = operand_a_i[3];
  assign operand_a_rev[29] = operand_a_i[2];
  assign operand_a_rev[30] = operand_a_i[1];
  assign operand_a_rev[31] = operand_a_i[0];
  assign adder_op_a_shift1 = 1'h0;
  assign adder_op_a_shift2 = 1'h0;
  assign adder_op_a_shift3 = 1'h0;
  assign adder_op_b_negate = \$adder_op_b_negate$1 ;
  assign adder_in_a = \$adder_in_a$3 ;
  assign operand_b_neg = \$4y ;
  assign adder_in_b = \$adder_in_b$6 ;
  assign adder_result_ext_o = \$7y ;
  assign adder_result = adder_result_ext_o[32:1];
  assign adder_result_o = adder_result;
  assign cmp_signed = \$cmp_signed$9 ;
  assign is_equal = \$10y ;
  assign is_equal_result_o = is_equal;
  assign is_greater_equal = \$is_greater_equal$16 ;
  assign cmp_result = \$cmp_result$20 ;
  assign comparison_result_o = cmp_result;
  assign bfp_op = 1'h0;
  assign bfp_len = { \$22y , operand_b_i[27:24] };
  assign bfp_off = operand_b_i[20:16];
  assign bfp_mask = 32'd0;
  assign bfp_mask_rev[0] = bfp_mask[31];
  assign bfp_mask_rev[1] = bfp_mask[30];
  assign bfp_mask_rev[2] = bfp_mask[29];
  assign bfp_mask_rev[3] = bfp_mask[28];
  assign bfp_mask_rev[4] = bfp_mask[27];
  assign bfp_mask_rev[5] = bfp_mask[26];
  assign bfp_mask_rev[6] = bfp_mask[25];
  assign bfp_mask_rev[7] = bfp_mask[24];
  assign bfp_mask_rev[8] = bfp_mask[23];
  assign bfp_mask_rev[9] = bfp_mask[22];
  assign bfp_mask_rev[10] = bfp_mask[21];
  assign bfp_mask_rev[11] = bfp_mask[20];
  assign bfp_mask_rev[12] = bfp_mask[19];
  assign bfp_mask_rev[13] = bfp_mask[18];
  assign bfp_mask_rev[14] = bfp_mask[17];
  assign bfp_mask_rev[15] = bfp_mask[16];
  assign bfp_mask_rev[16] = bfp_mask[15];
  assign bfp_mask_rev[17] = bfp_mask[14];
  assign bfp_mask_rev[18] = bfp_mask[13];
  assign bfp_mask_rev[19] = bfp_mask[12];
  assign bfp_mask_rev[20] = bfp_mask[11];
  assign bfp_mask_rev[21] = bfp_mask[10];
  assign bfp_mask_rev[22] = bfp_mask[9];
  assign bfp_mask_rev[23] = bfp_mask[8];
  assign bfp_mask_rev[24] = bfp_mask[7];
  assign bfp_mask_rev[25] = bfp_mask[6];
  assign bfp_mask_rev[26] = bfp_mask[5];
  assign bfp_mask_rev[27] = bfp_mask[4];
  assign bfp_mask_rev[28] = bfp_mask[3];
  assign bfp_mask_rev[29] = bfp_mask[2];
  assign bfp_mask_rev[30] = bfp_mask[1];
  assign bfp_mask_rev[31] = bfp_mask[0];
  assign bfp_result = 32'd0;
  assign shift_amt[5] = \$23y ;
  assign shift_amt_compl = \$24y [5:0];
  assign shift_amt[4:0] = \$shift_amt[4:0]$31 ;
  assign shift_sbmode = 1'h0;
  assign shift_left = \$shift_left$34 ;
  assign shift_arith = \$35y ;
  assign shift_ones = 1'h0;
  assign shift_funnel = 1'h0;
  assign shift_operand = \$shift_operand$40 ;
  assign shift_result_ext_signed = \$43y ;
  assign shift_result_ext = \$43y ;
  assign unused_shift_result_ext = \$43y [32];
  assign shift_result = \$44y ;
  assign shift_result_rev = { \$43y [0], \$43y [1], \$43y [2], \$43y [3], \$43y [4], \$43y [5], \$43y [6], \$43y [7], \$43y [8], \$43y [9], \$43y [10], \$43y [11], \$43y [12], \$43y [13], \$43y [14], \$43y [15], \$43y [16], \$43y [17], \$43y [18], \$43y [19], \$43y [20], \$43y [21], \$43y [22], \$43y [23], \$43y [24], \$43y [25], \$43y [26], \$43y [27], \$43y [28], \$43y [29], \$43y [30], \$43y [31] };
  assign bwlogic_op_b_negate = \$bwlogic_op_b_negate$46 ;
  assign bwlogic_operand_b = \$47y ;
  assign bwlogic_or_result = \$48y ;
  assign bwlogic_and_result = \$49y ;
  assign bwlogic_xor_result = \$50y ;
  assign bwlogic_or = \$53y ;
  assign bwlogic_and = \$56y ;
  assign bwlogic_result = \$bwlogic_result$58 ;
  assign \g_no_alu_rvb.unused_imd_val_q  = imd_val_q_i;
  assign \g_no_alu_rvb.unused_butterfly_result  = butterfly_result;
  assign \g_no_alu_rvb.unused_invbutterfly_result  = invbutterfly_result;
  assign bitcnt_result = 6'h00;
  assign minmax_result = 32'd0;
  assign pack_result = 32'd0;
  assign sext_result = 32'd0;
  assign singlebit_result = 32'd0;
  assign rev_result = 32'd0;
  assign shuffle_result = 32'd0;
  assign xperm_result = 32'd0;
  assign butterfly_result = 32'd0;
  assign invbutterfly_result = 32'd0;
  assign clmul_result = 32'd0;
  assign multicycle_result = 32'd0;
  assign imd_val_d_o = 64'h0000000000000000;
  assign imd_val_we_o = 2'h0;
  assign result_o = \$result_o$60 ;
  assign unused_shift_amt_compl = shift_amt_compl[5];
  assign \$shift_operand$40  = \$37y ;
  assign \$result_o$60  = \$procmux$2066_Y ;
  assign \$bwlogic_result$58  = \$procmux$2072_Y ;
  assign \$bwlogic_op_b_negate$46  = 1'h0;
  assign \$procmux$2080_CMP  = shift_sbmode;
  assign \$shift_left$34  = \$procmux$2079_Y ;
  assign \$shift_left$33  = \$procmux$2088_Y ;
  assign \$procmux$2092_CMP  = bfp_op;
  assign \$shift_amt[4:0]$31  = \$procmux$2091_Y ;
  assign \$cmp_result$20  = \$procmux$2094_Y ;
  assign \$procmux$2100_CMP  = \$13y ;
  assign \$is_greater_equal$16  = \$procmux$2099_Y ;
  assign \$cmp_signed$9  = \$procmux$2102_Y ;
  assign \$adder_in_b$6  = \$procmux$2105_Y ;
  assign \$adder_in_a$3  = \$procmux$2109_Y ;
  assign \$adder_op_b_negate$1  = \$procmux$2118_Y ;
  assign \$4y  = \$auto$rtlil.cc:2957:Not$13165 ;
  assign \$procmux$2106_CMP  = \$procmux$2118_Y ;
  assign \$procmux$2107_CMP  = multdiv_sel_i;
  assign \$procmux$2113_CMP  = multdiv_sel_i;
  assign \$47y  = operand_b_i;
  assign \$23y  = 1'h0;
  assign \$26y  = 1'h0;
  assign \$27y  = shift_amt_compl[4:0];
  assign \$28y  = 1'h0;
  assign \$29y  = operand_b_i[4:0];
  assign \$procmux$2079_Y  = \$shift_left$33 ;
  assign \$42y  = \$41y ;
  assign \$procmux$2091_Y  = \$30y ;
  assign \$procmux$2073_CMP  = \$56y ;
  assign \$procmux$2074_CMP  = \$53y ;
  assign \$procmux$2110_CMP  = 1'h0;
  assign \$procmux$2111_CMP  = 1'h0;
  assign \$procmux$2112_CMP  = 1'h0;
endmodule

/* src = "rtl/cve2/cve2_compressed_decoder.sv:16.8" */
module \cve2_compressed_decoder$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.compressed_decoder_i (clk_i, rst_ni, valid_i, instr_i, instr_o, is_compressed_o, illegal_instr_o);
  wire \$10y ;
  wire \$18y ;
  wire \$1y ;
  wire \$20y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$28y ;
  wire \$29y ;
  wire \$38y ;
  wire \$5y ;
  wire \$6y ;
  wire \$8y ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:132.17-132.66" */
  wire \$illegal_instr_o$11 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  wire \$illegal_instr_o$13 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  wire \$illegal_instr_o$15 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  wire \$illegal_instr_o$17 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:213.13-213.62" */
  wire \$illegal_instr_o$19 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:50.13-50.64" */
  wire \$illegal_instr_o$2 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:220.13-220.64" */
  wire \$illegal_instr_o$21 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:232.17-232.67" */
  wire \$illegal_instr_o$25 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18" */
  wire \$illegal_instr_o$27 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  wire \$illegal_instr_o$33 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  wire \$illegal_instr_o$35 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  wire \$illegal_instr_o$37 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  wire \$illegal_instr_o$4 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:120.13-120.77" */
  wire \$illegal_instr_o$9 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  wire [31:0] \$instr_o$12 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  wire [31:0] \$instr_o$14 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  wire [31:0] \$instr_o$16 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18" */
  wire [31:0] \$instr_o$26 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  wire [31:0] \$instr_o$3 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:240.17-246.20" */
  wire [31:0] \$instr_o$30 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:235.15-247.18" */
  wire [31:0] \$instr_o$31 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  wire [31:0] \$instr_o$32 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  wire [31:0] \$instr_o$34 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  wire [31:0] \$instr_o$36 ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:114.13-118.16" */
  wire [31:0] \$instr_o$7 ;
  wire [31:0] \$procmux$4970_Y ;
  wire \$procmux$4971_CMP ;
  wire [31:0] \$procmux$4973_Y ;
  wire \$procmux$4974_CMP ;
  wire [31:0] \$procmux$4976_Y ;
  wire \$procmux$4977_CMP ;
  wire [31:0] \$procmux$4978_Y ;
  wire \$procmux$4979_CMP ;
  wire [31:0] \$procmux$4980_Y ;
  wire \$procmux$4981_CMP ;
  wire [31:0] \$procmux$4987_Y ;
  wire \$procmux$4988_CMP ;
  wire [31:0] \$procmux$4990_Y ;
  wire \$procmux$4991_CMP ;
  wire [31:0] \$procmux$4992_Y ;
  wire \$procmux$4993_CMP ;
  wire [31:0] \$procmux$4994_Y ;
  wire \$procmux$4995_CMP ;
  wire [31:0] \$procmux$5002_Y ;
  wire \$procmux$5003_CMP ;
  wire [31:0] \$procmux$5004_Y ;
  wire \$procmux$5005_CMP ;
  wire [31:0] \$procmux$5006_Y ;
  wire \$procmux$5007_CMP ;
  wire \$procmux$5012_Y ;
  wire \$procmux$5013_CMP ;
  wire \$procmux$5015_Y ;
  wire \$procmux$5016_CMP ;
  wire \$procmux$5017_Y ;
  wire \$procmux$5018_CMP ;
  wire \$procmux$5019_Y ;
  wire \$procmux$5020_CMP ;
  wire \$procmux$5021_Y ;
  wire \$procmux$5022_CMP ;
  wire [31:0] \$procmux$5029_Y ;
  wire \$procmux$5030_CMP ;
  wire [31:0] \$procmux$5031_Y ;
  wire \$procmux$5032_CMP ;
  wire [31:0] \$procmux$5033_Y ;
  wire \$procmux$5034_CMP ;
  wire [31:0] \$procmux$5035_Y ;
  wire \$procmux$5036_CMP ;
  wire \$procmux$5043_Y ;
  wire \$procmux$5044_CMP ;
  wire \$procmux$5045_Y ;
  wire \$procmux$5046_CMP ;
  wire \$procmux$5047_Y ;
  wire \$procmux$5048_CMP ;
  wire \$procmux$5049_Y ;
  wire \$procmux$5050_CMP ;
  wire \$procmux$5056_Y ;
  wire \$procmux$5057_CMP ;
  wire \$procmux$5058_Y ;
  wire \$procmux$5059_CMP ;
  wire \$procmux$5060_Y ;
  wire \$procmux$5061_CMP ;
  wire \$procmux$5066_Y ;
  wire \$procmux$5067_CMP ;
  wire \$procmux$5068_Y ;
  wire \$procmux$5069_CMP ;
  wire \$procmux$5070_Y ;
  wire \$procmux$5071_CMP ;
  wire \$procmux$5077_Y ;
  wire \$procmux$5078_CMP ;
  wire \$procmux$5079_Y ;
  wire \$procmux$5080_CMP ;
  wire \$procmux$5081_Y ;
  wire \$procmux$5082_CMP ;
  wire \$procmux$5084_Y ;
  wire [3:0] \$procmux$5085_CMP ;
  wire \$procmux$5085_CTRL ;
  wire \$procmux$5087_CMP ;
  wire \$procmux$5089_CMP ;
  wire \$procmux$5091_CMP ;
  wire \$procmux$5092_Y ;
  wire \$procmux$5093_CMP ;
  wire [31:0] \$procmux$5096_Y ;
  wire \$procmux$5097_CMP ;
  wire \$procmux$5099_CMP ;
  wire \$procmux$5101_CMP ;
  wire \$procmux$5103_CMP ;
  wire [31:0] \$procmux$5104_Y ;
  wire \$procmux$5105_CMP ;
  wire \$procmux$5109_Y ;
  wire [3:0] \$procmux$5110_CMP ;
  wire \$procmux$5110_CTRL ;
  wire \$procmux$5111_Y ;
  wire \$procmux$5112_CMP ;
  wire \$procmux$5113_Y ;
  wire \$procmux$5114_CMP ;
  wire \$procmux$5115_Y ;
  wire \$procmux$5116_CMP ;
  wire [31:0] \$procmux$5121_Y ;
  wire \$procmux$5122_CMP ;
  wire \$procmux$5123_CMP ;
  wire \$procmux$5124_CMP ;
  wire \$procmux$5125_CMP ;
  wire [31:0] \$procmux$5126_Y ;
  wire \$procmux$5127_CMP ;
  wire [31:0] \$procmux$5128_Y ;
  wire \$procmux$5129_CMP ;
  wire [31:0] \$procmux$5130_Y ;
  wire \$procmux$5131_CMP ;
  wire [31:0] \$procmux$5136_Y ;
  wire \$procmux$5137_CMP ;
  wire \$procmux$5138_CMP ;
  wire [1:0] \$procmux$5140_CMP ;
  wire \$procmux$5140_CTRL ;
  wire [31:0] \$procmux$5141_Y ;
  wire \$procmux$5142_CMP ;
  wire [31:0] \$procmux$5143_Y ;
  wire \$procmux$5144_CMP ;
  wire \$procmux$5150_Y ;
  wire \$procmux$5151_CMP ;
  wire \$procmux$5152_Y ;
  wire [1:0] \$procmux$5153_CMP ;
  wire \$procmux$5153_CTRL ;
  wire \$procmux$5154_Y ;
  wire \$procmux$5155_CMP ;
  wire \$procmux$5156_Y ;
  wire \$procmux$5157_CMP ;
  wire \$procmux$5162_Y ;
  wire \$procmux$5163_CMP ;
  wire [1:0] \$procmux$5165_CMP ;
  wire \$procmux$5165_CTRL ;
  wire \$procmux$5166_Y ;
  wire \$procmux$5167_CMP ;
  wire \$procmux$5168_Y ;
  wire \$procmux$5169_CMP ;
  wire \$procmux$5175_Y ;
  wire \$procmux$5176_CMP ;
  wire \$procmux$5177_Y ;
  wire \$procmux$5178_CMP ;
  wire \$procmux$5179_Y ;
  wire \$procmux$5180_CMP ;
  wire [31:0] \$procmux$5185_Y ;
  wire \$procmux$5186_CMP ;
  wire [31:0] \$procmux$5187_Y ;
  wire \$procmux$5188_CMP ;
  wire [31:0] \$procmux$5189_Y ;
  wire \$procmux$5190_CMP ;
  wire [31:0] \$procmux$5193_Y ;
  wire [1:0] \$procmux$5194_CMP ;
  wire \$procmux$5194_CTRL ;
  wire \$procmux$5196_CMP ;
  wire \$procmux$5198_CMP ;
  wire \$procmux$5199_CMP ;
  wire [1:0] \$procmux$5200_CMP ;
  wire \$procmux$5200_CTRL ;
  wire \$procmux$5201_CMP ;
  wire [31:0] \$procmux$5202_Y ;
  wire \$procmux$5203_CMP ;
  wire \$procmux$5208_Y ;
  wire \$procmux$5209_CMP ;
  wire \$procmux$5211_CMP ;
  wire \$procmux$5212_Y ;
  wire \$procmux$5213_CMP ;
  wire \$procmux$5220_Y ;
  wire \$procmux$5221_CMP ;
  wire \$procmux$5222_Y ;
  wire \$procmux$5223_CMP ;
  wire \$procmux$5224_Y ;
  wire \$procmux$5225_CMP ;
  wire \$procmux$5229_Y ;
  wire [4:0] \$procmux$5230_CMP ;
  wire \$procmux$5230_CTRL ;
  wire \$procmux$5232_CMP ;
  wire \$procmux$5233_Y ;
  wire \$procmux$5234_CMP ;
  wire [31:0] \$procmux$5239_Y ;
  wire \$procmux$5240_CMP ;
  wire \$procmux$5241_CMP ;
  wire \$procmux$5243_CMP ;
  wire [31:0] \$procmux$5244_Y ;
  wire \$procmux$5245_CMP ;
  wire \$procmux$5248_Y ;
  wire \$procmux$5249_CMP ;
  wire \$procmux$5251_CMP ;
  wire \$procmux$5253_CMP ;
  wire [31:0] \$procmux$5256_Y ;
  wire \$procmux$5257_CMP ;
  wire \$procmux$5259_CMP ;
  wire \$procmux$5261_CMP ;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:17.23" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:23.23" */
  output illegal_instr_o;
  wire illegal_instr_o;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:20.23" */
  input [31:0] instr_i;
  wire [31:0] instr_i;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:21.23" */
  output [31:0] instr_o;
  wire [31:0] instr_o;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:22.23" */
  output is_compressed_o;
  wire is_compressed_o;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:18.23" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:29.9" */
  wire unused_valid;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:19.23" */
  input valid_i;
  wire valid_i;
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:50.17-50.38" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(instr_i[12:5]),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:220.17-220.38" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(instr_i[11:7]),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.17-224.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(instr_i[12]),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.19-225.39" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(instr_i[6:2]),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:232.21-232.42" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(instr_i[11:7]),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:235.19-235.39" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(instr_i[6:2]),
    .Y(\$28y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:240.21-240.42" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(instr_i[11:7]),
    .Y(\$29y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:279.29-279.50" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(instr_i[1:0]),
    .B(2'h3),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:99.49-99.61" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(instr_i[15]),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:114.17-114.39" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(instr_i[11:7]),
    .B(5'h02),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:120.17-120.52" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ instr_i[12], instr_i[6:2] }),
    .Y(\$8y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:242.19-242.47|rtl/cve2/cve2_compressed_decoder.sv:240.17-246.20" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4970  (
    .A({ 12'h000, instr_i[11:7], 15'h00e7 }),
    .B(32'd1048691),
    .S(\$procmux$4971_CMP ),
    .Y(\$procmux$4970_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:238.17-238.97|rtl/cve2/cve2_compressed_decoder.sv:235.15-247.18" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4973  (
    .A(\$procmux$4970_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$4974_CMP ),
    .Y(\$procmux$4973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4976  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4973_Y ),
    .S(instr_i[12]),
    .Y(\$procmux$4976_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4978  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4976_Y ),
    .S(\$procmux$4979_CMP ),
    .Y(\$procmux$4978_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4979_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$4979_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4980  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4978_Y ),
    .S(\$procmux$4981_CMP ),
    .Y(\$procmux$4980_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4981_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$4981_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:238.17-238.97|rtl/cve2/cve2_compressed_decoder.sv:235.15-247.18" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4987  (
    .A(\$instr_o$30 ),
    .B({ 7'h00, instr_i[6:2], instr_i[11:7], 3'h0, instr_i[11:7], 7'h33 }),
    .S(\$procmux$4988_CMP ),
    .Y(\$procmux$4987_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4990  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4987_Y ),
    .S(instr_i[12]),
    .Y(\$procmux$4990_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4992  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4990_Y ),
    .S(\$procmux$4993_CMP ),
    .Y(\$procmux$4992_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4993_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$4993_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$4994  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$4992_Y ),
    .S(\$procmux$4995_CMP ),
    .Y(\$procmux$4994_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4995_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$4995_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5002  (
    .A(\$instr_o$26 ),
    .B(\$instr_o$31 ),
    .S(instr_i[12]),
    .Y(\$procmux$5002_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5004  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5002_Y ),
    .S(\$procmux$5005_CMP ),
    .Y(\$procmux$5004_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5005_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5005_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5006  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5004_Y ),
    .S(\$procmux$5007_CMP ),
    .Y(\$procmux$5006_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5007_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5007_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:232.44-232.67|rtl/cve2/cve2_compressed_decoder.sv:232.17-232.67" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5012  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5013_CMP ),
    .Y(\$procmux$5012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:228.17-228.88|rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5015  (
    .A(\$procmux$5012_Y ),
    .B(1'hx),
    .S(\$procmux$5016_CMP ),
    .Y(\$procmux$5015_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5017  (
    .A(\$procmux$5015_Y ),
    .B(1'hx),
    .S(instr_i[12]),
    .Y(\$procmux$5017_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5019  (
    .A(1'hx),
    .B(\$procmux$5017_Y ),
    .S(\$procmux$5020_CMP ),
    .Y(\$procmux$5019_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5020_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5020_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5021  (
    .A(1'hx),
    .B(\$procmux$5019_Y ),
    .S(\$procmux$5022_CMP ),
    .Y(\$procmux$5021_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5022_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5022_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:228.17-228.88|rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5029  (
    .A({ 12'h000, instr_i[11:7], 15'h0067 }),
    .B({ 7'h00, instr_i[6:2], 8'h00, instr_i[11:7], 7'h33 }),
    .S(\$procmux$5030_CMP ),
    .Y(\$procmux$5029_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5031  (
    .A(\$procmux$5029_Y ),
    .B(32'hxxxxxxxx),
    .S(instr_i[12]),
    .Y(\$procmux$5031_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5033  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5031_Y ),
    .S(\$procmux$5034_CMP ),
    .Y(\$procmux$5033_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5034_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5034_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5035  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5033_Y ),
    .S(\$procmux$5036_CMP ),
    .Y(\$procmux$5035_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5036_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5036_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:228.17-228.88|rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5043  (
    .A(\$illegal_instr_o$25 ),
    .B(1'h0),
    .S(\$procmux$5044_CMP ),
    .Y(\$procmux$5043_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5045  (
    .A(\$procmux$5043_Y ),
    .B(1'hx),
    .S(instr_i[12]),
    .Y(\$procmux$5045_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5047  (
    .A(1'hx),
    .B(\$procmux$5045_Y ),
    .S(\$procmux$5048_CMP ),
    .Y(\$procmux$5047_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5048_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5048_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5049  (
    .A(1'hx),
    .B(\$procmux$5047_Y ),
    .S(\$procmux$5050_CMP ),
    .Y(\$procmux$5049_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5050_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5050_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:225.15-233.18|rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5056  (
    .A(\$illegal_instr_o$27 ),
    .B(1'h0),
    .S(instr_i[12]),
    .Y(\$procmux$5056_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5058  (
    .A(1'hx),
    .B(\$procmux$5056_Y ),
    .S(\$procmux$5059_CMP ),
    .Y(\$procmux$5058_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5059_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5059_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5060  (
    .A(1'hx),
    .B(\$procmux$5058_Y ),
    .S(\$procmux$5061_CMP ),
    .Y(\$procmux$5060_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5061_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5061_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:220.41-220.64|rtl/cve2/cve2_compressed_decoder.sv:220.13-220.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5066  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5067_CMP ),
    .Y(\$procmux$5066_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:216.19-221.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5068  (
    .A(1'hx),
    .B(\$procmux$5066_Y ),
    .S(\$procmux$5069_CMP ),
    .Y(\$procmux$5068_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:216.19-221.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5069_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h2),
    .Y(\$procmux$5069_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5070  (
    .A(1'hx),
    .B(\$procmux$5068_Y ),
    .S(\$procmux$5071_CMP ),
    .Y(\$procmux$5070_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5071_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5071_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:213.39-213.62|rtl/cve2/cve2_compressed_decoder.sv:213.13-213.62" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5077  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5078_CMP ),
    .Y(\$procmux$5077_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:209.19-214.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5079  (
    .A(1'hx),
    .B(\$procmux$5077_Y ),
    .S(\$procmux$5080_CMP ),
    .Y(\$procmux$5079_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:209.19-214.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5080_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5080_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5081  (
    .A(1'hx),
    .B(\$procmux$5079_Y ),
    .S(\$procmux$5082_CMP ),
    .Y(\$procmux$5081_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5082_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5082_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$5084  (
    .A(1'h0),
    .B({ \$illegal_instr_o$19 , \$illegal_instr_o$21 , \$illegal_instr_o$33 , 1'h1 }),
    .S({ \$procmux$5091_CMP , \$procmux$5089_CMP , \$procmux$5087_CMP , \$procmux$5085_CTRL  }),
    .Y(\$procmux$5084_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5085_ANY  (
    .A(\$procmux$5085_CMP ),
    .Y(\$procmux$5085_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5085_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h1),
    .Y(\$procmux$5085_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5085_CMP1  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5085_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5085_CMP2  (
    .A(instr_i[15:13]),
    .B(3'h5),
    .Y(\$procmux$5085_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:261.13-261.36|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5085_CMP3  (
    .A(instr_i[15:13]),
    .B(3'h7),
    .Y(\$procmux$5085_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5087_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5087_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:216.19-221.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5089_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h2),
    .Y(\$procmux$5089_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:209.19-214.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5091_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5091_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5092  (
    .A(1'hx),
    .B(\$procmux$5084_Y ),
    .S(\$procmux$5093_CMP ),
    .Y(\$procmux$5092_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5093_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5093_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:253.13-254.62|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$5096  (
    .A(instr_i),
    .B({ 7'h00, instr_i[6:2], instr_i[11:7], 3'h1, instr_i[11:7], 11'h130, instr_i[3:2], instr_i[12], instr_i[6:4], 10'h012, instr_i[11:7], 7'h03, \$instr_o$32 , 4'h0, instr_i[8:7], instr_i[12], instr_i[6:2], 8'h12, instr_i[11:9], 9'h023 }),
    .S({ \$procmux$5103_CMP , \$procmux$5101_CMP , \$procmux$5099_CMP , \$procmux$5097_CMP  }),
    .Y(\$procmux$5096_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:253.13-254.62|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5097_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h6),
    .Y(\$procmux$5097_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:224.13-248.16|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5099_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5099_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:216.19-221.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5101_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h2),
    .Y(\$procmux$5101_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:209.19-214.14|rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5103_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5103_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5104  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5096_Y ),
    .S(\$procmux$5105_CMP ),
    .Y(\$procmux$5104_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5105_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5105_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5109  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5110_CTRL ),
    .Y(\$procmux$5109_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5110_ANY  (
    .A(\$procmux$5110_CMP ),
    .Y(\$procmux$5110_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5110_CMP0  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h4),
    .Y(\$procmux$5110_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5110_CMP1  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h5),
    .Y(\$procmux$5110_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5110_CMP2  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h6),
    .Y(\$procmux$5110_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:173.21-173.44|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5110_CMP3  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h7),
    .Y(\$procmux$5110_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5111  (
    .A(1'hx),
    .B(\$procmux$5109_Y ),
    .S(\$procmux$5112_CMP ),
    .Y(\$procmux$5111_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5112_CMP0  (
    .A(instr_i[11:10]),
    .B(2'h3),
    .Y(\$procmux$5112_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5113  (
    .A(1'hx),
    .B(\$procmux$5111_Y ),
    .S(\$procmux$5114_CMP ),
    .Y(\$procmux$5113_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5114_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5114_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5115  (
    .A(1'hx),
    .B(\$procmux$5113_Y ),
    .S(\$procmux$5116_CMP ),
    .Y(\$procmux$5115_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5116_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5116_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:163.21-164.66|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$5121  (
    .A(instr_i),
    .B({ 9'h081, instr_i[4:2], 2'h1, instr_i[9:7], 5'h01, instr_i[9:7], 16'h6601, instr_i[4:2], 2'h1, instr_i[9:7], 5'h11, instr_i[9:7], 16'h6601, instr_i[4:2], 2'h1, instr_i[9:7], 5'h19, instr_i[9:7], 16'h6601, instr_i[4:2], 2'h1, instr_i[9:7], 5'h1d, instr_i[9:7], 7'h33 }),
    .S({ \$procmux$5125_CMP , \$procmux$5124_CMP , \$procmux$5123_CMP , \$procmux$5122_CMP  }),
    .Y(\$procmux$5121_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:163.21-164.66|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5122_CMP0  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h3),
    .Y(\$procmux$5122_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:157.21-158.66|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5123_CMP0  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h2),
    .Y(\$procmux$5123_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:151.21-152.66|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5124_CMP0  (
    .A({ instr_i[12], instr_i[6:5] }),
    .B(3'h1),
    .Y(\$procmux$5124_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:145.21-146.74|rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5125_CMP0  (
    .A({ instr_i[12], instr_i[6:5] }),
    .Y(\$procmux$5125_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5126  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5121_Y ),
    .S(\$procmux$5127_CMP ),
    .Y(\$procmux$5126_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5127_CMP0  (
    .A(instr_i[11:10]),
    .B(2'h3),
    .Y(\$procmux$5127_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5128  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5126_Y ),
    .S(\$procmux$5129_CMP ),
    .Y(\$procmux$5128_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5129_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5129_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5130  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5128_Y ),
    .S(\$procmux$5131_CMP ),
    .Y(\$procmux$5130_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5131_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5131_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$5136  (
    .A(32'hxxxxxxxx),
    .B({ 1'h0, instr_i[10], 5'h00, instr_i[6:2], 2'h1, instr_i[9:7], 5'h15, instr_i[9:7], 7'h13, instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[6:2], 2'h1, instr_i[9:7], 5'h1d, instr_i[9:7], 7'h13, \$instr_o$12  }),
    .S({ \$procmux$5140_CTRL , \$procmux$5138_CMP , \$procmux$5137_CMP  }),
    .Y(\$procmux$5136_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5137_CMP0  (
    .A(instr_i[11:10]),
    .B(2'h3),
    .Y(\$procmux$5137_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:137.17-138.74|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5138_CMP0  (
    .A(instr_i[11:10]),
    .B(2'h2),
    .Y(\$procmux$5138_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5140_ANY  (
    .A(\$procmux$5140_CMP ),
    .Y(\$procmux$5140_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5140_CMP0  (
    .A(instr_i[11:10]),
    .Y(\$procmux$5140_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5140_CMP1  (
    .A(instr_i[11:10]),
    .B(2'h1),
    .Y(\$procmux$5140_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5141  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5136_Y ),
    .S(\$procmux$5142_CMP ),
    .Y(\$procmux$5141_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5142_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5142_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5143  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5141_Y ),
    .S(\$procmux$5144_CMP ),
    .Y(\$procmux$5143_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5144_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5144_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:132.43-132.66|rtl/cve2/cve2_compressed_decoder.sv:132.17-132.66" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5150  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5151_CMP ),
    .Y(\$procmux$5150_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5152  (
    .A(1'hx),
    .B(\$procmux$5150_Y ),
    .S(\$procmux$5153_CTRL ),
    .Y(\$procmux$5152_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5153_ANY  (
    .A(\$procmux$5153_CMP ),
    .Y(\$procmux$5153_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5153_CMP0  (
    .A(instr_i[11:10]),
    .Y(\$procmux$5153_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5153_CMP1  (
    .A(instr_i[11:10]),
    .B(2'h1),
    .Y(\$procmux$5153_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5154  (
    .A(1'hx),
    .B(\$procmux$5152_Y ),
    .S(\$procmux$5155_CMP ),
    .Y(\$procmux$5154_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5155_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5155_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5156  (
    .A(1'hx),
    .B(\$procmux$5154_Y ),
    .S(\$procmux$5157_CMP ),
    .Y(\$procmux$5156_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5157_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5157_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$5162  (
    .A(1'h0),
    .B({ \$illegal_instr_o$11 , \$illegal_instr_o$13  }),
    .S({ \$procmux$5165_CTRL , \$procmux$5163_CMP  }),
    .Y(\$procmux$5162_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:142.17-179.24|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5163_CMP0  (
    .A(instr_i[11:10]),
    .B(2'h3),
    .Y(\$procmux$5163_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5165_ANY  (
    .A(\$procmux$5165_CMP ),
    .Y(\$procmux$5165_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5165_CMP0  (
    .A(instr_i[11:10]),
    .Y(\$procmux$5165_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:126.22-133.18|rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5165_CMP1  (
    .A(instr_i[11:10]),
    .B(2'h1),
    .Y(\$procmux$5165_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5166  (
    .A(1'hx),
    .B(\$procmux$5162_Y ),
    .S(\$procmux$5167_CMP ),
    .Y(\$procmux$5166_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5167_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5167_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5168  (
    .A(1'hx),
    .B(\$procmux$5166_Y ),
    .S(\$procmux$5169_CMP ),
    .Y(\$procmux$5168_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5169_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5169_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:120.54-120.77|rtl/cve2/cve2_compressed_decoder.sv:120.13-120.77" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5175  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5176_CMP ),
    .Y(\$procmux$5175_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5177  (
    .A(1'hx),
    .B(\$procmux$5175_Y ),
    .S(\$procmux$5178_CMP ),
    .Y(\$procmux$5177_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5178_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5178_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5179  (
    .A(1'hx),
    .B(\$procmux$5177_Y ),
    .S(\$procmux$5180_CMP ),
    .Y(\$procmux$5179_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5180_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5180_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:116.15-117.83|rtl/cve2/cve2_compressed_decoder.sv:114.13-118.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5185  (
    .A({ instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[6:2], instr_i[11:7], 7'h37 }),
    .B({ instr_i[12], instr_i[12], instr_i[12], instr_i[4:3], instr_i[5], instr_i[2], instr_i[6], 24'h010113 }),
    .S(\$procmux$5186_CMP ),
    .Y(\$procmux$5185_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5187  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5185_Y ),
    .S(\$procmux$5188_CMP ),
    .Y(\$procmux$5187_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5188_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5188_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5189  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5187_Y ),
    .S(\$procmux$5190_CMP ),
    .Y(\$procmux$5189_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5190_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5190_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:191.13-193.54|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd32)
  ) \$procmux$5193  (
    .A(32'hxxxxxxxx),
    .B({ instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[6:2], instr_i[11:7], 3'h0, instr_i[11:7], 7'h13, instr_i[12], instr_i[8], instr_i[10:9], instr_i[6], instr_i[7], instr_i[2], instr_i[11], instr_i[5:3], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], 4'h0, \$5y , 7'h6f, instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[6:2], 8'h00, instr_i[11:7], 7'h13, \$instr_o$7 , \$instr_o$14 , instr_i[12], instr_i[12], instr_i[12], instr_i[12], instr_i[6:5], instr_i[2], 7'h01, instr_i[9:7], 2'h0, instr_i[13], instr_i[11:10], instr_i[4:3], instr_i[12], 7'h63 }),
    .S({ \$procmux$5201_CMP , \$procmux$5200_CTRL , \$procmux$5199_CMP , \$procmux$5198_CMP , \$procmux$5196_CMP , \$procmux$5194_CTRL  }),
    .Y(\$procmux$5193_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:191.13-193.54|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5194_ANY  (
    .A(\$procmux$5194_CMP ),
    .Y(\$procmux$5194_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:191.13-193.54|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5194_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h6),
    .Y(\$procmux$5194_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:191.13-193.54|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5194_CMP1  (
    .A(instr_i[15:13]),
    .B(3'h7),
    .Y(\$procmux$5194_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5196_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5196_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5198_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5198_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:105.13-106.62|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5199_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h2),
    .Y(\$procmux$5199_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:97.13-99.77|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5200_ANY  (
    .A(\$procmux$5200_CMP ),
    .Y(\$procmux$5200_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:97.13-99.77|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5200_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h1),
    .Y(\$procmux$5200_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:97.13-99.77|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5200_CMP1  (
    .A(instr_i[15:13]),
    .B(3'h5),
    .Y(\$procmux$5200_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:90.13-91.77|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5201_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5201_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5202  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5193_Y ),
    .S(\$procmux$5203_CMP ),
    .Y(\$procmux$5202_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5203_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5203_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$5208  (
    .A(1'h0),
    .B({ \$illegal_instr_o$9 , \$illegal_instr_o$15  }),
    .S({ \$procmux$5211_CMP , \$procmux$5209_CMP  }),
    .Y(\$procmux$5208_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:124.13-185.20|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5209_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5209_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:109.19-121.14|rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5211_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5211_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5212  (
    .A(1'hx),
    .B(\$procmux$5208_Y ),
    .S(\$procmux$5213_CMP ),
    .Y(\$procmux$5212_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5213_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5213_CMP )
  );
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:50.41-50.64|rtl/cve2/cve2_compressed_decoder.sv:50.13-50.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5220  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5221_CMP ),
    .Y(\$procmux$5220_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:46.19-51.14|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5222  (
    .A(1'hx),
    .B(\$procmux$5220_Y ),
    .S(\$procmux$5223_CMP ),
    .Y(\$procmux$5222_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:46.19-51.14|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5223_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5223_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5224  (
    .A(1'hx),
    .B(\$procmux$5222_Y ),
    .S(\$procmux$5225_CMP ),
    .Y(\$procmux$5224_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5225_CMP0  (
    .A(instr_i[1:0]),
    .Y(\$procmux$5225_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$5229  (
    .A(1'h0),
    .B({ \$illegal_instr_o$2 , 1'h1 }),
    .S({ \$procmux$5232_CMP , \$procmux$5230_CTRL  }),
    .Y(\$procmux$5229_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_ANY  (
    .A(\$procmux$5230_CMP ),
    .Y(\$procmux$5230_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h1),
    .Y(\$procmux$5230_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_CMP1  (
    .A(instr_i[15:13]),
    .B(3'h3),
    .Y(\$procmux$5230_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_CMP2  (
    .A(instr_i[15:13]),
    .B(3'h4),
    .Y(\$procmux$5230_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_CMP3  (
    .A(instr_i[15:13]),
    .B(3'h5),
    .Y(\$procmux$5230_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:71.13-71.36|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5230_CMP4  (
    .A(instr_i[15:13]),
    .B(3'h7),
    .Y(\$procmux$5230_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:46.19-51.14|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5232_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5232_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5233  (
    .A(1'hx),
    .B(\$procmux$5229_Y ),
    .S(\$procmux$5234_CMP ),
    .Y(\$procmux$5233_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5234_CMP0  (
    .A(instr_i[1:0]),
    .Y(\$procmux$5234_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:61.13-63.47|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$5239  (
    .A(instr_i),
    .B({ 2'h0, instr_i[10:7], instr_i[12:11], instr_i[5], instr_i[6], 12'h041, instr_i[4:2], 12'h260, instr_i[5], instr_i[12:10], instr_i[6], 4'h1, instr_i[9:7], 5'h09, instr_i[4:2], 12'h060, instr_i[5], instr_i[12], 2'h1, instr_i[4:2], 2'h1, instr_i[9:7], 3'h2, instr_i[11:10], instr_i[6], 9'h023 }),
    .S({ \$procmux$5243_CMP , \$procmux$5241_CMP , \$procmux$5240_CMP  }),
    .Y(\$procmux$5239_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:61.13-63.47|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5240_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h6),
    .Y(\$procmux$5240_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:55.13-56.96|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5241_CMP0  (
    .A(instr_i[15:13]),
    .B(3'h2),
    .Y(\$procmux$5241_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:46.19-51.14|rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5243_CMP0  (
    .A(instr_i[15:13]),
    .Y(\$procmux$5243_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5244  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$5239_Y ),
    .S(\$procmux$5245_CMP ),
    .Y(\$procmux$5244_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5245_CMP0  (
    .A(instr_i[1:0]),
    .Y(\$procmux$5245_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$5248  (
    .A(1'h0),
    .B({ \$illegal_instr_o$4 , \$illegal_instr_o$17 , \$illegal_instr_o$35  }),
    .S({ \$procmux$5253_CMP , \$procmux$5251_CMP , \$procmux$5249_CMP  }),
    .Y(\$procmux$5248_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5249_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5249_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5251_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5251_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5253_CMP0  (
    .A(instr_i[1:0]),
    .Y(\$procmux$5253_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$5256  (
    .A(instr_i),
    .B({ \$instr_o$3 , \$instr_o$16 , \$instr_o$34  }),
    .S({ \$procmux$5261_CMP , \$procmux$5259_CMP , \$procmux$5257_CMP  }),
    .Y(\$procmux$5256_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:208.9-267.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5257_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h2),
    .Y(\$procmux$5257_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:86.9-199.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5259_CMP0  (
    .A(instr_i[1:0]),
    .B(2'h1),
    .Y(\$procmux$5259_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_compressed_decoder.sv:45.9-77.16|rtl/cve2/cve2_compressed_decoder.sv:42.5-276.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5261_CMP0  (
    .A(instr_i[1:0]),
    .Y(\$procmux$5261_CMP )
  );
  assign unused_valid = valid_i;
  assign instr_o = \$instr_o$36 ;
  assign illegal_instr_o = \$illegal_instr_o$37 ;
  assign is_compressed_o = \$38y ;
  assign \$procmux$4971_CMP  = \$29y ;
  assign \$procmux$4974_CMP  = \$28y ;
  assign \$procmux$4977_CMP  = \$22y ;
  assign \$instr_o$30  = \$procmux$4980_Y ;
  assign \$procmux$4988_CMP  = \$28y ;
  assign \$procmux$4991_CMP  = \$22y ;
  assign \$instr_o$31  = \$procmux$4994_Y ;
  assign \$procmux$5003_CMP  = \$22y ;
  assign \$instr_o$32  = \$procmux$5006_Y ;
  assign \$procmux$5013_CMP  = \$24y ;
  assign \$procmux$5016_CMP  = \$23y ;
  assign \$procmux$5018_CMP  = \$22y ;
  assign \$illegal_instr_o$25  = \$procmux$5021_Y ;
  assign \$procmux$5030_CMP  = \$23y ;
  assign \$procmux$5032_CMP  = \$22y ;
  assign \$instr_o$26  = \$procmux$5035_Y ;
  assign \$procmux$5044_CMP  = \$23y ;
  assign \$procmux$5046_CMP  = \$22y ;
  assign \$illegal_instr_o$27  = \$procmux$5049_Y ;
  assign \$procmux$5057_CMP  = \$22y ;
  assign \$illegal_instr_o$33  = \$procmux$5060_Y ;
  assign \$procmux$5067_CMP  = \$20y ;
  assign \$illegal_instr_o$21  = \$procmux$5070_Y ;
  assign \$procmux$5078_CMP  = \$18y ;
  assign \$illegal_instr_o$19  = \$procmux$5081_Y ;
  assign \$illegal_instr_o$35  = \$procmux$5092_Y ;
  assign \$instr_o$34  = \$procmux$5104_Y ;
  assign \$illegal_instr_o$13  = \$procmux$5115_Y ;
  assign \$instr_o$12  = \$procmux$5130_Y ;
  assign \$instr_o$14  = \$procmux$5143_Y ;
  assign \$procmux$5151_CMP  = \$10y ;
  assign \$illegal_instr_o$11  = \$procmux$5156_Y ;
  assign \$illegal_instr_o$15  = \$procmux$5168_Y ;
  assign \$procmux$5176_CMP  = \$8y ;
  assign \$illegal_instr_o$9  = \$procmux$5179_Y ;
  assign \$procmux$5186_CMP  = \$6y ;
  assign \$instr_o$7  = \$procmux$5189_Y ;
  assign \$instr_o$16  = \$procmux$5202_Y ;
  assign \$illegal_instr_o$17  = \$procmux$5212_Y ;
  assign \$procmux$5221_CMP  = \$1y ;
  assign \$illegal_instr_o$2  = \$procmux$5224_Y ;
  assign \$illegal_instr_o$4  = \$procmux$5233_Y ;
  assign \$instr_o$3  = \$procmux$5244_Y ;
  assign \$illegal_instr_o$37  = \$procmux$5248_Y ;
  assign \$instr_o$36  = \$procmux$5256_Y ;
  assign \$10y  = instr_i[12];
  assign \$18y  = instr_i[12];
endmodule

/* src = "rtl/cve2/cve2_controller.sv:12.8" */
module \cve2_controller$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.controller_i (clk_i, rst_ni, irqs_i, instr_req_o, debug_req_i, fetch_enable_i, irq_nm_i, ctrl_busy_o, instr_valid_i, instr_is_compressed_i, instr_valid_clear_o, id_in_ready_o, pc_set_o, pc_mux_o, exc_pc_mux_o, exc_cause_o, instr_fetch_err_i, instr_fetch_err_plus2_i, pc_id_i, csr_save_if_o, csr_save_id_o
, csr_restore_mret_id_o, csr_restore_dret_id_o, csr_save_cause_o, csr_mtval_o, priv_mode_i, csr_mstatus_tw_i, lsu_addr_last_i, csr_mstatus_mie_i, irq_pending_i, nmi_mode_o, debug_mode_o, debug_cause_o, debug_csr_save_o, debug_single_step_i, debug_ebreakm_i, debug_ebreaku_i, trigger_match_i, perf_jump_o, perf_tbranch_o, instr_i, illegal_insn_i
, ecall_insn_i, mret_insn_i, dret_insn_i, wfi_insn_i, ebrk_insn_i, csr_pipe_flush_i, instr_compressed_i, controller_run_o, load_err_i, store_err_i, branch_set_i, jump_set_i, stall_id_i, flush_id_o);
  wire \$0y ;
  wire \$102y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$10y ;
  wire \$110y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$11y ;
  wire \$121y ;
  wire \$122y ;
  wire \$123y ;
  wire \$12y ;
  wire \$136y ;
  wire \$137y ;
  wire \$13y ;
  wire \$142y ;
  wire \$143y ;
  wire [1:0] \$144y ;
  wire [31:0] \$145y ;
  wire [31:0] \$146y ;
  wire [31:0] \$147y ;
  wire \$148y ;
  wire [6:0] \$149y ;
  wire \$14y ;
  wire \$150y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$191y ;
  wire \$192y ;
  wire \$193y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$218y ;
  wire \$219y ;
  wire \$21y ;
  wire \$220y ;
  wire \$221y ;
  wire \$222y ;
  wire \$223y ;
  wire \$224y ;
  wire \$225y ;
  wire \$227y ;
  wire \$228y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$6y ;
  wire \$7y ;
  wire \$87y ;
  wire \$89y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$92y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$controller_run_o$202 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire [31:0] \$csr_mtval_o$163 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire [31:0] \$csr_mtval_o$190 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [31:0] \$csr_mtval_o$215 ;
  /* src = "rtl/cve2/cve2_controller.sv:665.20-672.14" */
  wire \$csr_restore_dret_id_o$170 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire \$csr_restore_dret_id_o$177 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$csr_restore_dret_id_o$188 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$csr_restore_dret_id_o$213 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire \$csr_restore_mret_id_o$176 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$csr_restore_mret_id_o$187 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$csr_restore_mret_id_o$212 ;
  /* src = "rtl/cve2/cve2_controller.sv:490.9-514.12" */
  wire \$csr_save_cause_o$133 ;
  /* src = "rtl/cve2/cve2_controller.sv:560.9-569.12" */
  wire \$csr_save_cause_o$141 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire \$csr_save_cause_o$156 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire \$csr_save_cause_o$162 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$csr_save_cause_o$189 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$csr_save_cause_o$214 ;
  /* src = "rtl/cve2/cve2_controller.sv:560.9-569.12" */
  wire \$csr_save_id_o$140 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire \$csr_save_id_o$155 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire \$csr_save_id_o$161 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$csr_save_id_o$186 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$csr_save_id_o$211 ;
  /* src = "rtl/cve2/cve2_controller.sv:490.9-514.12" */
  wire \$csr_save_if_o$132 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$csr_save_if_o$210 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$ctrl_busy_o$201 ;
  /* src = "rtl/cve2/cve2_controller.sv:392.9-397.12" */
  wire \$ctrl_busy_o$94 ;
  /* src = "rtl/cve2/cve2_controller.sv:441.9-450.12" */
  wire [3:0] \$ctrl_fsm_ns$100 ;
  /* src = "rtl/cve2/cve2_controller.sv:472.20-481.14" */
  wire [3:0] \$ctrl_fsm_ns$115 ;
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14" */
  wire [3:0] \$ctrl_fsm_ns$117 ;
  /* src = "rtl/cve2/cve2_controller.sv:465.9-482.12" */
  wire [3:0] \$ctrl_fsm_ns$119 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire [3:0] \$ctrl_fsm_ns$151 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire [3:0] \$ctrl_fsm_ns$157 ;
  /* src = "rtl/cve2/cve2_controller.sv:670.20-672.14" */
  wire [3:0] \$ctrl_fsm_ns$165 ;
  /* src = "rtl/cve2/cve2_controller.sv:665.20-672.14" */
  wire [3:0] \$ctrl_fsm_ns$166 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire [3:0] \$ctrl_fsm_ns$171 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire [3:0] \$ctrl_fsm_ns$178 ;
  /* src = "rtl/cve2/cve2_controller.sv:689.9-691.12" */
  wire [3:0] \$ctrl_fsm_ns$194 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [3:0] \$ctrl_fsm_ns$195 ;
  /* src = "rtl/cve2/cve2_controller.sv:361.9-364.12" */
  wire [3:0] \$ctrl_fsm_ns$88 ;
  /* src = "rtl/cve2/cve2_controller.sv:392.9-397.12" */
  wire [3:0] \$ctrl_fsm_ns$93 ;
  /* src = "rtl/cve2/cve2_controller.sv:402.9-404.12" */
  wire [3:0] \$ctrl_fsm_ns$95 ;
  /* src = "rtl/cve2/cve2_controller.sv:407.9-414.12" */
  wire [3:0] \$ctrl_fsm_ns$96 ;
  /* src = "rtl/cve2/cve2_controller.sv:417.9-422.12" */
  wire [3:0] \$ctrl_fsm_ns$98 ;
  /* src = "rtl/cve2/cve2_controller.sv:534.18-538.12" */
  wire [2:0] \$debug_cause_o$134 ;
  /* src = "rtl/cve2/cve2_controller.sv:532.9-538.12" */
  wire [2:0] \$debug_cause_o$135 ;
  /* src = "rtl/cve2/cve2_controller.sv:560.9-569.12" */
  wire [2:0] \$debug_cause_o$138 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [2:0] \$debug_cause_o$208 ;
  /* src = "rtl/cve2/cve2_controller.sv:560.9-569.12" */
  wire \$debug_csr_save_o$139 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$debug_csr_save_o$209 ;
  /* src = "rtl/cve2/cve2_controller.sv:665.20-672.14" */
  wire \$debug_mode_d$167 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire \$debug_mode_d$173 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$debug_mode_d$180 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$debug_mode_d$197 ;
  /* src = "rtl/cve2/cve2_controller.sv:239.16-245.10" */
  wire \$ebrk_insn_prio$32 ;
  /* src = "rtl/cve2/cve2_controller.sv:237.16-245.10" */
  wire \$ebrk_insn_prio$36 ;
  /* src = "rtl/cve2/cve2_controller.sv:235.16-245.10" */
  wire \$ebrk_insn_prio$41 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$ebrk_insn_prio$47 ;
  /* src = "rtl/cve2/cve2_controller.sv:237.16-245.10" */
  wire \$ecall_insn_prio$35 ;
  /* src = "rtl/cve2/cve2_controller.sv:235.16-245.10" */
  wire \$ecall_insn_prio$40 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$ecall_insn_prio$46 ;
  /* src = "rtl/cve2/cve2_controller.sv:509.20-513.14" */
  wire [6:0] \$exc_cause_o$124 ;
  /* src = "rtl/cve2/cve2_controller.sv:507.20-513.14" */
  wire [6:0] \$exc_cause_o$125 ;
  /* src = "rtl/cve2/cve2_controller.sv:500.20-513.14" */
  wire [6:0] \$exc_cause_o$126 ;
  /* src = "rtl/cve2/cve2_controller.sv:497.11-513.14" */
  wire [6:0] \$exc_cause_o$128 ;
  /* src = "rtl/cve2/cve2_controller.sv:490.9-514.12" */
  wire [6:0] \$exc_cause_o$131 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire [6:0] \$exc_cause_o$154 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire [6:0] \$exc_cause_o$160 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire [6:0] \$exc_cause_o$185 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [6:0] \$exc_cause_o$207 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire [1:0] \$exc_pc_mux_o$184 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [1:0] \$exc_pc_mux_o$206 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire \$flush_id$152 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire \$flush_id$158 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$flush_id$181 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$flush_id$200 ;
  /* src = "rtl/cve2/cve2_controller.sv:461.9-463.12" */
  wire \$halt_if$109 ;
  /* src = "rtl/cve2/cve2_controller.sv:472.20-481.14" */
  wire \$halt_if$116 ;
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14" */
  wire \$halt_if$118 ;
  /* src = "rtl/cve2/cve2_controller.sv:465.9-482.12" */
  wire \$halt_if$120 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$halt_if$198 ;
  /* src = "rtl/cve2/cve2_controller.sv:407.9-414.12" */
  wire \$halt_if$97 ;
  /* src = "rtl/cve2/cve2_controller.sv:417.9-422.12" */
  wire \$halt_if$99 ;
  /* src = "rtl/cve2/cve2_controller.sv:235.16-245.10" */
  wire \$illegal_insn_prio$39 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$illegal_insn_prio$45 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$instr_fetch_err_prio$44 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$instr_req_o$203 ;
  /* src = "rtl/cve2/cve2_controller.sv:243.16-245.10" */
  wire \$load_err_prio$29 ;
  /* src = "rtl/cve2/cve2_controller.sv:241.16-245.10" */
  wire \$load_err_prio$31 ;
  /* src = "rtl/cve2/cve2_controller.sv:239.16-245.10" */
  wire \$load_err_prio$34 ;
  /* src = "rtl/cve2/cve2_controller.sv:237.16-245.10" */
  wire \$load_err_prio$38 ;
  /* src = "rtl/cve2/cve2_controller.sv:235.16-245.10" */
  wire \$load_err_prio$43 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$load_err_prio$49 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$70 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$71 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$72 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$73 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$74 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$75 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$76 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$77 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$78 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$79 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$80 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$81 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$82 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$83 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$84 ;
  /* src = "rtl/cve2/cve2_controller.sv:305.7-307.10" */
  wire [3:0] \$mfip_id$85 ;
  /* src = "rtl/cve2/cve2_controller.sv:497.11-513.14" */
  wire \$nmi_mode_d$127 ;
  /* src = "rtl/cve2/cve2_controller.sv:490.9-514.12" */
  wire \$nmi_mode_d$129 ;
  /* src = "rtl/cve2/cve2_controller.sv:662.13-664.16" */
  wire \$nmi_mode_d$164 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire \$nmi_mode_d$172 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$nmi_mode_d$179 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$nmi_mode_d$196 ;
  /* src = "rtl/cve2/cve2_controller.sv:665.20-672.14" */
  wire [2:0] \$pc_mux_o$169 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire [2:0] \$pc_mux_o$175 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire [2:0] \$pc_mux_o$183 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire [2:0] \$pc_mux_o$205 ;
  /* src = "rtl/cve2/cve2_controller.sv:452.9-457.12" */
  wire \$pc_set_o$103 ;
  /* src = "rtl/cve2/cve2_controller.sv:490.9-514.12" */
  wire \$pc_set_o$130 ;
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18" */
  wire \$pc_set_o$153 ;
  /* src = "rtl/cve2/cve2_controller.sv:600.11-655.18" */
  wire \$pc_set_o$159 ;
  /* src = "rtl/cve2/cve2_controller.sv:665.20-672.14" */
  wire \$pc_set_o$168 ;
  /* src = "rtl/cve2/cve2_controller.sv:658.11-672.14" */
  wire \$pc_set_o$174 ;
  /* src = "rtl/cve2/cve2_controller.sv:588.9-673.12" */
  wire \$pc_set_o$182 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$pc_set_o$204 ;
  /* src = "rtl/cve2/cve2_controller.sv:452.9-457.12" */
  wire \$perf_jump_o$104 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$perf_jump_o$216 ;
  /* src = "rtl/cve2/cve2_controller.sv:452.9-457.12" */
  wire \$perf_tbranch_o$105 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$perf_tbranch_o$217 ;
  wire [3:0] \$procmux$2122_Y ;
  wire \$procmux$2123_CMP ;
  wire [3:0] \$procmux$2124_Y ;
  wire \$procmux$2125_CMP ;
  wire [3:0] \$procmux$2127_Y ;
  wire \$procmux$2128_CMP ;
  wire [3:0] \$procmux$2130_Y ;
  wire \$procmux$2131_CMP ;
  wire [3:0] \$procmux$2133_Y ;
  wire \$procmux$2134_CMP ;
  wire [3:0] \$procmux$2136_Y ;
  wire \$procmux$2137_CMP ;
  wire [3:0] \$procmux$2138_Y ;
  wire \$procmux$2139_CMP ;
  wire \$procmux$2142_Y ;
  wire \$procmux$2143_CMP ;
  wire \$procmux$2145_Y ;
  wire \$procmux$2146_CMP ;
  wire \$procmux$2148_Y ;
  wire \$procmux$2149_CMP ;
  wire \$procmux$2150_Y ;
  wire \$procmux$2151_CMP ;
  wire [2:0] \$procmux$2154_Y ;
  wire \$procmux$2155_CMP ;
  wire [2:0] \$procmux$2157_Y ;
  wire \$procmux$2158_CMP ;
  wire [2:0] \$procmux$2160_Y ;
  wire \$procmux$2161_CMP ;
  wire [2:0] \$procmux$2162_Y ;
  wire \$procmux$2163_CMP ;
  wire \$procmux$2166_Y ;
  wire \$procmux$2167_CMP ;
  wire \$procmux$2169_Y ;
  wire \$procmux$2170_CMP ;
  wire \$procmux$2172_Y ;
  wire \$procmux$2173_CMP ;
  wire \$procmux$2174_Y ;
  wire \$procmux$2175_CMP ;
  wire \$procmux$2178_Y ;
  wire \$procmux$2179_CMP ;
  wire \$procmux$2181_Y ;
  wire \$procmux$2182_CMP ;
  wire \$procmux$2184_Y ;
  wire \$procmux$2185_CMP ;
  wire \$procmux$2186_Y ;
  wire \$procmux$2187_CMP ;
  wire [3:0] \$procmux$2191_Y ;
  wire \$procmux$2192_CMP ;
  wire [3:0] \$procmux$2194_Y ;
  wire \$procmux$2195_CMP ;
  wire [3:0] \$procmux$2197_Y ;
  wire \$procmux$2198_CMP ;
  wire [3:0] \$procmux$2199_Y ;
  wire \$procmux$2200_CMP ;
  wire [2:0] \$procmux$2205_Y ;
  wire \$procmux$2206_CMP ;
  wire [2:0] \$procmux$2208_Y ;
  wire \$procmux$2209_CMP ;
  wire [2:0] \$procmux$2210_Y ;
  wire \$procmux$2211_CMP ;
  wire \$procmux$2216_Y ;
  wire \$procmux$2217_CMP ;
  wire \$procmux$2219_Y ;
  wire \$procmux$2220_CMP ;
  wire \$procmux$2221_Y ;
  wire \$procmux$2222_CMP ;
  wire \$procmux$2225_Y ;
  wire \$procmux$2226_CMP ;
  wire \$procmux$2227_Y ;
  wire \$procmux$2228_CMP ;
  wire \$procmux$2230_Y ;
  wire \$procmux$2231_CMP ;
  wire \$procmux$2232_Y ;
  wire \$procmux$2233_CMP ;
  wire \$procmux$2237_Y ;
  wire \$procmux$2238_CMP ;
  wire \$procmux$2240_Y ;
  wire \$procmux$2241_CMP ;
  wire \$procmux$2242_Y ;
  wire \$procmux$2243_CMP ;
  wire \$procmux$2247_Y ;
  wire \$procmux$2248_CMP ;
  wire \$procmux$2250_Y ;
  wire \$procmux$2251_CMP ;
  wire \$procmux$2252_Y ;
  wire \$procmux$2253_CMP ;
  wire \$procmux$2257_Y ;
  wire \$procmux$2258_CMP ;
  wire \$procmux$2260_Y ;
  wire \$procmux$2261_CMP ;
  wire \$procmux$2262_Y ;
  wire \$procmux$2263_CMP ;
  wire \$procmux$2267_Y ;
  wire \$procmux$2268_CMP ;
  wire \$procmux$2270_Y ;
  wire \$procmux$2271_CMP ;
  wire \$procmux$2272_Y ;
  wire \$procmux$2273_CMP ;
  wire [3:0] \$procmux$2277_Y ;
  wire \$procmux$2278_CMP ;
  wire [3:0] \$procmux$2280_Y ;
  wire \$procmux$2281_CMP ;
  wire [3:0] \$procmux$2282_Y ;
  wire \$procmux$2283_CMP ;
  wire [2:0] \$procmux$2288_Y ;
  wire \$procmux$2289_CMP ;
  wire [2:0] \$procmux$2290_Y ;
  wire \$procmux$2291_CMP ;
  wire \$procmux$2296_Y ;
  wire \$procmux$2297_CMP ;
  wire \$procmux$2298_Y ;
  wire \$procmux$2299_CMP ;
  wire [3:0] \$procmux$2304_Y ;
  wire \$procmux$2305_CMP ;
  wire [3:0] \$procmux$2306_Y ;
  wire \$procmux$2307_CMP ;
  wire \$procmux$2314_Y ;
  wire \$procmux$2315_CMP ;
  wire \$procmux$2316_Y ;
  wire \$procmux$2317_CMP ;
  wire \$procmux$2318_Y ;
  wire \$procmux$2319_CMP ;
  wire \$procmux$2320_Y ;
  wire \$procmux$2321_CMP ;
  wire \$procmux$2329_Y ;
  wire \$procmux$2330_CMP ;
  wire \$procmux$2331_Y ;
  wire \$procmux$2332_CMP ;
  wire \$procmux$2333_Y ;
  wire \$procmux$2334_CMP ;
  wire [6:0] \$procmux$2341_Y ;
  wire \$procmux$2342_CMP ;
  wire [6:0] \$procmux$2343_Y ;
  wire \$procmux$2344_CMP ;
  wire [6:0] \$procmux$2345_Y ;
  wire \$procmux$2346_CMP ;
  wire [6:0] \$procmux$2347_Y ;
  wire \$procmux$2348_CMP ;
  wire \$procmux$2355_Y ;
  wire \$procmux$2356_CMP ;
  wire \$procmux$2357_Y ;
  wire \$procmux$2358_CMP ;
  wire \$procmux$2359_Y ;
  wire \$procmux$2360_CMP ;
  wire \$procmux$2361_Y ;
  wire \$procmux$2362_CMP ;
  wire \$procmux$2369_Y ;
  wire \$procmux$2370_CMP ;
  wire \$procmux$2371_Y ;
  wire \$procmux$2372_CMP ;
  wire \$procmux$2373_Y ;
  wire \$procmux$2374_CMP ;
  wire \$procmux$2375_Y ;
  wire \$procmux$2376_CMP ;
  wire [3:0] \$procmux$2383_Y ;
  wire \$procmux$2384_CMP ;
  wire [3:0] \$procmux$2385_Y ;
  wire \$procmux$2386_CMP ;
  wire [3:0] \$procmux$2387_Y ;
  wire \$procmux$2388_CMP ;
  wire [3:0] \$procmux$2389_Y ;
  wire \$procmux$2390_CMP ;
  wire [31:0] \$procmux$2394_Y ;
  wire \$procmux$2395_CMP ;
  wire \$procmux$2396_CMP ;
  wire \$procmux$2397_CMP ;
  wire \$procmux$2398_CMP ;
  wire [31:0] \$procmux$2399_Y ;
  wire \$procmux$2400_CMP ;
  wire [31:0] \$procmux$2401_Y ;
  wire \$procmux$2402_CMP ;
  wire \$procmux$2409_Y ;
  wire \$procmux$2410_CMP ;
  wire \$procmux$2411_Y ;
  wire \$procmux$2412_CMP ;
  wire \$procmux$2413_Y ;
  wire \$procmux$2414_CMP ;
  wire \$procmux$2421_Y ;
  wire \$procmux$2422_CMP ;
  wire \$procmux$2423_Y ;
  wire \$procmux$2424_CMP ;
  wire \$procmux$2425_Y ;
  wire \$procmux$2426_CMP ;
  wire [6:0] \$procmux$2430_Y ;
  wire \$procmux$2431_CMP ;
  wire \$procmux$2432_CMP ;
  wire \$procmux$2434_CMP ;
  wire \$procmux$2435_CMP ;
  wire \$procmux$2436_CMP ;
  wire \$procmux$2437_CMP ;
  wire [6:0] \$procmux$2438_Y ;
  wire \$procmux$2439_CMP ;
  wire [6:0] \$procmux$2440_Y ;
  wire \$procmux$2441_CMP ;
  wire \$procmux$2448_Y ;
  wire \$procmux$2449_CMP ;
  wire \$procmux$2450_Y ;
  wire \$procmux$2451_CMP ;
  wire \$procmux$2452_Y ;
  wire \$procmux$2453_CMP ;
  wire \$procmux$2460_Y ;
  wire \$procmux$2461_CMP ;
  wire \$procmux$2462_Y ;
  wire \$procmux$2463_CMP ;
  wire \$procmux$2464_Y ;
  wire \$procmux$2465_CMP ;
  wire [3:0] \$procmux$2472_Y ;
  wire \$procmux$2473_CMP ;
  wire [3:0] \$procmux$2474_Y ;
  wire \$procmux$2475_CMP ;
  wire [3:0] \$procmux$2476_Y ;
  wire \$procmux$2477_CMP ;
  wire [31:0] \$procmux$2481_Y ;
  wire \$procmux$2482_CMP ;
  wire [31:0] \$procmux$2483_Y ;
  wire \$procmux$2484_CMP ;
  wire \$procmux$2488_Y ;
  wire \$procmux$2489_CMP ;
  wire \$procmux$2490_Y ;
  wire \$procmux$2491_CMP ;
  wire \$procmux$2495_Y ;
  wire \$procmux$2496_CMP ;
  wire \$procmux$2497_Y ;
  wire \$procmux$2498_CMP ;
  wire \$procmux$2502_Y ;
  wire \$procmux$2503_CMP ;
  wire \$procmux$2504_Y ;
  wire \$procmux$2505_CMP ;
  wire \$procmux$2509_Y ;
  wire \$procmux$2510_CMP ;
  wire \$procmux$2511_Y ;
  wire \$procmux$2512_CMP ;
  wire [6:0] \$procmux$2516_Y ;
  wire \$procmux$2517_CMP ;
  wire [6:0] \$procmux$2518_Y ;
  wire \$procmux$2519_CMP ;
  wire [1:0] \$procmux$2523_Y ;
  wire \$procmux$2524_CMP ;
  wire [1:0] \$procmux$2525_Y ;
  wire \$procmux$2526_CMP ;
  wire \$procmux$2530_Y ;
  wire \$procmux$2531_CMP ;
  wire \$procmux$2532_Y ;
  wire \$procmux$2533_CMP ;
  wire \$procmux$2537_Y ;
  wire \$procmux$2538_CMP ;
  wire \$procmux$2539_Y ;
  wire \$procmux$2540_CMP ;
  wire \$procmux$2544_Y ;
  wire \$procmux$2545_CMP ;
  wire \$procmux$2546_Y ;
  wire \$procmux$2547_CMP ;
  wire \$procmux$2550_Y ;
  wire \$procmux$2551_CMP ;
  wire \$procmux$2552_Y ;
  wire \$procmux$2553_CMP ;
  wire \$procmux$2556_Y ;
  wire \$procmux$2557_CMP ;
  wire \$procmux$2558_Y ;
  wire \$procmux$2559_CMP ;
  wire \$procmux$2562_Y ;
  wire \$procmux$2563_CMP ;
  wire \$procmux$2564_Y ;
  wire \$procmux$2565_CMP ;
  wire [2:0] \$procmux$2569_Y ;
  wire \$procmux$2570_CMP ;
  wire [2:0] \$procmux$2575_Y ;
  wire \$procmux$2576_CMP ;
  wire [2:0] \$procmux$2578_Y ;
  wire \$procmux$2579_CMP ;
  wire [2:0] \$procmux$2580_Y ;
  wire \$procmux$2581_CMP ;
  wire [2:0] \$procmux$2587_Y ;
  wire \$procmux$2588_CMP ;
  wire [2:0] \$procmux$2589_Y ;
  wire \$procmux$2590_CMP ;
  wire [6:0] \$procmux$2596_Y ;
  wire \$procmux$2597_CMP ;
  wire [6:0] \$procmux$2599_Y ;
  wire \$procmux$2600_CMP ;
  wire [6:0] \$procmux$2602_Y ;
  wire \$procmux$2603_CMP ;
  wire [6:0] \$procmux$2605_Y ;
  wire \$procmux$2606_CMP ;
  wire [6:0] \$procmux$2607_Y ;
  wire \$procmux$2608_CMP ;
  wire [6:0] \$procmux$2609_Y ;
  wire \$procmux$2610_CMP ;
  wire [6:0] \$procmux$2617_Y ;
  wire \$procmux$2618_CMP ;
  wire [6:0] \$procmux$2620_Y ;
  wire \$procmux$2621_CMP ;
  wire [6:0] \$procmux$2623_Y ;
  wire \$procmux$2624_CMP ;
  wire [6:0] \$procmux$2625_Y ;
  wire \$procmux$2626_CMP ;
  wire [6:0] \$procmux$2627_Y ;
  wire \$procmux$2628_CMP ;
  wire [6:0] \$procmux$2635_Y ;
  wire \$procmux$2636_CMP ;
  wire [6:0] \$procmux$2638_Y ;
  wire \$procmux$2639_CMP ;
  wire [6:0] \$procmux$2640_Y ;
  wire \$procmux$2641_CMP ;
  wire [6:0] \$procmux$2642_Y ;
  wire \$procmux$2643_CMP ;
  wire [6:0] \$procmux$2650_Y ;
  wire \$procmux$2651_CMP ;
  wire [6:0] \$procmux$2652_Y ;
  wire \$procmux$2653_CMP ;
  wire [6:0] \$procmux$2654_Y ;
  wire \$procmux$2655_CMP ;
  wire \$procmux$2661_Y ;
  wire \$procmux$2662_CMP ;
  wire \$procmux$2663_Y ;
  wire \$procmux$2664_CMP ;
  wire \$procmux$2665_Y ;
  wire \$procmux$2666_CMP ;
  wire \$procmux$2672_Y ;
  wire \$procmux$2673_CMP ;
  wire \$procmux$2674_Y ;
  wire \$procmux$2675_CMP ;
  wire \$procmux$2681_Y ;
  wire \$procmux$2682_CMP ;
  wire \$procmux$2683_Y ;
  wire \$procmux$2684_CMP ;
  wire [6:0] \$procmux$2690_Y ;
  wire \$procmux$2691_CMP ;
  wire [6:0] \$procmux$2692_Y ;
  wire \$procmux$2693_CMP ;
  wire \$procmux$2699_Y ;
  wire \$procmux$2700_CMP ;
  wire \$procmux$2701_Y ;
  wire \$procmux$2702_CMP ;
  wire \$procmux$2708_Y ;
  wire \$procmux$2709_CMP ;
  wire \$procmux$2710_Y ;
  wire \$procmux$2711_CMP ;
  wire \$procmux$2717_Y ;
  wire \$procmux$2718_CMP ;
  wire \$procmux$2720_Y ;
  wire \$procmux$2721_CMP ;
  wire \$procmux$2722_Y ;
  wire \$procmux$2723_CMP ;
  wire \$procmux$2724_Y ;
  wire \$procmux$2725_CMP ;
  wire [3:0] \$procmux$2731_Y ;
  wire \$procmux$2732_CMP ;
  wire [3:0] \$procmux$2734_Y ;
  wire \$procmux$2735_CMP ;
  wire [3:0] \$procmux$2736_Y ;
  wire \$procmux$2737_CMP ;
  wire [3:0] \$procmux$2738_Y ;
  wire \$procmux$2739_CMP ;
  wire \$procmux$2747_Y ;
  wire \$procmux$2748_CMP ;
  wire \$procmux$2749_Y ;
  wire \$procmux$2750_CMP ;
  wire \$procmux$2751_Y ;
  wire \$procmux$2752_CMP ;
  wire [3:0] \$procmux$2760_Y ;
  wire \$procmux$2761_CMP ;
  wire [3:0] \$procmux$2762_Y ;
  wire \$procmux$2763_CMP ;
  wire [3:0] \$procmux$2764_Y ;
  wire \$procmux$2765_CMP ;
  wire \$procmux$2773_Y ;
  wire \$procmux$2774_CMP ;
  wire \$procmux$2775_Y ;
  wire \$procmux$2776_CMP ;
  wire [3:0] \$procmux$2784_Y ;
  wire \$procmux$2785_CMP ;
  wire [3:0] \$procmux$2786_Y ;
  wire \$procmux$2787_CMP ;
  wire \$procmux$2794_Y ;
  wire \$procmux$2795_CMP ;
  wire \$procmux$2796_Y ;
  wire \$procmux$2797_CMP ;
  wire \$procmux$2804_Y ;
  wire \$procmux$2805_CMP ;
  wire \$procmux$2806_Y ;
  wire \$procmux$2807_CMP ;
  wire \$procmux$2814_Y ;
  wire \$procmux$2815_CMP ;
  wire \$procmux$2816_Y ;
  wire \$procmux$2817_CMP ;
  wire \$procmux$2824_Y ;
  wire \$procmux$2825_CMP ;
  wire \$procmux$2826_Y ;
  wire \$procmux$2827_CMP ;
  wire \$procmux$2833_Y ;
  wire \$procmux$2834_CMP ;
  wire \$procmux$2835_Y ;
  wire \$procmux$2836_CMP ;
  wire [3:0] \$procmux$2842_Y ;
  wire \$procmux$2843_CMP ;
  wire [3:0] \$procmux$2844_Y ;
  wire \$procmux$2845_CMP ;
  wire \$procmux$2853_Y ;
  wire \$procmux$2854_CMP ;
  wire \$procmux$2855_Y ;
  wire \$procmux$2856_CMP ;
  wire [3:0] \$procmux$2864_Y ;
  wire \$procmux$2865_CMP ;
  wire [3:0] \$procmux$2866_Y ;
  wire \$procmux$2867_CMP ;
  wire \$procmux$2875_Y ;
  wire \$procmux$2876_CMP ;
  wire \$procmux$2877_Y ;
  wire \$procmux$2878_CMP ;
  wire [3:0] \$procmux$2886_Y ;
  wire \$procmux$2887_CMP ;
  wire [3:0] \$procmux$2888_Y ;
  wire \$procmux$2889_CMP ;
  wire [3:0] \$procmux$2896_Y ;
  wire \$procmux$2897_CMP ;
  wire [3:0] \$procmux$2898_Y ;
  wire \$procmux$2899_CMP ;
  wire \$procmux$2908_Y ;
  wire \$procmux$2909_CMP ;
  wire \$procmux$2910_Y ;
  wire \$procmux$2911_CMP ;
  wire [3:0] \$procmux$2920_Y ;
  wire \$procmux$2921_CMP ;
  wire [3:0] \$procmux$2922_Y ;
  wire \$procmux$2923_CMP ;
  wire [3:0] \$procmux$2926_Y ;
  wire \$procmux$2927_CMP ;
  wire \$procmux$2929_CMP ;
  wire \$procmux$2931_CMP ;
  wire \$procmux$2933_CMP ;
  wire \$procmux$2935_CMP ;
  wire \$procmux$2937_CMP ;
  wire \$procmux$2939_CMP ;
  wire \$procmux$2940_CMP ;
  wire \$procmux$2941_CMP ;
  wire \$procmux$2943_CMP ;
  wire [3:0] \$procmux$2954_Y ;
  wire \$procmux$2955_CMP ;
  wire [3:0] \$procmux$2956_Y ;
  wire \$procmux$2957_CMP ;
  wire \$procmux$2964_Y ;
  wire \$procmux$2965_CMP ;
  wire \$procmux$2972_Y ;
  wire \$procmux$2973_CMP ;
  wire [31:0] \$procmux$2976_Y ;
  wire \$procmux$2977_CMP ;
  wire \$procmux$2980_Y ;
  wire \$procmux$2981_CMP ;
  wire \$procmux$2983_CMP ;
  wire \$procmux$2985_CMP ;
  wire \$procmux$2987_CMP ;
  wire \$procmux$2990_Y ;
  wire \$procmux$2991_CMP ;
  wire \$procmux$2994_Y ;
  wire \$procmux$2995_CMP ;
  wire \$procmux$2998_Y ;
  wire \$procmux$2999_CMP ;
  wire \$procmux$3001_CMP ;
  wire \$procmux$3006_Y ;
  wire \$procmux$3007_CMP ;
  wire \$procmux$3009_CMP ;
  wire \$procmux$3013_Y ;
  wire \$procmux$3014_CMP ;
  wire \$procmux$3016_CMP ;
  wire [2:0] \$procmux$3020_Y ;
  wire \$procmux$3021_CMP ;
  wire \$procmux$3023_CMP ;
  wire [6:0] \$procmux$3026_Y ;
  wire \$procmux$3027_CMP ;
  wire \$procmux$3029_CMP ;
  wire [1:0] \$procmux$3032_Y ;
  wire \$procmux$3033_CMP ;
  wire \$procmux$3035_CMP ;
  wire \$procmux$3037_CMP ;
  wire [2:0] \$procmux$3041_Y ;
  wire \$procmux$3042_CMP ;
  wire \$procmux$3044_CMP ;
  wire \$procmux$3046_CMP ;
  wire \$procmux$3048_CMP ;
  wire \$procmux$3050_CMP ;
  wire \$procmux$3054_Y ;
  wire \$procmux$3055_CMP ;
  wire \$procmux$3057_CMP ;
  wire \$procmux$3059_CMP ;
  wire \$procmux$3061_CMP ;
  wire \$procmux$3063_CMP ;
  wire \$procmux$3064_CMP ;
  wire \$procmux$3066_CMP ;
  wire \$procmux$3068_Y ;
  wire \$procmux$3069_CMP ;
  wire \$procmux$3070_CMP ;
  wire \$procmux$3071_CMP ;
  wire \$procmux$3072_CMP ;
  wire \$procmux$3073_CMP ;
  wire \$procmux$3074_CMP ;
  wire \$procmux$3076_CMP ;
  wire \$procmux$3084_Y ;
  wire \$procmux$3085_CMP ;
  wire \$procmux$3094_Y ;
  wire \$procmux$3095_CMP ;
  wire \$procmux$3096_CMP ;
  wire \$procmux$3099_Y ;
  wire \$procmux$3100_CMP ;
  wire \$procmux$3102_CMP ;
  wire \$procmux$3104_CMP ;
  wire \$procmux$3106_CMP ;
  wire \$procmux$3107_CMP ;
  wire \$procmux$3114_Y ;
  wire \$procmux$3115_CMP ;
  wire \$procmux$3118_Y ;
  wire \$procmux$3119_CMP ;
  wire \$procmux$3121_CMP ;
  wire \$procmux$3123_CMP ;
  wire \$procmux$3125_CMP ;
  wire \$procmux$3126_CMP ;
  wire \$procmux$3129_Y ;
  wire \$procmux$3130_CMP ;
  wire \$procmux$3132_CMP ;
  wire \$procmux$3134_CMP ;
  wire \$procmux$3137_Y ;
  wire \$procmux$3138_CMP ;
  wire \$procmux$3140_CMP ;
  wire [3:0] \$procmux$3142_Y ;
  wire \$procmux$3143_CMP ;
  wire [3:0] \$procmux$3145_Y ;
  wire \$procmux$3146_CMP ;
  wire [3:0] \$procmux$3148_Y ;
  wire \$procmux$3149_CMP ;
  wire [3:0] \$procmux$3151_Y ;
  wire \$procmux$3152_CMP ;
  wire [3:0] \$procmux$3154_Y ;
  wire \$procmux$3155_CMP ;
  wire [3:0] \$procmux$3157_Y ;
  wire \$procmux$3158_CMP ;
  wire [3:0] \$procmux$3160_Y ;
  wire \$procmux$3161_CMP ;
  wire [3:0] \$procmux$3163_Y ;
  wire \$procmux$3164_CMP ;
  wire [3:0] \$procmux$3166_Y ;
  wire \$procmux$3167_CMP ;
  wire [3:0] \$procmux$3169_Y ;
  wire \$procmux$3170_CMP ;
  wire [3:0] \$procmux$3172_Y ;
  wire \$procmux$3173_CMP ;
  wire [3:0] \$procmux$3175_Y ;
  wire \$procmux$3176_CMP ;
  wire [3:0] \$procmux$3178_Y ;
  wire \$procmux$3179_CMP ;
  wire [3:0] \$procmux$3181_Y ;
  wire \$procmux$3182_CMP ;
  wire [3:0] \$procmux$3184_Y ;
  wire \$procmux$3185_CMP ;
  wire [3:0] \$procmux$3186_Y ;
  wire \$procmux$3187_CMP ;
  wire \$procmux$3188_Y ;
  wire \$procmux$3189_CMP ;
  wire \$procmux$3191_Y ;
  wire \$procmux$3192_CMP ;
  wire \$procmux$3194_Y ;
  wire \$procmux$3195_CMP ;
  wire \$procmux$3197_Y ;
  wire \$procmux$3198_CMP ;
  wire \$procmux$3200_Y ;
  wire \$procmux$3201_CMP ;
  wire \$procmux$3203_Y ;
  wire \$procmux$3204_CMP ;
  wire \$procmux$3207_Y ;
  wire \$procmux$3208_CMP ;
  wire \$procmux$3210_Y ;
  wire \$procmux$3211_CMP ;
  wire \$procmux$3213_Y ;
  wire \$procmux$3214_CMP ;
  wire \$procmux$3216_Y ;
  wire \$procmux$3217_CMP ;
  wire \$procmux$3219_Y ;
  wire \$procmux$3220_CMP ;
  wire \$procmux$3222_Y ;
  wire \$procmux$3223_CMP ;
  wire \$procmux$3225_Y ;
  wire \$procmux$3226_CMP ;
  wire \$procmux$3228_Y ;
  wire \$procmux$3229_CMP ;
  wire \$procmux$3231_Y ;
  wire \$procmux$3232_CMP ;
  wire \$procmux$3234_Y ;
  wire \$procmux$3235_CMP ;
  wire \$procmux$3238_Y ;
  wire \$procmux$3239_CMP ;
  wire \$procmux$3241_Y ;
  wire \$procmux$3242_CMP ;
  wire \$procmux$3244_Y ;
  wire \$procmux$3245_CMP ;
  wire \$procmux$3247_Y ;
  wire \$procmux$3248_CMP ;
  wire \$procmux$3251_Y ;
  wire \$procmux$3252_CMP ;
  wire \$procmux$3254_Y ;
  wire \$procmux$3255_CMP ;
  wire \$procmux$3257_Y ;
  wire \$procmux$3258_CMP ;
  wire \$procmux$3260_Y ;
  wire \$procmux$3261_CMP ;
  wire \$procmux$3263_Y ;
  wire \$procmux$3264_CMP ;
  wire \$procmux$3266_Y ;
  wire \$procmux$3267_CMP ;
  wire \$procmux$3269_Y ;
  wire \$procmux$3270_CMP ;
  wire \$procmux$3272_Y ;
  wire \$procmux$3273_CMP ;
  wire \$procmux$3276_Y ;
  wire \$procmux$3277_CMP ;
  wire \$procmux$3279_Y ;
  wire \$procmux$3280_CMP ;
  wire \$procmux$3282_Y ;
  wire \$procmux$3283_CMP ;
  wire \$procmux$3286_Y ;
  wire \$procmux$3287_CMP ;
  wire \$procmux$3289_Y ;
  wire \$procmux$3290_CMP ;
  wire \$procmux$3292_Y ;
  wire \$procmux$3293_CMP ;
  wire \$procmux$3296_Y ;
  wire \$procmux$3297_CMP ;
  wire \$procmux$3299_Y ;
  wire \$procmux$3300_CMP ;
  wire \$procmux$3302_Y ;
  wire \$procmux$3303_CMP ;
  wire \$procmux$3305_Y ;
  wire \$procmux$3306_CMP ;
  wire \$procmux$3308_Y ;
  wire \$procmux$3309_CMP ;
  wire \$procmux$3311_Y ;
  wire \$procmux$3312_CMP ;
  wire \$procmux$3315_Y ;
  wire \$procmux$3316_CMP ;
  wire \$procmux$3318_Y ;
  wire \$procmux$3319_CMP ;
  wire \$procmux$3322_Y ;
  wire \$procmux$3323_CMP ;
  wire \$procmux$3325_Y ;
  wire \$procmux$3326_CMP ;
  wire \$procmux$3329_Y ;
  wire \$procmux$3330_CMP ;
  wire \$procmux$3332_Y ;
  wire \$procmux$3333_CMP ;
  wire \$procmux$3336_Y ;
  wire \$procmux$3337_CMP ;
  wire \$procmux$3339_Y ;
  wire \$procmux$3340_CMP ;
  wire \$procmux$3342_Y ;
  wire \$procmux$3343_CMP ;
  wire \$procmux$3345_Y ;
  wire \$procmux$3346_CMP ;
  wire \$procmux$3349_Y ;
  wire \$procmux$3350_CMP ;
  wire \$procmux$3353_Y ;
  wire \$procmux$3354_CMP ;
  wire \$procmux$3357_Y ;
  wire \$procmux$3358_CMP ;
  wire \$procmux$3361_Y ;
  wire \$procmux$3362_CMP ;
  wire \$procmux$3365_Y ;
  wire \$procmux$3366_CMP ;
  wire \$procmux$3368_Y ;
  wire \$procmux$3369_CMP ;
  /* src = "rtl/cve2/cve2_controller.sv:441.9-450.12" */
  wire \$retain_id$101 ;
  /* src = "rtl/cve2/cve2_controller.sv:356.5-698.12" */
  wire \$retain_id$199 ;
  /* src = "rtl/cve2/cve2_controller.sv:241.16-245.10" */
  wire \$store_err_prio$30 ;
  /* src = "rtl/cve2/cve2_controller.sv:239.16-245.10" */
  wire \$store_err_prio$33 ;
  /* src = "rtl/cve2/cve2_controller.sv:237.16-245.10" */
  wire \$store_err_prio$37 ;
  /* src = "rtl/cve2/cve2_controller.sv:235.16-245.10" */
  wire \$store_err_prio$42 ;
  /* src = "rtl/cve2/cve2_controller.sv:233.7-245.10" */
  wire \$store_err_prio$48 ;
  /* src = "rtl/cve2/cve2_controller.sv:58.33" */
  input branch_set_i;
  wire branch_set_i;
  /* src = "rtl/cve2/cve2_controller.sv:14.33" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_controller.sv:41.33" */
  output controller_run_o;
  wire controller_run_o;
  /* src = "rtl/cve2/cve2_controller.sv:63.33" */
  input csr_mstatus_mie_i;
  wire csr_mstatus_mie_i;
  /* src = "rtl/cve2/cve2_controller.sv:87.33" */
  input csr_mstatus_tw_i;
  wire csr_mstatus_tw_i;
  /* src = "rtl/cve2/cve2_controller.sv:85.33" */
  output [31:0] csr_mtval_o;
  wire [31:0] csr_mtval_o;
  /* src = "rtl/cve2/cve2_controller.sv:150.9" */
  wire csr_pipe_flush;
  /* src = "rtl/cve2/cve2_controller.sv:27.33" */
  input csr_pipe_flush_i;
  wire csr_pipe_flush_i;
  /* src = "rtl/cve2/cve2_controller.sv:83.33" */
  output csr_restore_dret_id_o;
  wire csr_restore_dret_id_o;
  /* src = "rtl/cve2/cve2_controller.sv:82.33" */
  output csr_restore_mret_id_o;
  wire csr_restore_mret_id_o;
  /* src = "rtl/cve2/cve2_controller.sv:84.33" */
  output csr_save_cause_o;
  wire csr_save_cause_o;
  /* src = "rtl/cve2/cve2_controller.sv:81.33" */
  output csr_save_id_o;
  wire csr_save_id_o;
  /* src = "rtl/cve2/cve2_controller.sv:80.33" */
  output csr_save_if_o;
  wire csr_save_if_o;
  /* src = "rtl/cve2/cve2_controller.sv:18.33" */
  output ctrl_busy_o;
  wire ctrl_busy_o;
  /* src = "rtl/cve2/cve2_controller.sv:107.14" */
  wire [3:0] ctrl_fsm_cs;
  /* src = "rtl/cve2/cve2_controller.sv:107.27" */
  wire [3:0] ctrl_fsm_ns;
  /* src = "rtl/cve2/cve2_controller.sv:72.33" */
  output [2:0] debug_cause_o;
  wire [2:0] debug_cause_o;
  /* src = "rtl/cve2/cve2_controller.sv:73.33" */
  output debug_csr_save_o;
  wire debug_csr_save_o;
  /* src = "rtl/cve2/cve2_controller.sv:76.33" */
  input debug_ebreakm_i;
  wire debug_ebreakm_i;
  /* src = "rtl/cve2/cve2_controller.sv:77.33" */
  input debug_ebreaku_i;
  wire debug_ebreaku_i;
  /* src = "rtl/cve2/cve2_controller.sv:110.23" */
  wire debug_mode_d;
  /* src = "rtl/cve2/cve2_controller.sv:74.33" */
  output debug_mode_o;
  wire debug_mode_o;
  /* src = "rtl/cve2/cve2_controller.sv:110.9" */
  wire debug_mode_q;
  /* src = "rtl/cve2/cve2_controller.sv:71.33" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "rtl/cve2/cve2_controller.sv:75.33" */
  input debug_single_step_i;
  wire debug_single_step_i;
  /* src = "rtl/cve2/cve2_controller.sv:135.9" */
  wire do_single_step_d;
  /* src = "rtl/cve2/cve2_controller.sv:136.9" */
  wire do_single_step_q;
  /* src = "rtl/cve2/cve2_controller.sv:147.9" */
  wire dret_insn;
  /* src = "rtl/cve2/cve2_controller.sv:24.33" */
  input dret_insn_i;
  wire dret_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:140.9" */
  wire ebreak_into_debug;
  /* src = "rtl/cve2/cve2_controller.sv:149.9" */
  wire ebrk_insn;
  /* src = "rtl/cve2/cve2_controller.sv:26.33" */
  input ebrk_insn_i;
  wire ebrk_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:121.9" */
  wire ebrk_insn_prio;
  /* src = "rtl/cve2/cve2_controller.sv:145.9" */
  wire ecall_insn;
  /* src = "rtl/cve2/cve2_controller.sv:22.33" */
  input ecall_insn_i;
  wire ecall_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:120.9" */
  wire ecall_insn_prio;
  /* src = "rtl/cve2/cve2_controller.sv:139.9" */
  wire enter_debug_mode;
  /* src = "rtl/cve2/cve2_controller.sv:137.9" */
  wire enter_debug_mode_prio_d;
  /* src = "rtl/cve2/cve2_controller.sv:138.9" */
  wire enter_debug_mode_prio_q;
  /* src = "rtl/cve2/cve2_controller.sv:50.33" */
  output [6:0] exc_cause_o;
  wire [6:0] exc_cause_o;
  /* src = "rtl/cve2/cve2_controller.sv:49.33" */
  output [1:0] exc_pc_mux_o;
  wire [1:0] exc_pc_mux_o;
  /* src = "rtl/cve2/cve2_controller.sv:113.20" */
  wire exc_req_d;
  /* src = "rtl/cve2/cve2_controller.sv:131.9" */
  wire exc_req_lsu;
  /* src = "rtl/cve2/cve2_controller.sv:113.9" */
  wire exc_req_q;
  /* src = "rtl/cve2/cve2_controller.sv:17.33" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "rtl/cve2/cve2_controller.sv:128.9" */
  wire flush_id;
  /* src = "rtl/cve2/cve2_controller.sv:91.33" */
  output flush_id_o;
  wire flush_id_o;
  /* src = "rtl/cve2/cve2_controller.sv:126.9" */
  wire halt_if;
  /* src = "rtl/cve2/cve2_controller.sv:141.9" */
  wire handle_irq;
  /* src = "rtl/cve2/cve2_controller.sv:40.33" */
  output id_in_ready_o;
  wire id_in_ready_o;
  /* src = "rtl/cve2/cve2_controller.sv:129.9" */
  wire illegal_dret;
  /* src = "rtl/cve2/cve2_controller.sv:114.25" */
  wire illegal_insn_d;
  /* src = "rtl/cve2/cve2_controller.sv:21.33" */
  input illegal_insn_i;
  wire illegal_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:119.9" */
  wire illegal_insn_prio;
  /* src = "rtl/cve2/cve2_controller.sv:114.9" */
  wire illegal_insn_q;
  /* src = "rtl/cve2/cve2_controller.sv:130.9" */
  wire illegal_umode;
  /* src = "rtl/cve2/cve2_controller.sv:32.33" */
  input [15:0] instr_compressed_i;
  wire [15:0] instr_compressed_i;
  /* src = "rtl/cve2/cve2_controller.sv:151.9" */
  wire instr_fetch_err;
  /* src = "rtl/cve2/cve2_controller.sv:34.33" */
  input instr_fetch_err_i;
  wire instr_fetch_err_i;
  /* src = "rtl/cve2/cve2_controller.sv:35.33" */
  input instr_fetch_err_plus2_i;
  wire instr_fetch_err_plus2_i;
  /* src = "rtl/cve2/cve2_controller.sv:118.9" */
  wire instr_fetch_err_prio;
  /* src = "rtl/cve2/cve2_controller.sv:31.33" */
  input [31:0] instr_i;
  wire [31:0] instr_i;
  /* src = "rtl/cve2/cve2_controller.sv:33.33" */
  input instr_is_compressed_i;
  wire instr_is_compressed_i;
  /* src = "rtl/cve2/cve2_controller.sv:45.33" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/cve2/cve2_controller.sv:39.33" */
  output instr_valid_clear_o;
  wire instr_valid_clear_o;
  /* src = "rtl/cve2/cve2_controller.sv:30.33" */
  input instr_valid_i;
  wire instr_valid_i;
  /* src = "rtl/cve2/cve2_controller.sv:67.33" */
  input irq_nm_i;
  wire irq_nm_i;
  /* src = "rtl/cve2/cve2_controller.sv:64.33" */
  input irq_pending_i;
  wire irq_pending_i;
  /* src = "rtl/cve2/cve2_controller.sv:65.33" */
  input [18:0] irqs_i;
  wire [18:0] irqs_i;
  /* src = "rtl/cve2/cve2_controller.sv:60.33" */
  input jump_set_i;
  wire jump_set_i;
  /* src = "rtl/cve2/cve2_controller.sv:111.21" */
  wire load_err_d;
  /* src = "rtl/cve2/cve2_controller.sv:54.33" */
  input load_err_i;
  wire load_err_i;
  /* src = "rtl/cve2/cve2_controller.sv:123.9" */
  wire load_err_prio;
  /* src = "rtl/cve2/cve2_controller.sv:111.9" */
  wire load_err_q;
  /* src = "rtl/cve2/cve2_controller.sv:53.33" */
  input [31:0] lsu_addr_last_i;
  wire [31:0] lsu_addr_last_i;
  /* src = "rtl/cve2/cve2_controller.sv:142.15" */
  wire [3:0] mfip_id;
  /* src = "rtl/cve2/cve2_controller.sv:146.9" */
  wire mret_insn;
  /* src = "rtl/cve2/cve2_controller.sv:23.33" */
  input mret_insn_i;
  wire mret_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:109.21" */
  wire nmi_mode_d;
  /* src = "rtl/cve2/cve2_controller.sv:68.33" */
  output nmi_mode_o;
  wire nmi_mode_o;
  /* src = "rtl/cve2/cve2_controller.sv:109.9" */
  wire nmi_mode_q;
  /* src = "rtl/cve2/cve2_controller.sv:36.33" */
  input [31:0] pc_id_i;
  wire [31:0] pc_id_i;
  /* src = "rtl/cve2/cve2_controller.sv:47.33" */
  output [2:0] pc_mux_o;
  wire [2:0] pc_mux_o;
  /* src = "rtl/cve2/cve2_controller.sv:46.33" */
  output pc_set_o;
  wire pc_set_o;
  /* src = "rtl/cve2/cve2_controller.sv:94.33" */
  output perf_jump_o;
  wire perf_jump_o;
  /* src = "rtl/cve2/cve2_controller.sv:96.33" */
  output perf_tbranch_o;
  wire perf_tbranch_o;
  /* src = "rtl/cve2/cve2_controller.sv:86.33" */
  input [1:0] priv_mode_i;
  wire [1:0] priv_mode_i;
  /* src = "rtl/cve2/cve2_controller.sv:127.9" */
  wire retain_id;
  /* src = "rtl/cve2/cve2_controller.sv:15.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_controller.sv:132.9" */
  wire special_req;
  /* src = "rtl/cve2/cve2_controller.sv:134.9" */
  wire special_req_flush_only;
  /* src = "rtl/cve2/cve2_controller.sv:133.9" */
  wire special_req_pc_change;
  /* src = "rtl/cve2/cve2_controller.sv:125.9" */
  wire stall;
  /* src = "rtl/cve2/cve2_controller.sv:90.33" */
  input stall_id_i;
  wire stall_id_i;
  /* src = "rtl/cve2/cve2_controller.sv:112.22" */
  wire store_err_d;
  /* src = "rtl/cve2/cve2_controller.sv:55.33" */
  input store_err_i;
  wire store_err_i;
  /* src = "rtl/cve2/cve2_controller.sv:122.9" */
  wire store_err_prio;
  /* src = "rtl/cve2/cve2_controller.sv:112.9" */
  wire store_err_q;
  /* src = "rtl/cve2/cve2_controller.sv:78.33" */
  input trigger_match_i;
  wire trigger_match_i;
  /* src = "rtl/cve2/cve2_controller.sv:143.15" */
  wire unused_irq_timer;
  /* src = "rtl/cve2/cve2_controller.sv:148.9" */
  wire wfi_insn;
  /* src = "rtl/cve2/cve2_controller.sv:25.33" */
  input wfi_insn_i;
  wire wfi_insn_i;
  /* src = "rtl/cve2/cve2_controller.sv:175.28-175.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(ecall_insn_i),
    .B(instr_valid_i),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:176.28-176.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mret_insn_i),
    .B(instr_valid_i),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:190.40-190.67" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(csr_mstatus_tw_i),
    .B(wfi_insn),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:452.13-452.39" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$102  (
    .A(branch_set_i),
    .B(jump_set_i),
    .Y(\$102y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:461.14-461.44" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(enter_debug_mode),
    .B(handle_irq),
    .Y(\$106y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:461.50-461.72" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(stall),
    .B(instr_valid_i),
    .Y(\$107y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:461.13-461.73" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$108  (
    .A(\$106y ),
    .B(\$107y ),
    .Y(\$108y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:190.27-190.68" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(mret_insn),
    .B(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:465.13-465.19" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$110  (
    .A(stall),
    .Y(\$110y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:465.23-465.35" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(special_req),
    .Y(\$111y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:465.13-465.35" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$112  (
    .A(\$110y ),
    .B(\$111y ),
    .Y(\$112y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:465.39-465.53" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(instr_valid_i),
    .Y(\$113y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:465.13-465.53" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$114  (
    .A(\$112y ),
    .B(\$113y ),
    .Y(\$114y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:188.26-190.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$9y ),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:497.27-497.38" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$121  (
    .A(nmi_mode_q),
    .Y(\$121y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:497.15-497.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(irq_nm_i),
    .B(\$121y ),
    .Y(\$122y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:500.24-500.48" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd16),
    .Y_WIDTH(32'd1)
  ) \$123  (
    .A(irqs_i[15:0]),
    .Y(\$123y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:197.28-197.57" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(illegal_insn_i),
    .B(illegal_dret),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:560.34-560.47" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(debug_mode_q),
    .Y(\$136y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:560.13-560.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(ebreak_into_debug),
    .B(\$136y ),
    .Y(\$137y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:197.28-197.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\$13y ),
    .B(illegal_umode),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:588.13-588.37" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(exc_req_q),
    .B(store_err_q),
    .Y(\$142y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:588.13-588.51" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(\$142y ),
    .B(load_err_q),
    .Y(\$143y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:591.30-591.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$144  (
    .A(2'h0),
    .B(2'h3),
    .S(debug_mode_q),
    .Y(\$144y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:603.56-603.71" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$145  (
    .A(pc_id_i),
    .B(32'd2),
    .Y(\$145y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:603.29-603.82" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$146  (
    .A(pc_id_i),
    .B(\$145y ),
    .S(instr_fetch_err_plus2_i),
    .Y(\$146y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:607.29-607.90" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$147  (
    .A(instr_i),
    .B({ 16'h0000, instr_compressed_i }),
    .S(instr_is_compressed_i),
    .Y(\$147y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:610.30-610.55" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(priv_mode_i),
    .B(2'h3),
    .Y(\$148y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:610.29-611.80" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$149  (
    .A(7'h08),
    .B(7'h0b),
    .S(\$148y ),
    .Y(\$149y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:197.78-197.98" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:614.19-614.51" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$150  (
    .A(debug_mode_q),
    .B(ebreak_into_debug),
    .Y(\$150y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:197.27-197.99" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:204.23-204.45" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(ecall_insn),
    .B(ebrk_insn),
    .Y(\$17y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:204.23-204.62" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$17y ),
    .B(illegal_insn_d),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:204.23-204.80" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(\$18y ),
    .B(instr_fetch_err),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:689.42-689.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$191  (
    .A(ebrk_insn_prio),
    .B(ebreak_into_debug),
    .Y(\$191y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:689.40-689.78" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$192  (
    .A(\$191y ),
    .Y(\$192y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:689.13-689.78" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$193  (
    .A(enter_debug_mode_prio_q),
    .B(\$192y ),
    .Y(\$193y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:177.28-177.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(dret_insn_i),
    .B(instr_valid_i),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:205.23-205.43" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:204.22-205.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:718.26-718.32" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$218  (
    .A(stall),
    .Y(\$218y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:718.35-718.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$219  (
    .A(halt_if),
    .Y(\$219y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:208.24-208.48" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(store_err_i),
    .B(load_err_i),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:718.26-718.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$220  (
    .A(\$218y ),
    .B(\$219y ),
    .Y(\$220y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:718.46-718.56" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$221  (
    .A(retain_id),
    .Y(\$221y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:718.26-718.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$222  (
    .A(\$220y ),
    .B(\$221y ),
    .Y(\$222y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:725.34-725.51" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$223  (
    .A(stall),
    .B(retain_id),
    .Y(\$223y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:725.32-725.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$224  (
    .A(\$223y ),
    .Y(\$224y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:725.32-725.63" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$225  (
    .A(\$224y ),
    .B(flush_id),
    .Y(\$225y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$227  (
    .A(rst_ni),
    .Y(\$227y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:216.35-216.60" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(wfi_insn),
    .B(csr_pipe_flush),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:219.34-219.55" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(mret_insn),
    .B(dret_insn),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:219.34-219.67" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(\$24y ),
    .B(exc_req_d),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:219.34-219.81" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(\$25y ),
    .B(exc_req_lsu),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:222.24-222.70" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(special_req_pc_change),
    .B(special_req_flush_only),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:178.28-178.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(wfi_insn_i),
    .B(instr_valid_i),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:179.28-179.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(ebrk_insn_i),
    .B(instr_valid_i),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:180.28-180.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(csr_pipe_flush_i),
    .B(instr_valid_i),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:272.45-272.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(debug_mode_q),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:272.45-272.80" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\$50y ),
    .B(debug_single_step_i),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:272.29-272.99" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$52  (
    .A(do_single_step_q),
    .B(\$51y ),
    .S(instr_valid_i),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:283.37-283.67" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(debug_req_i),
    .B(do_single_step_d),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:283.71-283.84" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(debug_mode_q),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:283.36-283.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(\$53y ),
    .B(\$54y ),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:284.74-284.87" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(debug_mode_q),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:284.56-284.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(trigger_match_i),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:284.29-284.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(enter_debug_mode_prio_d),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:289.30-289.55" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(priv_mode_i),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:181.28-181.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(instr_fetch_err_i),
    .B(instr_valid_i),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:289.30-290.62" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$60  (
    .A(1'h0),
    .B(debug_ebreaku_i),
    .S(\$59y ),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:288.30-288.55" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(priv_mode_i),
    .B(2'h3),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:288.30-290.62" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$62  (
    .A(\$60y ),
    .B(debug_ebreakm_i),
    .S(\$61y ),
    .Y(\$62y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:297.23-297.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(debug_mode_q),
    .Y(\$63y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:297.39-297.50" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(nmi_mode_q),
    .Y(\$64y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:297.23-297.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A(\$63y ),
    .B(\$64y ),
    .Y(\$65y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:298.20-298.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(irq_pending_i),
    .B(csr_mstatus_mie_i),
    .Y(\$66y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:298.8-298.54" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(irq_nm_i),
    .B(\$66y ),
    .Y(\$67y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:297.23-298.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(\$65y ),
    .B(\$67y ),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:185.37-185.50" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(debug_mode_q),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:185.25-185.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(dret_insn),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:392.13-392.38" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(irq_nm_i),
    .B(irq_pending_i),
    .Y(\$89y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:188.27-188.52" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(priv_mode_i),
    .B(2'h3),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:392.13-392.53" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(\$89y ),
    .B(debug_req_i),
    .Y(\$90y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:392.13-392.69" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(\$90y ),
    .B(debug_mode_q),
    .Y(\$91y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:392.13-392.92" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(\$91y ),
    .B(debug_single_step_i),
    .Y(\$92y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$ctrl_fsm_cs  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ctrl_fsm_ns),
    .Q(ctrl_fsm_cs)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$debug_mode_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(debug_mode_d),
    .Q(debug_mode_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$do_single_step_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(do_single_step_d),
    .Q(do_single_step_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$enter_debug_mode_prio_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(enter_debug_mode_prio_d),
    .Q(enter_debug_mode_prio_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$exc_req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(exc_req_d),
    .Q(exc_req_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$illegal_insn_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(illegal_insn_d),
    .Q(illegal_insn_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$load_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(load_err_d),
    .Q(load_err_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$nmi_mode_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(nmi_mode_d),
    .Q(nmi_mode_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:728.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$store_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(store_err_d),
    .Q(store_err_q)
  );
  /* src = "rtl/cve2/cve2_controller.sv:690.11-690.38|rtl/cve2/cve2_controller.sv:689.9-691.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2122  (
    .A(\$ctrl_fsm_ns$178 ),
    .B(4'h8),
    .S(\$procmux$2123_CMP ),
    .Y(\$procmux$2122_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2124  (
    .A(4'hx),
    .B(\$procmux$2122_Y ),
    .S(\$procmux$2125_CMP ),
    .Y(\$procmux$2124_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2125_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2125_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:671.13-671.48|rtl/cve2/cve2_controller.sv:670.20-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2127  (
    .A(4'h5),
    .B(4'h2),
    .S(\$procmux$2128_CMP ),
    .Y(\$procmux$2127_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2130  (
    .A(\$procmux$2127_Y ),
    .B(4'hx),
    .S(\$procmux$2131_CMP ),
    .Y(\$procmux$2130_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2133  (
    .A(\$procmux$2130_Y ),
    .B(4'hx),
    .S(\$procmux$2134_CMP ),
    .Y(\$procmux$2133_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2136  (
    .A(\$procmux$2133_Y ),
    .B(4'hx),
    .S(\$procmux$2137_CMP ),
    .Y(\$procmux$2136_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2138  (
    .A(4'hx),
    .B(\$procmux$2136_Y ),
    .S(\$procmux$2139_CMP ),
    .Y(\$procmux$2138_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2139_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2139_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2142  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2143_CMP ),
    .Y(\$procmux$2142_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2145  (
    .A(\$procmux$2142_Y ),
    .B(1'hx),
    .S(\$procmux$2146_CMP ),
    .Y(\$procmux$2145_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2148  (
    .A(\$procmux$2145_Y ),
    .B(1'hx),
    .S(\$procmux$2149_CMP ),
    .Y(\$procmux$2148_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2150  (
    .A(1'hx),
    .B(\$procmux$2148_Y ),
    .S(\$procmux$2151_CMP ),
    .Y(\$procmux$2150_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2151_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2151_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2154  (
    .A(3'h0),
    .B(3'h4),
    .S(\$procmux$2155_CMP ),
    .Y(\$procmux$2154_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2157  (
    .A(\$procmux$2154_Y ),
    .B(3'hx),
    .S(\$procmux$2158_CMP ),
    .Y(\$procmux$2157_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2160  (
    .A(\$procmux$2157_Y ),
    .B(3'hx),
    .S(\$procmux$2161_CMP ),
    .Y(\$procmux$2160_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2162  (
    .A(3'hx),
    .B(\$procmux$2160_Y ),
    .S(\$procmux$2163_CMP ),
    .Y(\$procmux$2162_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2163_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2163_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2166  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2167_CMP ),
    .Y(\$procmux$2166_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2169  (
    .A(\$procmux$2166_Y ),
    .B(1'hx),
    .S(\$procmux$2170_CMP ),
    .Y(\$procmux$2169_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2172  (
    .A(\$procmux$2169_Y ),
    .B(1'hx),
    .S(\$procmux$2173_CMP ),
    .Y(\$procmux$2172_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2174  (
    .A(1'hx),
    .B(\$procmux$2172_Y ),
    .S(\$procmux$2175_CMP ),
    .Y(\$procmux$2174_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2175_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2175_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2178  (
    .A(debug_mode_q),
    .B(1'h0),
    .S(\$procmux$2179_CMP ),
    .Y(\$procmux$2178_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2181  (
    .A(\$procmux$2178_Y ),
    .B(1'hx),
    .S(\$procmux$2182_CMP ),
    .Y(\$procmux$2181_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2184  (
    .A(\$procmux$2181_Y ),
    .B(1'hx),
    .S(\$procmux$2185_CMP ),
    .Y(\$procmux$2184_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2186  (
    .A(1'hx),
    .B(\$procmux$2184_Y ),
    .S(\$procmux$2187_CMP ),
    .Y(\$procmux$2186_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2187_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2187_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:665.35-670.14|rtl/cve2/cve2_controller.sv:665.20-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2191  (
    .A(\$ctrl_fsm_ns$165 ),
    .B(4'h5),
    .S(\$procmux$2192_CMP ),
    .Y(\$procmux$2191_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2194  (
    .A(\$procmux$2191_Y ),
    .B(4'hx),
    .S(\$procmux$2195_CMP ),
    .Y(\$procmux$2194_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2197  (
    .A(\$procmux$2194_Y ),
    .B(4'hx),
    .S(\$procmux$2198_CMP ),
    .Y(\$procmux$2197_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2199  (
    .A(4'hx),
    .B(\$procmux$2197_Y ),
    .S(\$procmux$2200_CMP ),
    .Y(\$procmux$2199_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2200_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2200_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2205  (
    .A(\$pc_mux_o$169 ),
    .B(3'h3),
    .S(\$procmux$2206_CMP ),
    .Y(\$procmux$2205_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2208  (
    .A(\$procmux$2205_Y ),
    .B(3'hx),
    .S(\$procmux$2209_CMP ),
    .Y(\$procmux$2208_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2210  (
    .A(3'hx),
    .B(\$procmux$2208_Y ),
    .S(\$procmux$2211_CMP ),
    .Y(\$procmux$2210_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2211_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2211_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2216  (
    .A(\$pc_set_o$168 ),
    .B(1'h1),
    .S(\$procmux$2217_CMP ),
    .Y(\$procmux$2216_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2219  (
    .A(\$procmux$2216_Y ),
    .B(1'hx),
    .S(\$procmux$2220_CMP ),
    .Y(\$procmux$2219_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2221  (
    .A(1'hx),
    .B(\$procmux$2219_Y ),
    .S(\$procmux$2222_CMP ),
    .Y(\$procmux$2221_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2222_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2222_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:663.15-663.42|rtl/cve2/cve2_controller.sv:662.13-664.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2225  (
    .A(nmi_mode_q),
    .B(1'h0),
    .S(\$procmux$2226_CMP ),
    .Y(\$procmux$2225_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2227  (
    .A(1'hx),
    .B(\$procmux$2225_Y ),
    .S(\$procmux$2228_CMP ),
    .Y(\$procmux$2227_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2230  (
    .A(\$procmux$2227_Y ),
    .B(1'hx),
    .S(\$procmux$2231_CMP ),
    .Y(\$procmux$2230_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2232  (
    .A(1'hx),
    .B(\$procmux$2230_Y ),
    .S(\$procmux$2233_CMP ),
    .Y(\$procmux$2232_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2233_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2233_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2237  (
    .A(\$csr_restore_dret_id_o$170 ),
    .B(1'h0),
    .S(\$procmux$2238_CMP ),
    .Y(\$procmux$2237_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2240  (
    .A(\$procmux$2237_Y ),
    .B(1'hx),
    .S(\$procmux$2241_CMP ),
    .Y(\$procmux$2240_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2242  (
    .A(1'hx),
    .B(\$procmux$2240_Y ),
    .S(\$procmux$2243_CMP ),
    .Y(\$procmux$2242_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2243_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2243_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2247  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2248_CMP ),
    .Y(\$procmux$2247_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2250  (
    .A(\$procmux$2247_Y ),
    .B(1'hx),
    .S(\$procmux$2251_CMP ),
    .Y(\$procmux$2250_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2252  (
    .A(1'hx),
    .B(\$procmux$2250_Y ),
    .S(\$procmux$2253_CMP ),
    .Y(\$procmux$2252_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2253_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2253_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2257  (
    .A(\$debug_mode_d$167 ),
    .B(debug_mode_q),
    .S(\$procmux$2258_CMP ),
    .Y(\$procmux$2257_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2260  (
    .A(\$procmux$2257_Y ),
    .B(1'hx),
    .S(\$procmux$2261_CMP ),
    .Y(\$procmux$2260_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2262  (
    .A(1'hx),
    .B(\$procmux$2260_Y ),
    .S(\$procmux$2263_CMP ),
    .Y(\$procmux$2262_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2263_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2263_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2267  (
    .A(nmi_mode_q),
    .B(\$nmi_mode_d$164 ),
    .S(\$procmux$2268_CMP ),
    .Y(\$procmux$2267_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2270  (
    .A(\$procmux$2267_Y ),
    .B(1'hx),
    .S(\$procmux$2271_CMP ),
    .Y(\$procmux$2270_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2272  (
    .A(1'hx),
    .B(\$procmux$2270_Y ),
    .S(\$procmux$2273_CMP ),
    .Y(\$procmux$2272_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2273_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2273_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:658.26-665.14|rtl/cve2/cve2_controller.sv:658.11-672.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2277  (
    .A(\$ctrl_fsm_ns$166 ),
    .B(4'h5),
    .S(\$procmux$2278_CMP ),
    .Y(\$procmux$2277_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2280  (
    .A(\$procmux$2277_Y ),
    .B(4'hx),
    .S(\$procmux$2281_CMP ),
    .Y(\$procmux$2280_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2282  (
    .A(4'hx),
    .B(\$procmux$2280_Y ),
    .S(\$procmux$2283_CMP ),
    .Y(\$procmux$2282_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2283_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2283_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2288  (
    .A(\$pc_mux_o$175 ),
    .B(3'h2),
    .S(\$procmux$2289_CMP ),
    .Y(\$procmux$2288_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2290  (
    .A(3'hx),
    .B(\$procmux$2288_Y ),
    .S(\$procmux$2291_CMP ),
    .Y(\$procmux$2290_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2291_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2291_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2296  (
    .A(\$pc_set_o$174 ),
    .B(\$pc_set_o$159 ),
    .S(\$procmux$2297_CMP ),
    .Y(\$procmux$2296_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2298  (
    .A(1'hx),
    .B(\$procmux$2296_Y ),
    .S(\$procmux$2299_CMP ),
    .Y(\$procmux$2298_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2299_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2299_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2304  (
    .A(\$ctrl_fsm_ns$171 ),
    .B(\$ctrl_fsm_ns$157 ),
    .S(\$procmux$2305_CMP ),
    .Y(\$procmux$2304_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2306  (
    .A(4'hx),
    .B(\$procmux$2304_Y ),
    .S(\$procmux$2307_CMP ),
    .Y(\$procmux$2306_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2307_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2307_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.53-633.18|rtl/cve2/cve2_controller.sv:614.15-644.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2314  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$2315_CMP ),
    .Y(\$procmux$2314_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2316  (
    .A(1'hx),
    .B(\$procmux$2314_Y ),
    .S(\$procmux$2317_CMP ),
    .Y(\$procmux$2316_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2318  (
    .A(1'hx),
    .B(\$procmux$2316_Y ),
    .S(\$procmux$2319_CMP ),
    .Y(\$procmux$2318_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2320  (
    .A(1'hx),
    .B(\$procmux$2318_Y ),
    .S(\$procmux$2321_CMP ),
    .Y(\$procmux$2320_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2321_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2321_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2329  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$2330_CMP ),
    .Y(\$procmux$2329_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2331  (
    .A(1'hx),
    .B(\$procmux$2329_Y ),
    .S(\$procmux$2332_CMP ),
    .Y(\$procmux$2331_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2333  (
    .A(1'hx),
    .B(\$procmux$2331_Y ),
    .S(\$procmux$2334_CMP ),
    .Y(\$procmux$2333_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2334_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2334_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.53-633.18|rtl/cve2/cve2_controller.sv:614.15-644.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2341  (
    .A(7'h03),
    .B(7'h00),
    .S(\$procmux$2342_CMP ),
    .Y(\$procmux$2341_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2343  (
    .A(7'hxx),
    .B(\$procmux$2341_Y ),
    .S(\$procmux$2344_CMP ),
    .Y(\$procmux$2343_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2345  (
    .A(7'hxx),
    .B(\$procmux$2343_Y ),
    .S(\$procmux$2346_CMP ),
    .Y(\$procmux$2345_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2347  (
    .A(7'hxx),
    .B(\$procmux$2345_Y ),
    .S(\$procmux$2348_CMP ),
    .Y(\$procmux$2347_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2348_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2348_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.53-633.18|rtl/cve2/cve2_controller.sv:614.15-644.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2355  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$2356_CMP ),
    .Y(\$procmux$2355_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2357  (
    .A(1'hx),
    .B(\$procmux$2355_Y ),
    .S(\$procmux$2358_CMP ),
    .Y(\$procmux$2357_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2359  (
    .A(1'hx),
    .B(\$procmux$2357_Y ),
    .S(\$procmux$2360_CMP ),
    .Y(\$procmux$2359_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2361  (
    .A(1'hx),
    .B(\$procmux$2359_Y ),
    .S(\$procmux$2362_CMP ),
    .Y(\$procmux$2361_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2362_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2362_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.53-633.18|rtl/cve2/cve2_controller.sv:614.15-644.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2369  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$2370_CMP ),
    .Y(\$procmux$2369_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2371  (
    .A(1'hx),
    .B(\$procmux$2369_Y ),
    .S(\$procmux$2372_CMP ),
    .Y(\$procmux$2371_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2373  (
    .A(1'hx),
    .B(\$procmux$2371_Y ),
    .S(\$procmux$2374_CMP ),
    .Y(\$procmux$2373_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2375  (
    .A(1'hx),
    .B(\$procmux$2373_Y ),
    .S(\$procmux$2376_CMP ),
    .Y(\$procmux$2375_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2376_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2376_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.53-633.18|rtl/cve2/cve2_controller.sv:614.15-644.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2383  (
    .A(4'h5),
    .B(4'h9),
    .S(\$procmux$2384_CMP ),
    .Y(\$procmux$2383_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2385  (
    .A(4'hx),
    .B(\$procmux$2383_Y ),
    .S(\$procmux$2386_CMP ),
    .Y(\$procmux$2385_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2387  (
    .A(4'hx),
    .B(\$procmux$2385_Y ),
    .S(\$procmux$2388_CMP ),
    .Y(\$procmux$2387_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2389  (
    .A(4'hx),
    .B(\$procmux$2387_Y ),
    .S(\$procmux$2390_CMP ),
    .Y(\$procmux$2389_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2390_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2390_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:650.28-653.16|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$2394  (
    .A(32'd0),
    .B({ \$146y , \$147y , lsu_addr_last_i, lsu_addr_last_i }),
    .S({ \$procmux$2398_CMP , \$procmux$2397_CMP , \$procmux$2396_CMP , \$procmux$2395_CMP  }),
    .Y(\$procmux$2394_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2399  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$2394_Y ),
    .S(\$procmux$2400_CMP ),
    .Y(\$procmux$2399_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2401  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$2399_Y ),
    .S(\$procmux$2402_CMP ),
    .Y(\$procmux$2401_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2402_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2402_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2409  (
    .A(1'h1),
    .B(\$csr_save_cause_o$156 ),
    .S(\$procmux$2410_CMP ),
    .Y(\$procmux$2409_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2411  (
    .A(1'hx),
    .B(\$procmux$2409_Y ),
    .S(\$procmux$2412_CMP ),
    .Y(\$procmux$2411_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2413  (
    .A(1'hx),
    .B(\$procmux$2411_Y ),
    .S(\$procmux$2414_CMP ),
    .Y(\$procmux$2413_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2414_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2414_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2421  (
    .A(1'h0),
    .B(\$csr_save_id_o$155 ),
    .S(\$procmux$2422_CMP ),
    .Y(\$procmux$2421_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2423  (
    .A(1'hx),
    .B(\$procmux$2421_Y ),
    .S(\$procmux$2424_CMP ),
    .Y(\$procmux$2423_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2425  (
    .A(1'hx),
    .B(\$procmux$2423_Y ),
    .S(\$procmux$2426_CMP ),
    .Y(\$procmux$2425_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2426_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2426_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:650.28-653.16|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd7)
  ) \$procmux$2430  (
    .A(7'h00),
    .B({ 14'h0082, \$149y , \$exc_cause_o$154 , 14'h0385 }),
    .S({ \$procmux$2437_CMP , \$procmux$2436_CMP , \$procmux$2435_CMP , \$procmux$2434_CMP , \$procmux$2432_CMP , \$procmux$2431_CMP  }),
    .Y(\$procmux$2430_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2438  (
    .A(7'hxx),
    .B(\$procmux$2430_Y ),
    .S(\$procmux$2439_CMP ),
    .Y(\$procmux$2438_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2440  (
    .A(7'hxx),
    .B(\$procmux$2438_Y ),
    .S(\$procmux$2441_CMP ),
    .Y(\$procmux$2440_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2441_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2441_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2448  (
    .A(1'h1),
    .B(\$pc_set_o$153 ),
    .S(\$procmux$2449_CMP ),
    .Y(\$procmux$2448_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2450  (
    .A(1'hx),
    .B(\$procmux$2448_Y ),
    .S(\$procmux$2451_CMP ),
    .Y(\$procmux$2450_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2452  (
    .A(1'hx),
    .B(\$procmux$2450_Y ),
    .S(\$procmux$2453_CMP ),
    .Y(\$procmux$2452_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2453_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2453_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2460  (
    .A(1'h1),
    .B(\$flush_id$152 ),
    .S(\$procmux$2461_CMP ),
    .Y(\$procmux$2460_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2462  (
    .A(1'hx),
    .B(\$procmux$2460_Y ),
    .S(\$procmux$2463_CMP ),
    .Y(\$procmux$2462_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2464  (
    .A(1'hx),
    .B(\$procmux$2462_Y ),
    .S(\$procmux$2465_CMP ),
    .Y(\$procmux$2464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2465_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2465_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:614.15-644.18|rtl/cve2/cve2_controller.sv:600.11-655.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2472  (
    .A(4'h5),
    .B(\$ctrl_fsm_ns$151 ),
    .S(\$procmux$2473_CMP ),
    .Y(\$procmux$2472_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2474  (
    .A(4'hx),
    .B(\$procmux$2472_Y ),
    .S(\$procmux$2475_CMP ),
    .Y(\$procmux$2474_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2476  (
    .A(4'hx),
    .B(\$procmux$2474_Y ),
    .S(\$procmux$2477_CMP ),
    .Y(\$procmux$2476_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2477_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2477_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2481  (
    .A(32'd0),
    .B(\$csr_mtval_o$163 ),
    .S(\$procmux$2482_CMP ),
    .Y(\$procmux$2481_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2483  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$2481_Y ),
    .S(\$procmux$2484_CMP ),
    .Y(\$procmux$2483_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2484_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2484_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2488  (
    .A(1'h0),
    .B(\$csr_save_cause_o$162 ),
    .S(\$procmux$2489_CMP ),
    .Y(\$procmux$2488_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2490  (
    .A(1'hx),
    .B(\$procmux$2488_Y ),
    .S(\$procmux$2491_CMP ),
    .Y(\$procmux$2490_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2491_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2491_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2495  (
    .A(\$csr_restore_dret_id_o$177 ),
    .B(1'h0),
    .S(\$procmux$2496_CMP ),
    .Y(\$procmux$2495_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2497  (
    .A(1'hx),
    .B(\$procmux$2495_Y ),
    .S(\$procmux$2498_CMP ),
    .Y(\$procmux$2497_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2498_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2498_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2502  (
    .A(\$csr_restore_mret_id_o$176 ),
    .B(1'h0),
    .S(\$procmux$2503_CMP ),
    .Y(\$procmux$2502_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2504  (
    .A(1'hx),
    .B(\$procmux$2502_Y ),
    .S(\$procmux$2505_CMP ),
    .Y(\$procmux$2504_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2505_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2505_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2509  (
    .A(1'h0),
    .B(\$csr_save_id_o$161 ),
    .S(\$procmux$2510_CMP ),
    .Y(\$procmux$2509_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2511  (
    .A(1'hx),
    .B(\$procmux$2509_Y ),
    .S(\$procmux$2512_CMP ),
    .Y(\$procmux$2511_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2512_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2512_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2516  (
    .A(7'h00),
    .B(\$exc_cause_o$160 ),
    .S(\$procmux$2517_CMP ),
    .Y(\$procmux$2516_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2518  (
    .A(7'hxx),
    .B(\$procmux$2516_Y ),
    .S(\$procmux$2519_CMP ),
    .Y(\$procmux$2518_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2519_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2519_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2523  (
    .A(2'h1),
    .B(\$144y ),
    .S(\$procmux$2524_CMP ),
    .Y(\$procmux$2523_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$2525  (
    .A(2'hx),
    .B(\$procmux$2523_Y ),
    .S(\$procmux$2526_CMP ),
    .Y(\$procmux$2525_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2526_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2526_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2530  (
    .A(1'h1),
    .B(\$flush_id$158 ),
    .S(\$procmux$2531_CMP ),
    .Y(\$procmux$2530_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2532  (
    .A(1'hx),
    .B(\$procmux$2530_Y ),
    .S(\$procmux$2533_CMP ),
    .Y(\$procmux$2532_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2533_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2533_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2537  (
    .A(\$debug_mode_d$173 ),
    .B(debug_mode_q),
    .S(\$procmux$2538_CMP ),
    .Y(\$procmux$2537_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2539  (
    .A(1'hx),
    .B(\$procmux$2537_Y ),
    .S(\$procmux$2540_CMP ),
    .Y(\$procmux$2539_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2540_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2540_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:588.53-656.12|rtl/cve2/cve2_controller.sv:588.9-673.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2544  (
    .A(\$nmi_mode_d$172 ),
    .B(nmi_mode_q),
    .S(\$procmux$2545_CMP ),
    .Y(\$procmux$2544_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2546  (
    .A(1'hx),
    .B(\$procmux$2544_Y ),
    .S(\$procmux$2547_CMP ),
    .Y(\$procmux$2546_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2547_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2547_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:560.49-569.12|rtl/cve2/cve2_controller.sv:560.9-569.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2550  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2551_CMP ),
    .Y(\$procmux$2550_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2552  (
    .A(1'hx),
    .B(\$procmux$2550_Y ),
    .S(\$procmux$2553_CMP ),
    .Y(\$procmux$2552_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2553_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2553_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:560.49-569.12|rtl/cve2/cve2_controller.sv:560.9-569.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2556  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2557_CMP ),
    .Y(\$procmux$2556_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2558  (
    .A(1'hx),
    .B(\$procmux$2556_Y ),
    .S(\$procmux$2559_CMP ),
    .Y(\$procmux$2558_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2559_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2559_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:560.49-569.12|rtl/cve2/cve2_controller.sv:560.9-569.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2562  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2563_CMP ),
    .Y(\$procmux$2562_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2564  (
    .A(1'hx),
    .B(\$procmux$2562_Y ),
    .S(\$procmux$2565_CMP ),
    .Y(\$procmux$2564_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2565_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2565_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2569  (
    .A(3'hx),
    .B(3'h1),
    .S(\$procmux$2570_CMP ),
    .Y(\$procmux$2569_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2570_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2570_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:535.11-535.45|rtl/cve2/cve2_controller.sv:534.18-538.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2575  (
    .A(3'h4),
    .B(3'h3),
    .S(\$procmux$2576_CMP ),
    .Y(\$procmux$2575_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:533.11-533.45|rtl/cve2/cve2_controller.sv:532.9-538.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2578  (
    .A(\$procmux$2575_Y ),
    .B(3'hx),
    .S(\$procmux$2579_CMP ),
    .Y(\$procmux$2578_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2580  (
    .A(3'hx),
    .B(\$procmux$2578_Y ),
    .S(\$procmux$2581_CMP ),
    .Y(\$procmux$2580_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2581_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$2581_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:533.11-533.45|rtl/cve2/cve2_controller.sv:532.9-538.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2587  (
    .A(\$debug_cause_o$134 ),
    .B(3'h2),
    .S(\$procmux$2588_CMP ),
    .Y(\$procmux$2587_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2589  (
    .A(3'hx),
    .B(\$procmux$2587_Y ),
    .S(\$procmux$2590_CMP ),
    .Y(\$procmux$2589_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2590_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$2590_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:510.13-510.52|rtl/cve2/cve2_controller.sv:509.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2596  (
    .A(7'h47),
    .B(7'h43),
    .S(\$procmux$2597_CMP ),
    .Y(\$procmux$2596_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:508.13-508.52|rtl/cve2/cve2_controller.sv:507.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2599  (
    .A(\$procmux$2596_Y ),
    .B(7'hxx),
    .S(\$procmux$2600_CMP ),
    .Y(\$procmux$2599_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:506.13-506.59|rtl/cve2/cve2_controller.sv:500.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2602  (
    .A(\$procmux$2599_Y ),
    .B(7'hxx),
    .S(\$procmux$2603_CMP ),
    .Y(\$procmux$2602_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:497.40-500.14|rtl/cve2/cve2_controller.sv:497.11-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2605  (
    .A(\$procmux$2602_Y ),
    .B(7'hxx),
    .S(\$procmux$2606_CMP ),
    .Y(\$procmux$2605_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2607  (
    .A(7'hxx),
    .B(\$procmux$2605_Y ),
    .S(\$procmux$2608_CMP ),
    .Y(\$procmux$2607_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2609  (
    .A(7'hxx),
    .B(\$procmux$2607_Y ),
    .S(\$procmux$2610_CMP ),
    .Y(\$procmux$2609_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2610_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2610_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:508.13-508.52|rtl/cve2/cve2_controller.sv:507.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2617  (
    .A(\$exc_cause_o$124 ),
    .B(7'h4b),
    .S(\$procmux$2618_CMP ),
    .Y(\$procmux$2617_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:506.13-506.59|rtl/cve2/cve2_controller.sv:500.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2620  (
    .A(\$procmux$2617_Y ),
    .B(7'hxx),
    .S(\$procmux$2621_CMP ),
    .Y(\$procmux$2620_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:497.40-500.14|rtl/cve2/cve2_controller.sv:497.11-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2623  (
    .A(\$procmux$2620_Y ),
    .B(7'hxx),
    .S(\$procmux$2624_CMP ),
    .Y(\$procmux$2623_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2625  (
    .A(7'hxx),
    .B(\$procmux$2623_Y ),
    .S(\$procmux$2626_CMP ),
    .Y(\$procmux$2625_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2627  (
    .A(7'hxx),
    .B(\$procmux$2625_Y ),
    .S(\$procmux$2628_CMP ),
    .Y(\$procmux$2627_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2628_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2628_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:506.13-506.59|rtl/cve2/cve2_controller.sv:500.20-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2635  (
    .A(\$exc_cause_o$125 ),
    .B({ 3'h5, \$mfip_id$85  }),
    .S(\$procmux$2636_CMP ),
    .Y(\$procmux$2635_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:497.40-500.14|rtl/cve2/cve2_controller.sv:497.11-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2638  (
    .A(\$procmux$2635_Y ),
    .B(7'hxx),
    .S(\$procmux$2639_CMP ),
    .Y(\$procmux$2638_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2640  (
    .A(7'hxx),
    .B(\$procmux$2638_Y ),
    .S(\$procmux$2641_CMP ),
    .Y(\$procmux$2640_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2642  (
    .A(7'hxx),
    .B(\$procmux$2640_Y ),
    .S(\$procmux$2643_CMP ),
    .Y(\$procmux$2642_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2643_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2643_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:497.40-500.14|rtl/cve2/cve2_controller.sv:497.11-513.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2650  (
    .A(\$exc_cause_o$126 ),
    .B(7'h60),
    .S(\$procmux$2651_CMP ),
    .Y(\$procmux$2650_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2652  (
    .A(7'hxx),
    .B(\$procmux$2650_Y ),
    .S(\$procmux$2653_CMP ),
    .Y(\$procmux$2652_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2654  (
    .A(7'hxx),
    .B(\$procmux$2652_Y ),
    .S(\$procmux$2655_CMP ),
    .Y(\$procmux$2654_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2655_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2655_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:497.40-500.14|rtl/cve2/cve2_controller.sv:497.11-513.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2661  (
    .A(nmi_mode_q),
    .B(1'h1),
    .S(\$procmux$2662_CMP ),
    .Y(\$procmux$2661_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2663  (
    .A(1'hx),
    .B(\$procmux$2661_Y ),
    .S(\$procmux$2664_CMP ),
    .Y(\$procmux$2663_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2665  (
    .A(1'hx),
    .B(\$procmux$2663_Y ),
    .S(\$procmux$2666_CMP ),
    .Y(\$procmux$2665_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2666_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2666_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2672  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2673_CMP ),
    .Y(\$procmux$2672_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2674  (
    .A(1'hx),
    .B(\$procmux$2672_Y ),
    .S(\$procmux$2675_CMP ),
    .Y(\$procmux$2674_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2675_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2675_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2681  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2682_CMP ),
    .Y(\$procmux$2681_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2683  (
    .A(1'hx),
    .B(\$procmux$2681_Y ),
    .S(\$procmux$2684_CMP ),
    .Y(\$procmux$2683_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2684_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2684_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2690  (
    .A(7'h00),
    .B(\$exc_cause_o$128 ),
    .S(\$procmux$2691_CMP ),
    .Y(\$procmux$2690_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2692  (
    .A(7'hxx),
    .B(\$procmux$2690_Y ),
    .S(\$procmux$2693_CMP ),
    .Y(\$procmux$2692_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2693_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2693_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2699  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2700_CMP ),
    .Y(\$procmux$2699_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2701  (
    .A(1'hx),
    .B(\$procmux$2699_Y ),
    .S(\$procmux$2702_CMP ),
    .Y(\$procmux$2701_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2702_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2702_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:490.25-514.12|rtl/cve2/cve2_controller.sv:490.9-514.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2708  (
    .A(nmi_mode_q),
    .B(\$nmi_mode_d$127 ),
    .S(\$procmux$2709_CMP ),
    .Y(\$procmux$2708_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2710  (
    .A(1'hx),
    .B(\$procmux$2708_Y ),
    .S(\$procmux$2711_CMP ),
    .Y(\$procmux$2710_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2711_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2711_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:472.36-481.14|rtl/cve2/cve2_controller.sv:472.20-481.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2717  (
    .A(\$halt_if$109 ),
    .B(1'h1),
    .S(\$procmux$2718_CMP ),
    .Y(\$procmux$2717_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:466.33-472.14|rtl/cve2/cve2_controller.sv:466.11-481.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2720  (
    .A(\$procmux$2717_Y ),
    .B(1'hx),
    .S(\$procmux$2721_CMP ),
    .Y(\$procmux$2720_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2722  (
    .A(1'hx),
    .B(\$procmux$2720_Y ),
    .S(\$procmux$2723_CMP ),
    .Y(\$procmux$2722_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2724  (
    .A(1'hx),
    .B(\$procmux$2722_Y ),
    .S(\$procmux$2725_CMP ),
    .Y(\$procmux$2724_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2725_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2725_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:472.36-481.14|rtl/cve2/cve2_controller.sv:472.20-481.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2731  (
    .A(\$ctrl_fsm_ns$100 ),
    .B(4'h7),
    .S(\$procmux$2732_CMP ),
    .Y(\$procmux$2731_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:466.33-472.14|rtl/cve2/cve2_controller.sv:466.11-481.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2734  (
    .A(\$procmux$2731_Y ),
    .B(4'hx),
    .S(\$procmux$2735_CMP ),
    .Y(\$procmux$2734_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2736  (
    .A(4'hx),
    .B(\$procmux$2734_Y ),
    .S(\$procmux$2737_CMP ),
    .Y(\$procmux$2736_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2738  (
    .A(4'hx),
    .B(\$procmux$2736_Y ),
    .S(\$procmux$2739_CMP ),
    .Y(\$procmux$2738_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2739_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2739_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:466.33-472.14|rtl/cve2/cve2_controller.sv:466.11-481.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2747  (
    .A(\$halt_if$116 ),
    .B(1'h1),
    .S(\$procmux$2748_CMP ),
    .Y(\$procmux$2747_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2749  (
    .A(1'hx),
    .B(\$procmux$2747_Y ),
    .S(\$procmux$2750_CMP ),
    .Y(\$procmux$2749_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2751  (
    .A(1'hx),
    .B(\$procmux$2749_Y ),
    .S(\$procmux$2752_CMP ),
    .Y(\$procmux$2751_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2752_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2752_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:466.33-472.14|rtl/cve2/cve2_controller.sv:466.11-481.14" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2760  (
    .A(\$ctrl_fsm_ns$115 ),
    .B(4'h8),
    .S(\$procmux$2761_CMP ),
    .Y(\$procmux$2760_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2762  (
    .A(4'hx),
    .B(\$procmux$2760_Y ),
    .S(\$procmux$2763_CMP ),
    .Y(\$procmux$2762_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2764  (
    .A(4'hx),
    .B(\$procmux$2762_Y ),
    .S(\$procmux$2765_CMP ),
    .Y(\$procmux$2764_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2765_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2765_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2773  (
    .A(\$halt_if$109 ),
    .B(\$halt_if$118 ),
    .S(\$procmux$2774_CMP ),
    .Y(\$procmux$2773_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2775  (
    .A(1'hx),
    .B(\$procmux$2773_Y ),
    .S(\$procmux$2776_CMP ),
    .Y(\$procmux$2775_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2776_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2776_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:466.11-481.14|rtl/cve2/cve2_controller.sv:465.9-482.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2784  (
    .A(\$ctrl_fsm_ns$100 ),
    .B(\$ctrl_fsm_ns$117 ),
    .S(\$procmux$2785_CMP ),
    .Y(\$procmux$2784_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2786  (
    .A(4'hx),
    .B(\$procmux$2784_Y ),
    .S(\$procmux$2787_CMP ),
    .Y(\$procmux$2786_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2787_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2787_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:462.11-462.26|rtl/cve2/cve2_controller.sv:461.9-463.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2794  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2795_CMP ),
    .Y(\$procmux$2794_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2796  (
    .A(1'hx),
    .B(\$procmux$2794_Y ),
    .S(\$procmux$2797_CMP ),
    .Y(\$procmux$2796_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2797_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2797_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:452.41-457.12|rtl/cve2/cve2_controller.sv:452.9-457.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2804  (
    .A(1'h0),
    .B(branch_set_i),
    .S(\$procmux$2805_CMP ),
    .Y(\$procmux$2804_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2806  (
    .A(1'hx),
    .B(\$procmux$2804_Y ),
    .S(\$procmux$2807_CMP ),
    .Y(\$procmux$2806_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2807_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2807_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:452.41-457.12|rtl/cve2/cve2_controller.sv:452.9-457.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2814  (
    .A(1'h0),
    .B(jump_set_i),
    .S(\$procmux$2815_CMP ),
    .Y(\$procmux$2814_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2816  (
    .A(1'hx),
    .B(\$procmux$2814_Y ),
    .S(\$procmux$2817_CMP ),
    .Y(\$procmux$2816_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2817_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2817_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:452.41-457.12|rtl/cve2/cve2_controller.sv:452.9-457.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2824  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2825_CMP ),
    .Y(\$procmux$2824_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2826  (
    .A(1'hx),
    .B(\$procmux$2824_Y ),
    .S(\$procmux$2827_CMP ),
    .Y(\$procmux$2826_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2827_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2827_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:441.26-450.12|rtl/cve2/cve2_controller.sv:441.9-450.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2833  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2834_CMP ),
    .Y(\$procmux$2833_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2835  (
    .A(1'hx),
    .B(\$procmux$2833_Y ),
    .S(\$procmux$2836_CMP ),
    .Y(\$procmux$2835_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2836_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2836_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:441.26-450.12|rtl/cve2/cve2_controller.sv:441.9-450.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2842  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .S(\$procmux$2843_CMP ),
    .Y(\$procmux$2842_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2844  (
    .A(4'hx),
    .B(\$procmux$2842_Y ),
    .S(\$procmux$2845_CMP ),
    .Y(\$procmux$2844_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2845_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2845_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:417.31-422.12|rtl/cve2/cve2_controller.sv:417.9-422.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2853  (
    .A(\$halt_if$97 ),
    .B(1'h1),
    .S(\$procmux$2854_CMP ),
    .Y(\$procmux$2853_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2855  (
    .A(1'hx),
    .B(\$procmux$2853_Y ),
    .S(\$procmux$2856_CMP ),
    .Y(\$procmux$2855_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2856_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2856_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:417.31-422.12|rtl/cve2/cve2_controller.sv:417.9-422.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2864  (
    .A(\$ctrl_fsm_ns$96 ),
    .B(4'h8),
    .S(\$procmux$2865_CMP ),
    .Y(\$procmux$2864_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2866  (
    .A(4'hx),
    .B(\$procmux$2864_Y ),
    .S(\$procmux$2867_CMP ),
    .Y(\$procmux$2866_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2867_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2867_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:407.25-414.12|rtl/cve2/cve2_controller.sv:407.9-414.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2875  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2876_CMP ),
    .Y(\$procmux$2875_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2877  (
    .A(1'hx),
    .B(\$procmux$2875_Y ),
    .S(\$procmux$2878_CMP ),
    .Y(\$procmux$2877_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2878_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2878_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:407.25-414.12|rtl/cve2/cve2_controller.sv:407.9-414.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2886  (
    .A(\$ctrl_fsm_ns$95 ),
    .B(4'h7),
    .S(\$procmux$2887_CMP ),
    .Y(\$procmux$2886_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2888  (
    .A(4'hx),
    .B(\$procmux$2886_Y ),
    .S(\$procmux$2889_CMP ),
    .Y(\$procmux$2888_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2889_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2889_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:403.11-403.32|rtl/cve2/cve2_controller.sv:402.9-404.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2896  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .S(\$procmux$2897_CMP ),
    .Y(\$procmux$2896_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2898  (
    .A(4'hx),
    .B(\$procmux$2896_Y ),
    .S(\$procmux$2899_CMP ),
    .Y(\$procmux$2898_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2899_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2899_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:393.11-393.37|rtl/cve2/cve2_controller.sv:392.9-397.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2908  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$2909_CMP ),
    .Y(\$procmux$2908_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2910  (
    .A(1'hx),
    .B(\$procmux$2908_Y ),
    .S(\$procmux$2911_CMP ),
    .Y(\$procmux$2910_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2911_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$2911_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:393.11-393.37|rtl/cve2/cve2_controller.sv:392.9-397.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2920  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .S(\$procmux$2921_CMP ),
    .Y(\$procmux$2920_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2922  (
    .A(4'hx),
    .B(\$procmux$2920_Y ),
    .S(\$procmux$2923_CMP ),
    .Y(\$procmux$2922_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2923_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$2923_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd4)
  ) \$procmux$2926  (
    .A(4'h0),
    .B({ \$ctrl_fsm_ns$88 , 8'h43, \$ctrl_fsm_ns$93 , \$ctrl_fsm_ns$98 , \$ctrl_fsm_ns$119 , 12'h555, \$ctrl_fsm_ns$194  }),
    .S({ \$procmux$2943_CMP , \$procmux$2941_CMP , \$procmux$2940_CMP , \$procmux$2939_CMP , \$procmux$2937_CMP , \$procmux$2935_CMP , \$procmux$2933_CMP , \$procmux$2931_CMP , \$procmux$2929_CMP , \$procmux$2927_CMP  }),
    .Y(\$procmux$2926_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2927_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2927_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2929_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2929_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2931_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$2931_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2933_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2933_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2935_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2935_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2937_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$2937_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2939_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$2939_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:375.19-381.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2940_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h2),
    .Y(\$procmux$2940_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:366.17-373.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2941_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h1),
    .Y(\$procmux$2941_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:357.14-365.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2943_CMP0  (
    .A(ctrl_fsm_cs),
    .Y(\$procmux$2943_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:363.11-363.34|rtl/cve2/cve2_controller.sv:361.9-364.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2954  (
    .A(ctrl_fsm_cs),
    .B(4'h1),
    .S(\$procmux$2955_CMP ),
    .Y(\$procmux$2954_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:357.14-365.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$2956  (
    .A(4'hx),
    .B(\$procmux$2954_Y ),
    .S(\$procmux$2957_CMP ),
    .Y(\$procmux$2956_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:357.14-365.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2957_CMP0  (
    .A(ctrl_fsm_cs),
    .Y(\$procmux$2957_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2964  (
    .A(1'h0),
    .B(\$perf_tbranch_o$105 ),
    .S(\$procmux$2965_CMP ),
    .Y(\$procmux$2964_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2965_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2965_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2972  (
    .A(1'h0),
    .B(\$perf_jump_o$104 ),
    .S(\$procmux$2973_CMP ),
    .Y(\$procmux$2972_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2973_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$2973_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2976  (
    .A(32'd0),
    .B(\$csr_mtval_o$190 ),
    .S(\$procmux$2977_CMP ),
    .Y(\$procmux$2976_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2977_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2977_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$2980  (
    .A(1'h0),
    .B({ \$csr_save_cause_o$133 , 1'h1, \$csr_save_cause_o$141 , \$csr_save_cause_o$189  }),
    .S({ \$procmux$2987_CMP , \$procmux$2985_CMP , \$procmux$2983_CMP , \$procmux$2981_CMP  }),
    .Y(\$procmux$2980_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2981_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2981_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2983_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$2983_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2985_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$2985_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2987_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$2987_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2990  (
    .A(1'h0),
    .B(\$csr_restore_dret_id_o$188 ),
    .S(\$procmux$2991_CMP ),
    .Y(\$procmux$2990_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2991_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2991_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2994  (
    .A(1'h0),
    .B(\$csr_restore_mret_id_o$187 ),
    .S(\$procmux$2995_CMP ),
    .Y(\$procmux$2994_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2995_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2995_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$2998  (
    .A(1'h0),
    .B({ \$csr_save_id_o$140 , \$csr_save_id_o$186  }),
    .S({ \$procmux$3001_CMP , \$procmux$2999_CMP  }),
    .Y(\$procmux$2998_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$2999_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$2999_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3001_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3001_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$3006  (
    .A(1'h0),
    .B({ \$csr_save_if_o$132 , 1'h1 }),
    .S({ \$procmux$3009_CMP , \$procmux$3007_CMP  }),
    .Y(\$procmux$3006_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3007_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3007_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3009_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3009_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$3013  (
    .A(1'h0),
    .B({ 1'h1, \$debug_csr_save_o$139  }),
    .S({ \$procmux$3016_CMP , \$procmux$3014_CMP  }),
    .Y(\$procmux$3013_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3014_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3014_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3016_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3016_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd3)
  ) \$procmux$3020  (
    .A(3'h1),
    .B({ \$debug_cause_o$135 , \$debug_cause_o$138  }),
    .S({ \$procmux$3023_CMP , \$procmux$3021_CMP  }),
    .Y(\$procmux$3020_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3021_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3021_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3023_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3023_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd7)
  ) \$procmux$3026  (
    .A(7'h00),
    .B({ \$exc_cause_o$131 , \$exc_cause_o$185  }),
    .S({ \$procmux$3029_CMP , \$procmux$3027_CMP  }),
    .Y(\$procmux$3026_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3027_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3027_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3029_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3029_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$3032  (
    .A(2'h1),
    .B({ 4'ha, \$exc_pc_mux_o$184  }),
    .S({ \$procmux$3037_CMP , \$procmux$3035_CMP , \$procmux$3033_CMP  }),
    .Y(\$procmux$3032_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3033_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3033_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3035_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3035_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3037_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3037_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$3041  (
    .A(3'h0),
    .B({ 12'h292, \$pc_mux_o$183  }),
    .S({ \$procmux$3050_CMP , \$procmux$3048_CMP , \$procmux$3046_CMP , \$procmux$3044_CMP , \$procmux$3042_CMP  }),
    .Y(\$procmux$3041_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3042_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3042_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3044_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3044_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3046_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3046_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3048_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3048_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3050_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3050_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd1)
  ) \$procmux$3054  (
    .A(1'h0),
    .B({ 2'h3, \$pc_set_o$103 , \$pc_set_o$130 , 2'h3, \$pc_set_o$182  }),
    .S({ \$procmux$3066_CMP , \$procmux$3064_CMP , \$procmux$3063_CMP , \$procmux$3061_CMP , \$procmux$3059_CMP , \$procmux$3057_CMP , \$procmux$3055_CMP  }),
    .Y(\$procmux$3054_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3055_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3055_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3057_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3057_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3059_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3059_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3061_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3061_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3063_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3063_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:366.17-373.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3064_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h1),
    .Y(\$procmux$3064_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:357.14-365.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3066_CMP0  (
    .A(ctrl_fsm_cs),
    .Y(\$procmux$3066_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd1)
  ) \$procmux$3068  (
    .A(1'h0),
    .B(7'h7f),
    .S({ \$procmux$3076_CMP , \$procmux$3074_CMP , \$procmux$3073_CMP , \$procmux$3072_CMP , \$procmux$3071_CMP , \$procmux$3070_CMP , \$procmux$3069_CMP  }),
    .Y(\$procmux$3068_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3069_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3069_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3070_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3070_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3071_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3071_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3072_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3072_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3073_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3073_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3074_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$3074_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:366.17-373.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3076_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h1),
    .Y(\$procmux$3076_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3084  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3085_CMP ),
    .Y(\$procmux$3084_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3085_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3085_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$3094  (
    .A(1'h1),
    .B({ 1'h0, \$ctrl_busy_o$94  }),
    .S({ \$procmux$3096_CMP , \$procmux$3095_CMP  }),
    .Y(\$procmux$3094_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3095_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$3095_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:375.19-381.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3096_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h2),
    .Y(\$procmux$3096_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$3099  (
    .A(1'h0),
    .B({ 4'hf, \$flush_id$181  }),
    .S({ \$procmux$3107_CMP , \$procmux$3106_CMP , \$procmux$3104_CMP , \$procmux$3102_CMP , \$procmux$3100_CMP  }),
    .Y(\$procmux$3099_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3100_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3100_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3102_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3102_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3104_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3104_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3106_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$3106_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:375.19-381.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3107_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h2),
    .Y(\$procmux$3107_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3114  (
    .A(1'h0),
    .B(\$retain_id$101 ),
    .S(\$procmux$3115_CMP ),
    .Y(\$procmux$3114_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3115_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3115_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$3118  (
    .A(1'h0),
    .B({ 2'h3, \$halt_if$99 , \$halt_if$120 , 1'h1 }),
    .S({ \$procmux$3126_CMP , \$procmux$3125_CMP , \$procmux$3123_CMP , \$procmux$3121_CMP , \$procmux$3119_CMP  }),
    .Y(\$procmux$3118_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3119_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3119_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:425.15-484.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3121_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h5),
    .Y(\$procmux$3121_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:400.20-423.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3123_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h4),
    .Y(\$procmux$3123_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:383.14-398.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3125_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h3),
    .Y(\$procmux$3125_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:375.19-381.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3126_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h2),
    .Y(\$procmux$3126_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$3129  (
    .A(debug_mode_q),
    .B({ 2'h3, \$debug_mode_d$180  }),
    .S({ \$procmux$3134_CMP , \$procmux$3132_CMP , \$procmux$3130_CMP  }),
    .Y(\$procmux$3129_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3130_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3130_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:546.21-575.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3132_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h9),
    .Y(\$procmux$3132_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:519.21-544.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3134_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h8),
    .Y(\$procmux$3134_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$3137  (
    .A(nmi_mode_q),
    .B({ \$nmi_mode_d$129 , \$nmi_mode_d$179  }),
    .S({ \$procmux$3140_CMP , \$procmux$3138_CMP  }),
    .Y(\$procmux$3137_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:577.14-692.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3138_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h6),
    .Y(\$procmux$3138_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:486.18-517.10|rtl/cve2/cve2_controller.sv:356.5-698.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$3140_CMP0  (
    .A(ctrl_fsm_cs),
    .B(4'h7),
    .Y(\$procmux$3140_CMP )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3142  (
    .A(\$mfip_id$84 ),
    .B(4'h0),
    .S(\$procmux$3143_CMP ),
    .Y(\$procmux$3142_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3145  (
    .A(\$mfip_id$83 ),
    .B(4'h1),
    .S(\$procmux$3146_CMP ),
    .Y(\$procmux$3145_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3148  (
    .A(\$mfip_id$82 ),
    .B(4'h2),
    .S(\$procmux$3149_CMP ),
    .Y(\$procmux$3148_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3151  (
    .A(\$mfip_id$81 ),
    .B(4'h3),
    .S(\$procmux$3152_CMP ),
    .Y(\$procmux$3151_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3154  (
    .A(\$mfip_id$80 ),
    .B(4'h4),
    .S(\$procmux$3155_CMP ),
    .Y(\$procmux$3154_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3157  (
    .A(\$mfip_id$79 ),
    .B(4'h5),
    .S(\$procmux$3158_CMP ),
    .Y(\$procmux$3157_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3160  (
    .A(\$mfip_id$78 ),
    .B(4'h6),
    .S(\$procmux$3161_CMP ),
    .Y(\$procmux$3160_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3163  (
    .A(\$mfip_id$77 ),
    .B(4'h7),
    .S(\$procmux$3164_CMP ),
    .Y(\$procmux$3163_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3166  (
    .A(\$mfip_id$76 ),
    .B(4'h8),
    .S(\$procmux$3167_CMP ),
    .Y(\$procmux$3166_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3169  (
    .A(\$mfip_id$75 ),
    .B(4'h9),
    .S(\$procmux$3170_CMP ),
    .Y(\$procmux$3169_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3172  (
    .A(\$mfip_id$74 ),
    .B(4'ha),
    .S(\$procmux$3173_CMP ),
    .Y(\$procmux$3172_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3175  (
    .A(\$mfip_id$73 ),
    .B(4'hb),
    .S(\$procmux$3176_CMP ),
    .Y(\$procmux$3175_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3178  (
    .A(\$mfip_id$72 ),
    .B(4'hc),
    .S(\$procmux$3179_CMP ),
    .Y(\$procmux$3178_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3181  (
    .A(\$mfip_id$71 ),
    .B(4'hd),
    .S(\$procmux$3182_CMP ),
    .Y(\$procmux$3181_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3184  (
    .A(\$mfip_id$70 ),
    .B(4'he),
    .S(\$procmux$3185_CMP ),
    .Y(\$procmux$3184_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:306.9-306.26|rtl/cve2/cve2_controller.sv:305.7-307.10" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$3186  (
    .A(4'h0),
    .B(4'hf),
    .S(\$procmux$3187_CMP ),
    .Y(\$procmux$3186_Y )
  );
  /* src = "rtl/cve2/cve2_controller.sv:244.9-244.31|rtl/cve2/cve2_controller.sv:243.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3188  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3189_CMP ),
    .Y(\$procmux$3188_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:242.9-242.31|rtl/cve2/cve2_controller.sv:241.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3191  (
    .A(\$procmux$3188_Y ),
    .B(1'hx),
    .S(\$procmux$3192_CMP ),
    .Y(\$procmux$3191_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3194  (
    .A(\$procmux$3191_Y ),
    .B(1'hx),
    .S(\$procmux$3195_CMP ),
    .Y(\$procmux$3194_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3197  (
    .A(\$procmux$3194_Y ),
    .B(1'hx),
    .S(\$procmux$3198_CMP ),
    .Y(\$procmux$3197_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3200  (
    .A(\$procmux$3197_Y ),
    .B(1'hx),
    .S(\$procmux$3201_CMP ),
    .Y(\$procmux$3200_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3203  (
    .A(\$procmux$3200_Y ),
    .B(1'hx),
    .S(\$procmux$3204_CMP ),
    .Y(\$procmux$3203_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:242.9-242.31|rtl/cve2/cve2_controller.sv:241.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3207  (
    .A(\$load_err_prio$29 ),
    .B(1'h0),
    .S(\$procmux$3208_CMP ),
    .Y(\$procmux$3207_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3210  (
    .A(\$procmux$3207_Y ),
    .B(1'hx),
    .S(\$procmux$3211_CMP ),
    .Y(\$procmux$3210_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3213  (
    .A(\$procmux$3210_Y ),
    .B(1'hx),
    .S(\$procmux$3214_CMP ),
    .Y(\$procmux$3213_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3216  (
    .A(\$procmux$3213_Y ),
    .B(1'hx),
    .S(\$procmux$3217_CMP ),
    .Y(\$procmux$3216_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3219  (
    .A(\$procmux$3216_Y ),
    .B(1'hx),
    .S(\$procmux$3220_CMP ),
    .Y(\$procmux$3219_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:242.9-242.31|rtl/cve2/cve2_controller.sv:241.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3222  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3223_CMP ),
    .Y(\$procmux$3222_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3225  (
    .A(\$procmux$3222_Y ),
    .B(1'hx),
    .S(\$procmux$3226_CMP ),
    .Y(\$procmux$3225_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3228  (
    .A(\$procmux$3225_Y ),
    .B(1'hx),
    .S(\$procmux$3229_CMP ),
    .Y(\$procmux$3228_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3231  (
    .A(\$procmux$3228_Y ),
    .B(1'hx),
    .S(\$procmux$3232_CMP ),
    .Y(\$procmux$3231_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3234  (
    .A(\$procmux$3231_Y ),
    .B(1'hx),
    .S(\$procmux$3235_CMP ),
    .Y(\$procmux$3234_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3238  (
    .A(\$load_err_prio$31 ),
    .B(1'h0),
    .S(\$procmux$3239_CMP ),
    .Y(\$procmux$3238_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3241  (
    .A(\$procmux$3238_Y ),
    .B(1'hx),
    .S(\$procmux$3242_CMP ),
    .Y(\$procmux$3241_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3244  (
    .A(\$procmux$3241_Y ),
    .B(1'hx),
    .S(\$procmux$3245_CMP ),
    .Y(\$procmux$3244_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3247  (
    .A(\$procmux$3244_Y ),
    .B(1'hx),
    .S(\$procmux$3248_CMP ),
    .Y(\$procmux$3247_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3251  (
    .A(\$store_err_prio$30 ),
    .B(1'h0),
    .S(\$procmux$3252_CMP ),
    .Y(\$procmux$3251_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3254  (
    .A(\$procmux$3251_Y ),
    .B(1'hx),
    .S(\$procmux$3255_CMP ),
    .Y(\$procmux$3254_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3257  (
    .A(\$procmux$3254_Y ),
    .B(1'hx),
    .S(\$procmux$3258_CMP ),
    .Y(\$procmux$3257_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3260  (
    .A(\$procmux$3257_Y ),
    .B(1'hx),
    .S(\$procmux$3261_CMP ),
    .Y(\$procmux$3260_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:240.9-240.31|rtl/cve2/cve2_controller.sv:239.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3263  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3264_CMP ),
    .Y(\$procmux$3263_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3266  (
    .A(\$procmux$3263_Y ),
    .B(1'hx),
    .S(\$procmux$3267_CMP ),
    .Y(\$procmux$3266_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3269  (
    .A(\$procmux$3266_Y ),
    .B(1'hx),
    .S(\$procmux$3270_CMP ),
    .Y(\$procmux$3269_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3272  (
    .A(\$procmux$3269_Y ),
    .B(1'hx),
    .S(\$procmux$3273_CMP ),
    .Y(\$procmux$3272_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3276  (
    .A(\$load_err_prio$34 ),
    .B(1'h0),
    .S(\$procmux$3277_CMP ),
    .Y(\$procmux$3276_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3279  (
    .A(\$procmux$3276_Y ),
    .B(1'hx),
    .S(\$procmux$3280_CMP ),
    .Y(\$procmux$3279_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3282  (
    .A(\$procmux$3279_Y ),
    .B(1'hx),
    .S(\$procmux$3283_CMP ),
    .Y(\$procmux$3282_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3286  (
    .A(\$store_err_prio$33 ),
    .B(1'h0),
    .S(\$procmux$3287_CMP ),
    .Y(\$procmux$3286_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3289  (
    .A(\$procmux$3286_Y ),
    .B(1'hx),
    .S(\$procmux$3290_CMP ),
    .Y(\$procmux$3289_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3292  (
    .A(\$procmux$3289_Y ),
    .B(1'hx),
    .S(\$procmux$3293_CMP ),
    .Y(\$procmux$3292_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3296  (
    .A(\$ebrk_insn_prio$32 ),
    .B(1'h0),
    .S(\$procmux$3297_CMP ),
    .Y(\$procmux$3296_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3299  (
    .A(\$procmux$3296_Y ),
    .B(1'hx),
    .S(\$procmux$3300_CMP ),
    .Y(\$procmux$3299_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3302  (
    .A(\$procmux$3299_Y ),
    .B(1'hx),
    .S(\$procmux$3303_CMP ),
    .Y(\$procmux$3302_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:238.9-238.32|rtl/cve2/cve2_controller.sv:237.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3305  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3306_CMP ),
    .Y(\$procmux$3305_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3308  (
    .A(\$procmux$3305_Y ),
    .B(1'hx),
    .S(\$procmux$3309_CMP ),
    .Y(\$procmux$3308_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3311  (
    .A(\$procmux$3308_Y ),
    .B(1'hx),
    .S(\$procmux$3312_CMP ),
    .Y(\$procmux$3311_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3315  (
    .A(\$load_err_prio$38 ),
    .B(1'h0),
    .S(\$procmux$3316_CMP ),
    .Y(\$procmux$3315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3318  (
    .A(\$procmux$3315_Y ),
    .B(1'hx),
    .S(\$procmux$3319_CMP ),
    .Y(\$procmux$3318_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3322  (
    .A(\$store_err_prio$37 ),
    .B(1'h0),
    .S(\$procmux$3323_CMP ),
    .Y(\$procmux$3322_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3325  (
    .A(\$procmux$3322_Y ),
    .B(1'hx),
    .S(\$procmux$3326_CMP ),
    .Y(\$procmux$3325_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3329  (
    .A(\$ebrk_insn_prio$36 ),
    .B(1'h0),
    .S(\$procmux$3330_CMP ),
    .Y(\$procmux$3329_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3332  (
    .A(\$procmux$3329_Y ),
    .B(1'hx),
    .S(\$procmux$3333_CMP ),
    .Y(\$procmux$3332_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3336  (
    .A(\$ecall_insn_prio$35 ),
    .B(1'h0),
    .S(\$procmux$3337_CMP ),
    .Y(\$procmux$3336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3339  (
    .A(\$procmux$3336_Y ),
    .B(1'hx),
    .S(\$procmux$3340_CMP ),
    .Y(\$procmux$3339_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:236.9-236.34|rtl/cve2/cve2_controller.sv:235.16-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3342  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3343_CMP ),
    .Y(\$procmux$3342_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3345  (
    .A(\$procmux$3342_Y ),
    .B(1'hx),
    .S(\$procmux$3346_CMP ),
    .Y(\$procmux$3345_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3349  (
    .A(\$load_err_prio$43 ),
    .B(1'h0),
    .S(\$procmux$3350_CMP ),
    .Y(\$procmux$3349_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3353  (
    .A(\$store_err_prio$42 ),
    .B(1'h0),
    .S(\$procmux$3354_CMP ),
    .Y(\$procmux$3353_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3357  (
    .A(\$ebrk_insn_prio$41 ),
    .B(1'h0),
    .S(\$procmux$3358_CMP ),
    .Y(\$procmux$3357_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3361  (
    .A(\$ecall_insn_prio$40 ),
    .B(1'h0),
    .S(\$procmux$3362_CMP ),
    .Y(\$procmux$3361_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3365  (
    .A(\$illegal_insn_prio$39 ),
    .B(1'h0),
    .S(\$procmux$3366_CMP ),
    .Y(\$procmux$3365_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_controller.sv:234.9-234.37|rtl/cve2/cve2_controller.sv:233.7-245.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3368  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3369_CMP ),
    .Y(\$procmux$3368_Y )
  );
  assign load_err_d = load_err_i;
  assign store_err_d = store_err_i;
  assign ecall_insn = \$0y ;
  assign mret_insn = \$1y ;
  assign dret_insn = \$2y ;
  assign wfi_insn = \$3y ;
  assign ebrk_insn = \$4y ;
  assign csr_pipe_flush = \$5y ;
  assign instr_fetch_err = \$6y ;
  assign illegal_dret = \$8y ;
  assign illegal_umode = \$12y ;
  assign illegal_insn_d = \$16y ;
  assign exc_req_d = \$21y ;
  assign exc_req_lsu = \$22y ;
  assign special_req_flush_only = \$23y ;
  assign special_req_pc_change = \$26y ;
  assign special_req = \$27y ;
  assign instr_fetch_err_prio = \$instr_fetch_err_prio$44 ;
  assign illegal_insn_prio = \$illegal_insn_prio$45 ;
  assign ecall_insn_prio = \$ecall_insn_prio$46 ;
  assign ebrk_insn_prio = \$ebrk_insn_prio$47 ;
  assign store_err_prio = \$store_err_prio$48 ;
  assign load_err_prio = \$load_err_prio$49 ;
  assign do_single_step_d = \$52y ;
  assign enter_debug_mode_prio_d = \$55y ;
  assign enter_debug_mode = \$58y ;
  assign ebreak_into_debug = \$62y ;
  assign handle_irq = \$68y ;
  assign mfip_id = \$mfip_id$85 ;
  assign unused_irq_timer = irqs_i[17];
  assign ctrl_fsm_ns = \$ctrl_fsm_ns$195 ;
  assign nmi_mode_d = \$nmi_mode_d$196 ;
  assign debug_mode_d = \$debug_mode_d$197 ;
  assign halt_if = \$halt_if$198 ;
  assign retain_id = \$retain_id$199 ;
  assign flush_id = \$flush_id$200 ;
  assign ctrl_busy_o = \$ctrl_busy_o$201 ;
  assign controller_run_o = \$controller_run_o$202 ;
  assign instr_req_o = \$instr_req_o$203 ;
  assign pc_set_o = \$pc_set_o$204 ;
  assign pc_mux_o = \$pc_mux_o$205 ;
  assign exc_pc_mux_o = \$exc_pc_mux_o$206 ;
  assign exc_cause_o = \$exc_cause_o$207 ;
  assign debug_cause_o = \$debug_cause_o$208 ;
  assign debug_csr_save_o = \$debug_csr_save_o$209 ;
  assign csr_save_if_o = \$csr_save_if_o$210 ;
  assign csr_save_id_o = \$csr_save_id_o$211 ;
  assign csr_restore_mret_id_o = \$csr_restore_mret_id_o$212 ;
  assign csr_restore_dret_id_o = \$csr_restore_dret_id_o$213 ;
  assign csr_save_cause_o = \$csr_save_cause_o$214 ;
  assign csr_mtval_o = \$csr_mtval_o$215 ;
  assign perf_jump_o = \$perf_jump_o$216 ;
  assign perf_tbranch_o = \$perf_tbranch_o$217 ;
  assign flush_id_o = flush_id;
  assign debug_mode_o = debug_mode_q;
  assign nmi_mode_o = nmi_mode_q;
  assign stall = stall_id_i;
  assign id_in_ready_o = \$222y ;
  assign instr_valid_clear_o = \$225y ;
  assign \$procmux$2123_CMP  = \$193y ;
  assign \$ctrl_fsm_ns$194  = \$procmux$2124_Y ;
  assign \$procmux$2128_CMP  = wfi_insn;
  assign \$procmux$2131_CMP  = dret_insn;
  assign \$procmux$2134_CMP  = mret_insn;
  assign \$procmux$2137_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$165  = \$procmux$2138_Y ;
  assign \$procmux$2143_CMP  = dret_insn;
  assign \$procmux$2146_CMP  = mret_insn;
  assign \$procmux$2149_CMP  = \$143y ;
  assign \$csr_restore_dret_id_o$170  = \$procmux$2150_Y ;
  assign \$procmux$2155_CMP  = dret_insn;
  assign \$procmux$2158_CMP  = mret_insn;
  assign \$procmux$2161_CMP  = \$143y ;
  assign \$pc_mux_o$169  = \$procmux$2162_Y ;
  assign \$procmux$2167_CMP  = dret_insn;
  assign \$procmux$2170_CMP  = mret_insn;
  assign \$procmux$2173_CMP  = \$143y ;
  assign \$pc_set_o$168  = \$procmux$2174_Y ;
  assign \$procmux$2179_CMP  = dret_insn;
  assign \$procmux$2182_CMP  = mret_insn;
  assign \$procmux$2185_CMP  = \$143y ;
  assign \$debug_mode_d$167  = \$procmux$2186_Y ;
  assign \$procmux$2192_CMP  = dret_insn;
  assign \$procmux$2195_CMP  = mret_insn;
  assign \$procmux$2198_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$166  = \$procmux$2199_Y ;
  assign \$procmux$2206_CMP  = mret_insn;
  assign \$procmux$2209_CMP  = \$143y ;
  assign \$pc_mux_o$175  = \$procmux$2210_Y ;
  assign \$procmux$2217_CMP  = mret_insn;
  assign \$procmux$2220_CMP  = \$143y ;
  assign \$pc_set_o$174  = \$procmux$2221_Y ;
  assign \$procmux$2226_CMP  = nmi_mode_q;
  assign \$procmux$2228_CMP  = mret_insn;
  assign \$procmux$2231_CMP  = \$143y ;
  assign \$nmi_mode_d$164  = \$procmux$2232_Y ;
  assign \$procmux$2238_CMP  = mret_insn;
  assign \$procmux$2241_CMP  = \$143y ;
  assign \$csr_restore_dret_id_o$177  = \$procmux$2242_Y ;
  assign \$procmux$2248_CMP  = mret_insn;
  assign \$procmux$2251_CMP  = \$143y ;
  assign \$csr_restore_mret_id_o$176  = \$procmux$2252_Y ;
  assign \$procmux$2258_CMP  = mret_insn;
  assign \$procmux$2261_CMP  = \$143y ;
  assign \$debug_mode_d$173  = \$procmux$2262_Y ;
  assign \$procmux$2268_CMP  = mret_insn;
  assign \$procmux$2271_CMP  = \$143y ;
  assign \$nmi_mode_d$172  = \$procmux$2272_Y ;
  assign \$procmux$2278_CMP  = mret_insn;
  assign \$procmux$2281_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$171  = \$procmux$2282_Y ;
  assign \$procmux$2289_CMP  = \$143y ;
  assign \$pc_mux_o$183  = \$procmux$2290_Y ;
  assign \$procmux$2297_CMP  = \$143y ;
  assign \$pc_set_o$182  = \$procmux$2298_Y ;
  assign \$procmux$2305_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$178  = \$procmux$2306_Y ;
  assign \$procmux$2315_CMP  = \$150y ;
  assign \$procmux$2319_CMP  = \$143y ;
  assign \$csr_save_cause_o$156  = \$procmux$2320_Y ;
  assign \$procmux$2332_CMP  = \$143y ;
  assign \$csr_save_id_o$155  = \$procmux$2333_Y ;
  assign \$procmux$2342_CMP  = \$150y ;
  assign \$procmux$2346_CMP  = \$143y ;
  assign \$exc_cause_o$154  = \$procmux$2347_Y ;
  assign \$procmux$2356_CMP  = \$150y ;
  assign \$procmux$2360_CMP  = \$143y ;
  assign \$pc_set_o$153  = \$procmux$2361_Y ;
  assign \$procmux$2370_CMP  = \$150y ;
  assign \$procmux$2374_CMP  = \$143y ;
  assign \$flush_id$152  = \$procmux$2375_Y ;
  assign \$procmux$2384_CMP  = \$150y ;
  assign \$procmux$2388_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$151  = \$procmux$2389_Y ;
  assign \$procmux$2400_CMP  = \$143y ;
  assign \$csr_mtval_o$163  = \$procmux$2401_Y ;
  assign \$procmux$2412_CMP  = \$143y ;
  assign \$csr_save_cause_o$162  = \$procmux$2413_Y ;
  assign \$procmux$2424_CMP  = \$143y ;
  assign \$csr_save_id_o$161  = \$procmux$2425_Y ;
  assign \$procmux$2439_CMP  = \$143y ;
  assign \$exc_cause_o$160  = \$procmux$2440_Y ;
  assign \$procmux$2451_CMP  = \$143y ;
  assign \$pc_set_o$159  = \$procmux$2452_Y ;
  assign \$procmux$2463_CMP  = \$143y ;
  assign \$flush_id$158  = \$procmux$2464_Y ;
  assign \$procmux$2475_CMP  = \$143y ;
  assign \$ctrl_fsm_ns$157  = \$procmux$2476_Y ;
  assign \$procmux$2482_CMP  = \$143y ;
  assign \$csr_mtval_o$190  = \$procmux$2483_Y ;
  assign \$procmux$2489_CMP  = \$143y ;
  assign \$csr_save_cause_o$189  = \$procmux$2490_Y ;
  assign \$procmux$2496_CMP  = \$143y ;
  assign \$csr_restore_dret_id_o$188  = \$procmux$2497_Y ;
  assign \$procmux$2503_CMP  = \$143y ;
  assign \$csr_restore_mret_id_o$187  = \$procmux$2504_Y ;
  assign \$procmux$2510_CMP  = \$143y ;
  assign \$csr_save_id_o$186  = \$procmux$2511_Y ;
  assign \$procmux$2517_CMP  = \$143y ;
  assign \$exc_cause_o$185  = \$procmux$2518_Y ;
  assign \$procmux$2524_CMP  = \$143y ;
  assign \$exc_pc_mux_o$184  = \$procmux$2525_Y ;
  assign \$procmux$2531_CMP  = \$143y ;
  assign \$flush_id$181  = \$procmux$2532_Y ;
  assign \$procmux$2538_CMP  = \$143y ;
  assign \$debug_mode_d$180  = \$procmux$2539_Y ;
  assign \$procmux$2545_CMP  = \$143y ;
  assign \$nmi_mode_d$179  = \$procmux$2546_Y ;
  assign \$procmux$2551_CMP  = \$137y ;
  assign \$csr_save_cause_o$141  = \$procmux$2552_Y ;
  assign \$procmux$2557_CMP  = \$137y ;
  assign \$csr_save_id_o$140  = \$procmux$2558_Y ;
  assign \$procmux$2563_CMP  = \$137y ;
  assign \$debug_csr_save_o$139  = \$procmux$2564_Y ;
  assign \$debug_cause_o$138  = \$procmux$2569_Y ;
  assign \$procmux$2576_CMP  = debug_req_i;
  assign \$procmux$2579_CMP  = trigger_match_i;
  assign \$debug_cause_o$134  = \$procmux$2580_Y ;
  assign \$procmux$2588_CMP  = trigger_match_i;
  assign \$debug_cause_o$135  = \$procmux$2589_Y ;
  assign \$procmux$2597_CMP  = irqs_i[18];
  assign \$procmux$2600_CMP  = irqs_i[16];
  assign \$procmux$2603_CMP  = \$123y ;
  assign \$procmux$2606_CMP  = \$122y ;
  assign \$procmux$2608_CMP  = handle_irq;
  assign \$exc_cause_o$124  = \$procmux$2609_Y ;
  assign \$procmux$2618_CMP  = irqs_i[16];
  assign \$procmux$2621_CMP  = \$123y ;
  assign \$procmux$2624_CMP  = \$122y ;
  assign \$procmux$2626_CMP  = handle_irq;
  assign \$exc_cause_o$125  = \$procmux$2627_Y ;
  assign \$procmux$2636_CMP  = \$123y ;
  assign \$procmux$2639_CMP  = \$122y ;
  assign \$procmux$2641_CMP  = handle_irq;
  assign \$exc_cause_o$126  = \$procmux$2642_Y ;
  assign \$procmux$2651_CMP  = \$122y ;
  assign \$procmux$2653_CMP  = handle_irq;
  assign \$exc_cause_o$128  = \$procmux$2654_Y ;
  assign \$procmux$2662_CMP  = \$122y ;
  assign \$procmux$2664_CMP  = handle_irq;
  assign \$nmi_mode_d$127  = \$procmux$2665_Y ;
  assign \$procmux$2673_CMP  = handle_irq;
  assign \$csr_save_cause_o$133  = \$procmux$2674_Y ;
  assign \$procmux$2682_CMP  = handle_irq;
  assign \$csr_save_if_o$132  = \$procmux$2683_Y ;
  assign \$procmux$2691_CMP  = handle_irq;
  assign \$exc_cause_o$131  = \$procmux$2692_Y ;
  assign \$procmux$2700_CMP  = handle_irq;
  assign \$pc_set_o$130  = \$procmux$2701_Y ;
  assign \$procmux$2709_CMP  = handle_irq;
  assign \$nmi_mode_d$129  = \$procmux$2710_Y ;
  assign \$procmux$2718_CMP  = handle_irq;
  assign \$procmux$2721_CMP  = enter_debug_mode;
  assign \$procmux$2723_CMP  = \$114y ;
  assign \$halt_if$116  = \$procmux$2724_Y ;
  assign \$procmux$2732_CMP  = handle_irq;
  assign \$procmux$2735_CMP  = enter_debug_mode;
  assign \$procmux$2737_CMP  = \$114y ;
  assign \$ctrl_fsm_ns$115  = \$procmux$2738_Y ;
  assign \$procmux$2748_CMP  = enter_debug_mode;
  assign \$procmux$2750_CMP  = \$114y ;
  assign \$halt_if$118  = \$procmux$2751_Y ;
  assign \$procmux$2761_CMP  = enter_debug_mode;
  assign \$procmux$2763_CMP  = \$114y ;
  assign \$ctrl_fsm_ns$117  = \$procmux$2764_Y ;
  assign \$procmux$2774_CMP  = \$114y ;
  assign \$halt_if$120  = \$procmux$2775_Y ;
  assign \$procmux$2785_CMP  = \$114y ;
  assign \$ctrl_fsm_ns$119  = \$procmux$2786_Y ;
  assign \$procmux$2795_CMP  = \$108y ;
  assign \$halt_if$109  = \$procmux$2796_Y ;
  assign \$procmux$2805_CMP  = \$102y ;
  assign \$perf_tbranch_o$105  = \$procmux$2806_Y ;
  assign \$procmux$2815_CMP  = \$102y ;
  assign \$perf_jump_o$104  = \$procmux$2816_Y ;
  assign \$procmux$2825_CMP  = \$102y ;
  assign \$pc_set_o$103  = \$procmux$2826_Y ;
  assign \$procmux$2834_CMP  = special_req;
  assign \$retain_id$101  = \$procmux$2835_Y ;
  assign \$procmux$2843_CMP  = special_req;
  assign \$ctrl_fsm_ns$100  = \$procmux$2844_Y ;
  assign \$procmux$2854_CMP  = enter_debug_mode;
  assign \$halt_if$99  = \$procmux$2855_Y ;
  assign \$procmux$2865_CMP  = enter_debug_mode;
  assign \$ctrl_fsm_ns$98  = \$procmux$2866_Y ;
  assign \$procmux$2876_CMP  = handle_irq;
  assign \$halt_if$97  = \$procmux$2877_Y ;
  assign \$procmux$2887_CMP  = handle_irq;
  assign \$ctrl_fsm_ns$96  = \$procmux$2888_Y ;
  assign \$procmux$2897_CMP  = id_in_ready_o;
  assign \$ctrl_fsm_ns$95  = \$procmux$2898_Y ;
  assign \$procmux$2909_CMP  = \$92y ;
  assign \$ctrl_busy_o$94  = \$procmux$2910_Y ;
  assign \$procmux$2921_CMP  = \$92y ;
  assign \$ctrl_fsm_ns$93  = \$procmux$2922_Y ;
  assign \$ctrl_fsm_ns$195  = \$procmux$2926_Y ;
  assign \$procmux$2955_CMP  = \$87y ;
  assign \$ctrl_fsm_ns$88  = \$procmux$2956_Y ;
  assign \$perf_tbranch_o$217  = \$procmux$2964_Y ;
  assign \$perf_jump_o$216  = \$procmux$2972_Y ;
  assign \$csr_mtval_o$215  = \$procmux$2976_Y ;
  assign \$csr_save_cause_o$214  = \$procmux$2980_Y ;
  assign \$csr_restore_dret_id_o$213  = \$procmux$2990_Y ;
  assign \$csr_restore_mret_id_o$212  = \$procmux$2994_Y ;
  assign \$csr_save_id_o$211  = \$procmux$2998_Y ;
  assign \$csr_save_if_o$210  = \$procmux$3006_Y ;
  assign \$debug_csr_save_o$209  = \$procmux$3013_Y ;
  assign \$debug_cause_o$208  = \$procmux$3020_Y ;
  assign \$exc_cause_o$207  = \$procmux$3026_Y ;
  assign \$exc_pc_mux_o$206  = \$procmux$3032_Y ;
  assign \$pc_mux_o$205  = \$procmux$3041_Y ;
  assign \$pc_set_o$204  = \$procmux$3054_Y ;
  assign \$instr_req_o$203  = \$procmux$3068_Y ;
  assign \$controller_run_o$202  = \$procmux$3084_Y ;
  assign \$ctrl_busy_o$201  = \$procmux$3094_Y ;
  assign \$flush_id$200  = \$procmux$3099_Y ;
  assign \$retain_id$199  = \$procmux$3114_Y ;
  assign \$halt_if$198  = \$procmux$3118_Y ;
  assign \$debug_mode_d$197  = \$procmux$3129_Y ;
  assign \$nmi_mode_d$196  = \$procmux$3137_Y ;
  assign \$procmux$3143_CMP  = irqs_i[0];
  assign \$mfip_id$85  = \$procmux$3142_Y ;
  assign \$procmux$3146_CMP  = irqs_i[1];
  assign \$mfip_id$84  = \$procmux$3145_Y ;
  assign \$procmux$3149_CMP  = irqs_i[2];
  assign \$mfip_id$83  = \$procmux$3148_Y ;
  assign \$procmux$3152_CMP  = irqs_i[3];
  assign \$mfip_id$82  = \$procmux$3151_Y ;
  assign \$procmux$3155_CMP  = irqs_i[4];
  assign \$mfip_id$81  = \$procmux$3154_Y ;
  assign \$procmux$3158_CMP  = irqs_i[5];
  assign \$mfip_id$80  = \$procmux$3157_Y ;
  assign \$procmux$3161_CMP  = irqs_i[6];
  assign \$mfip_id$79  = \$procmux$3160_Y ;
  assign \$procmux$3164_CMP  = irqs_i[7];
  assign \$mfip_id$78  = \$procmux$3163_Y ;
  assign \$procmux$3167_CMP  = irqs_i[8];
  assign \$mfip_id$77  = \$procmux$3166_Y ;
  assign \$procmux$3170_CMP  = irqs_i[9];
  assign \$mfip_id$76  = \$procmux$3169_Y ;
  assign \$procmux$3173_CMP  = irqs_i[10];
  assign \$mfip_id$75  = \$procmux$3172_Y ;
  assign \$procmux$3176_CMP  = irqs_i[11];
  assign \$mfip_id$74  = \$procmux$3175_Y ;
  assign \$procmux$3179_CMP  = irqs_i[12];
  assign \$mfip_id$73  = \$procmux$3178_Y ;
  assign \$procmux$3182_CMP  = irqs_i[13];
  assign \$mfip_id$72  = \$procmux$3181_Y ;
  assign \$procmux$3185_CMP  = irqs_i[14];
  assign \$mfip_id$71  = \$procmux$3184_Y ;
  assign \$procmux$3187_CMP  = irqs_i[15];
  assign \$mfip_id$70  = \$procmux$3186_Y ;
  assign \$procmux$3189_CMP  = load_err_q;
  assign \$procmux$3192_CMP  = store_err_q;
  assign \$procmux$3195_CMP  = ebrk_insn;
  assign \$procmux$3198_CMP  = ecall_insn;
  assign \$procmux$3201_CMP  = illegal_insn_q;
  assign \$procmux$3204_CMP  = instr_fetch_err;
  assign \$load_err_prio$29  = \$procmux$3203_Y ;
  assign \$procmux$3208_CMP  = store_err_q;
  assign \$procmux$3211_CMP  = ebrk_insn;
  assign \$procmux$3214_CMP  = ecall_insn;
  assign \$procmux$3217_CMP  = illegal_insn_q;
  assign \$procmux$3220_CMP  = instr_fetch_err;
  assign \$load_err_prio$31  = \$procmux$3219_Y ;
  assign \$procmux$3223_CMP  = store_err_q;
  assign \$procmux$3226_CMP  = ebrk_insn;
  assign \$procmux$3229_CMP  = ecall_insn;
  assign \$procmux$3232_CMP  = illegal_insn_q;
  assign \$procmux$3235_CMP  = instr_fetch_err;
  assign \$store_err_prio$30  = \$procmux$3234_Y ;
  assign \$procmux$3239_CMP  = ebrk_insn;
  assign \$procmux$3242_CMP  = ecall_insn;
  assign \$procmux$3245_CMP  = illegal_insn_q;
  assign \$procmux$3248_CMP  = instr_fetch_err;
  assign \$load_err_prio$34  = \$procmux$3247_Y ;
  assign \$procmux$3252_CMP  = ebrk_insn;
  assign \$procmux$3255_CMP  = ecall_insn;
  assign \$procmux$3258_CMP  = illegal_insn_q;
  assign \$procmux$3261_CMP  = instr_fetch_err;
  assign \$store_err_prio$33  = \$procmux$3260_Y ;
  assign \$procmux$3264_CMP  = ebrk_insn;
  assign \$procmux$3267_CMP  = ecall_insn;
  assign \$procmux$3270_CMP  = illegal_insn_q;
  assign \$procmux$3273_CMP  = instr_fetch_err;
  assign \$ebrk_insn_prio$32  = \$procmux$3272_Y ;
  assign \$procmux$3277_CMP  = ecall_insn;
  assign \$procmux$3280_CMP  = illegal_insn_q;
  assign \$procmux$3283_CMP  = instr_fetch_err;
  assign \$load_err_prio$38  = \$procmux$3282_Y ;
  assign \$procmux$3287_CMP  = ecall_insn;
  assign \$procmux$3290_CMP  = illegal_insn_q;
  assign \$procmux$3293_CMP  = instr_fetch_err;
  assign \$store_err_prio$37  = \$procmux$3292_Y ;
  assign \$procmux$3297_CMP  = ecall_insn;
  assign \$procmux$3300_CMP  = illegal_insn_q;
  assign \$procmux$3303_CMP  = instr_fetch_err;
  assign \$ebrk_insn_prio$36  = \$procmux$3302_Y ;
  assign \$procmux$3306_CMP  = ecall_insn;
  assign \$procmux$3309_CMP  = illegal_insn_q;
  assign \$procmux$3312_CMP  = instr_fetch_err;
  assign \$ecall_insn_prio$35  = \$procmux$3311_Y ;
  assign \$procmux$3316_CMP  = illegal_insn_q;
  assign \$procmux$3319_CMP  = instr_fetch_err;
  assign \$load_err_prio$43  = \$procmux$3318_Y ;
  assign \$procmux$3323_CMP  = illegal_insn_q;
  assign \$procmux$3326_CMP  = instr_fetch_err;
  assign \$store_err_prio$42  = \$procmux$3325_Y ;
  assign \$procmux$3330_CMP  = illegal_insn_q;
  assign \$procmux$3333_CMP  = instr_fetch_err;
  assign \$ebrk_insn_prio$41  = \$procmux$3332_Y ;
  assign \$procmux$3337_CMP  = illegal_insn_q;
  assign \$procmux$3340_CMP  = instr_fetch_err;
  assign \$ecall_insn_prio$40  = \$procmux$3339_Y ;
  assign \$procmux$3343_CMP  = illegal_insn_q;
  assign \$procmux$3346_CMP  = instr_fetch_err;
  assign \$illegal_insn_prio$39  = \$procmux$3345_Y ;
  assign \$procmux$3350_CMP  = instr_fetch_err;
  assign \$load_err_prio$49  = \$procmux$3349_Y ;
  assign \$procmux$3354_CMP  = instr_fetch_err;
  assign \$store_err_prio$48  = \$procmux$3353_Y ;
  assign \$procmux$3358_CMP  = instr_fetch_err;
  assign \$ebrk_insn_prio$47  = \$procmux$3357_Y ;
  assign \$procmux$3362_CMP  = instr_fetch_err;
  assign \$ecall_insn_prio$46  = \$procmux$3361_Y ;
  assign \$procmux$3366_CMP  = instr_fetch_err;
  assign \$illegal_insn_prio$45  = \$procmux$3365_Y ;
  assign \$procmux$3369_CMP  = instr_fetch_err;
  assign \$instr_fetch_err_prio$44  = \$procmux$3368_Y ;
  assign \$87y  = fetch_enable_i;
  assign \$228y  = rst_ni;
  assign \$procmux$2372_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2461_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2386_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2473_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2358_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2449_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2317_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2330_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2344_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2395_CMP  = \$procmux$3349_Y ;
  assign \$procmux$2396_CMP  = \$procmux$3353_Y ;
  assign \$procmux$2397_CMP  = \$procmux$3365_Y ;
  assign \$procmux$2398_CMP  = \$procmux$3368_Y ;
  assign \$procmux$2410_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2422_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2431_CMP  = \$procmux$3349_Y ;
  assign \$procmux$2432_CMP  = \$procmux$3353_Y ;
  assign \$procmux$2434_CMP  = \$procmux$3357_Y ;
  assign \$procmux$2435_CMP  = \$procmux$3361_Y ;
  assign \$procmux$2436_CMP  = \$procmux$3365_Y ;
  assign \$procmux$2437_CMP  = \$procmux$3368_Y ;
endmodule

/* src = "rtl/cve2/cve2_core.sv:15.8" */
module \cve2_core$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex (clk_i, rst_ni, core_busy_o, boot_addr_i, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_addr_o, instr_rdata_i, instr_err_i, data_req_o, data_gnt_i, data_rvalid_i, data_we_o, data_be_o, data_addr_o, data_wdata_o, data_rdata_i, data_err_i, debug_req_i, fetch_enable_i
, test_en_i, hart_id_i, irq_software_i, irq_timer_i, irq_external_i, irq_fast_i, irq_nm_i, irq_pending_o, crash_dump_o);
  wire \$0y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire [11:0] \$7y ;
  /* src = "rtl/cve2/cve2_core.sv:184.16" */
  wire [31:0] alu_adder_result_ex;
  /* src = "rtl/cve2/cve2_core.sv:179.16" */
  wire [31:0] alu_operand_a_ex;
  /* src = "rtl/cve2/cve2_core.sv:180.16" */
  wire [31:0] alu_operand_b_ex;
  /* src = "rtl/cve2/cve2_core.sv:182.16" */
  wire [31:0] alu_operand_c_ex;
  /* src = "rtl/cve2/cve2_core.sv:178.16" */
  wire [6:0] alu_operator_ex;
  /* src = "rtl/cve2/cve2_core.sv:36.40" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "rtl/cve2/cve2_core.sv:146.16" */
  wire branch_decision;
  /* src = "rtl/cve2/cve2_core.sv:145.16" */
  wire [31:0] branch_target_ex;
  /* src = "rtl/cve2/cve2_core.sv:30.40" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_core.sv:106.40" */
  output core_busy_o;
  wire core_busy_o;
  /* src = "rtl/cve2/cve2_core.sv:67.40" */
  output [127:0] crash_dump_o;
  wire [127:0] crash_dump_o;
  /* src = "rtl/cve2/cve2_core.sv:198.16" */
  wire csr_access;
  /* src = "rtl/cve2/cve2_core.sv:201.16" */
  wire [11:0] csr_addr;
  /* src = "rtl/cve2/cve2_core.sv:233.26" */
  wire [31:0] csr_depc;
  /* src = "rtl/cve2/cve2_core.sv:233.16" */
  wire [31:0] csr_mepc;
  /* src = "rtl/cve2/cve2_core.sv:232.16" */
  wire csr_mstatus_mie;
  /* src = "rtl/cve2/cve2_core.sv:250.16" */
  wire csr_mstatus_tw;
  /* src = "rtl/cve2/cve2_core.sv:249.16" */
  wire [31:0] csr_mtval;
  /* src = "rtl/cve2/cve2_core.sv:248.16" */
  wire [31:0] csr_mtvec;
  /* src = "rtl/cve2/cve2_core.sv:247.16" */
  wire csr_mtvec_init;
  /* src = "rtl/cve2/cve2_core.sv:199.16" */
  wire [1:0] csr_op;
  /* src = "rtl/cve2/cve2_core.sv:200.16" */
  wire csr_op_en;
  /* src = "rtl/cve2/cve2_core.sv:236.17" */
  wire [135:0] csr_pmp_addr;
  /* src = "rtl/cve2/cve2_core.sv:237.17" */
  wire [23:0] csr_pmp_cfg;
  /* src = "rtl/cve2/cve2_core.sv:238.17" */
  wire [2:0] csr_pmp_mseccfg;
  /* src = "rtl/cve2/cve2_core.sv:202.16" */
  wire [31:0] csr_rdata;
  /* src = "rtl/cve2/cve2_core.sv:245.16" */
  wire csr_restore_dret_id;
  /* src = "rtl/cve2/cve2_core.sv:244.16" */
  wire csr_restore_mret_id;
  /* src = "rtl/cve2/cve2_core.sv:246.16" */
  wire csr_save_cause;
  /* src = "rtl/cve2/cve2_core.sv:243.16" */
  wire csr_save_id;
  /* src = "rtl/cve2/cve2_core.sv:242.16" */
  wire csr_save_if;
  /* src = "rtl/cve2/cve2_core.sv:203.16" */
  wire [31:0] csr_wdata;
  /* src = "rtl/cve2/cve2_core.sv:149.16" */
  wire ctrl_busy;
  /* src = "rtl/cve2/cve2_core.sv:52.40" */
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  /* src = "rtl/cve2/cve2_core.sv:51.40" */
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  /* src = "rtl/cve2/cve2_core.sv:55.40" */
  input data_err_i;
  wire data_err_i;
  /* src = "rtl/cve2/cve2_core.sv:48.40" */
  input data_gnt_i;
  wire data_gnt_i;
  /* src = "rtl/cve2/cve2_core.sv:54.40" */
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  /* src = "rtl/cve2/cve2_core.sv:47.40" */
  output data_req_o;
  wire data_req_o;
  /* src = "rtl/cve2/cve2_core.sv:240.17" */
  wire data_req_out;
  /* src = "rtl/cve2/cve2_core.sv:49.40" */
  input data_rvalid_i;
  wire data_rvalid_i;
  /* src = "rtl/cve2/cve2_core.sv:53.40" */
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  /* src = "rtl/cve2/cve2_core.sv:50.40" */
  output data_we_o;
  wire data_we_o;
  /* src = "rtl/cve2/cve2_core.sv:256.16" */
  wire [2:0] debug_cause;
  /* src = "rtl/cve2/cve2_core.sv:257.16" */
  wire debug_csr_save;
  /* src = "rtl/cve2/cve2_core.sv:259.16" */
  wire debug_ebreakm;
  /* src = "rtl/cve2/cve2_core.sv:260.16" */
  wire debug_ebreaku;
  /* src = "rtl/cve2/cve2_core.sv:255.16" */
  wire debug_mode;
  /* src = "rtl/cve2/cve2_core.sv:66.40" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "rtl/cve2/cve2_core.sv:258.16" */
  wire debug_single_step;
  /* src = "rtl/cve2/cve2_core.sv:189.16" */
  wire div_en_ex;
  /* src = "rtl/cve2/cve2_core.sv:191.16" */
  wire div_sel_ex;
  /* src = "rtl/cve2/cve2_core.sv:227.16" */
  wire en_wb;
  /* src = "rtl/cve2/cve2_core.sv:217.16" */
  wire ex_valid;
  /* src = "rtl/cve2/cve2_core.sv:135.16" */
  wire [6:0] exc_cause;
  /* src = "rtl/cve2/cve2_core.sv:134.16" */
  wire [1:0] exc_pc_mux_id;
  /* src = "rtl/cve2/cve2_core.sv:105.40" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "rtl/cve2/cve2_core.sv:807.18" */
  wire [135:0] \g_no_pmp.unused_csr_pmp_addr ;
  /* src = "rtl/cve2/cve2_core.sv:808.18" */
  wire [23:0] \g_no_pmp.unused_csr_pmp_cfg ;
  /* src = "rtl/cve2/cve2_core.sv:809.19" */
  wire [2:0] \g_no_pmp.unused_csr_pmp_mseccfg ;
  /* src = "rtl/cve2/cve2_core.sv:806.16" */
  wire [1:0] \g_no_pmp.unused_priv_lvl_ls ;
  /* src = "rtl/cve2/cve2_core.sv:35.40" */
  input [31:0] hart_id_i;
  wire [31:0] hart_id_i;
  /* src = "rtl/cve2/cve2_core.sv:216.16" */
  wire id_in_ready;
  /* src = "rtl/cve2/cve2_core.sv:150.16" */
  wire if_busy;
  /* src = "rtl/cve2/cve2_core.sv:123.16" */
  wire illegal_c_insn_id;
  /* src = "rtl/cve2/cve2_core.sv:204.16" */
  wire illegal_csr_insn_id;
  /* src = "rtl/cve2/cve2_core.sv:280.16" */
  wire illegal_insn_id;
  /* src = "rtl/cve2/cve2_core.sv:126.16" */
  wire [67:0] imd_val_d_ex;
  /* src = "rtl/cve2/cve2_core.sv:127.16" */
  wire [67:0] imd_val_q_ex;
  /* src = "rtl/cve2/cve2_core.sv:128.16" */
  wire [1:0] imd_val_we_ex;
  /* src = "rtl/cve2/cve2_core.sv:42.40" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "rtl/cve2/cve2_core.sv:44.40" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "rtl/cve2/cve2_core.sv:121.16" */
  wire instr_fetch_err;
  /* src = "rtl/cve2/cve2_core.sv:122.16" */
  wire instr_fetch_err_plus2;
  /* src = "rtl/cve2/cve2_core.sv:130.16" */
  wire instr_first_cycle_id;
  /* src = "rtl/cve2/cve2_core.sv:40.40" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "rtl/cve2/cve2_core.sv:265.16" */
  wire instr_id_done;
  /* src = "rtl/cve2/cve2_core.sv:119.16" */
  wire instr_is_compressed_id;
  /* src = "rtl/cve2/cve2_core.sv:114.16" */
  wire instr_new_id;
  /* src = "rtl/cve2/cve2_core.sv:120.16" */
  wire instr_perf_count_id;
  /* src = "rtl/cve2/cve2_core.sv:116.16" */
  wire [31:0] instr_rdata_alu_id;
  /* src = "rtl/cve2/cve2_core.sv:118.16" */
  wire [15:0] instr_rdata_c_id;
  /* src = "rtl/cve2/cve2_core.sv:43.40" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/cve2/cve2_core.sv:115.16" */
  wire [31:0] instr_rdata_id;
  /* src = "rtl/cve2/cve2_core.sv:224.16" */
  wire instr_req_gated;
  /* src = "rtl/cve2/cve2_core.sv:223.16" */
  wire instr_req_int;
  /* src = "rtl/cve2/cve2_core.sv:39.40" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/cve2/cve2_core.sv:41.40" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "rtl/cve2/cve2_core.sv:131.16" */
  wire instr_valid_clear;
  /* src = "rtl/cve2/cve2_core.sv:113.16" */
  wire instr_valid_id;
  /* src = "rtl/cve2/cve2_core.sv:60.40" */
  input irq_external_i;
  wire irq_external_i;
  /* src = "rtl/cve2/cve2_core.sv:61.40" */
  input [15:0] irq_fast_i;
  wire [15:0] irq_fast_i;
  /* src = "rtl/cve2/cve2_core.sv:62.40" */
  input irq_nm_i;
  wire irq_nm_i;
  /* src = "rtl/cve2/cve2_core.sv:63.40" */
  output irq_pending_o;
  wire irq_pending_o;
  /* src = "rtl/cve2/cve2_core.sv:58.40" */
  input irq_software_i;
  wire irq_software_i;
  /* src = "rtl/cve2/cve2_core.sv:59.40" */
  input irq_timer_i;
  wire irq_timer_i;
  /* src = "rtl/cve2/cve2_core.sv:231.16" */
  wire [18:0] irqs;
  /* src = "rtl/cve2/cve2_core.sv:141.16" */
  wire lsu_addr_incr_req;
  /* src = "rtl/cve2/cve2_core.sv:142.16" */
  wire [31:0] lsu_addr_last;
  /* src = "rtl/cve2/cve2_core.sv:151.16" */
  wire lsu_busy;
  /* src = "rtl/cve2/cve2_core.sv:137.16" */
  wire lsu_load_err;
  /* src = "rtl/cve2/cve2_core.sv:212.16" */
  wire lsu_req;
  /* src = "rtl/cve2/cve2_core.sv:220.16" */
  wire lsu_resp_err;
  /* src = "rtl/cve2/cve2_core.sv:219.16" */
  wire lsu_resp_valid;
  /* src = "rtl/cve2/cve2_core.sv:211.16" */
  wire lsu_sign_ext;
  /* src = "rtl/cve2/cve2_core.sv:138.16" */
  wire lsu_store_err;
  /* src = "rtl/cve2/cve2_core.sv:210.16" */
  wire [1:0] lsu_type;
  /* src = "rtl/cve2/cve2_core.sv:213.16" */
  wire [31:0] lsu_wdata;
  /* src = "rtl/cve2/cve2_core.sv:209.16" */
  wire lsu_we;
  /* src = "rtl/cve2/cve2_core.sv:188.16" */
  wire mult_en_ex;
  /* src = "rtl/cve2/cve2_core.sv:190.16" */
  wire mult_sel_ex;
  /* src = "rtl/cve2/cve2_core.sv:194.16" */
  wire [31:0] multdiv_operand_a_ex;
  /* src = "rtl/cve2/cve2_core.sv:195.16" */
  wire [31:0] multdiv_operand_b_ex;
  /* src = "rtl/cve2/cve2_core.sv:192.16" */
  wire [1:0] multdiv_operator_ex;
  /* src = "rtl/cve2/cve2_core.sv:193.16" */
  wire [1:0] multdiv_signed_mode_ex;
  /* src = "rtl/cve2/cve2_core.sv:230.16" */
  wire nmi_mode;
  /* src = "rtl/cve2/cve2_core.sv:125.16" */
  wire [31:0] pc_id;
  /* src = "rtl/cve2/cve2_core.sv:124.16" */
  wire [31:0] pc_if;
  /* src = "rtl/cve2/cve2_core.sv:133.16" */
  wire [2:0] pc_mux_id;
  /* src = "rtl/cve2/cve2_core.sv:132.16" */
  wire pc_set;
  /* src = "rtl/cve2/cve2_core.sv:274.16" */
  wire perf_branch;
  /* src = "rtl/cve2/cve2_core.sv:272.16" */
  wire perf_div_wait;
  /* src = "rtl/cve2/cve2_core.sv:270.16" */
  wire perf_dside_wait;
  /* src = "rtl/cve2/cve2_core.sv:268.16" */
  wire perf_instr_ret_compressed_wb;
  /* src = "rtl/cve2/cve2_core.sv:267.16" */
  wire perf_instr_ret_wb;
  /* src = "rtl/cve2/cve2_core.sv:269.16" */
  wire perf_iside_wait;
  /* src = "rtl/cve2/cve2_core.sv:273.16" */
  wire perf_jump;
  /* src = "rtl/cve2/cve2_core.sv:276.16" */
  wire perf_load;
  /* src = "rtl/cve2/cve2_core.sv:277.16" */
  wire perf_store;
  /* src = "rtl/cve2/cve2_core.sv:275.16" */
  wire perf_tbranch;
  /* src = "rtl/cve2/cve2_core.sv:271.16" */
  wire perf_wfi_wait;
  /* src = "rtl/cve2/cve2_core.sv:239.17" */
  wire [2:0] pmp_req_err;
  /* src = "rtl/cve2/cve2_core.sv:251.16" */
  wire [1:0] priv_mode_id;
  /* src = "rtl/cve2/cve2_core.sv:252.16" */
  wire [1:0] priv_mode_lsu;
  /* src = "rtl/cve2/cve2_core.sv:185.16" */
  wire [31:0] result_ex;
  /* src = "rtl/cve2/cve2_core.sv:154.16" */
  wire [4:0] rf_raddr_a;
  /* src = "rtl/cve2/cve2_core.sv:156.16" */
  wire [4:0] rf_raddr_b;
  /* src = "rtl/cve2/cve2_core.sv:159.16" */
  wire [4:0] rf_raddr_c;
  /* src = "rtl/cve2/cve2_core.sv:155.16" */
  wire [31:0] rf_rdata_a;
  /* src = "rtl/cve2/cve2_core.sv:157.16" */
  wire [31:0] rf_rdata_b;
  /* src = "rtl/cve2/cve2_core.sv:160.16" */
  wire [31:0] rf_rdata_c;
  /* src = "rtl/cve2/cve2_core.sv:163.16" */
  wire rf_ren_a;
  /* src = "rtl/cve2/cve2_core.sv:164.16" */
  wire rf_ren_b;
  /* src = "rtl/cve2/cve2_core.sv:161.16" */
  wire rf_ren_c;
  /* src = "rtl/cve2/cve2_core.sv:173.16" */
  wire [4:0] rf_waddr_id;
  /* src = "rtl/cve2/cve2_core.sv:165.16" */
  wire [4:0] rf_waddr_wb;
  /* src = "rtl/cve2/cve2_core.sv:174.16" */
  wire [31:0] rf_wdata_id;
  /* src = "rtl/cve2/cve2_core.sv:169.16" */
  wire [31:0] rf_wdata_lsu;
  /* src = "rtl/cve2/cve2_core.sv:166.16" */
  wire [31:0] rf_wdata_wb;
  /* src = "rtl/cve2/cve2_core.sv:175.16" */
  wire rf_we_id;
  /* src = "rtl/cve2/cve2_core.sv:171.16" */
  wire rf_we_lsu;
  /* src = "rtl/cve2/cve2_core.sv:170.16" */
  wire rf_we_wb;
  /* src = "rtl/cve2/cve2_core.sv:31.40" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_core.sv:33.40" */
  input test_en_i;
  wire test_en_i;
  /* src = "rtl/cve2/cve2_core.sv:261.16" */
  wire trigger_match;
  /* src = "rtl/cve2/cve2_core.sv:280.33" */
  wire unused_illegal_insn_id;
  /* src = "rtl/cve2/cve2_core.sv:1350.30" */
  wire unused_instr_id_done;
  /* src = "rtl/cve2/cve2_core.sv:1350.9" */
  wire unused_instr_new_id;
  /* src = "rtl/cve2/cve2_core.sv:288.24-288.43" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(ctrl_busy),
    .B(if_busy),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_core.sv:288.24-288.54" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\$0y ),
    .B(lsu_busy),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_core.sv:351.42-351.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(instr_valid_id),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_core.sv:351.28-351.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(id_in_ready),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_core.sv:538.25-538.53" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(lsu_load_err),
    .B(lsu_store_err),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_core.sv:675.34-675.77" */
  \$mux  #(
    .WIDTH(32'd12)
  ) \$7  (
    .A(12'h000),
    .B(alu_operand_b_ex[11:0]),
    .S(csr_access),
    .Y(\$7y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/cve2/cve2_core.sv:688.5" */
  \cve2_cs_registers$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i  cs_registers_i (
    .boot_addr_i(boot_addr_i),
    .branch_i(perf_branch),
    .branch_taken_i(perf_tbranch),
    .clk_i(clk_i),
    .csr_access_i(csr_access),
    .csr_addr_i(csr_addr),
    .csr_depc_o(csr_depc),
    .csr_mcause_i(exc_cause),
    .csr_mepc_o(csr_mepc),
    .csr_mstatus_mie_o(csr_mstatus_mie),
    .csr_mstatus_tw_o(csr_mstatus_tw),
    .csr_mtval_i(csr_mtval),
    .csr_mtvec_init_i(csr_mtvec_init),
    .csr_mtvec_o(csr_mtvec),
    .csr_op_en_i(csr_op_en),
    .csr_op_i(csr_op),
    .csr_pmp_addr_o(csr_pmp_addr),
    .csr_pmp_cfg_o(csr_pmp_cfg),
    .csr_pmp_mseccfg_o(csr_pmp_mseccfg),
    .csr_rdata_o(csr_rdata),
    .csr_restore_dret_i(csr_restore_dret_id),
    .csr_restore_mret_i(csr_restore_mret_id),
    .csr_save_cause_i(csr_save_cause),
    .csr_save_id_i(csr_save_id),
    .csr_save_if_i(csr_save_if),
    .csr_wdata_i(csr_wdata),
    .debug_cause_i(debug_cause),
    .debug_csr_save_i(debug_csr_save),
    .debug_ebreakm_o(debug_ebreakm),
    .debug_ebreaku_o(debug_ebreaku),
    .debug_mode_i(debug_mode),
    .debug_single_step_o(debug_single_step),
    .div_wait_i(perf_div_wait),
    .dside_wait_i(perf_dside_wait),
    .hart_id_i(hart_id_i),
    .illegal_csr_insn_o(illegal_csr_insn_id),
    .instr_ret_compressed_i(perf_instr_ret_compressed_wb),
    .instr_ret_i(perf_instr_ret_wb),
    .irq_external_i(irq_external_i),
    .irq_fast_i(irq_fast_i),
    .irq_pending_o(irq_pending_o),
    .irq_software_i(irq_software_i),
    .irq_timer_i(irq_timer_i),
    .irqs_o(irqs),
    .iside_wait_i(perf_iside_wait),
    .jump_i(perf_jump),
    .mem_load_i(perf_load),
    .mem_store_i(perf_store),
    .nmi_mode_i(nmi_mode),
    .pc_id_i(pc_id),
    .pc_if_i(pc_if),
    .priv_mode_id_o(priv_mode_id),
    .priv_mode_lsu_o(priv_mode_lsu),
    .rst_ni(rst_ni),
    .trigger_match_o(trigger_match),
    .wfi_wait_i(perf_wfi_wait)
  );
  /* src = "rtl/cve2/cve2_core.sv:498.5" */
  \cve2_ex_block$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.ex_block_i  ex_block_i (
    .alu_adder_result_ex_o(alu_adder_result_ex),
    .alu_instr_first_cycle_i(instr_first_cycle_id),
    .alu_operand_a_i(alu_operand_a_ex),
    .alu_operand_b_i(alu_operand_b_ex),
    .alu_operator_i(alu_operator_ex),
    .branch_decision_o(branch_decision),
    .branch_target_o(branch_target_ex),
    .clk_i(clk_i),
    .div_en_i(div_en_ex),
    .div_sel_i(div_sel_ex),
    .ex_valid_o(ex_valid),
    .imd_val_d_o(imd_val_d_ex),
    .imd_val_q_i(imd_val_q_ex),
    .imd_val_we_o(imd_val_we_ex),
    .mult_en_i(mult_en_ex),
    .mult_sel_i(mult_sel_ex),
    .multdiv_operand_a_i(multdiv_operand_a_ex),
    .multdiv_operand_b_i(multdiv_operand_b_ex),
    .multdiv_operator_i(multdiv_operator_ex),
    .multdiv_signed_mode_i(multdiv_signed_mode_ex),
    .result_ex_o(result_ex),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/cve2/cve2_core.sv:364.5" */
  \cve2_id_stage$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i  id_stage_i (
    .alu_operand_a_ex_o(alu_operand_a_ex),
    .alu_operand_b_ex_o(alu_operand_b_ex),
    .alu_operator_ex_o(alu_operator_ex),
    .branch_decision_i(branch_decision),
    .clk_i(clk_i),
    .csr_access_o(csr_access),
    .csr_mstatus_mie_i(csr_mstatus_mie),
    .csr_mstatus_tw_i(csr_mstatus_tw),
    .csr_mtval_o(csr_mtval),
    .csr_op_en_o(csr_op_en),
    .csr_op_o(csr_op),
    .csr_rdata_i(csr_rdata),
    .csr_restore_dret_id_o(csr_restore_dret_id),
    .csr_restore_mret_id_o(csr_restore_mret_id),
    .csr_save_cause_o(csr_save_cause),
    .csr_save_id_o(csr_save_id),
    .csr_save_if_o(csr_save_if),
    .ctrl_busy_o(ctrl_busy),
    .debug_cause_o(debug_cause),
    .debug_csr_save_o(debug_csr_save),
    .debug_ebreakm_i(debug_ebreakm),
    .debug_ebreaku_i(debug_ebreaku),
    .debug_mode_o(debug_mode),
    .debug_req_i(debug_req_i),
    .debug_single_step_i(debug_single_step),
    .div_en_ex_o(div_en_ex),
    .div_sel_ex_o(div_sel_ex),
    .en_wb_o(en_wb),
    .ex_valid_i(ex_valid),
    .exc_cause_o(exc_cause),
    .exc_pc_mux_o(exc_pc_mux_id),
    .fetch_enable_i(fetch_enable_i),
    .id_in_ready_o(id_in_ready),
    .illegal_c_insn_i(illegal_c_insn_id),
    .illegal_csr_insn_i(illegal_csr_insn_id),
    .illegal_insn_o(illegal_insn_id),
    .imd_val_d_ex_i(imd_val_d_ex),
    .imd_val_q_ex_o(imd_val_q_ex),
    .imd_val_we_ex_i(imd_val_we_ex),
    .instr_fetch_err_i(instr_fetch_err),
    .instr_fetch_err_plus2_i(instr_fetch_err_plus2),
    .instr_first_cycle_id_o(instr_first_cycle_id),
    .instr_id_done_o(instr_id_done),
    .instr_is_compressed_i(instr_is_compressed_id),
    .instr_perf_count_id_o(instr_perf_count_id),
    .instr_rdata_alu_i(instr_rdata_alu_id),
    .instr_rdata_c_i(instr_rdata_c_id),
    .instr_rdata_i(instr_rdata_id),
    .instr_req_o(instr_req_int),
    .instr_valid_clear_o(instr_valid_clear),
    .instr_valid_i(instr_valid_id),
    .irq_nm_i(irq_nm_i),
    .irq_pending_i(irq_pending_o),
    .irqs_i(irqs),
    .lsu_addr_incr_req_i(lsu_addr_incr_req),
    .lsu_addr_last_i(lsu_addr_last),
    .lsu_load_err_i(lsu_load_err),
    .lsu_req_o(lsu_req),
    .lsu_resp_valid_i(lsu_resp_valid),
    .lsu_sign_ext_o(lsu_sign_ext),
    .lsu_store_err_i(lsu_store_err),
    .lsu_type_o(lsu_type),
    .lsu_wdata_o(lsu_wdata),
    .lsu_we_o(lsu_we),
    .mult_en_ex_o(mult_en_ex),
    .mult_sel_ex_o(mult_sel_ex),
    .multdiv_operand_a_ex_o(multdiv_operand_a_ex),
    .multdiv_operand_b_ex_o(multdiv_operand_b_ex),
    .multdiv_operator_ex_o(multdiv_operator_ex),
    .multdiv_signed_mode_ex_o(multdiv_signed_mode_ex),
    .nmi_mode_o(nmi_mode),
    .pc_id_i(pc_id),
    .pc_mux_o(pc_mux_id),
    .pc_set_o(pc_set),
    .perf_branch_o(perf_branch),
    .perf_div_wait_o(perf_div_wait),
    .perf_dside_wait_o(perf_dside_wait),
    .perf_jump_o(perf_jump),
    .perf_tbranch_o(perf_tbranch),
    .perf_wfi_wait_o(perf_wfi_wait),
    .priv_mode_i(priv_mode_id),
    .result_ex_i(result_ex),
    .rf_raddr_a_o(rf_raddr_a),
    .rf_raddr_b_o(rf_raddr_b),
    .rf_rdata_a_i(rf_rdata_a),
    .rf_rdata_b_i(rf_rdata_b),
    .rf_ren_a_o(rf_ren_a),
    .rf_ren_b_o(rf_ren_b),
    .rf_waddr_id_o(rf_waddr_id),
    .rf_wdata_id_o(rf_wdata_id),
    .rf_we_id_o(rf_we_id),
    .rst_ni(rst_ni),
    .trigger_match_i(trigger_match)
  );
  /* src = "rtl/cve2/cve2_core.sv:297.5" */
  \cve2_if_stage$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i  if_stage_i (
    .boot_addr_i(boot_addr_i),
    .branch_target_ex_i(branch_target_ex),
    .clk_i(clk_i),
    .csr_depc_i(csr_depc),
    .csr_mepc_i(csr_mepc),
    .csr_mtvec_i(csr_mtvec),
    .csr_mtvec_init_o(csr_mtvec_init),
    .exc_cause(exc_cause),
    .exc_pc_mux_i(exc_pc_mux_id),
    .id_in_ready_i(id_in_ready),
    .if_busy_o(if_busy),
    .illegal_c_insn_id_o(illegal_c_insn_id),
    .instr_addr_o(instr_addr_o),
    .instr_err_i(instr_err_i),
    .instr_fetch_err_o(instr_fetch_err),
    .instr_fetch_err_plus2_o(instr_fetch_err_plus2),
    .instr_gnt_i(instr_gnt_i),
    .instr_is_compressed_id_o(instr_is_compressed_id),
    .instr_new_id_o(instr_new_id),
    .instr_rdata_alu_id_o(instr_rdata_alu_id),
    .instr_rdata_c_id_o(instr_rdata_c_id),
    .instr_rdata_i(instr_rdata_i),
    .instr_rdata_id_o(instr_rdata_id),
    .instr_req_o(instr_req_o),
    .instr_rvalid_i(instr_rvalid_i),
    .instr_valid_clear_i(instr_valid_clear),
    .instr_valid_id_o(instr_valid_id),
    .pc_id_o(pc_id),
    .pc_if_o(pc_if),
    .pc_mux_i(pc_mux_id),
    .pc_set_i(pc_set),
    .pmp_err_if_i(1'h0),
    .pmp_err_if_plus2_i(1'h0),
    .req_i(instr_req_gated),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/cve2/cve2_core.sv:540.24" */
  \cve2_load_store_unit$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.load_store_unit_i  load_store_unit_i (
    .adder_result_ex_i(alu_adder_result_ex),
    .addr_incr_req_o(lsu_addr_incr_req),
    .addr_last_o(lsu_addr_last),
    .busy_o(lsu_busy),
    .clk_i(clk_i),
    .data_addr_o(data_addr_o),
    .data_be_o(data_be_o),
    .data_err_i(data_err_i),
    .data_gnt_i(data_gnt_i),
    .data_pmp_err_i(1'h0),
    .data_rdata_i(data_rdata_i),
    .data_req_o(data_req_out),
    .data_rvalid_i(data_rvalid_i),
    .data_wdata_o(data_wdata_o),
    .data_we_o(data_we_o),
    .load_err_o(lsu_load_err),
    .lsu_rdata_o(rf_wdata_lsu),
    .lsu_rdata_valid_o(rf_we_lsu),
    .lsu_req_i(lsu_req),
    .lsu_resp_valid_o(lsu_resp_valid),
    .lsu_sign_ext_i(lsu_sign_ext),
    .lsu_type_i(lsu_type),
    .lsu_wdata_i(lsu_wdata),
    .lsu_we_i(lsu_we),
    .perf_load_o(perf_load),
    .perf_store_o(perf_store),
    .rst_ni(rst_ni),
    .store_err_o(lsu_store_err)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/cve2/cve2_core.sv:654.5" */
  \cve2_register_file_ff$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.register_file_i  register_file_i (
    .clk_i(clk_i),
    .raddr_a_i(rf_raddr_a),
    .raddr_b_i(rf_raddr_b),
    .rdata_a_o(rf_rdata_a),
    .rdata_b_o(rf_rdata_b),
    .rst_ni(rst_ni),
    .test_en_i(test_en_i),
    .waddr_a_i(rf_waddr_wb),
    .wdata_a_i(rf_wdata_wb),
    .we_a_i(rf_we_wb)
  );
  /* src = "rtl/cve2/cve2_core.sv:586.5" */
  \cve2_wb$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.wb_i  wb_i (
    .clk_i(clk_i),
    .en_wb_i(en_wb),
    .instr_is_compressed_id_i(instr_is_compressed_id),
    .instr_perf_count_id_i(instr_perf_count_id),
    .lsu_resp_err_i(lsu_resp_err),
    .lsu_resp_valid_i(lsu_resp_valid),
    .perf_instr_ret_compressed_wb_o(perf_instr_ret_compressed_wb),
    .perf_instr_ret_wb_o(perf_instr_ret_wb),
    .rf_waddr_id_i(rf_waddr_id),
    .rf_waddr_wb_o(rf_waddr_wb),
    .rf_wdata_id_i(rf_wdata_id),
    .rf_wdata_lsu_i(rf_wdata_lsu),
    .rf_wdata_wb_o(rf_wdata_wb),
    .rf_we_id_i(rf_we_id),
    .rf_we_lsu_i(rf_we_lsu),
    .rf_we_wb_o(rf_we_wb),
    .rst_ni(rst_ni)
  );
  assign core_busy_o = \$1y ;
  assign perf_iside_wait = \$3y ;
  assign instr_req_gated = instr_req_int;
  assign unused_illegal_insn_id = illegal_insn_id;
  assign data_req_o = \$5y ;
  assign lsu_resp_err = \$6y ;
  assign crash_dump_o[127:96] = pc_id;
  assign crash_dump_o[95:64] = pc_if;
  assign crash_dump_o[63:32] = lsu_addr_last;
  assign crash_dump_o[31:0] = csr_mepc;
  assign csr_wdata = alu_operand_a_ex;
  assign csr_addr = \$7y ;
  assign \g_no_pmp.unused_priv_lvl_ls  = priv_mode_lsu;
  assign \g_no_pmp.unused_csr_pmp_addr  = csr_pmp_addr;
  assign \g_no_pmp.unused_csr_pmp_cfg  = csr_pmp_cfg;
  assign \g_no_pmp.unused_csr_pmp_mseccfg  = csr_pmp_mseccfg;
  assign pmp_req_err[2] = 1'h0;
  assign pmp_req_err[1] = 1'h0;
  assign pmp_req_err[0] = 1'h0;
  assign unused_instr_id_done = instr_id_done;
  assign unused_instr_new_id = instr_new_id;
  assign \$4y  = 1'h1;
  assign \$5y  = data_req_out;
endmodule

/* src = "rtl/cve2/cve2_counter.sv:1.8" */
module \cve2_counter$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.mcycle_counter_i (clk_i, rst_ni, counter_inc_i, counterh_we_i, counter_we_i, counter_val_i, counter_val_o, counter_val_upd_o);
  wire [63:0] \$0y ;
  wire \$2y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/cve2/cve2_counter.sv:42.14-46.8" */
  wire [63:0] \$counter_d$4 ;
  /* src = "rtl/cve2/cve2_counter.sv:40.5-46.8" */
  wire [63:0] \$counter_d$5 ;
  /* src = "rtl/cve2/cve2_counter.sv:34.5-37.8" */
  wire [63:0] \$counter_load$3 ;
  wire [63:0] \$procmux$2017_Y ;
  wire \$procmux$2018_CMP ;
  wire [63:0] \$procmux$2020_Y ;
  wire \$procmux$2021_CMP ;
  wire [63:0] \$procmux$2024_Y ;
  wire \$procmux$2025_CMP ;
  wire [63:0] \$procmux$2026_Y ;
  wire \$procmux$2027_CMP ;
  /* src = "rtl/cve2/cve2_counter.sv:8.23" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_counter.sv:19.28" */
  wire [63:0] counter;
  /* src = "rtl/cve2/cve2_counter.sv:23.28" */
  wire [63:0] counter_d;
  /* src = "rtl/cve2/cve2_counter.sv:11.23" */
  input counter_inc_i;
  wire counter_inc_i;
  /* src = "rtl/cve2/cve2_counter.sv:21.28" */
  wire [63:0] counter_load;
  /* src = "rtl/cve2/cve2_counter.sv:57.28" */
  wire [63:0] counter_q;
  /* src = "rtl/cve2/cve2_counter.sv:20.28" */
  wire [63:0] counter_upd;
  /* src = "rtl/cve2/cve2_counter.sv:14.23" */
  input [31:0] counter_val_i;
  wire [31:0] counter_val_i;
  /* src = "rtl/cve2/cve2_counter.sv:15.23" */
  output [63:0] counter_val_o;
  wire [63:0] counter_val_o;
  /* src = "rtl/cve2/cve2_counter.sv:16.23" */
  output [63:0] counter_val_upd_o;
  wire [63:0] counter_val_upd_o;
  /* src = "rtl/cve2/cve2_counter.sv:13.23" */
  input counter_we_i;
  wire counter_we_i;
  /* src = "rtl/cve2/cve2_counter.sv:12.23" */
  input counterh_we_i;
  wire counterh_we_i;
  /* src = "rtl/cve2/cve2_counter.sv:9.23" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_counter.sv:22.28" */
  wire we;
  /* src = "rtl/cve2/cve2_counter.sv:26.24-26.84" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd64),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd64),
    .Y_WIDTH(32'd64)
  ) \$0  (
    .A(counter),
    .B(64'h0000000000000001),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:31.10-31.38" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(counter_we_i),
    .B(counterh_we_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(rst_ni),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:63.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd64)
  ) \$driver$counter_q  (
    .AD(64'h0000000000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:43.7-43.49|rtl/cve2/cve2_counter.sv:42.14-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2017  (
    .A(counter_q),
    .B(\$0y ),
    .S(\$procmux$2018_CMP ),
    .Y(\$procmux$2017_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:41.7-41.50|rtl/cve2/cve2_counter.sv:40.5-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2020  (
    .A(\$procmux$2017_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$2021_CMP ),
    .Y(\$procmux$2020_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:41.7-41.50|rtl/cve2/cve2_counter.sv:40.5-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2024  (
    .A(\$counter_d$4 ),
    .B(\$counter_load$3 ),
    .S(\$procmux$2025_CMP ),
    .Y(\$procmux$2024_Y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:34.24-37.8|rtl/cve2/cve2_counter.sv:34.5-37.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2026  (
    .A({ counter_q[63:32], counter_val_i }),
    .B({ counter_val_i, counter_q[31:0] }),
    .S(\$procmux$2027_CMP ),
    .Y(\$procmux$2026_Y )
  );
  assign counter_upd = \$0y ;
  assign counter_load = \$counter_load$3 ;
  assign we = \$2y ;
  assign counter_d = \$counter_d$5 ;
  assign counter = counter_q;
  assign counter_val_upd_o = 64'h0000000000000000;
  assign counter_val_o = counter;
  assign \$procmux$2018_CMP  = counter_inc_i;
  assign \$procmux$2021_CMP  = \$2y ;
  assign \$counter_d$4  = \$procmux$2020_Y ;
  assign \$procmux$2025_CMP  = \$2y ;
  assign \$counter_d$5  = \$procmux$2024_Y ;
  assign \$procmux$2027_CMP  = counterh_we_i;
  assign \$counter_load$3  = \$procmux$2026_Y ;
  assign \$8y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_counter.sv:1.8" */
module \cve2_counter$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.minstret_counter_i (clk_i, rst_ni, counter_inc_i, counterh_we_i, counter_we_i, counter_val_i, counter_val_o, counter_val_upd_o);
  wire [63:0] \$0y ;
  wire \$2y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/cve2/cve2_counter.sv:42.14-46.8" */
  wire [63:0] \$counter_d$4 ;
  /* src = "rtl/cve2/cve2_counter.sv:40.5-46.8" */
  wire [63:0] \$counter_d$5 ;
  /* src = "rtl/cve2/cve2_counter.sv:34.5-37.8" */
  wire [63:0] \$counter_load$3 ;
  wire [63:0] \$procmux$2005_Y ;
  wire \$procmux$2006_CMP ;
  wire [63:0] \$procmux$2008_Y ;
  wire \$procmux$2009_CMP ;
  wire [63:0] \$procmux$2012_Y ;
  wire \$procmux$2013_CMP ;
  wire [63:0] \$procmux$2014_Y ;
  wire \$procmux$2015_CMP ;
  /* src = "rtl/cve2/cve2_counter.sv:8.23" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_counter.sv:19.28" */
  wire [63:0] counter;
  /* src = "rtl/cve2/cve2_counter.sv:23.28" */
  wire [63:0] counter_d;
  /* src = "rtl/cve2/cve2_counter.sv:11.23" */
  input counter_inc_i;
  wire counter_inc_i;
  /* src = "rtl/cve2/cve2_counter.sv:21.28" */
  wire [63:0] counter_load;
  /* src = "rtl/cve2/cve2_counter.sv:57.28" */
  wire [63:0] counter_q;
  /* src = "rtl/cve2/cve2_counter.sv:20.28" */
  wire [63:0] counter_upd;
  /* src = "rtl/cve2/cve2_counter.sv:14.23" */
  input [31:0] counter_val_i;
  wire [31:0] counter_val_i;
  /* src = "rtl/cve2/cve2_counter.sv:15.23" */
  output [63:0] counter_val_o;
  wire [63:0] counter_val_o;
  /* src = "rtl/cve2/cve2_counter.sv:16.23" */
  output [63:0] counter_val_upd_o;
  wire [63:0] counter_val_upd_o;
  /* src = "rtl/cve2/cve2_counter.sv:13.23" */
  input counter_we_i;
  wire counter_we_i;
  /* src = "rtl/cve2/cve2_counter.sv:12.23" */
  input counterh_we_i;
  wire counterh_we_i;
  /* src = "rtl/cve2/cve2_counter.sv:9.23" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_counter.sv:22.28" */
  wire we;
  /* src = "rtl/cve2/cve2_counter.sv:26.24-26.84" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd64),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd64),
    .Y_WIDTH(32'd64)
  ) \$0  (
    .A(counter),
    .B(64'h0000000000000001),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:31.10-31.38" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(counter_we_i),
    .B(counterh_we_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(rst_ni),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:63.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd64)
  ) \$driver$counter_q  (
    .AD(64'h0000000000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:43.7-43.49|rtl/cve2/cve2_counter.sv:42.14-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2005  (
    .A(counter_q),
    .B(\$0y ),
    .S(\$procmux$2006_CMP ),
    .Y(\$procmux$2005_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:41.7-41.50|rtl/cve2/cve2_counter.sv:40.5-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2008  (
    .A(\$procmux$2005_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$2009_CMP ),
    .Y(\$procmux$2008_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_counter.sv:41.7-41.50|rtl/cve2/cve2_counter.sv:40.5-46.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2012  (
    .A(\$counter_d$4 ),
    .B(\$counter_load$3 ),
    .S(\$procmux$2013_CMP ),
    .Y(\$procmux$2012_Y )
  );
  /* src = "rtl/cve2/cve2_counter.sv:34.24-37.8|rtl/cve2/cve2_counter.sv:34.5-37.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$2014  (
    .A({ counter_q[63:32], counter_val_i }),
    .B({ counter_val_i, counter_q[31:0] }),
    .S(\$procmux$2015_CMP ),
    .Y(\$procmux$2014_Y )
  );
  assign counter_upd = \$0y ;
  assign counter_load = \$counter_load$3 ;
  assign we = \$2y ;
  assign counter_d = \$counter_d$5 ;
  assign counter = counter_q;
  assign counter_val_upd_o = counter_upd;
  assign counter_val_o = counter;
  assign \$procmux$2006_CMP  = counter_inc_i;
  assign \$procmux$2009_CMP  = \$2y ;
  assign \$counter_d$4  = \$procmux$2008_Y ;
  assign \$procmux$2013_CMP  = \$2y ;
  assign \$counter_d$5  = \$procmux$2012_Y ;
  assign \$procmux$2015_CMP  = counterh_we_i;
  assign \$counter_load$3  = \$procmux$2014_Y ;
  assign \$8y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_cs_registers.sv:15.8" */
module \cve2_cs_registers$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i (clk_i, rst_ni, boot_addr_i, hart_id_i, irq_software_i, irq_timer_i, irq_external_i, irq_fast_i, irq_pending_o, pc_id_i, priv_mode_id_o, priv_mode_lsu_o, csr_mstatus_tw_o, csr_mtvec_o, csr_mtvec_init_i, csr_access_i, csr_addr_i, csr_wdata_i, csr_op_i, csr_op_en_i, csr_rdata_o
, nmi_mode_i, irqs_o, csr_mstatus_mie_o, csr_mepc_o, csr_pmp_cfg_o, csr_pmp_addr_o, csr_pmp_mseccfg_o, debug_mode_i, debug_cause_i, debug_csr_save_i, csr_depc_o, debug_single_step_o, debug_ebreakm_o, debug_ebreaku_o, trigger_match_o, pc_if_i, csr_save_if_i, csr_save_id_i, csr_restore_mret_i, csr_restore_dret_i, csr_save_cause_i
, csr_mcause_i, csr_mtval_i, illegal_csr_insn_o, instr_ret_i, instr_ret_compressed_i, iside_wait_i, jump_i, branch_i, branch_taken_i, mem_load_i, mem_store_i, dside_wait_i, wfi_wait_i, div_wait_i);
  wire \$0y ;
  wire \$10y ;
  wire \$110y ;
  wire \$11y ;
  wire \$12y ;
  wire \$134y ;
  wire [5:0] \$13y ;
  wire \$14y ;
  wire \$158y ;
  wire \$159y ;
  wire [31:0] \$15y ;
  wire [1:0] \$160y ;
  wire [31:0] \$162y ;
  wire [31:0] \$163y ;
  wire [31:0] \$164y ;
  wire \$166y ;
  wire \$167y ;
  wire \$168y ;
  wire \$169y ;
  wire [31:0] \$16y ;
  wire \$170y ;
  wire \$171y ;
  wire \$172y ;
  wire [18:0] \$173y ;
  wire \$174y ;
  wire \$176y ;
  wire [31:0] \$17y ;
  wire \$180y ;
  wire \$181y ;
  wire \$182y ;
  wire \$183y ;
  wire \$185y ;
  wire \$186y ;
  wire \$187y ;
  wire \$188y ;
  wire \$189y ;
  wire [5:0] \$18y ;
  wire \$190y ;
  wire \$191y ;
  wire \$192y ;
  wire \$193y ;
  wire \$194y ;
  wire \$195y ;
  wire \$196y ;
  wire \$197y ;
  wire \$198y ;
  wire \$199y ;
  wire \$19y ;
  wire \$1y ;
  wire \$200y ;
  wire \$201y ;
  wire \$202y ;
  wire \$203y ;
  wire \$204y ;
  wire [63:0] \$20y ;
  wire [63:0] \$21y ;
  wire [63:0] \$22y ;
  wire [5:0] \$23y ;
  wire \$24y ;
  wire [63:0] \$25y ;
  wire [63:0] \$26y ;
  wire [63:0] \$27y ;
  wire \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire [31:0] \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire [31:0] \$67y ;
  wire [31:0] \$68y ;
  wire [31:0] \$69y ;
  wire \$70y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire [31:0] \$74y ;
  wire [31:0] \$75y ;
  wire [31:0] \$76y ;
  wire \$9y ;
  wire [31:0] \$auto$rtlil.cc:3004:And$13195 ;
  wire [31:0] \$auto$rtlil.cc:3004:And$13197 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  wire [31:0] \$csr_rdata_int$28 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  wire [31:0] \$csr_wdata_int$165 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire [31:0] \$dcsr_d$101 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire [31:0] \$dcsr_d$85 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [1:0] \$dcsr_d[1:0]$128 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [1:0] \$dcsr_d[1:0]$151 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:560.11-562.14" */
  wire [1:0] \$dcsr_d[1:0]$62 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [2:0] \$dcsr_d[8:6]$129 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [2:0] \$dcsr_d[8:6]$152 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$dcsr_en$102 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$dcsr_en$130 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$dcsr_en$153 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$dcsr_en$86 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [31:0] \$depc_d$131 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [31:0] \$depc_d$154 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$depc_en$103 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$depc_en$132 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$depc_en$155 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$depc_en$87 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$dscratch0_en$104 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$dscratch0_en$88 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$dscratch1_en$105 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$dscratch1_en$89 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:626.9-634.16" */
  wire [31:0] \$exception_pc$109 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [31:0] \$exception_pc$141 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  wire \$illegal_csr$29 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.7-480.10" */
  wire \$illegal_csr$51 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:473.5-481.8" */
  wire \$illegal_csr$52 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:337.9-344.12" */
  wire \$illegal_csr$7 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:348.9-352.12" */
  wire \$illegal_csr$8 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire [6:0] \$mcause_d$115 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [6:0] \$mcause_d$124 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  wire [6:0] \$mcause_d$139 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [6:0] \$mcause_d$147 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire \$mcause_en$116 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$mcause_en$125 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  wire \$mcause_en$140 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$mcause_en$148 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mcause_en$82 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mcause_en$98 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1155.5-1160.8" */
  wire [2:0] \$mcountinhibit_d$177 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mcountinhibit_we$106 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mcountinhibit_we$90 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire [31:0] \$mepc_d$113 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [31:0] \$mepc_d$122 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  wire [31:0] \$mepc_d$137 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [31:0] \$mepc_d$145 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire \$mepc_en$114 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$mepc_en$123 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  wire \$mepc_en$138 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$mepc_en$146 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mepc_en$81 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mepc_en$97 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire [31:0] \$mhpmcounter_we$107 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire [31:0] \$mhpmcounter_we$91 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire [31:0] \$mhpmcounterh_we$108 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire [31:0] \$mhpmcounterh_we$92 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mie_en$79 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mie_en$95 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mscratch_en$80 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mscratch_en$96 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire \$mstack_en$119 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$mstack_en$133 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$mstack_en$156 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire [5:0] \$mstatus_d$77 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire [5:0] \$mstatus_d$93 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:676.9-678.12" */
  wire \$mstatus_d[1]$135 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:534.11-536.14" */
  wire [1:0] \$mstatus_d[3:2]$58 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  wire [2:0] \$mstatus_d[4:2]$136 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [4:0] \$mstatus_d[5:1]$143 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire [3:0] \$mstatus_d[5:2]$111 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [3:0] \$mstatus_d[5:2]$120 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire \$mstatus_en$112 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$mstatus_en$121 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$mstatus_en$144 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mstatus_en$78 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mstatus_en$94 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire [31:0] \$mtval_d$117 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire [31:0] \$mtval_d$126 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [31:0] \$mtval_d$149 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  wire \$mtval_en$118 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  wire \$mtval_en$127 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire \$mtval_en$150 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mtval_en$83 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mtval_en$99 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  wire \$mtvec_en$100 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  wire \$mtvec_en$84 ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  wire [1:0] \$priv_lvl_d$142 ;
  wire [31:0] \$procmux$9031_Y ;
  wire \$procmux$9032_CMP ;
  wire \$procmux$9033_CMP ;
  wire \$procmux$9034_CMP ;
  wire \$procmux$9035_CMP ;
  wire [2:0] \$procmux$9037_Y ;
  wire \$procmux$9038_CMP ;
  wire [3:0] \$procmux$9042_Y ;
  wire \$procmux$9043_CMP ;
  wire \$procmux$9045_CMP ;
  wire \$procmux$9049_Y ;
  wire \$procmux$9050_CMP ;
  wire \$procmux$9051_Y ;
  wire \$procmux$9052_CMP ;
  wire [6:0] \$procmux$9056_Y ;
  wire \$procmux$9057_CMP ;
  wire [6:0] \$procmux$9058_Y ;
  wire \$procmux$9059_CMP ;
  wire \$procmux$9063_Y ;
  wire \$procmux$9064_CMP ;
  wire \$procmux$9065_Y ;
  wire \$procmux$9066_CMP ;
  wire [31:0] \$procmux$9070_Y ;
  wire \$procmux$9071_CMP ;
  wire [31:0] \$procmux$9072_Y ;
  wire \$procmux$9073_CMP ;
  wire \$procmux$9075_Y ;
  wire \$procmux$9076_CMP ;
  wire \$procmux$9077_Y ;
  wire \$procmux$9078_CMP ;
  wire \$procmux$9082_Y ;
  wire \$procmux$9083_CMP ;
  wire [2:0] \$procmux$9086_Y ;
  wire \$procmux$9087_CMP ;
  wire [2:0] \$procmux$9088_Y ;
  wire \$procmux$9089_CMP ;
  wire \$procmux$9093_Y ;
  wire \$procmux$9094_CMP ;
  wire \$procmux$9096_Y ;
  wire \$procmux$9097_CMP ;
  wire \$procmux$9098_Y ;
  wire \$procmux$9099_CMP ;
  wire [31:0] \$procmux$9103_Y ;
  wire \$procmux$9104_CMP ;
  wire [31:0] \$procmux$9106_Y ;
  wire \$procmux$9107_CMP ;
  wire [31:0] \$procmux$9108_Y ;
  wire \$procmux$9109_CMP ;
  wire \$procmux$9113_Y ;
  wire \$procmux$9114_CMP ;
  wire \$procmux$9116_Y ;
  wire \$procmux$9117_CMP ;
  wire \$procmux$9118_Y ;
  wire \$procmux$9119_CMP ;
  wire [6:0] \$procmux$9123_Y ;
  wire \$procmux$9124_CMP ;
  wire [6:0] \$procmux$9126_Y ;
  wire \$procmux$9127_CMP ;
  wire [6:0] \$procmux$9128_Y ;
  wire \$procmux$9129_CMP ;
  wire \$procmux$9133_Y ;
  wire \$procmux$9134_CMP ;
  wire \$procmux$9136_Y ;
  wire \$procmux$9137_CMP ;
  wire \$procmux$9138_Y ;
  wire \$procmux$9139_CMP ;
  wire [31:0] \$procmux$9143_Y ;
  wire \$procmux$9144_CMP ;
  wire [31:0] \$procmux$9146_Y ;
  wire \$procmux$9147_CMP ;
  wire [31:0] \$procmux$9148_Y ;
  wire \$procmux$9149_CMP ;
  wire \$procmux$9153_Y ;
  wire \$procmux$9154_CMP ;
  wire \$procmux$9156_Y ;
  wire \$procmux$9157_CMP ;
  wire \$procmux$9158_Y ;
  wire \$procmux$9159_CMP ;
  wire [3:0] \$procmux$9163_Y ;
  wire \$procmux$9164_CMP ;
  wire [3:0] \$procmux$9166_Y ;
  wire \$procmux$9167_CMP ;
  wire [3:0] \$procmux$9168_Y ;
  wire \$procmux$9169_CMP ;
  wire \$procmux$9176_Y ;
  wire \$procmux$9177_CMP ;
  wire \$procmux$9178_Y ;
  wire \$procmux$9179_CMP ;
  wire \$procmux$9185_Y ;
  wire \$procmux$9186_CMP ;
  wire \$procmux$9187_Y ;
  wire \$procmux$9188_CMP ;
  wire [31:0] \$procmux$9194_Y ;
  wire \$procmux$9195_CMP ;
  wire [31:0] \$procmux$9196_Y ;
  wire \$procmux$9197_CMP ;
  wire \$procmux$9203_Y ;
  wire \$procmux$9204_CMP ;
  wire \$procmux$9205_Y ;
  wire \$procmux$9206_CMP ;
  wire [2:0] \$procmux$9212_Y ;
  wire \$procmux$9213_CMP ;
  wire [2:0] \$procmux$9214_Y ;
  wire \$procmux$9215_CMP ;
  wire [1:0] \$procmux$9221_Y ;
  wire \$procmux$9222_CMP ;
  wire [1:0] \$procmux$9223_Y ;
  wire \$procmux$9224_CMP ;
  wire \$procmux$9231_Y ;
  wire \$procmux$9232_CMP ;
  wire \$procmux$9233_Y ;
  wire \$procmux$9234_CMP ;
  wire [31:0] \$procmux$9241_Y ;
  wire \$procmux$9242_CMP ;
  wire [31:0] \$procmux$9243_Y ;
  wire \$procmux$9244_CMP ;
  wire \$procmux$9251_Y ;
  wire \$procmux$9252_CMP ;
  wire \$procmux$9253_Y ;
  wire \$procmux$9254_CMP ;
  wire [6:0] \$procmux$9261_Y ;
  wire \$procmux$9262_CMP ;
  wire [6:0] \$procmux$9263_Y ;
  wire \$procmux$9264_CMP ;
  wire \$procmux$9271_Y ;
  wire \$procmux$9272_CMP ;
  wire \$procmux$9273_Y ;
  wire \$procmux$9274_CMP ;
  wire [31:0] \$procmux$9281_Y ;
  wire \$procmux$9282_CMP ;
  wire [31:0] \$procmux$9283_Y ;
  wire \$procmux$9284_CMP ;
  wire \$procmux$9291_Y ;
  wire \$procmux$9292_CMP ;
  wire \$procmux$9293_Y ;
  wire \$procmux$9294_CMP ;
  wire [3:0] \$procmux$9301_Y ;
  wire \$procmux$9302_CMP ;
  wire [3:0] \$procmux$9303_Y ;
  wire \$procmux$9304_CMP ;
  wire [31:0] \$procmux$9310_Y ;
  wire \$procmux$9311_CMP ;
  wire [31:0] \$procmux$9312_Y ;
  wire \$procmux$9313_CMP ;
  wire \$procmux$9319_Y ;
  wire \$procmux$9320_CMP ;
  wire \$procmux$9326_Y ;
  wire \$procmux$9327_CMP ;
  wire [31:0] \$procmux$9333_Y ;
  wire \$procmux$9334_CMP ;
  wire \$procmux$9340_Y ;
  wire \$procmux$9341_CMP ;
  wire [2:0] \$procmux$9347_Y ;
  wire \$procmux$9348_CMP ;
  wire [1:0] \$procmux$9354_Y ;
  wire \$procmux$9355_CMP ;
  wire \$procmux$9361_Y ;
  wire \$procmux$9362_CMP ;
  wire [31:0] \$procmux$9368_Y ;
  wire \$procmux$9369_CMP ;
  wire \$procmux$9373_Y ;
  wire \$procmux$9374_CMP ;
  wire \$procmux$9376_CMP ;
  wire [6:0] \$procmux$9380_Y ;
  wire \$procmux$9381_CMP ;
  wire \$procmux$9383_CMP ;
  wire \$procmux$9387_Y ;
  wire \$procmux$9388_CMP ;
  wire \$procmux$9390_CMP ;
  wire [31:0] \$procmux$9394_Y ;
  wire \$procmux$9395_CMP ;
  wire \$procmux$9397_CMP ;
  wire \$procmux$9401_Y ;
  wire \$procmux$9402_CMP ;
  wire \$procmux$9404_CMP ;
  wire \$procmux$9408_Y ;
  wire \$procmux$9409_CMP ;
  wire \$procmux$9411_Y ;
  wire \$procmux$9412_CMP ;
  wire \$procmux$9413_Y ;
  wire \$procmux$9414_CMP ;
  wire [1:0] \$procmux$9418_Y ;
  wire \$procmux$9419_CMP ;
  wire \$procmux$9420_CMP ;
  wire \$procmux$9422_CMP ;
  wire [31:0] \$procmux$9428_Y ;
  wire \$procmux$9429_CMP ;
  wire [1:0] \$procmux$9437_Y ;
  wire \$procmux$9438_CMP ;
  wire [1:0] \$procmux$9439_Y ;
  wire \$procmux$9440_CMP ;
  wire [1:0] \$procmux$9441_Y ;
  wire \$procmux$9442_CMP ;
  wire [1:0] \$procmux$9457_Y ;
  wire \$procmux$9458_CMP ;
  wire [1:0] \$procmux$9459_Y ;
  wire \$procmux$9460_CMP ;
  wire [1:0] \$procmux$9461_Y ;
  wire \$procmux$9462_CMP ;
  wire [31:0] \$procmux$9464_Y ;
  wire [30:0] \$procmux$9465_CMP ;
  wire \$procmux$9465_CTRL ;
  wire [31:0] \$procmux$9466_Y ;
  wire \$procmux$9467_CMP ;
  wire [31:0] \$procmux$9470_Y ;
  wire [30:0] \$procmux$9471_CMP ;
  wire \$procmux$9471_CTRL ;
  wire [31:0] \$procmux$9472_Y ;
  wire \$procmux$9473_CMP ;
  wire \$procmux$9477_Y ;
  wire \$procmux$9478_CMP ;
  wire \$procmux$9479_Y ;
  wire \$procmux$9480_CMP ;
  wire \$procmux$9485_Y ;
  wire \$procmux$9486_CMP ;
  wire \$procmux$9487_Y ;
  wire \$procmux$9488_CMP ;
  wire \$procmux$9494_Y ;
  wire \$procmux$9495_CMP ;
  wire \$procmux$9496_Y ;
  wire \$procmux$9497_CMP ;
  wire \$procmux$9504_Y ;
  wire \$procmux$9505_CMP ;
  wire \$procmux$9506_Y ;
  wire \$procmux$9507_CMP ;
  wire \$procmux$9516_Y ;
  wire \$procmux$9517_CMP ;
  wire \$procmux$9518_Y ;
  wire \$procmux$9519_CMP ;
  wire [31:0] \$procmux$9528_Y ;
  wire \$procmux$9529_CMP ;
  wire [31:0] \$procmux$9530_Y ;
  wire \$procmux$9531_CMP ;
  wire \$procmux$9540_Y ;
  wire \$procmux$9541_CMP ;
  wire \$procmux$9542_Y ;
  wire \$procmux$9543_CMP ;
  wire \$procmux$9553_Y ;
  wire \$procmux$9554_CMP ;
  wire \$procmux$9555_Y ;
  wire \$procmux$9556_CMP ;
  wire \$procmux$9567_Y ;
  wire \$procmux$9568_CMP ;
  wire \$procmux$9569_Y ;
  wire \$procmux$9570_CMP ;
  wire \$procmux$9582_Y ;
  wire \$procmux$9583_CMP ;
  wire \$procmux$9584_Y ;
  wire \$procmux$9585_CMP ;
  wire \$procmux$9598_Y ;
  wire \$procmux$9599_CMP ;
  wire \$procmux$9600_Y ;
  wire \$procmux$9601_CMP ;
  wire \$procmux$9615_Y ;
  wire \$procmux$9616_CMP ;
  wire \$procmux$9617_Y ;
  wire \$procmux$9618_CMP ;
  wire \$procmux$9634_Y ;
  wire \$procmux$9635_CMP ;
  wire \$procmux$9636_Y ;
  wire \$procmux$9637_CMP ;
  wire [5:0] \$procmux$9653_Y ;
  wire \$procmux$9654_CMP ;
  wire [5:0] \$procmux$9655_Y ;
  wire \$procmux$9656_CMP ;
  wire [31:0] \$procmux$9658_Y ;
  wire \$procmux$9659_CMP ;
  wire [31:0] \$procmux$9661_Y ;
  wire \$procmux$9662_CMP ;
  wire \$procmux$9664_Y ;
  wire \$procmux$9665_CMP ;
  wire \$procmux$9667_Y ;
  wire \$procmux$9668_CMP ;
  wire \$procmux$9670_Y ;
  wire \$procmux$9671_CMP ;
  wire \$procmux$9673_Y ;
  wire \$procmux$9674_CMP ;
  wire \$procmux$9676_Y ;
  wire \$procmux$9677_CMP ;
  wire [31:0] \$procmux$9679_Y ;
  wire \$procmux$9680_CMP ;
  wire \$procmux$9682_Y ;
  wire \$procmux$9683_CMP ;
  wire \$procmux$9685_Y ;
  wire \$procmux$9686_CMP ;
  wire \$procmux$9688_Y ;
  wire \$procmux$9689_CMP ;
  wire \$procmux$9691_Y ;
  wire \$procmux$9692_CMP ;
  wire \$procmux$9694_Y ;
  wire \$procmux$9695_CMP ;
  wire \$procmux$9697_Y ;
  wire \$procmux$9698_CMP ;
  wire \$procmux$9700_Y ;
  wire \$procmux$9701_CMP ;
  wire [5:0] \$procmux$9703_Y ;
  wire \$procmux$9704_CMP ;
  wire \$procmux$9707_Y ;
  wire \$procmux$9708_CMP ;
  wire \$procmux$9746_Y ;
  wire \$procmux$9747_CMP ;
  wire \$procmux$9785_Y ;
  wire \$procmux$9786_CMP ;
  wire \$procmux$9788_Y ;
  wire \$procmux$9789_CMP ;
  wire \$procmux$9790_CMP ;
  wire \$procmux$9791_CMP ;
  wire \$procmux$9792_CMP ;
  wire \$procmux$9793_CMP ;
  wire \$procmux$9794_CMP ;
  wire \$procmux$9795_CMP ;
  wire [30:0] \$procmux$9796_CMP ;
  wire \$procmux$9796_CTRL ;
  wire [30:0] \$procmux$9797_CMP ;
  wire \$procmux$9797_CTRL ;
  wire [28:0] \$procmux$9798_CMP ;
  wire \$procmux$9798_CTRL ;
  wire \$procmux$9799_CMP ;
  wire \$procmux$9800_CMP ;
  wire \$procmux$9801_CMP ;
  wire \$procmux$9802_CMP ;
  wire \$procmux$9803_CMP ;
  wire \$procmux$9804_CMP ;
  wire \$procmux$9805_CMP ;
  wire \$procmux$9806_CMP ;
  wire \$procmux$9807_CMP ;
  wire \$procmux$9808_CMP ;
  wire \$procmux$9809_CMP ;
  wire \$procmux$9810_CMP ;
  wire \$procmux$9811_CMP ;
  wire \$procmux$9812_CMP ;
  wire \$procmux$9813_CMP ;
  wire \$procmux$9814_CMP ;
  wire \$procmux$9815_CMP ;
  wire \$procmux$9816_CMP ;
  wire \$procmux$9817_CMP ;
  wire \$procmux$9818_CMP ;
  wire \$procmux$9819_CMP ;
  wire \$procmux$9820_CMP ;
  wire \$procmux$9821_CMP ;
  wire \$procmux$9822_CMP ;
  wire \$procmux$9823_CMP ;
  wire \$procmux$9824_CMP ;
  wire \$procmux$9825_CMP ;
  wire \$procmux$9826_CMP ;
  wire \$procmux$9827_CMP ;
  wire \$procmux$9828_CMP ;
  wire \$procmux$9829_CMP ;
  wire \$procmux$9830_CMP ;
  wire \$procmux$9831_CMP ;
  wire \$procmux$9832_CMP ;
  wire \$procmux$9833_CMP ;
  wire \$procmux$9834_CMP ;
  wire [1:0] \$procmux$9835_CMP ;
  wire \$procmux$9835_CTRL ;
  wire \$procmux$9836_CMP ;
  wire \$procmux$9837_CMP ;
  wire \$procmux$9838_CMP ;
  wire \$procmux$9839_CMP ;
  wire \$procmux$9840_CMP ;
  wire \$procmux$9841_CMP ;
  wire \$procmux$9842_CMP ;
  wire [31:0] \$procmux$9848_Y ;
  wire \$procmux$9849_CMP ;
  wire \$procmux$9850_CMP ;
  wire \$procmux$9851_CMP ;
  wire [30:0] \$procmux$9852_CMP ;
  wire \$procmux$9852_CTRL ;
  wire [30:0] \$procmux$9853_CMP ;
  wire \$procmux$9853_CTRL ;
  wire [28:0] \$procmux$9854_CMP ;
  wire \$procmux$9854_CTRL ;
  wire \$procmux$9855_CMP ;
  wire \$procmux$9856_CMP ;
  wire \$procmux$9857_CMP ;
  wire \$procmux$9858_CMP ;
  wire \$procmux$9859_CMP ;
  wire \$procmux$9860_CMP ;
  wire \$procmux$9861_CMP ;
  wire \$procmux$9862_CMP ;
  wire \$procmux$9863_CMP ;
  wire \$procmux$9864_CMP ;
  wire \$procmux$9865_CMP ;
  wire \$procmux$9866_CMP ;
  wire \$procmux$9867_CMP ;
  wire \$procmux$9868_CMP ;
  wire \$procmux$9869_CMP ;
  wire \$procmux$9870_CMP ;
  wire \$procmux$9871_CMP ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:43.32" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:98.32" */
  input branch_i;
  wire branch_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:99.32" */
  input branch_taken_i;
  wire branch_taken_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:29.32" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:46.32" */
  input csr_access_i;
  wire csr_access_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:246.32" */
  wire [11:0] csr_addr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:47.32" */
  input [11:0] csr_addr_i;
  wire [11:0] csr_addr_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:73.32" */
  output [31:0] csr_depc_o;
  wire [31:0] csr_depc_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:88.32" */
  input [6:0] csr_mcause_i;
  wire [6:0] csr_mcause_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:62.32" */
  output [31:0] csr_mepc_o;
  wire [31:0] csr_mepc_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:61.32" */
  output csr_mstatus_mie_o;
  wire csr_mstatus_mie_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:38.32" */
  output csr_mstatus_tw_o;
  wire csr_mstatus_tw_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:89.32" */
  input [31:0] csr_mtval_i;
  wire [31:0] csr_mtval_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:42.32" */
  input csr_mtvec_init_i;
  wire csr_mtvec_init_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:41.32" */
  output [31:0] csr_mtvec_o;
  wire [31:0] csr_mtvec_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:50.32" */
  input csr_op_en_i;
  wire csr_op_en_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:49.32" */
  input [1:0] csr_op_i;
  wire [1:0] csr_op_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:66.34" */
  output [135:0] csr_pmp_addr_o;
  wire [135:0] csr_pmp_addr_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:65.34" */
  output [23:0] csr_pmp_cfg_o;
  wire [23:0] csr_pmp_cfg_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:67.34" */
  output [2:0] csr_pmp_mseccfg_o;
  wire [2:0] csr_pmp_mseccfg_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:228.16" */
  wire [31:0] csr_rdata_int;
  /* src = "rtl/cve2/cve2_cs_registers.sv:51.32" */
  output [31:0] csr_rdata_o;
  wire [31:0] csr_rdata_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:86.32" */
  input csr_restore_dret_i;
  wire csr_restore_dret_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:85.32" */
  input csr_restore_mret_i;
  wire csr_restore_mret_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:87.32" */
  input csr_save_cause_i;
  wire csr_save_cause_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:84.32" */
  input csr_save_id_i;
  wire csr_save_id_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:83.32" */
  input csr_save_if_i;
  wire csr_save_if_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:48.32" */
  input [31:0] csr_wdata_i;
  wire [31:0] csr_wdata_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:227.16" */
  wire [31:0] csr_wdata_int;
  /* src = "rtl/cve2/cve2_cs_registers.sv:229.16" */
  wire csr_we_int;
  /* src = "rtl/cve2/cve2_cs_registers.sv:230.16" */
  wire csr_wr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:180.24" */
  wire [31:0] dcsr_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:181.16" */
  wire dcsr_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:180.16" */
  wire [31:0] dcsr_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:71.32" */
  input [2:0] debug_cause_i;
  wire [2:0] debug_cause_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:72.32" */
  input debug_csr_save_i;
  wire debug_csr_save_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:75.32" */
  output debug_ebreakm_o;
  wire debug_ebreakm_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:76.32" */
  output debug_ebreaku_o;
  wire debug_ebreaku_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:70.32" */
  input debug_mode_i;
  wire debug_mode_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:74.32" */
  output debug_single_step_o;
  wire debug_single_step_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:182.24" */
  wire [31:0] depc_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:183.16" */
  wire depc_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:182.16" */
  wire [31:0] depc_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:104.32" */
  input div_wait_i;
  wire div_wait_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:186.16" */
  wire dscratch0_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:184.16" */
  wire [31:0] dscratch0_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:186.30" */
  wire dscratch1_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:185.16" */
  wire [31:0] dscratch1_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:102.32" */
  input dside_wait_i;
  wire dside_wait_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:161.16" */
  wire [31:0] exception_pc;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1292.35" */
  wire [28:0] \g_mcountinhibit_reduced.unused_mhphcounter_incr ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1290.35" */
  wire [28:0] \g_mcountinhibit_reduced.unused_mhphcounter_we ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1291.35" */
  wire [28:0] \g_mcountinhibit_reduced.unused_mhphcounterh_we ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1325.31" */
  wire \gen_trigger_regs.selected_tmatch_control ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1326.31" */
  wire [31:0] \gen_trigger_regs.selected_tmatch_value ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1321.31" */
  wire \gen_trigger_regs.tmatch_control_d ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1322.31" */
  wire \gen_trigger_regs.tmatch_control_q ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1330.31" */
  wire \gen_trigger_regs.tmatch_control_we ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1323.31" */
  wire [31:0] \gen_trigger_regs.tmatch_value_d ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1324.31" */
  wire [31:0] \gen_trigger_regs.tmatch_value_q ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1331.31" */
  wire \gen_trigger_regs.tmatch_value_we ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1333.31" */
  wire \gen_trigger_regs.trigger_match ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1320.31" */
  wire \gen_trigger_regs.tselect_d ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1320.42" */
  wire \gen_trigger_regs.tselect_q ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:1329.31" */
  wire \gen_trigger_regs.tselect_we ;
  /* src = "rtl/cve2/cve2_cs_registers.sv:33.32" */
  input [31:0] hart_id_i;
  wire [31:0] hart_id_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:233.16" */
  wire illegal_csr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:90.32" */
  output illegal_csr_insn_o;
  wire illegal_csr_insn_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:234.16" */
  wire illegal_csr_priv;
  /* src = "rtl/cve2/cve2_cs_registers.sv:235.16" */
  wire illegal_csr_write;
  /* src = "rtl/cve2/cve2_cs_registers.sv:95.32" */
  input instr_ret_compressed_i;
  wire instr_ret_compressed_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:94.32" */
  input instr_ret_i;
  wire instr_ret_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:56.32" */
  input irq_external_i;
  wire irq_external_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:57.32" */
  input [15:0] irq_fast_i;
  wire [15:0] irq_fast_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:59.32" */
  output irq_pending_o;
  wire irq_pending_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:54.32" */
  input irq_software_i;
  wire irq_software_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:55.32" */
  input irq_timer_i;
  wire irq_timer_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:60.32" */
  output [18:0] irqs_o;
  wire [18:0] irqs_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:96.32" */
  input iside_wait_i;
  wire iside_wait_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:97.32" */
  input jump_i;
  wire jump_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:173.26" */
  wire [6:0] mcause_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:174.16" */
  wire mcause_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:173.16" */
  wire [6:0] mcause_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:201.32" */
  wire [31:0] mcountinhibit;
  /* src = "rtl/cve2/cve2_cs_registers.sv:203.32" */
  wire [2:0] mcountinhibit_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:203.49" */
  wire [2:0] mcountinhibit_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:204.32" */
  wire mcountinhibit_we;
  /* src = "rtl/cve2/cve2_cs_registers.sv:100.32" */
  input mem_load_i;
  wire mem_load_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:101.32" */
  input mem_store_i;
  wire mem_store_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:171.24" */
  wire [31:0] mepc_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:172.16" */
  wire mepc_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:171.16" */
  wire [31:0] mepc_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:209.16" */
  wire [2047:0] mhpmcounter;
  /* src = "rtl/cve2/cve2_cs_registers.sv:214.16" */
  wire [4:0] mhpmcounter_idx;
  /* src = "rtl/cve2/cve2_cs_registers.sv:212.16" */
  wire [31:0] mhpmcounter_incr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:210.16" */
  wire [31:0] mhpmcounter_we;
  /* src = "rtl/cve2/cve2_cs_registers.sv:211.16" */
  wire [31:0] mhpmcounterh_we;
  /* src = "rtl/cve2/cve2_cs_registers.sv:213.16" */
  wire [1023:0] mhpmevent;
  /* src = "rtl/cve2/cve2_cs_registers.sv:167.23" */
  wire [18:0] mie_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:168.16" */
  wire mie_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:167.16" */
  wire [18:0] mie_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:219.16" */
  wire [63:0] minstret_raw;
  /* src = "rtl/cve2/cve2_cs_registers.sv:179.16" */
  wire [18:0] mip;
  /* src = "rtl/cve2/cve2_cs_registers.sv:170.16" */
  wire mscratch_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:169.16" */
  wire [31:0] mscratch_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:193.32" */
  wire [6:0] mstack_cause_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:193.16" */
  wire [6:0] mstack_cause_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:190.26" */
  wire [2:0] mstack_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:191.16" */
  wire mstack_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:192.30" */
  wire [31:0] mstack_epc_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:192.16" */
  wire [31:0] mstack_epc_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:190.16" */
  wire [2:0] mstack_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:165.27" */
  wire [5:0] mstatus_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:166.16" */
  wire mstatus_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:165.16" */
  wire [5:0] mstatus_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:175.25" */
  wire [31:0] mtval_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:176.16" */
  wire mtval_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:175.16" */
  wire [31:0] mtval_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:177.25" */
  wire [31:0] mtvec_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:178.16" */
  wire mtvec_en;
  /* src = "rtl/cve2/cve2_cs_registers.sv:177.16" */
  wire [31:0] mtvec_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:58.32" */
  input nmi_mode_i;
  wire nmi_mode_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:80.32" */
  input [31:0] pc_id_i;
  wire [31:0] pc_id_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:79.32" */
  input [31:0] pc_if_i;
  wire [31:0] pc_if_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:196.32" */
  wire [511:0] pmp_addr_rdata;
  /* src = "rtl/cve2/cve2_cs_registers.sv:197.32" */
  wire [127:0] pmp_cfg_rdata;
  /* src = "rtl/cve2/cve2_cs_registers.sv:198.32" */
  wire [2:0] pmp_mseccfg;
  /* src = "rtl/cve2/cve2_cs_registers.sv:164.28" */
  wire [1:0] priv_lvl_d;
  /* src = "rtl/cve2/cve2_cs_registers.sv:164.16" */
  wire [1:0] priv_lvl_q;
  /* src = "rtl/cve2/cve2_cs_registers.sv:36.32" */
  output [1:0] priv_mode_id_o;
  wire [1:0] priv_mode_id_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:37.32" */
  output [1:0] priv_mode_lsu_o;
  wire [1:0] priv_mode_lsu_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:30.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_cs_registers.sv:223.16" */
  wire [31:0] tmatch_control_rdata;
  /* src = "rtl/cve2/cve2_cs_registers.sv:224.16" */
  wire [31:0] tmatch_value_rdata;
  /* src = "rtl/cve2/cve2_cs_registers.sv:77.32" */
  output trigger_match_o;
  wire trigger_match_o;
  /* src = "rtl/cve2/cve2_cs_registers.sv:222.16" */
  wire [31:0] tselect_rdata;
  /* src = "rtl/cve2/cve2_cs_registers.sv:237.16" */
  wire [7:0] unused_boot_addr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:238.16" */
  wire [2:0] unused_csr_addr;
  /* src = "rtl/cve2/cve2_cs_registers.sv:217.16" */
  wire unused_mhpmcounter_incr_1;
  /* src = "rtl/cve2/cve2_cs_registers.sv:215.16" */
  wire unused_mhpmcounter_we_1;
  /* src = "rtl/cve2/cve2_cs_registers.sv:216.16" */
  wire unused_mhpmcounterh_we_1;
  /* src = "rtl/cve2/cve2_cs_registers.sv:103.32" */
  input wfi_wait_i;
  wire wfi_wait_i;
  /* src = "rtl/cve2/cve2_cs_registers.sv:252.32-252.60" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(csr_addr[9:8]),
    .B(priv_lvl_q),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:253.32-253.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(csr_addr[11:10]),
    .B(2'h3),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:387.23-387.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(debug_mode_i),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:391.23-391.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(debug_mode_i),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.22-647.35" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$110  (
    .A(debug_mode_i),
    .Y(\$110y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:395.23-395.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(debug_mode_i),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.25-408.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd6)
  ) \$13  (
    .A({ 1'h0, mhpmcounter_idx }),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:676.13-676.40" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(mstatus_q[3:2]),
    .B(2'h3),
    .Y(\$134y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.25-408.51" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\$13y ),
    .B(6'h20),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.25-408.51" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd32)
  ) \$15  (
    .A(1024'h0000000100000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(\$13y [4:0]),
    .Y(\$15y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(rst_ni),
    .Y(\$158y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.25-408.51" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$16  (
    .A(32'hxxxxxxxx),
    .B(\$15y ),
    .S(\$14y ),
    .Y(\$16y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:715.28-715.71" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$160  (
    .A(priv_lvl_q),
    .B(mstatus_q[3:2]),
    .S(mstatus_q[1]),
    .Y(\$160y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:721.38-721.63" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$162  (
    .A(csr_wdata_i),
    .B(csr_rdata_o),
    .Y(\$162y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:722.37-722.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$163  (
    .A(csr_wdata_i),
    .Y(\$163y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:722.37-722.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$164  (
    .A(\$163y ),
    .B(csr_rdata_o),
    .Y(\$164y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:728.20-728.76" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$166  (
    .A(csr_op_i),
    .B(2'h1),
    .Y(\$166y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:728.20-728.76" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(csr_op_i),
    .B(2'h2),
    .Y(\$167y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:728.20-728.76" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$168  (
    .A(csr_op_i),
    .B(2'h3),
    .Y(\$168y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:728.20-728.76" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$169  (
    .A({ \$168y , \$167y , \$166y  }),
    .Y(\$169y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.25-408.51" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$17  (
    .A(32'hxxxxxxxx),
    .B(\$16y ),
    .S(\$13y [5]),
    .Y(\$17y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:731.24-731.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$170  (
    .A(csr_wr),
    .B(csr_op_en_i),
    .Y(\$170y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:731.47-731.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$171  (
    .A(illegal_csr_insn_o),
    .Y(\$171y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:731.24-731.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$172  (
    .A(\$170y ),
    .B(\$171y ),
    .Y(\$172y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:748.26-748.37" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd19),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd19),
    .Y_WIDTH(32'd19)
  ) \$173  (
    .A(mip),
    .B(mie_q),
    .Y(\$173y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:749.26-749.33" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd19),
    .Y_WIDTH(32'd1)
  ) \$174  (
    .A(irqs_o),
    .Y(\$174y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.25-421.53" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd6)
  ) \$18  (
    .A({ 1'h0, mhpmcounter_idx }),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1213.42-1213.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$180  (
    .A(mcountinhibit[0]),
    .Y(\$180y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1229.42-1229.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$182  (
    .A(mcountinhibit[2]),
    .Y(\$182y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1229.20-1229.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$183  (
    .A(mhpmcounter_incr[2]),
    .B(\$182y ),
    .Y(\$183y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$185  (
    .A(rst_ni),
    .Y(\$185y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1336.25-1336.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$187  (
    .A(csr_we_int),
    .B(debug_mode_i),
    .Y(\$187y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1336.54-1336.79" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$188  (
    .A(csr_addr_i),
    .B(12'h7a0),
    .Y(\$188y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1336.25-1336.80" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$189  (
    .A(\$187y ),
    .B(\$188y ),
    .Y(\$189y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.25-421.53" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(\$18y ),
    .B(6'h20),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1338.38-1338.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$190  (
    .A(\gen_trigger_regs.tselect_q ),
    .Y(\$190y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1338.37-1338.83" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$191  (
    .A(\$190y ),
    .B(csr_we_int),
    .Y(\$191y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1338.37-1338.98" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$192  (
    .A(\$191y ),
    .B(debug_mode_i),
    .Y(\$192y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1339.38-1339.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$193  (
    .A(csr_addr_i),
    .B(12'h7a1),
    .Y(\$193y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1338.37-1339.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$194  (
    .A(\$192y ),
    .B(\$193y ),
    .Y(\$194y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1340.38-1340.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$195  (
    .A(\gen_trigger_regs.tselect_q ),
    .Y(\$195y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1340.37-1340.83" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$196  (
    .A(\$195y ),
    .B(csr_we_int),
    .Y(\$196y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1340.37-1340.98" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$197  (
    .A(\$196y ),
    .B(debug_mode_i),
    .Y(\$197y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1341.38-1341.62" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$198  (
    .A(csr_addr_i),
    .B(12'h7a2),
    .Y(\$198y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1340.37-1341.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$199  (
    .A(\$197y ),
    .B(\$198y ),
    .Y(\$199y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:253.31-253.67" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$1y ),
    .B(csr_wr),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.25-421.53" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd64)
  ) \$20  (
    .A(mhpmcounter),
    .S(\$18y [4:0]),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1346.25-1346.54" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$200  (
    .A(csr_wdata_int),
    .B(32'd1),
    .Y(\$200y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1346.24-1347.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$201  (
    .A(1'h0),
    .B(csr_wdata_int[0]),
    .S(\$200y ),
    .Y(\$201y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1433.56-1433.90" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$202  (
    .A(pc_if_i),
    .B(\gen_trigger_regs.tmatch_value_q ),
    .Y(\$202y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1433.33-1433.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$203  (
    .A(\gen_trigger_regs.tmatch_control_q ),
    .B(\$202y ),
    .Y(\$203y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.25-421.53" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$21  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$20y ),
    .S(\$19y ),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.25-421.53" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$22  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$21y ),
    .S(\$18y [5]),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.25-434.53" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd6)
  ) \$23  (
    .A({ 1'h0, mhpmcounter_idx }),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.25-434.53" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$23y ),
    .B(6'h20),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.25-434.53" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd64)
  ) \$25  (
    .A(mhpmcounter),
    .S(\$23y [4:0]),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.25-434.53" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$26  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$25y ),
    .S(\$24y ),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.25-434.53" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$27  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$26y ),
    .S(\$23y [5]),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:254.47-254.78" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(illegal_csr),
    .B(illegal_csr_write),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(csr_addr),
    .B(12'h3a0),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(csr_addr),
    .B(12'h3a1),
    .Y(\$31y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(csr_addr),
    .B(12'h3a2),
    .Y(\$32y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(csr_addr),
    .B(12'h3a3),
    .Y(\$33y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(csr_addr),
    .B(12'h3b0),
    .Y(\$34y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(csr_addr),
    .B(12'h3b1),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(csr_addr),
    .B(12'h3b2),
    .Y(\$36y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(csr_addr),
    .B(12'h3b3),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(csr_addr),
    .B(12'h3b4),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(csr_addr),
    .B(12'h3b5),
    .Y(\$39y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:254.47-254.97" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$3y ),
    .B(illegal_csr_priv),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(csr_addr),
    .B(12'h3b6),
    .Y(\$40y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(csr_addr),
    .B(12'h3b7),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(csr_addr),
    .B(12'h3b8),
    .Y(\$42y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(csr_addr),
    .B(12'h3b9),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(csr_addr),
    .B(12'h3ba),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(csr_addr),
    .B(12'h3bb),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(csr_addr),
    .B(12'h3bc),
    .Y(\$46y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(csr_addr),
    .B(12'h3bd),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(csr_addr),
    .B(12'h3be),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(csr_addr),
    .B(12'h3bf),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:254.31-254.98" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(csr_access_i),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:474.11-478.87" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd20),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A({ \$49y , \$48y , \$47y , \$46y , \$45y , \$44y , \$43y , \$42y , \$41y , \$40y , \$39y , \$38y , \$37y , \$36y , \$35y , \$34y , \$33y , \$32y , \$31y , \$30y  }),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:502.20-503.73" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$54  (
    .A({ csr_wdata_int[31:8], 8'h01 }),
    .B({ boot_addr_i[31:8], 8'h01 }),
    .S(csr_mtvec_init_i),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:534.16-534.43" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(csr_wdata_int[12:11]),
    .B(2'h3),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:534.49-534.76" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(csr_wdata_int[12:11]),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:534.15-534.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(\$55y ),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:560.16-560.40" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(csr_wdata_int[1:0]),
    .B(2'h3),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:560.46-560.70" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(csr_wdata_int[1:0]),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:560.15-560.71" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$59y ),
    .B(\$60y ),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A({ 1'h0, mhpmcounter_idx }),
    .B(1'h0),
    .Y(\$63y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A({ 1'h0, mhpmcounter_idx }),
    .B(7'h20),
    .Y(\$64y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A(\$63y ),
    .B(\$64y ),
    .Y(\$65y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$66  (
    .A(1'h0),
    .B(1'h1),
    .S(\$65y ),
    .Y(\$66y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$demux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$67  (
    .A(\$66y ),
    .S(mhpmcounter_idx),
    .Y(\$67y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.49" */
  \$demux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$68  (
    .A(\$66y ),
    .S(mhpmcounter_idx),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A({ 1'h0, mhpmcounter_idx }),
    .B(1'h0),
    .Y(\$70y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A({ 1'h0, mhpmcounter_idx }),
    .B(7'h20),
    .Y(\$71y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(\$70y ),
    .B(\$71y ),
    .Y(\$72y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$73  (
    .A(1'h0),
    .B(1'h1),
    .S(\$72y ),
    .Y(\$73y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$demux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$74  (
    .A(\$73y ),
    .S(mhpmcounter_idx),
    .Y(\$74y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.50" */
  \$demux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$75  (
    .A(\$73y ),
    .S(mhpmcounter_idx),
    .Y(\$75y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:383.23-383.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(debug_mode_i),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1303.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mcountinhibit_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(mcountinhibit_d),
    .Q(mcountinhibit_q)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:704.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$priv_lvl_q  (
    .AD(2'h3),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(priv_lvl_d),
    .Q(priv_lvl_q)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:723.21-723.49|rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$9031  (
    .A(32'hxxxxxxxx),
    .B({ csr_wdata_i, \$162y , \$164y , csr_wdata_i }),
    .S({ \$procmux$9035_CMP , \$procmux$9034_CMP , \$procmux$9033_CMP , \$procmux$9032_CMP  }),
    .Y(\$procmux$9031_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:723.21-723.49|rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$9032_CMP0  (
    .A(csr_op_i),
    .Y(\$procmux$9032_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:722.21-722.64|rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$9033_CMP0  (
    .A(csr_op_i),
    .B(2'h3),
    .Y(\$procmux$9033_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:721.21-721.64|rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$9034_CMP0  (
    .A(csr_op_i),
    .B(2'h2),
    .Y(\$procmux$9034_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:720.21-720.50|rtl/cve2/cve2_cs_registers.sv:719.5-725.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$9035_CMP0  (
    .A(csr_op_i),
    .B(2'h1),
    .Y(\$procmux$9035_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:1157.7-1157.85|rtl/cve2/cve2_cs_registers.sv:1155.5-1160.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9037  (
    .A(mcountinhibit_q),
    .B({ \$csr_wdata_int$165 [2], 1'h0, \$csr_wdata_int$165 [0] }),
    .S(\$procmux$9038_CMP ),
    .Y(\$procmux$9037_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd4)
  ) \$procmux$9042  (
    .A(\$mstatus_d$93 [5:2]),
    .B({ \$mstatus_d[5:2]$120 , mstatus_q[4], \$mstatus_d[4:2]$136  }),
    .S({ \$procmux$9045_CMP , \$procmux$9043_CMP  }),
    .Y(\$procmux$9042_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.25-691.12|rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9049  (
    .A(\$mcause_en$98 ),
    .B(1'h1),
    .S(\$procmux$9050_CMP ),
    .Y(\$procmux$9049_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9051  (
    .A(1'hx),
    .B(\$procmux$9049_Y ),
    .S(\$procmux$9052_CMP ),
    .Y(\$procmux$9051_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.25-691.12|rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9056  (
    .A({ \$csr_wdata_int$165 [31], \$csr_wdata_int$165 [5:0] }),
    .B(mstack_cause_q),
    .S(\$procmux$9057_CMP ),
    .Y(\$procmux$9056_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9058  (
    .A(7'hxx),
    .B(\$procmux$9056_Y ),
    .S(\$procmux$9059_CMP ),
    .Y(\$procmux$9058_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.25-691.12|rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9063  (
    .A(\$mepc_en$97 ),
    .B(1'h1),
    .S(\$procmux$9064_CMP ),
    .Y(\$procmux$9063_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9065  (
    .A(1'hx),
    .B(\$procmux$9063_Y ),
    .S(\$procmux$9066_CMP ),
    .Y(\$procmux$9065_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.25-691.12|rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9070  (
    .A({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .B(mstack_epc_q),
    .S(\$procmux$9071_CMP ),
    .Y(\$procmux$9070_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9072  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9070_Y ),
    .S(\$procmux$9073_CMP ),
    .Y(\$procmux$9072_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:677.11-677.33|rtl/cve2/cve2_cs_registers.sv:676.9-678.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9075  (
    .A(\$mstatus_d$93 [1]),
    .B(1'h0),
    .S(\$procmux$9076_CMP ),
    .Y(\$procmux$9075_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9077  (
    .A(1'hx),
    .B(\$procmux$9075_Y ),
    .S(\$procmux$9078_CMP ),
    .Y(\$procmux$9077_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9082  (
    .A(\$mstatus_d$93 [1]),
    .B(\$mstatus_d[1]$135 ),
    .S(\$procmux$9083_CMP ),
    .Y(\$procmux$9082_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:683.25-691.12|rtl/cve2/cve2_cs_registers.sv:683.9-696.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9086  (
    .A(3'h4),
    .B(mstack_q),
    .S(\$procmux$9087_CMP ),
    .Y(\$procmux$9086_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9088  (
    .A(3'hx),
    .B(\$procmux$9086_Y ),
    .S(\$procmux$9089_CMP ),
    .Y(\$procmux$9088_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9093  (
    .A(1'h1),
    .B(\$mtval_en$99 ),
    .S(debug_mode_i),
    .Y(\$procmux$9093_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9096  (
    .A(\$procmux$9093_Y ),
    .B(1'hx),
    .S(\$procmux$9097_CMP ),
    .Y(\$procmux$9096_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9098  (
    .A(1'hx),
    .B(\$procmux$9096_Y ),
    .S(\$procmux$9099_CMP ),
    .Y(\$procmux$9098_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9103  (
    .A(csr_mtval_i),
    .B(\$csr_wdata_int$165 ),
    .S(debug_mode_i),
    .Y(\$procmux$9103_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9106  (
    .A(\$procmux$9103_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$9107_CMP ),
    .Y(\$procmux$9106_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9108  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9106_Y ),
    .S(\$procmux$9109_CMP ),
    .Y(\$procmux$9108_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9113  (
    .A(1'h1),
    .B(\$mcause_en$98 ),
    .S(debug_mode_i),
    .Y(\$procmux$9113_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9116  (
    .A(\$procmux$9113_Y ),
    .B(1'hx),
    .S(\$procmux$9117_CMP ),
    .Y(\$procmux$9116_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9118  (
    .A(1'hx),
    .B(\$procmux$9116_Y ),
    .S(\$procmux$9119_CMP ),
    .Y(\$procmux$9118_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9123  (
    .A(csr_mcause_i),
    .B({ \$csr_wdata_int$165 [31], \$csr_wdata_int$165 [5:0] }),
    .S(debug_mode_i),
    .Y(\$procmux$9123_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9126  (
    .A(\$procmux$9123_Y ),
    .B(7'hxx),
    .S(\$procmux$9127_CMP ),
    .Y(\$procmux$9126_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9128  (
    .A(7'hxx),
    .B(\$procmux$9126_Y ),
    .S(\$procmux$9129_CMP ),
    .Y(\$procmux$9128_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9133  (
    .A(1'h1),
    .B(\$mepc_en$97 ),
    .S(debug_mode_i),
    .Y(\$procmux$9133_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9136  (
    .A(\$procmux$9133_Y ),
    .B(1'hx),
    .S(\$procmux$9137_CMP ),
    .Y(\$procmux$9136_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9138  (
    .A(1'hx),
    .B(\$procmux$9136_Y ),
    .S(\$procmux$9139_CMP ),
    .Y(\$procmux$9138_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9143  (
    .A(\$exception_pc$109 ),
    .B({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .S(debug_mode_i),
    .Y(\$procmux$9143_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9146  (
    .A(\$procmux$9143_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$9147_CMP ),
    .Y(\$procmux$9146_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9148  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9146_Y ),
    .S(\$procmux$9149_CMP ),
    .Y(\$procmux$9148_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9153  (
    .A(1'h1),
    .B(\$mstatus_en$94 ),
    .S(debug_mode_i),
    .Y(\$procmux$9153_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9156  (
    .A(\$procmux$9153_Y ),
    .B(1'hx),
    .S(\$procmux$9157_CMP ),
    .Y(\$procmux$9156_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9158  (
    .A(1'hx),
    .B(\$procmux$9156_Y ),
    .S(\$procmux$9159_CMP ),
    .Y(\$procmux$9158_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$9163  (
    .A({ 1'h0, mstatus_q[5], priv_lvl_q }),
    .B(\$mstatus_d$93 [5:2]),
    .S(debug_mode_i),
    .Y(\$procmux$9163_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$9166  (
    .A(\$procmux$9163_Y ),
    .B(4'hx),
    .S(\$procmux$9167_CMP ),
    .Y(\$procmux$9166_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$9168  (
    .A(4'hx),
    .B(\$procmux$9166_Y ),
    .S(\$procmux$9169_CMP ),
    .Y(\$procmux$9168_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9176  (
    .A(\$mstack_en$119 ),
    .B(1'h0),
    .S(\$procmux$9177_CMP ),
    .Y(\$procmux$9176_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9178  (
    .A(1'hx),
    .B(\$procmux$9176_Y ),
    .S(\$procmux$9179_CMP ),
    .Y(\$procmux$9178_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9185  (
    .A(\$depc_en$103 ),
    .B(1'h1),
    .S(\$procmux$9186_CMP ),
    .Y(\$procmux$9185_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9187  (
    .A(1'hx),
    .B(\$procmux$9185_Y ),
    .S(\$procmux$9188_CMP ),
    .Y(\$procmux$9187_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9194  (
    .A({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .B(\$exception_pc$109 ),
    .S(\$procmux$9195_CMP ),
    .Y(\$procmux$9194_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9196  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9194_Y ),
    .S(\$procmux$9197_CMP ),
    .Y(\$procmux$9196_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9203  (
    .A(\$dcsr_en$102 ),
    .B(1'h1),
    .S(\$procmux$9204_CMP ),
    .Y(\$procmux$9203_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9205  (
    .A(1'hx),
    .B(\$procmux$9203_Y ),
    .S(\$procmux$9206_CMP ),
    .Y(\$procmux$9205_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9212  (
    .A(\$dcsr_d$101 [8:6]),
    .B(debug_cause_i),
    .S(\$procmux$9213_CMP ),
    .Y(\$procmux$9212_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9214  (
    .A(3'hx),
    .B(\$procmux$9212_Y ),
    .S(\$procmux$9215_CMP ),
    .Y(\$procmux$9214_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9221  (
    .A(\$dcsr_d$101 [1:0]),
    .B(priv_lvl_q),
    .S(\$procmux$9222_CMP ),
    .Y(\$procmux$9221_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9223  (
    .A(2'hx),
    .B(\$procmux$9221_Y ),
    .S(\$procmux$9224_CMP ),
    .Y(\$procmux$9223_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9231  (
    .A(\$mtval_en$118 ),
    .B(\$mtval_en$99 ),
    .S(\$procmux$9232_CMP ),
    .Y(\$procmux$9231_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9233  (
    .A(1'hx),
    .B(\$procmux$9231_Y ),
    .S(\$procmux$9234_CMP ),
    .Y(\$procmux$9233_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9241  (
    .A(\$mtval_d$117 ),
    .B(\$csr_wdata_int$165 ),
    .S(\$procmux$9242_CMP ),
    .Y(\$procmux$9241_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9243  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9241_Y ),
    .S(\$procmux$9244_CMP ),
    .Y(\$procmux$9243_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9251  (
    .A(\$mcause_en$116 ),
    .B(\$mcause_en$98 ),
    .S(\$procmux$9252_CMP ),
    .Y(\$procmux$9251_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9253  (
    .A(1'hx),
    .B(\$procmux$9251_Y ),
    .S(\$procmux$9254_CMP ),
    .Y(\$procmux$9253_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9261  (
    .A(\$mcause_d$115 ),
    .B({ \$csr_wdata_int$165 [31], \$csr_wdata_int$165 [5:0] }),
    .S(\$procmux$9262_CMP ),
    .Y(\$procmux$9261_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$9263  (
    .A(7'hxx),
    .B(\$procmux$9261_Y ),
    .S(\$procmux$9264_CMP ),
    .Y(\$procmux$9263_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9271  (
    .A(\$mepc_en$114 ),
    .B(\$mepc_en$97 ),
    .S(\$procmux$9272_CMP ),
    .Y(\$procmux$9271_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9273  (
    .A(1'hx),
    .B(\$procmux$9271_Y ),
    .S(\$procmux$9274_CMP ),
    .Y(\$procmux$9273_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9281  (
    .A(\$mepc_d$113 ),
    .B({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .S(\$procmux$9282_CMP ),
    .Y(\$procmux$9281_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9283  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9281_Y ),
    .S(\$procmux$9284_CMP ),
    .Y(\$procmux$9283_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9291  (
    .A(\$mstatus_en$112 ),
    .B(\$mstatus_en$94 ),
    .S(\$procmux$9292_CMP ),
    .Y(\$procmux$9291_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9293  (
    .A(1'hx),
    .B(\$procmux$9291_Y ),
    .S(\$procmux$9294_CMP ),
    .Y(\$procmux$9293_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$9301  (
    .A(\$mstatus_d[5:2]$111 ),
    .B(\$mstatus_d$93 [5:2]),
    .S(\$procmux$9302_CMP ),
    .Y(\$procmux$9301_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$9303  (
    .A(4'hx),
    .B(\$procmux$9301_Y ),
    .S(\$procmux$9304_CMP ),
    .Y(\$procmux$9303_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:628.13-628.36|rtl/cve2/cve2_cs_registers.sv:626.9-634.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9310  (
    .A(pc_id_i),
    .B(pc_if_i),
    .S(\$procmux$9311_CMP ),
    .Y(\$procmux$9310_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9312  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9310_Y ),
    .S(\$procmux$9313_CMP ),
    .Y(\$procmux$9312_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9319  (
    .A(1'h0),
    .B(\$mstack_en$133 ),
    .S(\$procmux$9320_CMP ),
    .Y(\$procmux$9319_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9326  (
    .A(\$depc_en$103 ),
    .B(\$depc_en$132 ),
    .S(\$procmux$9327_CMP ),
    .Y(\$procmux$9326_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9333  (
    .A({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .B(\$depc_d$131 ),
    .S(\$procmux$9334_CMP ),
    .Y(\$procmux$9333_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9340  (
    .A(\$dcsr_en$102 ),
    .B(\$dcsr_en$130 ),
    .S(\$procmux$9341_CMP ),
    .Y(\$procmux$9340_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9347  (
    .A(\$dcsr_d$101 [8:6]),
    .B(\$dcsr_d[8:6]$129 ),
    .S(\$procmux$9348_CMP ),
    .Y(\$procmux$9347_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9354  (
    .A(\$dcsr_d$101 [1:0]),
    .B(\$dcsr_d[1:0]$128 ),
    .S(\$procmux$9355_CMP ),
    .Y(\$procmux$9354_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9361  (
    .A(\$mtval_en$99 ),
    .B(\$mtval_en$127 ),
    .S(\$procmux$9362_CMP ),
    .Y(\$procmux$9361_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9368  (
    .A(\$csr_wdata_int$165 ),
    .B(\$mtval_d$126 ),
    .S(\$procmux$9369_CMP ),
    .Y(\$procmux$9368_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$9373  (
    .A(\$mcause_en$98 ),
    .B({ \$mcause_en$125 , \$mcause_en$140  }),
    .S({ \$procmux$9376_CMP , \$procmux$9374_CMP  }),
    .Y(\$procmux$9373_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd7)
  ) \$procmux$9380  (
    .A({ \$csr_wdata_int$165 [31], \$csr_wdata_int$165 [5:0] }),
    .B({ \$mcause_d$124 , \$mcause_d$139  }),
    .S({ \$procmux$9383_CMP , \$procmux$9381_CMP  }),
    .Y(\$procmux$9380_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$9387  (
    .A(\$mepc_en$97 ),
    .B({ \$mepc_en$123 , \$mepc_en$138  }),
    .S({ \$procmux$9390_CMP , \$procmux$9388_CMP  }),
    .Y(\$procmux$9387_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd32)
  ) \$procmux$9394  (
    .A({ \$csr_wdata_int$165 [31:1], 1'h0 }),
    .B({ \$mepc_d$122 , \$mepc_d$137  }),
    .S({ \$procmux$9397_CMP , \$procmux$9395_CMP  }),
    .Y(\$procmux$9394_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$9401  (
    .A(\$mstatus_en$94 ),
    .B({ \$mstatus_en$121 , 1'h1 }),
    .S({ \$procmux$9404_CMP , \$procmux$9402_CMP  }),
    .Y(\$procmux$9401_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:647.37-664.12|rtl/cve2/cve2_cs_registers.sv:647.18-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9408  (
    .A(1'h1),
    .B(1'h0),
    .S(debug_mode_i),
    .Y(\$procmux$9408_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:639.31-647.12|rtl/cve2/cve2_cs_registers.sv:639.9-664.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9411  (
    .A(\$procmux$9408_Y ),
    .B(1'hx),
    .S(\$procmux$9412_CMP ),
    .Y(\$procmux$9411_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9413  (
    .A(1'hx),
    .B(\$procmux$9411_Y ),
    .S(\$procmux$9414_CMP ),
    .Y(\$procmux$9413_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:671.27-697.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$9418  (
    .A(priv_lvl_q),
    .B({ 2'h3, dcsr_q[1:0], mstatus_q[3:2] }),
    .S({ \$procmux$9422_CMP , \$procmux$9420_CMP , \$procmux$9419_CMP  }),
    .Y(\$procmux$9418_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:625.25-665.10|rtl/cve2/cve2_cs_registers.sv:623.5-700.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9428  (
    .A(pc_id_i),
    .B(\$exception_pc$109 ),
    .S(\$procmux$9429_CMP ),
    .Y(\$procmux$9428_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:561.13-561.37|rtl/cve2/cve2_cs_registers.sv:560.11-562.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9437  (
    .A(\$csr_wdata_int$165 [1:0]),
    .B(2'h3),
    .S(\$procmux$9438_CMP ),
    .Y(\$procmux$9437_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9439  (
    .A(2'hx),
    .B(\$procmux$9437_Y ),
    .S(\$procmux$9440_CMP ),
    .Y(\$procmux$9439_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9440_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b0),
    .Y(\$procmux$9440_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9441  (
    .A(2'hx),
    .B(\$procmux$9439_Y ),
    .S(\$procmux$9442_CMP ),
    .Y(\$procmux$9441_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:535.13-535.40|rtl/cve2/cve2_cs_registers.sv:534.11-536.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9457  (
    .A(\$csr_wdata_int$165 [12:11]),
    .B(2'h3),
    .S(\$procmux$9458_CMP ),
    .Y(\$procmux$9457_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9459  (
    .A(2'hx),
    .B(\$procmux$9457_Y ),
    .S(\$procmux$9460_CMP ),
    .Y(\$procmux$9459_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9460_CMP0  (
    .A(csr_addr_i),
    .B(12'h300),
    .Y(\$procmux$9460_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$9461  (
    .A(2'hx),
    .B(\$procmux$9459_Y ),
    .S(\$procmux$9462_CMP ),
    .Y(\$procmux$9461_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9464  (
    .A(32'd0),
    .B(\$76y ),
    .S(\$procmux$9465_CTRL ),
    .Y(\$procmux$9464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_ANY  (
    .A(\$procmux$9465_CMP ),
    .Y(\$procmux$9465_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP0  (
    .A(csr_addr_i),
    .B(12'hb80),
    .Y(\$procmux$9465_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP1  (
    .A(csr_addr_i),
    .B(12'hb82),
    .Y(\$procmux$9465_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP10  (
    .A(csr_addr_i),
    .B(12'hb8b),
    .Y(\$procmux$9465_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP11  (
    .A(csr_addr_i),
    .B(12'hb8c),
    .Y(\$procmux$9465_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP12  (
    .A(csr_addr_i),
    .B(12'hb8d),
    .Y(\$procmux$9465_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP13  (
    .A(csr_addr_i),
    .B(12'hb8e),
    .Y(\$procmux$9465_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP14  (
    .A(csr_addr_i),
    .B(12'hb8f),
    .Y(\$procmux$9465_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP15  (
    .A(csr_addr_i),
    .B(12'hb90),
    .Y(\$procmux$9465_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP16  (
    .A(csr_addr_i),
    .B(12'hb91),
    .Y(\$procmux$9465_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP17  (
    .A(csr_addr_i),
    .B(12'hb92),
    .Y(\$procmux$9465_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP18  (
    .A(csr_addr_i),
    .B(12'hb93),
    .Y(\$procmux$9465_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP19  (
    .A(csr_addr_i),
    .B(12'hb94),
    .Y(\$procmux$9465_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP2  (
    .A(csr_addr_i),
    .B(12'hb83),
    .Y(\$procmux$9465_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP20  (
    .A(csr_addr_i),
    .B(12'hb95),
    .Y(\$procmux$9465_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP21  (
    .A(csr_addr_i),
    .B(12'hb96),
    .Y(\$procmux$9465_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP22  (
    .A(csr_addr_i),
    .B(12'hb97),
    .Y(\$procmux$9465_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP23  (
    .A(csr_addr_i),
    .B(12'hb98),
    .Y(\$procmux$9465_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP24  (
    .A(csr_addr_i),
    .B(12'hb99),
    .Y(\$procmux$9465_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP25  (
    .A(csr_addr_i),
    .B(12'hb9a),
    .Y(\$procmux$9465_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP26  (
    .A(csr_addr_i),
    .B(12'hb9b),
    .Y(\$procmux$9465_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP27  (
    .A(csr_addr_i),
    .B(12'hb9c),
    .Y(\$procmux$9465_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP28  (
    .A(csr_addr_i),
    .B(12'hb9d),
    .Y(\$procmux$9465_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP29  (
    .A(csr_addr_i),
    .B(12'hb9e),
    .Y(\$procmux$9465_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP3  (
    .A(csr_addr_i),
    .B(12'hb84),
    .Y(\$procmux$9465_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP30  (
    .A(csr_addr_i),
    .B(12'hb9f),
    .Y(\$procmux$9465_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP4  (
    .A(csr_addr_i),
    .B(12'hb85),
    .Y(\$procmux$9465_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP5  (
    .A(csr_addr_i),
    .B(12'hb86),
    .Y(\$procmux$9465_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP6  (
    .A(csr_addr_i),
    .B(12'hb87),
    .Y(\$procmux$9465_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP7  (
    .A(csr_addr_i),
    .B(12'hb88),
    .Y(\$procmux$9465_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP8  (
    .A(csr_addr_i),
    .B(12'hb89),
    .Y(\$procmux$9465_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:615.11-615.51|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9465_CMP9  (
    .A(csr_addr_i),
    .B(12'hb8a),
    .Y(\$procmux$9465_CMP [9])
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9466  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9464_Y ),
    .S(\$procmux$9467_CMP ),
    .Y(\$procmux$9466_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9470  (
    .A(32'd0),
    .B(\$69y ),
    .S(\$procmux$9471_CTRL ),
    .Y(\$procmux$9470_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_ANY  (
    .A(\$procmux$9471_CMP ),
    .Y(\$procmux$9471_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP0  (
    .A(csr_addr_i),
    .B(12'hb00),
    .Y(\$procmux$9471_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP1  (
    .A(csr_addr_i),
    .B(12'hb02),
    .Y(\$procmux$9471_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP10  (
    .A(csr_addr_i),
    .B(12'hb0b),
    .Y(\$procmux$9471_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP11  (
    .A(csr_addr_i),
    .B(12'hb0c),
    .Y(\$procmux$9471_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP12  (
    .A(csr_addr_i),
    .B(12'hb0d),
    .Y(\$procmux$9471_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP13  (
    .A(csr_addr_i),
    .B(12'hb0e),
    .Y(\$procmux$9471_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP14  (
    .A(csr_addr_i),
    .B(12'hb0f),
    .Y(\$procmux$9471_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP15  (
    .A(csr_addr_i),
    .B(12'hb10),
    .Y(\$procmux$9471_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP16  (
    .A(csr_addr_i),
    .B(12'hb11),
    .Y(\$procmux$9471_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP17  (
    .A(csr_addr_i),
    .B(12'hb12),
    .Y(\$procmux$9471_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP18  (
    .A(csr_addr_i),
    .B(12'hb13),
    .Y(\$procmux$9471_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP19  (
    .A(csr_addr_i),
    .B(12'hb14),
    .Y(\$procmux$9471_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP2  (
    .A(csr_addr_i),
    .B(12'hb03),
    .Y(\$procmux$9471_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP20  (
    .A(csr_addr_i),
    .B(12'hb15),
    .Y(\$procmux$9471_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP21  (
    .A(csr_addr_i),
    .B(12'hb16),
    .Y(\$procmux$9471_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP22  (
    .A(csr_addr_i),
    .B(12'hb17),
    .Y(\$procmux$9471_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP23  (
    .A(csr_addr_i),
    .B(12'hb18),
    .Y(\$procmux$9471_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP24  (
    .A(csr_addr_i),
    .B(12'hb19),
    .Y(\$procmux$9471_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP25  (
    .A(csr_addr_i),
    .B(12'hb1a),
    .Y(\$procmux$9471_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP26  (
    .A(csr_addr_i),
    .B(12'hb1b),
    .Y(\$procmux$9471_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP27  (
    .A(csr_addr_i),
    .B(12'hb1c),
    .Y(\$procmux$9471_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP28  (
    .A(csr_addr_i),
    .B(12'hb1d),
    .Y(\$procmux$9471_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP29  (
    .A(csr_addr_i),
    .B(12'hb1e),
    .Y(\$procmux$9471_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP3  (
    .A(csr_addr_i),
    .B(12'hb04),
    .Y(\$procmux$9471_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP30  (
    .A(csr_addr_i),
    .B(12'hb1f),
    .Y(\$procmux$9471_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP4  (
    .A(csr_addr_i),
    .B(12'hb05),
    .Y(\$procmux$9471_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP5  (
    .A(csr_addr_i),
    .B(12'hb06),
    .Y(\$procmux$9471_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP6  (
    .A(csr_addr_i),
    .B(12'hb07),
    .Y(\$procmux$9471_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP7  (
    .A(csr_addr_i),
    .B(12'hb08),
    .Y(\$procmux$9471_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP8  (
    .A(csr_addr_i),
    .B(12'hb09),
    .Y(\$procmux$9471_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:602.11-602.50|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9471_CMP9  (
    .A(csr_addr_i),
    .B(12'hb0a),
    .Y(\$procmux$9471_CMP [9])
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9472  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9470_Y ),
    .S(\$procmux$9473_CMP ),
    .Y(\$procmux$9472_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:590.28-590.52|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9477  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9478_CMP ),
    .Y(\$procmux$9477_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:590.28-590.52|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9478_CMP0  (
    .A(csr_addr_i),
    .B(12'h320),
    .Y(\$procmux$9478_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9479  (
    .A(1'hx),
    .B(\$procmux$9477_Y ),
    .S(\$procmux$9480_CMP ),
    .Y(\$procmux$9479_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:587.24-587.44|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9485  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9486_CMP ),
    .Y(\$procmux$9485_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:587.24-587.44|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9486_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b3),
    .Y(\$procmux$9486_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9487  (
    .A(1'hx),
    .B(\$procmux$9485_Y ),
    .S(\$procmux$9488_CMP ),
    .Y(\$procmux$9487_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:586.24-586.44|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9494  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9495_CMP ),
    .Y(\$procmux$9494_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:586.24-586.44|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9495_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b2),
    .Y(\$procmux$9495_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9496  (
    .A(1'hx),
    .B(\$procmux$9494_Y ),
    .S(\$procmux$9497_CMP ),
    .Y(\$procmux$9496_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:584.18-584.33|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9504  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9505_CMP ),
    .Y(\$procmux$9504_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:584.18-584.33|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9505_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b1),
    .Y(\$procmux$9505_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9506  (
    .A(1'hx),
    .B(\$procmux$9504_Y ),
    .S(\$procmux$9507_CMP ),
    .Y(\$procmux$9506_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9516  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9517_CMP ),
    .Y(\$procmux$9516_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9517_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b0),
    .Y(\$procmux$9517_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9518  (
    .A(1'hx),
    .B(\$procmux$9516_Y ),
    .S(\$procmux$9519_CMP ),
    .Y(\$procmux$9518_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9528  (
    .A(dcsr_q),
    .B({ 16'h4000, \$csr_wdata_int$165 [15], 1'h0, \$csr_wdata_int$165 [13:12], 3'h0, dcsr_q[8:6], 3'h0, \$csr_wdata_int$165 [2], \$dcsr_d[1:0]$62  }),
    .S(\$procmux$9529_CMP ),
    .Y(\$procmux$9528_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:556.19-581.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9529_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b0),
    .Y(\$procmux$9529_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9530  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$9528_Y ),
    .S(\$procmux$9531_CMP ),
    .Y(\$procmux$9530_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:554.20-554.36|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9540  (
    .A(csr_mtvec_init_i),
    .B(1'h1),
    .S(\$procmux$9541_CMP ),
    .Y(\$procmux$9540_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:554.20-554.36|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9541_CMP0  (
    .A(csr_addr_i),
    .B(12'h305),
    .Y(\$procmux$9541_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9542  (
    .A(1'hx),
    .B(\$procmux$9540_Y ),
    .S(\$procmux$9543_CMP ),
    .Y(\$procmux$9542_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:551.20-551.36|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9553  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9554_CMP ),
    .Y(\$procmux$9553_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:551.20-551.36|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9554_CMP0  (
    .A(csr_addr_i),
    .B(12'h343),
    .Y(\$procmux$9554_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9555  (
    .A(1'hx),
    .B(\$procmux$9553_Y ),
    .S(\$procmux$9556_CMP ),
    .Y(\$procmux$9555_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:548.21-548.38|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9567  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9568_CMP ),
    .Y(\$procmux$9567_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:548.21-548.38|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9568_CMP0  (
    .A(csr_addr_i),
    .B(12'h342),
    .Y(\$procmux$9568_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9569  (
    .A(1'hx),
    .B(\$procmux$9567_Y ),
    .S(\$procmux$9570_CMP ),
    .Y(\$procmux$9569_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:545.19-545.34|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9582  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9583_CMP ),
    .Y(\$procmux$9582_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:545.19-545.34|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9583_CMP0  (
    .A(csr_addr_i),
    .B(12'h341),
    .Y(\$procmux$9583_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9584  (
    .A(1'hx),
    .B(\$procmux$9582_Y ),
    .S(\$procmux$9585_CMP ),
    .Y(\$procmux$9584_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:542.23-542.42|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9598  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9599_CMP ),
    .Y(\$procmux$9598_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:542.23-542.42|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9599_CMP0  (
    .A(csr_addr_i),
    .B(12'h340),
    .Y(\$procmux$9599_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9600  (
    .A(1'hx),
    .B(\$procmux$9598_Y ),
    .S(\$procmux$9601_CMP ),
    .Y(\$procmux$9600_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:540.18-540.32|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9615  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9616_CMP ),
    .Y(\$procmux$9615_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:540.18-540.32|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9616_CMP0  (
    .A(csr_addr_i),
    .B(12'h304),
    .Y(\$procmux$9616_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9617  (
    .A(1'hx),
    .B(\$procmux$9615_Y ),
    .S(\$procmux$9618_CMP ),
    .Y(\$procmux$9617_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9634  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9635_CMP ),
    .Y(\$procmux$9634_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9635_CMP0  (
    .A(csr_addr_i),
    .B(12'h300),
    .Y(\$procmux$9635_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9636  (
    .A(1'hx),
    .B(\$procmux$9634_Y ),
    .S(\$procmux$9637_CMP ),
    .Y(\$procmux$9636_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$9653  (
    .A(mstatus_q),
    .B({ \$csr_wdata_int$165 [3], \$csr_wdata_int$165 [7], \$mstatus_d[3:2]$58 , \$csr_wdata_int$165 [17], \$csr_wdata_int$165 [21] }),
    .S(\$procmux$9654_CMP ),
    .Y(\$procmux$9653_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:524.22-537.12|rtl/cve2/cve2_cs_registers.sv:522.7-619.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9654_CMP0  (
    .A(csr_addr_i),
    .B(12'h300),
    .Y(\$procmux$9654_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$9655  (
    .A(6'hxx),
    .B(\$procmux$9653_Y ),
    .S(\$procmux$9656_CMP ),
    .Y(\$procmux$9655_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9658  (
    .A(32'd0),
    .B(\$mhpmcounterh_we$92 ),
    .S(\$procmux$9659_CMP ),
    .Y(\$procmux$9658_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9661  (
    .A(32'd0),
    .B(\$mhpmcounter_we$91 ),
    .S(\$procmux$9662_CMP ),
    .Y(\$procmux$9661_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9664  (
    .A(1'h0),
    .B(\$mcountinhibit_we$90 ),
    .S(\$procmux$9665_CMP ),
    .Y(\$procmux$9664_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9667  (
    .A(1'h0),
    .B(\$dscratch1_en$89 ),
    .S(\$procmux$9668_CMP ),
    .Y(\$procmux$9667_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9670  (
    .A(1'h0),
    .B(\$dscratch0_en$88 ),
    .S(\$procmux$9671_CMP ),
    .Y(\$procmux$9670_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9673  (
    .A(1'h0),
    .B(\$depc_en$87 ),
    .S(\$procmux$9674_CMP ),
    .Y(\$procmux$9673_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9676  (
    .A(1'h0),
    .B(\$dcsr_en$86 ),
    .S(\$procmux$9677_CMP ),
    .Y(\$procmux$9676_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9679  (
    .A(dcsr_q),
    .B(\$dcsr_d$85 ),
    .S(\$procmux$9680_CMP ),
    .Y(\$procmux$9679_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9682  (
    .A(csr_mtvec_init_i),
    .B(\$mtvec_en$84 ),
    .S(\$procmux$9683_CMP ),
    .Y(\$procmux$9682_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9685  (
    .A(1'h0),
    .B(\$mtval_en$83 ),
    .S(\$procmux$9686_CMP ),
    .Y(\$procmux$9685_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9688  (
    .A(1'h0),
    .B(\$mcause_en$82 ),
    .S(\$procmux$9689_CMP ),
    .Y(\$procmux$9688_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9691  (
    .A(1'h0),
    .B(\$mepc_en$81 ),
    .S(\$procmux$9692_CMP ),
    .Y(\$procmux$9691_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9694  (
    .A(1'h0),
    .B(\$mscratch_en$80 ),
    .S(\$procmux$9695_CMP ),
    .Y(\$procmux$9694_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9697  (
    .A(1'h0),
    .B(\$mie_en$79 ),
    .S(\$procmux$9698_CMP ),
    .Y(\$procmux$9697_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9700  (
    .A(1'h0),
    .B(\$mstatus_en$78 ),
    .S(\$procmux$9701_CMP ),
    .Y(\$procmux$9700_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:522.7-619.14|rtl/cve2/cve2_cs_registers.sv:521.5-620.8" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$9703  (
    .A(mstatus_q),
    .B(\$mstatus_d$77 ),
    .S(\$procmux$9704_CMP ),
    .Y(\$procmux$9703_Y )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:479.9-479.28|rtl/cve2/cve2_cs_registers.sv:474.7-480.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9707  (
    .A(\$illegal_csr$29 ),
    .B(1'h1),
    .S(\$procmux$9708_CMP ),
    .Y(\$procmux$9707_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:348.9-352.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9746  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$9747_CMP ),
    .Y(\$procmux$9746_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:348.9-352.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9747_CMP0  (
    .A(csr_addr_i),
    .B(12'h757),
    .Y(\$procmux$9747_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:337.9-344.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9785  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$9786_CMP ),
    .Y(\$procmux$9785_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:337.9-344.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9786_CMP0  (
    .A(csr_addr_i),
    .B(12'h747),
    .Y(\$procmux$9786_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:465.9-465.28|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$pmux  #(
    .S_WIDTH(32'd54),
    .WIDTH(32'd1)
  ) \$procmux$9788  (
    .A(1'h1),
    .B({ 17'h00000, \$illegal_csr$7 , \$illegal_csr$8 , 20'h00000, \$9y , \$10y , \$11y , \$12y , 11'h000 }),
    .S({ \$procmux$9842_CMP , \$procmux$9841_CMP , \$procmux$9840_CMP , \$procmux$9839_CMP , \$procmux$9838_CMP , \$procmux$9837_CMP , \$procmux$9836_CMP , \$procmux$9835_CTRL , \$procmux$9834_CMP , \$procmux$9833_CMP , \$procmux$9832_CMP , \$procmux$9831_CMP , \$procmux$9830_CMP , \$procmux$9829_CMP , \$procmux$9828_CMP , \$procmux$9827_CMP , \$procmux$9826_CMP , \$procmux$9825_CMP , \$procmux$9824_CMP , \$procmux$9823_CMP , \$procmux$9822_CMP , \$procmux$9821_CMP , \$procmux$9820_CMP , \$procmux$9819_CMP , \$procmux$9818_CMP , \$procmux$9817_CMP , \$procmux$9816_CMP , \$procmux$9815_CMP , \$procmux$9814_CMP , \$procmux$9813_CMP , \$procmux$9812_CMP , \$procmux$9811_CMP , \$procmux$9810_CMP , \$procmux$9809_CMP , \$procmux$9808_CMP , \$procmux$9807_CMP , \$procmux$9806_CMP , \$procmux$9805_CMP , \$procmux$9804_CMP , \$procmux$9803_CMP , \$procmux$9802_CMP , \$procmux$9801_CMP , \$procmux$9800_CMP , \$procmux$9799_CMP , \$procmux$9798_CTRL , \$procmux$9797_CTRL , \$procmux$9796_CTRL , \$procmux$9795_CMP , \$procmux$9794_CMP , \$procmux$9793_CMP , \$procmux$9792_CMP , \$procmux$9791_CMP , \$procmux$9790_CMP , \$procmux$9789_CMP  }),
    .Y(\$procmux$9788_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:465.9-465.28|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9789_CMP0  (
    .A(csr_addr_i),
    .B(12'h7c1),
    .Y(\$procmux$9789_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:458.21-461.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9790_CMP0  (
    .A(csr_addr_i),
    .B(12'h7aa),
    .Y(\$procmux$9790_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:454.21-457.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9791_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a8),
    .Y(\$procmux$9791_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:450.19-453.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9792_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a3),
    .Y(\$procmux$9792_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:446.19-449.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9793_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a2),
    .Y(\$procmux$9793_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:442.19-445.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9794_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a1),
    .Y(\$procmux$9794_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:438.20-441.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9795_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a0),
    .Y(\$procmux$9795_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_ANY  (
    .A(\$procmux$9796_CMP ),
    .Y(\$procmux$9796_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP0  (
    .A(csr_addr_i),
    .B(12'hb80),
    .Y(\$procmux$9796_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP1  (
    .A(csr_addr_i),
    .B(12'hb82),
    .Y(\$procmux$9796_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP10  (
    .A(csr_addr_i),
    .B(12'hb8b),
    .Y(\$procmux$9796_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP11  (
    .A(csr_addr_i),
    .B(12'hb8c),
    .Y(\$procmux$9796_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP12  (
    .A(csr_addr_i),
    .B(12'hb8d),
    .Y(\$procmux$9796_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP13  (
    .A(csr_addr_i),
    .B(12'hb8e),
    .Y(\$procmux$9796_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP14  (
    .A(csr_addr_i),
    .B(12'hb8f),
    .Y(\$procmux$9796_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP15  (
    .A(csr_addr_i),
    .B(12'hb90),
    .Y(\$procmux$9796_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP16  (
    .A(csr_addr_i),
    .B(12'hb91),
    .Y(\$procmux$9796_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP17  (
    .A(csr_addr_i),
    .B(12'hb92),
    .Y(\$procmux$9796_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP18  (
    .A(csr_addr_i),
    .B(12'hb93),
    .Y(\$procmux$9796_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP19  (
    .A(csr_addr_i),
    .B(12'hb94),
    .Y(\$procmux$9796_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP2  (
    .A(csr_addr_i),
    .B(12'hb83),
    .Y(\$procmux$9796_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP20  (
    .A(csr_addr_i),
    .B(12'hb95),
    .Y(\$procmux$9796_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP21  (
    .A(csr_addr_i),
    .B(12'hb96),
    .Y(\$procmux$9796_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP22  (
    .A(csr_addr_i),
    .B(12'hb97),
    .Y(\$procmux$9796_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP23  (
    .A(csr_addr_i),
    .B(12'hb98),
    .Y(\$procmux$9796_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP24  (
    .A(csr_addr_i),
    .B(12'hb99),
    .Y(\$procmux$9796_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP25  (
    .A(csr_addr_i),
    .B(12'hb9a),
    .Y(\$procmux$9796_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP26  (
    .A(csr_addr_i),
    .B(12'hb9b),
    .Y(\$procmux$9796_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP27  (
    .A(csr_addr_i),
    .B(12'hb9c),
    .Y(\$procmux$9796_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP28  (
    .A(csr_addr_i),
    .B(12'hb9d),
    .Y(\$procmux$9796_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP29  (
    .A(csr_addr_i),
    .B(12'hb9e),
    .Y(\$procmux$9796_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP3  (
    .A(csr_addr_i),
    .B(12'hb84),
    .Y(\$procmux$9796_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP30  (
    .A(csr_addr_i),
    .B(12'hb9f),
    .Y(\$procmux$9796_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP4  (
    .A(csr_addr_i),
    .B(12'hb85),
    .Y(\$procmux$9796_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP5  (
    .A(csr_addr_i),
    .B(12'hb86),
    .Y(\$procmux$9796_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP6  (
    .A(csr_addr_i),
    .B(12'hb87),
    .Y(\$procmux$9796_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP7  (
    .A(csr_addr_i),
    .B(12'hb88),
    .Y(\$procmux$9796_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP8  (
    .A(csr_addr_i),
    .B(12'hb89),
    .Y(\$procmux$9796_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9796_CMP9  (
    .A(csr_addr_i),
    .B(12'hb8a),
    .Y(\$procmux$9796_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_ANY  (
    .A(\$procmux$9797_CMP ),
    .Y(\$procmux$9797_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP0  (
    .A(csr_addr_i),
    .B(12'hb00),
    .Y(\$procmux$9797_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP1  (
    .A(csr_addr_i),
    .B(12'hb02),
    .Y(\$procmux$9797_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP10  (
    .A(csr_addr_i),
    .B(12'hb0b),
    .Y(\$procmux$9797_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP11  (
    .A(csr_addr_i),
    .B(12'hb0c),
    .Y(\$procmux$9797_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP12  (
    .A(csr_addr_i),
    .B(12'hb0d),
    .Y(\$procmux$9797_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP13  (
    .A(csr_addr_i),
    .B(12'hb0e),
    .Y(\$procmux$9797_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP14  (
    .A(csr_addr_i),
    .B(12'hb0f),
    .Y(\$procmux$9797_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP15  (
    .A(csr_addr_i),
    .B(12'hb10),
    .Y(\$procmux$9797_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP16  (
    .A(csr_addr_i),
    .B(12'hb11),
    .Y(\$procmux$9797_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP17  (
    .A(csr_addr_i),
    .B(12'hb12),
    .Y(\$procmux$9797_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP18  (
    .A(csr_addr_i),
    .B(12'hb13),
    .Y(\$procmux$9797_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP19  (
    .A(csr_addr_i),
    .B(12'hb14),
    .Y(\$procmux$9797_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP2  (
    .A(csr_addr_i),
    .B(12'hb03),
    .Y(\$procmux$9797_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP20  (
    .A(csr_addr_i),
    .B(12'hb15),
    .Y(\$procmux$9797_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP21  (
    .A(csr_addr_i),
    .B(12'hb16),
    .Y(\$procmux$9797_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP22  (
    .A(csr_addr_i),
    .B(12'hb17),
    .Y(\$procmux$9797_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP23  (
    .A(csr_addr_i),
    .B(12'hb18),
    .Y(\$procmux$9797_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP24  (
    .A(csr_addr_i),
    .B(12'hb19),
    .Y(\$procmux$9797_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP25  (
    .A(csr_addr_i),
    .B(12'hb1a),
    .Y(\$procmux$9797_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP26  (
    .A(csr_addr_i),
    .B(12'hb1b),
    .Y(\$procmux$9797_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP27  (
    .A(csr_addr_i),
    .B(12'hb1c),
    .Y(\$procmux$9797_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP28  (
    .A(csr_addr_i),
    .B(12'hb1d),
    .Y(\$procmux$9797_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP29  (
    .A(csr_addr_i),
    .B(12'hb1e),
    .Y(\$procmux$9797_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP3  (
    .A(csr_addr_i),
    .B(12'hb04),
    .Y(\$procmux$9797_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP30  (
    .A(csr_addr_i),
    .B(12'hb1f),
    .Y(\$procmux$9797_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP4  (
    .A(csr_addr_i),
    .B(12'hb05),
    .Y(\$procmux$9797_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP5  (
    .A(csr_addr_i),
    .B(12'hb06),
    .Y(\$procmux$9797_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP6  (
    .A(csr_addr_i),
    .B(12'hb07),
    .Y(\$procmux$9797_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP7  (
    .A(csr_addr_i),
    .B(12'hb08),
    .Y(\$procmux$9797_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP8  (
    .A(csr_addr_i),
    .B(12'hb09),
    .Y(\$procmux$9797_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9797_CMP9  (
    .A(csr_addr_i),
    .B(12'hb0a),
    .Y(\$procmux$9797_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd29),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_ANY  (
    .A(\$procmux$9798_CMP ),
    .Y(\$procmux$9798_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP0  (
    .A(csr_addr_i),
    .B(12'h323),
    .Y(\$procmux$9798_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP1  (
    .A(csr_addr_i),
    .B(12'h324),
    .Y(\$procmux$9798_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP10  (
    .A(csr_addr_i),
    .B(12'h32d),
    .Y(\$procmux$9798_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP11  (
    .A(csr_addr_i),
    .B(12'h32e),
    .Y(\$procmux$9798_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP12  (
    .A(csr_addr_i),
    .B(12'h32f),
    .Y(\$procmux$9798_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP13  (
    .A(csr_addr_i),
    .B(12'h330),
    .Y(\$procmux$9798_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP14  (
    .A(csr_addr_i),
    .B(12'h331),
    .Y(\$procmux$9798_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP15  (
    .A(csr_addr_i),
    .B(12'h332),
    .Y(\$procmux$9798_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP16  (
    .A(csr_addr_i),
    .B(12'h333),
    .Y(\$procmux$9798_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP17  (
    .A(csr_addr_i),
    .B(12'h334),
    .Y(\$procmux$9798_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP18  (
    .A(csr_addr_i),
    .B(12'h335),
    .Y(\$procmux$9798_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP19  (
    .A(csr_addr_i),
    .B(12'h336),
    .Y(\$procmux$9798_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP2  (
    .A(csr_addr_i),
    .B(12'h325),
    .Y(\$procmux$9798_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP20  (
    .A(csr_addr_i),
    .B(12'h337),
    .Y(\$procmux$9798_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP21  (
    .A(csr_addr_i),
    .B(12'h338),
    .Y(\$procmux$9798_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP22  (
    .A(csr_addr_i),
    .B(12'h339),
    .Y(\$procmux$9798_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP23  (
    .A(csr_addr_i),
    .B(12'h33a),
    .Y(\$procmux$9798_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP24  (
    .A(csr_addr_i),
    .B(12'h33b),
    .Y(\$procmux$9798_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP25  (
    .A(csr_addr_i),
    .B(12'h33c),
    .Y(\$procmux$9798_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP26  (
    .A(csr_addr_i),
    .B(12'h33d),
    .Y(\$procmux$9798_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP27  (
    .A(csr_addr_i),
    .B(12'h33e),
    .Y(\$procmux$9798_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP28  (
    .A(csr_addr_i),
    .B(12'h33f),
    .Y(\$procmux$9798_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP3  (
    .A(csr_addr_i),
    .B(12'h326),
    .Y(\$procmux$9798_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP4  (
    .A(csr_addr_i),
    .B(12'h327),
    .Y(\$procmux$9798_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP5  (
    .A(csr_addr_i),
    .B(12'h328),
    .Y(\$procmux$9798_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP6  (
    .A(csr_addr_i),
    .B(12'h329),
    .Y(\$procmux$9798_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP7  (
    .A(csr_addr_i),
    .B(12'h32a),
    .Y(\$procmux$9798_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP8  (
    .A(csr_addr_i),
    .B(12'h32b),
    .Y(\$procmux$9798_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9798_CMP9  (
    .A(csr_addr_i),
    .B(12'h32c),
    .Y(\$procmux$9798_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:399.26-399.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9799_CMP0  (
    .A(csr_addr_i),
    .B(12'h320),
    .Y(\$procmux$9799_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:393.22-396.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9800_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b3),
    .Y(\$procmux$9800_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:389.22-392.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9801_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b2),
    .Y(\$procmux$9801_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:385.16-388.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9802_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b1),
    .Y(\$procmux$9802_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:381.17-384.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9803_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b0),
    .Y(\$procmux$9803_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:379.22-379.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9804_CMP0  (
    .A(csr_addr_i),
    .B(12'h3bf),
    .Y(\$procmux$9804_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:378.22-378.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9805_CMP0  (
    .A(csr_addr_i),
    .B(12'h3be),
    .Y(\$procmux$9805_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:377.22-377.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9806_CMP0  (
    .A(csr_addr_i),
    .B(12'h3bd),
    .Y(\$procmux$9806_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:376.22-376.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9807_CMP0  (
    .A(csr_addr_i),
    .B(12'h3bc),
    .Y(\$procmux$9807_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:375.22-375.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9808_CMP0  (
    .A(csr_addr_i),
    .B(12'h3bb),
    .Y(\$procmux$9808_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:374.22-374.57|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9809_CMP0  (
    .A(csr_addr_i),
    .B(12'h3ba),
    .Y(\$procmux$9809_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:373.22-373.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9810_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b9),
    .Y(\$procmux$9810_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:372.22-372.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9811_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b8),
    .Y(\$procmux$9811_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:371.22-371.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9812_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b7),
    .Y(\$procmux$9812_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:370.22-370.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9813_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b6),
    .Y(\$procmux$9813_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:369.22-369.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9814_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b5),
    .Y(\$procmux$9814_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:368.22-368.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9815_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b4),
    .Y(\$procmux$9815_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:367.22-367.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9816_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b3),
    .Y(\$procmux$9816_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:366.22-366.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9817_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b2),
    .Y(\$procmux$9817_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:365.22-365.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9818_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b1),
    .Y(\$procmux$9818_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:364.22-364.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9819_CMP0  (
    .A(csr_addr_i),
    .B(12'h3b0),
    .Y(\$procmux$9819_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:362.22-363.77|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9820_CMP0  (
    .A(csr_addr_i),
    .B(12'h3a3),
    .Y(\$procmux$9820_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:360.22-361.76|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9821_CMP0  (
    .A(csr_addr_i),
    .B(12'h3a2),
    .Y(\$procmux$9821_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:358.22-359.76|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9822_CMP0  (
    .A(csr_addr_i),
    .B(12'h3a1),
    .Y(\$procmux$9822_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:356.22-357.76|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9823_CMP0  (
    .A(csr_addr_i),
    .B(12'h3a0),
    .Y(\$procmux$9823_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:348.9-352.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9824_CMP0  (
    .A(csr_addr_i),
    .B(12'h757),
    .Y(\$procmux$9824_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:337.9-344.12|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9825_CMP0  (
    .A(csr_addr_i),
    .B(12'h747),
    .Y(\$procmux$9825_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:328.16-334.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9826_CMP0  (
    .A(csr_addr_i),
    .B(12'h344),
    .Y(\$procmux$9826_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:325.18-325.42|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9827_CMP0  (
    .A(csr_addr_i),
    .B(12'h343),
    .Y(\$procmux$9827_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:322.19-322.71|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9828_CMP0  (
    .A(csr_addr_i),
    .B(12'h342),
    .Y(\$procmux$9828_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:319.17-319.40|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9829_CMP0  (
    .A(csr_addr_i),
    .B(12'h341),
    .Y(\$procmux$9829_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:316.18-316.42|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9830_CMP0  (
    .A(csr_addr_i),
    .B(12'h305),
    .Y(\$procmux$9830_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:313.21-313.48|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9831_CMP0  (
    .A(csr_addr_i),
    .B(12'h340),
    .Y(\$procmux$9831_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:310.9-310.28|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9832_CMP0  (
    .A(csr_addr_i),
    .B(12'h306),
    .Y(\$procmux$9832_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:300.16-306.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9833_CMP0  (
    .A(csr_addr_i),
    .B(12'h304),
    .Y(\$procmux$9833_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:297.17-297.44|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9834_CMP0  (
    .A(csr_addr_i),
    .B(12'h301),
    .Y(\$procmux$9834_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:294.34-294.53|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$9835_ANY  (
    .A(\$procmux$9835_CMP ),
    .Y(\$procmux$9835_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:294.34-294.53|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9835_CMP0  (
    .A(csr_addr_i),
    .B(12'h30a),
    .Y(\$procmux$9835_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:294.34-294.53|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9835_CMP1  (
    .A(csr_addr_i),
    .B(12'h31a),
    .Y(\$procmux$9835_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:290.21-290.40|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9836_CMP0  (
    .A(csr_addr_i),
    .B(12'h310),
    .Y(\$procmux$9836_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:280.20-287.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9837_CMP0  (
    .A(csr_addr_i),
    .B(12'h300),
    .Y(\$procmux$9837_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:277.23-277.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9838_CMP0  (
    .A(csr_addr_i),
    .B(12'hf15),
    .Y(\$procmux$9838_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:275.20-275.46|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9839_CMP0  (
    .A(csr_addr_i),
    .B(12'hf14),
    .Y(\$procmux$9839_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:273.19-273.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9840_CMP0  (
    .A(csr_addr_i),
    .B(12'hf13),
    .Y(\$procmux$9840_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:271.20-271.54|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9841_CMP0  (
    .A(csr_addr_i),
    .B(12'hf12),
    .Y(\$procmux$9841_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:269.22-269.58|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9842_CMP0  (
    .A(csr_addr_i),
    .B(12'hf11),
    .Y(\$procmux$9842_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:446.19-449.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$pmux  #(
    .S_WIDTH(32'd23),
    .WIDTH(32'd32)
  ) \$procmux$9848  (
    .A(32'd0),
    .B({ 64'h0000060200000023, hart_id_i, 10'h000, mstatus_q[0], 3'h0, mstatus_q[1], 4'h0, mstatus_q[3:2], 3'h0, mstatus_q[4], 3'h0, mstatus_q[5], 35'h040100104, mie_q[15:0], 4'h0, mie_q[16], 3'h0, mie_q[17], 3'h0, mie_q[18], 3'h0, mscratch_q, mtvec_q, mepc_q, mcause_q[6], 25'h0000000, mcause_q[5:0], mtval_q, irq_fast_i, 4'h0, irq_external_i, 3'h0, irq_timer_i, 3'h0, irq_software_i, 3'h0, dcsr_q, depc_q, dscratch0_q, dscratch1_q, 29'h1fffffff, mcountinhibit_q, \$17y , \$22y [31:0], \$27y [63:32], 31'h00000000, \gen_trigger_regs.tselect_q , 29'h05000209, \gen_trigger_regs.tmatch_control_q , 2'h0, \gen_trigger_regs.tmatch_value_q  }),
    .S({ \$procmux$9871_CMP , \$procmux$9870_CMP , \$procmux$9869_CMP , \$procmux$9868_CMP , \$procmux$9867_CMP , \$procmux$9866_CMP , \$procmux$9865_CMP , \$procmux$9864_CMP , \$procmux$9863_CMP , \$procmux$9862_CMP , \$procmux$9861_CMP , \$procmux$9860_CMP , \$procmux$9859_CMP , \$procmux$9858_CMP , \$procmux$9857_CMP , \$procmux$9856_CMP , \$procmux$9855_CMP , \$procmux$9854_CTRL , \$procmux$9853_CTRL , \$procmux$9852_CTRL , \$procmux$9851_CMP , \$procmux$9850_CMP , \$procmux$9849_CMP  }),
    .Y(\$procmux$9848_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:446.19-449.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9849_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a2),
    .Y(\$procmux$9849_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:442.19-445.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9850_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a1),
    .Y(\$procmux$9850_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:438.20-441.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9851_CMP0  (
    .A(csr_addr_i),
    .B(12'h7a0),
    .Y(\$procmux$9851_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_ANY  (
    .A(\$procmux$9852_CMP ),
    .Y(\$procmux$9852_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP0  (
    .A(csr_addr_i),
    .B(12'hb80),
    .Y(\$procmux$9852_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP1  (
    .A(csr_addr_i),
    .B(12'hb82),
    .Y(\$procmux$9852_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP10  (
    .A(csr_addr_i),
    .B(12'hb8b),
    .Y(\$procmux$9852_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP11  (
    .A(csr_addr_i),
    .B(12'hb8c),
    .Y(\$procmux$9852_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP12  (
    .A(csr_addr_i),
    .B(12'hb8d),
    .Y(\$procmux$9852_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP13  (
    .A(csr_addr_i),
    .B(12'hb8e),
    .Y(\$procmux$9852_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP14  (
    .A(csr_addr_i),
    .B(12'hb8f),
    .Y(\$procmux$9852_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP15  (
    .A(csr_addr_i),
    .B(12'hb90),
    .Y(\$procmux$9852_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP16  (
    .A(csr_addr_i),
    .B(12'hb91),
    .Y(\$procmux$9852_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP17  (
    .A(csr_addr_i),
    .B(12'hb92),
    .Y(\$procmux$9852_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP18  (
    .A(csr_addr_i),
    .B(12'hb93),
    .Y(\$procmux$9852_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP19  (
    .A(csr_addr_i),
    .B(12'hb94),
    .Y(\$procmux$9852_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP2  (
    .A(csr_addr_i),
    .B(12'hb83),
    .Y(\$procmux$9852_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP20  (
    .A(csr_addr_i),
    .B(12'hb95),
    .Y(\$procmux$9852_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP21  (
    .A(csr_addr_i),
    .B(12'hb96),
    .Y(\$procmux$9852_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP22  (
    .A(csr_addr_i),
    .B(12'hb97),
    .Y(\$procmux$9852_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP23  (
    .A(csr_addr_i),
    .B(12'hb98),
    .Y(\$procmux$9852_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP24  (
    .A(csr_addr_i),
    .B(12'hb99),
    .Y(\$procmux$9852_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP25  (
    .A(csr_addr_i),
    .B(12'hb9a),
    .Y(\$procmux$9852_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP26  (
    .A(csr_addr_i),
    .B(12'hb9b),
    .Y(\$procmux$9852_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP27  (
    .A(csr_addr_i),
    .B(12'hb9c),
    .Y(\$procmux$9852_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP28  (
    .A(csr_addr_i),
    .B(12'hb9d),
    .Y(\$procmux$9852_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP29  (
    .A(csr_addr_i),
    .B(12'hb9e),
    .Y(\$procmux$9852_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP3  (
    .A(csr_addr_i),
    .B(12'hb84),
    .Y(\$procmux$9852_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP30  (
    .A(csr_addr_i),
    .B(12'hb9f),
    .Y(\$procmux$9852_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP4  (
    .A(csr_addr_i),
    .B(12'hb85),
    .Y(\$procmux$9852_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP5  (
    .A(csr_addr_i),
    .B(12'hb86),
    .Y(\$procmux$9852_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP6  (
    .A(csr_addr_i),
    .B(12'hb87),
    .Y(\$procmux$9852_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP7  (
    .A(csr_addr_i),
    .B(12'hb88),
    .Y(\$procmux$9852_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP8  (
    .A(csr_addr_i),
    .B(12'hb89),
    .Y(\$procmux$9852_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:434.9-434.61|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9852_CMP9  (
    .A(csr_addr_i),
    .B(12'hb8a),
    .Y(\$procmux$9852_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_ANY  (
    .A(\$procmux$9853_CMP ),
    .Y(\$procmux$9853_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP0  (
    .A(csr_addr_i),
    .B(12'hb00),
    .Y(\$procmux$9853_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP1  (
    .A(csr_addr_i),
    .B(12'hb02),
    .Y(\$procmux$9853_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP10  (
    .A(csr_addr_i),
    .B(12'hb0b),
    .Y(\$procmux$9853_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP11  (
    .A(csr_addr_i),
    .B(12'hb0c),
    .Y(\$procmux$9853_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP12  (
    .A(csr_addr_i),
    .B(12'hb0d),
    .Y(\$procmux$9853_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP13  (
    .A(csr_addr_i),
    .B(12'hb0e),
    .Y(\$procmux$9853_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP14  (
    .A(csr_addr_i),
    .B(12'hb0f),
    .Y(\$procmux$9853_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP15  (
    .A(csr_addr_i),
    .B(12'hb10),
    .Y(\$procmux$9853_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP16  (
    .A(csr_addr_i),
    .B(12'hb11),
    .Y(\$procmux$9853_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP17  (
    .A(csr_addr_i),
    .B(12'hb12),
    .Y(\$procmux$9853_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP18  (
    .A(csr_addr_i),
    .B(12'hb13),
    .Y(\$procmux$9853_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP19  (
    .A(csr_addr_i),
    .B(12'hb14),
    .Y(\$procmux$9853_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP2  (
    .A(csr_addr_i),
    .B(12'hb03),
    .Y(\$procmux$9853_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP20  (
    .A(csr_addr_i),
    .B(12'hb15),
    .Y(\$procmux$9853_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP21  (
    .A(csr_addr_i),
    .B(12'hb16),
    .Y(\$procmux$9853_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP22  (
    .A(csr_addr_i),
    .B(12'hb17),
    .Y(\$procmux$9853_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP23  (
    .A(csr_addr_i),
    .B(12'hb18),
    .Y(\$procmux$9853_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP24  (
    .A(csr_addr_i),
    .B(12'hb19),
    .Y(\$procmux$9853_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP25  (
    .A(csr_addr_i),
    .B(12'hb1a),
    .Y(\$procmux$9853_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP26  (
    .A(csr_addr_i),
    .B(12'hb1b),
    .Y(\$procmux$9853_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP27  (
    .A(csr_addr_i),
    .B(12'hb1c),
    .Y(\$procmux$9853_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP28  (
    .A(csr_addr_i),
    .B(12'hb1d),
    .Y(\$procmux$9853_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP29  (
    .A(csr_addr_i),
    .B(12'hb1e),
    .Y(\$procmux$9853_CMP [29])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP3  (
    .A(csr_addr_i),
    .B(12'hb04),
    .Y(\$procmux$9853_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP30  (
    .A(csr_addr_i),
    .B(12'hb1f),
    .Y(\$procmux$9853_CMP [30])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP4  (
    .A(csr_addr_i),
    .B(12'hb05),
    .Y(\$procmux$9853_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP5  (
    .A(csr_addr_i),
    .B(12'hb06),
    .Y(\$procmux$9853_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP6  (
    .A(csr_addr_i),
    .B(12'hb07),
    .Y(\$procmux$9853_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP7  (
    .A(csr_addr_i),
    .B(12'hb08),
    .Y(\$procmux$9853_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP8  (
    .A(csr_addr_i),
    .B(12'hb09),
    .Y(\$procmux$9853_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:421.9-421.60|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9853_CMP9  (
    .A(csr_addr_i),
    .B(12'hb0a),
    .Y(\$procmux$9853_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd29),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_ANY  (
    .A(\$procmux$9854_CMP ),
    .Y(\$procmux$9854_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP0  (
    .A(csr_addr_i),
    .B(12'h323),
    .Y(\$procmux$9854_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP1  (
    .A(csr_addr_i),
    .B(12'h324),
    .Y(\$procmux$9854_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP10  (
    .A(csr_addr_i),
    .B(12'h32d),
    .Y(\$procmux$9854_CMP [10])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP11  (
    .A(csr_addr_i),
    .B(12'h32e),
    .Y(\$procmux$9854_CMP [11])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP12  (
    .A(csr_addr_i),
    .B(12'h32f),
    .Y(\$procmux$9854_CMP [12])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP13  (
    .A(csr_addr_i),
    .B(12'h330),
    .Y(\$procmux$9854_CMP [13])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP14  (
    .A(csr_addr_i),
    .B(12'h331),
    .Y(\$procmux$9854_CMP [14])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP15  (
    .A(csr_addr_i),
    .B(12'h332),
    .Y(\$procmux$9854_CMP [15])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP16  (
    .A(csr_addr_i),
    .B(12'h333),
    .Y(\$procmux$9854_CMP [16])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP17  (
    .A(csr_addr_i),
    .B(12'h334),
    .Y(\$procmux$9854_CMP [17])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP18  (
    .A(csr_addr_i),
    .B(12'h335),
    .Y(\$procmux$9854_CMP [18])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP19  (
    .A(csr_addr_i),
    .B(12'h336),
    .Y(\$procmux$9854_CMP [19])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP2  (
    .A(csr_addr_i),
    .B(12'h325),
    .Y(\$procmux$9854_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP20  (
    .A(csr_addr_i),
    .B(12'h337),
    .Y(\$procmux$9854_CMP [20])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP21  (
    .A(csr_addr_i),
    .B(12'h338),
    .Y(\$procmux$9854_CMP [21])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP22  (
    .A(csr_addr_i),
    .B(12'h339),
    .Y(\$procmux$9854_CMP [22])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP23  (
    .A(csr_addr_i),
    .B(12'h33a),
    .Y(\$procmux$9854_CMP [23])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP24  (
    .A(csr_addr_i),
    .B(12'h33b),
    .Y(\$procmux$9854_CMP [24])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP25  (
    .A(csr_addr_i),
    .B(12'h33c),
    .Y(\$procmux$9854_CMP [25])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP26  (
    .A(csr_addr_i),
    .B(12'h33d),
    .Y(\$procmux$9854_CMP [26])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP27  (
    .A(csr_addr_i),
    .B(12'h33e),
    .Y(\$procmux$9854_CMP [27])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP28  (
    .A(csr_addr_i),
    .B(12'h33f),
    .Y(\$procmux$9854_CMP [28])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP3  (
    .A(csr_addr_i),
    .B(12'h326),
    .Y(\$procmux$9854_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP4  (
    .A(csr_addr_i),
    .B(12'h327),
    .Y(\$procmux$9854_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP5  (
    .A(csr_addr_i),
    .B(12'h328),
    .Y(\$procmux$9854_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP6  (
    .A(csr_addr_i),
    .B(12'h329),
    .Y(\$procmux$9854_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP7  (
    .A(csr_addr_i),
    .B(12'h32a),
    .Y(\$procmux$9854_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP8  (
    .A(csr_addr_i),
    .B(12'h32b),
    .Y(\$procmux$9854_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:408.9-408.52|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9854_CMP9  (
    .A(csr_addr_i),
    .B(12'h32c),
    .Y(\$procmux$9854_CMP [9])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:399.26-399.56|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9855_CMP0  (
    .A(csr_addr_i),
    .B(12'h320),
    .Y(\$procmux$9855_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:393.22-396.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9856_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b3),
    .Y(\$procmux$9856_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:389.22-392.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9857_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b2),
    .Y(\$procmux$9857_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:385.16-388.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9858_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b1),
    .Y(\$procmux$9858_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:381.17-384.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9859_CMP0  (
    .A(csr_addr_i),
    .B(12'h7b0),
    .Y(\$procmux$9859_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:328.16-334.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9860_CMP0  (
    .A(csr_addr_i),
    .B(12'h344),
    .Y(\$procmux$9860_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:325.18-325.42|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9861_CMP0  (
    .A(csr_addr_i),
    .B(12'h343),
    .Y(\$procmux$9861_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:322.19-322.71|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9862_CMP0  (
    .A(csr_addr_i),
    .B(12'h342),
    .Y(\$procmux$9862_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:319.17-319.40|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9863_CMP0  (
    .A(csr_addr_i),
    .B(12'h341),
    .Y(\$procmux$9863_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:316.18-316.42|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9864_CMP0  (
    .A(csr_addr_i),
    .B(12'h305),
    .Y(\$procmux$9864_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:313.21-313.48|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9865_CMP0  (
    .A(csr_addr_i),
    .B(12'h340),
    .Y(\$procmux$9865_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:300.16-306.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9866_CMP0  (
    .A(csr_addr_i),
    .B(12'h304),
    .Y(\$procmux$9866_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:297.17-297.44|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9867_CMP0  (
    .A(csr_addr_i),
    .B(12'h301),
    .Y(\$procmux$9867_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:280.20-287.10|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9868_CMP0  (
    .A(csr_addr_i),
    .B(12'h300),
    .Y(\$procmux$9868_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:275.20-275.46|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9869_CMP0  (
    .A(csr_addr_i),
    .B(12'hf14),
    .Y(\$procmux$9869_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:271.20-271.54|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9870_CMP0  (
    .A(csr_addr_i),
    .B(12'hf12),
    .Y(\$procmux$9870_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_cs_registers.sv:269.22-269.58|rtl/cve2/cve2_cs_registers.sv:267.5-471.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$9871_CMP0  (
    .A(csr_addr_i),
    .B(12'hf11),
    .Y(\$procmux$9871_CMP )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1372.9" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_control_csr  \gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_control_csr  (
    .clk_i(clk_i),
    .rd_data_o(\gen_trigger_regs.tmatch_control_q ),
    .rst_ni(rst_ni),
    .wr_data_i(\gen_trigger_regs.tmatch_control_d ),
    .wr_en_i(\gen_trigger_regs.tmatch_control_we )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1385.9" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_value_csr  \gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_value_csr  (
    .clk_i(clk_i),
    .rd_data_o(\gen_trigger_regs.tmatch_value_q ),
    .rst_ni(rst_ni),
    .wr_data_i(\gen_trigger_regs.tmatch_value_d ),
    .wr_en_i(\gen_trigger_regs.tmatch_value_we )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1358.7" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.u_tselect_csr  \gen_trigger_regs.u_tselect_csr  (
    .clk_i(clk_i),
    .rd_data_o(\gen_trigger_regs.tselect_q ),
    .rst_ni(rst_ni),
    .wr_data_i(\gen_trigger_regs.tselect_d ),
    .wr_en_i(\gen_trigger_regs.tselect_we )
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1210.5" */
  \cve2_counter$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.mcycle_counter_i  mcycle_counter_i (
    .clk_i(clk_i),
    .counter_inc_i(\$181y ),
    .counter_val_i(csr_wdata_int),
    .counter_val_o(mhpmcounter[2047:1984]),
    .counter_we_i(mhpmcounter_we[0]),
    .counterh_we_i(mhpmcounterh_we[0]),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:1226.5" */
  \cve2_counter$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.minstret_counter_i  minstret_counter_i (
    .clk_i(clk_i),
    .counter_inc_i(\$183y ),
    .counter_val_i(csr_wdata_int),
    .counter_val_o(minstret_raw),
    .counter_we_i(mhpmcounter_we[2]),
    .counterh_we_i(mhpmcounterh_we[2]),
    .rst_ni(rst_ni)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:871.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dcsr_csr  u_dcsr_csr (
    .clk_i(clk_i),
    .rd_data_o(dcsr_q),
    .rst_ni(rst_ni),
    .wr_data_i(dcsr_d),
    .wr_en_i(dcsr_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:885.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_depc_csr  u_depc_csr (
    .clk_i(clk_i),
    .rd_data_o(depc_q),
    .rst_ni(rst_ni),
    .wr_data_i(depc_d),
    .wr_en_i(depc_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:899.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dscratch0_csr  u_dscratch0_csr (
    .clk_i(clk_i),
    .rd_data_o(dscratch0_q),
    .rst_ni(rst_ni),
    .wr_data_i(csr_wdata_int),
    .wr_en_i(dscratch0_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:913.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dscratch1_csr  u_dscratch1_csr (
    .clk_i(clk_i),
    .rd_data_o(dscratch1_q),
    .rst_ni(rst_ni),
    .wr_data_i(csr_wdata_int),
    .wr_en_i(dscratch1_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:824.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mcause_csr  u_mcause_csr (
    .clk_i(clk_i),
    .rd_data_o(mcause_q),
    .rst_ni(rst_ni),
    .wr_data_i(mcause_d),
    .wr_en_i(mcause_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:778.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mepc_csr  u_mepc_csr (
    .clk_i(clk_i),
    .rd_data_o(mepc_q),
    .rst_ni(rst_ni),
    .wr_data_i(mepc_d),
    .wr_en_i(mepc_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:796.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mie_csr  u_mie_csr (
    .clk_i(clk_i),
    .rd_data_o(mie_q),
    .rst_ni(rst_ni),
    .wr_data_i(mie_d),
    .wr_en_i(mie_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:810.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mscratch_csr  u_mscratch_csr (
    .clk_i(clk_i),
    .rd_data_o(mscratch_q),
    .rst_ni(rst_ni),
    .wr_data_i(csr_wdata_int),
    .wr_en_i(mscratch_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:956.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_cause_csr  u_mstack_cause_csr (
    .clk_i(clk_i),
    .rd_data_o(mstack_cause_q),
    .rst_ni(rst_ni),
    .wr_data_i(mstack_cause_d),
    .wr_en_i(mstack_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:928.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_csr  u_mstack_csr (
    .clk_i(clk_i),
    .rd_data_o(mstack_q),
    .rst_ni(rst_ni),
    .wr_data_i(mstack_d),
    .wr_en_i(mstack_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:942.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_epc_csr  u_mstack_epc_csr (
    .clk_i(clk_i),
    .rd_data_o(mstack_epc_q),
    .rst_ni(rst_ni),
    .wr_data_i(mstack_epc_d),
    .wr_en_i(mstack_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:764.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstatus_csr  u_mstatus_csr (
    .clk_i(clk_i),
    .rd_data_o(mstatus_q),
    .rst_ni(rst_ni),
    .wr_data_i(mstatus_d),
    .wr_en_i(mstatus_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:838.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mtval_csr  u_mtval_csr (
    .clk_i(clk_i),
    .rd_data_o(mtval_q),
    .rst_ni(rst_ni),
    .wr_data_i(mtval_d),
    .wr_en_i(mtval_en)
  );
  /* src = "rtl/cve2/cve2_cs_registers.sv:851.5" */
  \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mtvec_csr  u_mtvec_csr (
    .clk_i(clk_i),
    .rd_data_o(mtvec_q),
    .rst_ni(rst_ni),
    .wr_data_i(mtvec_d),
    .wr_en_i(mtvec_en)
  );
  assign unused_boot_addr = boot_addr_i[7:0];
  assign csr_addr = csr_addr_i;
  assign unused_csr_addr = csr_addr[7:5];
  assign mhpmcounter_idx = csr_addr[4:0];
  assign illegal_csr_priv = \$0y ;
  assign illegal_csr_write = \$2y ;
  assign illegal_csr_insn_o = \$5y ;
  assign mip[18] = irq_software_i;
  assign mip[17] = irq_timer_i;
  assign mip[16] = irq_external_i;
  assign mip[15:0] = irq_fast_i;
  assign csr_rdata_int = \$csr_rdata_int$28 ;
  assign illegal_csr = \$illegal_csr$52 ;
  assign exception_pc = \$exception_pc$141 ;
  assign priv_lvl_d = \$priv_lvl_d$142 ;
  assign mstatus_d = { \$mstatus_d[5:1]$143 , \$mstatus_d$93 [0] };
  assign mstatus_en = \$mstatus_en$144 ;
  assign mie_en = \$mie_en$95 ;
  assign mscratch_en = \$mscratch_en$96 ;
  assign mepc_d = \$mepc_d$145 ;
  assign mepc_en = \$mepc_en$146 ;
  assign mcause_d = \$mcause_d$147 ;
  assign mcause_en = \$mcause_en$148 ;
  assign mtval_d = \$mtval_d$149 ;
  assign mtval_en = \$mtval_en$150 ;
  assign mtvec_d = \$54y ;
  assign mtvec_en = \$mtvec_en$100 ;
  assign dcsr_d = { \$dcsr_d$101 [31:9], \$dcsr_d[8:6]$152 , \$dcsr_d$101 [5:2], \$dcsr_d[1:0]$151  };
  assign dcsr_en = \$dcsr_en$153 ;
  assign depc_d = \$depc_d$154 ;
  assign depc_en = \$depc_en$155 ;
  assign dscratch0_en = \$dscratch0_en$104 ;
  assign dscratch1_en = \$dscratch1_en$105 ;
  assign mstack_d = mstatus_q[4:2];
  assign mstack_en = \$mstack_en$156 ;
  assign mstack_epc_d = mepc_q;
  assign mstack_cause_d = mcause_q;
  assign mcountinhibit_we = \$mcountinhibit_we$106 ;
  assign mhpmcounter_we = \$mhpmcounter_we$107 ;
  assign mhpmcounterh_we = \$mhpmcounterh_we$108 ;
  assign priv_mode_id_o = priv_lvl_q;
  assign priv_mode_lsu_o = \$160y ;
  assign csr_wdata_int = \$csr_wdata_int$165 ;
  assign csr_wr = \$169y ;
  assign csr_we_int = \$172y ;
  assign csr_rdata_o = csr_rdata_int;
  assign csr_mepc_o = mepc_q;
  assign csr_depc_o = depc_q;
  assign csr_mtvec_o = mtvec_q;
  assign csr_mstatus_mie_o = mstatus_q[5];
  assign csr_mstatus_tw_o = mstatus_q[0];
  assign debug_single_step_o = dcsr_q[2];
  assign debug_ebreakm_o = dcsr_q[15];
  assign debug_ebreaku_o = dcsr_q[12];
  assign irqs_o = \$173y ;
  assign irq_pending_o = \$174y ;
  assign mie_d[18] = csr_wdata_int[3];
  assign mie_d[17] = csr_wdata_int[7];
  assign mie_d[16] = csr_wdata_int[11];
  assign mie_d[15:0] = csr_wdata_int[31:16];
  assign pmp_addr_rdata[511:480] = 32'd0;
  assign pmp_cfg_rdata[127:120] = 8'h00;
  assign pmp_addr_rdata[479:448] = 32'd0;
  assign pmp_cfg_rdata[119:112] = 8'h00;
  assign pmp_addr_rdata[447:416] = 32'd0;
  assign pmp_cfg_rdata[111:104] = 8'h00;
  assign pmp_addr_rdata[415:384] = 32'd0;
  assign pmp_cfg_rdata[103:96] = 8'h00;
  assign pmp_addr_rdata[383:352] = 32'd0;
  assign pmp_cfg_rdata[95:88] = 8'h00;
  assign pmp_addr_rdata[351:320] = 32'd0;
  assign pmp_cfg_rdata[87:80] = 8'h00;
  assign pmp_addr_rdata[319:288] = 32'd0;
  assign pmp_cfg_rdata[79:72] = 8'h00;
  assign pmp_addr_rdata[287:256] = 32'd0;
  assign pmp_cfg_rdata[71:64] = 8'h00;
  assign pmp_addr_rdata[255:224] = 32'd0;
  assign pmp_cfg_rdata[63:56] = 8'h00;
  assign pmp_addr_rdata[223:192] = 32'd0;
  assign pmp_cfg_rdata[55:48] = 8'h00;
  assign pmp_addr_rdata[191:160] = 32'd0;
  assign pmp_cfg_rdata[47:40] = 8'h00;
  assign pmp_addr_rdata[159:128] = 32'd0;
  assign pmp_cfg_rdata[39:32] = 8'h00;
  assign pmp_addr_rdata[127:96] = 32'd0;
  assign pmp_cfg_rdata[31:24] = 8'h00;
  assign pmp_addr_rdata[95:64] = 32'd0;
  assign pmp_cfg_rdata[23:16] = 8'h00;
  assign pmp_addr_rdata[63:32] = 32'd0;
  assign pmp_cfg_rdata[15:8] = 8'h00;
  assign pmp_addr_rdata[31:0] = 32'd0;
  assign pmp_cfg_rdata[7:0] = 8'h00;
  assign csr_pmp_cfg_o[23:18] = 6'h00;
  assign csr_pmp_addr_o[135:102] = 34'h000000000;
  assign csr_pmp_cfg_o[17:12] = 6'h00;
  assign csr_pmp_addr_o[101:68] = 34'h000000000;
  assign csr_pmp_cfg_o[11:6] = 6'h00;
  assign csr_pmp_addr_o[67:34] = 34'h000000000;
  assign csr_pmp_cfg_o[5:0] = 6'h00;
  assign csr_pmp_addr_o[33:0] = 34'h000000000;
  assign pmp_mseccfg = 3'h0;
  assign csr_pmp_mseccfg_o = pmp_mseccfg;
  assign mcountinhibit_d = \$mcountinhibit_d$177 ;
  assign mhpmcounter_incr = { 19'h00000, div_wait_i, wfi_wait_i, instr_ret_compressed_i, branch_taken_i, branch_i, jump_i, mem_store_i, mem_load_i, iside_wait_i, dside_wait_i, instr_ret_i, 2'h1 };
  assign mhpmevent = 1024'h0000000100000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign mhpmcounter[1919:1856] = minstret_raw;
  assign mhpmcounter[1983:1920] = 64'h0000000000000000;
  assign unused_mhpmcounter_we_1 = mhpmcounter_we[1];
  assign unused_mhpmcounterh_we_1 = mhpmcounterh_we[1];
  assign unused_mhpmcounter_incr_1 = mhpmcounter_incr[1];
  assign mhpmcounter[1855:1792] = 64'h0000000000000000;
  assign mhpmcounter[1791:1728] = 64'h0000000000000000;
  assign mhpmcounter[1727:1664] = 64'h0000000000000000;
  assign mhpmcounter[1663:1600] = 64'h0000000000000000;
  assign mhpmcounter[1599:1536] = 64'h0000000000000000;
  assign mhpmcounter[1535:1472] = 64'h0000000000000000;
  assign mhpmcounter[1471:1408] = 64'h0000000000000000;
  assign mhpmcounter[1407:1344] = 64'h0000000000000000;
  assign mhpmcounter[1343:1280] = 64'h0000000000000000;
  assign mhpmcounter[1279:1216] = 64'h0000000000000000;
  assign mhpmcounter[1215:1152] = 64'h0000000000000000;
  assign mhpmcounter[1151:1088] = 64'h0000000000000000;
  assign mhpmcounter[1087:1024] = 64'h0000000000000000;
  assign mhpmcounter[1023:960] = 64'h0000000000000000;
  assign mhpmcounter[959:896] = 64'h0000000000000000;
  assign mhpmcounter[895:832] = 64'h0000000000000000;
  assign mhpmcounter[831:768] = 64'h0000000000000000;
  assign mhpmcounter[767:704] = 64'h0000000000000000;
  assign mhpmcounter[703:640] = 64'h0000000000000000;
  assign mhpmcounter[639:576] = 64'h0000000000000000;
  assign mhpmcounter[575:512] = 64'h0000000000000000;
  assign mhpmcounter[511:448] = 64'h0000000000000000;
  assign mhpmcounter[447:384] = 64'h0000000000000000;
  assign mhpmcounter[383:320] = 64'h0000000000000000;
  assign mhpmcounter[319:256] = 64'h0000000000000000;
  assign mhpmcounter[255:192] = 64'h0000000000000000;
  assign mhpmcounter[191:128] = 64'h0000000000000000;
  assign mhpmcounter[127:64] = 64'h0000000000000000;
  assign mhpmcounter[63:0] = 64'h0000000000000000;
  assign mcountinhibit = { 29'h1fffffff, mcountinhibit_q };
  assign \g_mcountinhibit_reduced.unused_mhphcounter_we  = mhpmcounter_we[31:3];
  assign \g_mcountinhibit_reduced.unused_mhphcounterh_we  = mhpmcounterh_we[31:3];
  assign \g_mcountinhibit_reduced.unused_mhphcounter_incr  = mhpmcounter_incr[31:3];
  assign \gen_trigger_regs.tselect_we  = \$189y ;
  assign \gen_trigger_regs.tmatch_control_we  = \$194y ;
  assign \gen_trigger_regs.tmatch_value_we  = \$199y ;
  assign \gen_trigger_regs.tselect_d  = \$201y ;
  assign \gen_trigger_regs.tmatch_control_d  = csr_wdata_int[2];
  assign \gen_trigger_regs.tmatch_value_d  = csr_wdata_int;
  assign tselect_rdata = { 31'h00000000, \gen_trigger_regs.tselect_q  };
  assign \gen_trigger_regs.selected_tmatch_control  = \gen_trigger_regs.tmatch_control_q ;
  assign \gen_trigger_regs.selected_tmatch_value  = \gen_trigger_regs.tmatch_value_q ;
  assign tmatch_control_rdata = { 29'h05000209, \gen_trigger_regs.selected_tmatch_control , 2'h0 };
  assign tmatch_value_rdata = \gen_trigger_regs.selected_tmatch_value ;
  assign \gen_trigger_regs.trigger_match  = \$203y ;
  assign trigger_match_o = \$204y ;
  assign \$csr_wdata_int$165  = \$procmux$9031_Y ;
  assign \$procmux$9038_CMP  = \$176y ;
  assign \$mcountinhibit_d$177  = \$procmux$9037_Y ;
  assign \$mstatus_d[5:1]$143 [4:1] = \$procmux$9042_Y ;
  assign \$procmux$9050_CMP  = nmi_mode_i;
  assign \$mcause_en$140  = \$procmux$9051_Y ;
  assign \$procmux$9057_CMP  = nmi_mode_i;
  assign \$mcause_d$139  = \$procmux$9058_Y ;
  assign \$procmux$9064_CMP  = nmi_mode_i;
  assign \$mepc_en$138  = \$procmux$9065_Y ;
  assign \$procmux$9071_CMP  = nmi_mode_i;
  assign \$mepc_d$137  = \$procmux$9072_Y ;
  assign \$procmux$9076_CMP  = \$134y ;
  assign \$mstatus_d[1]$135  = \$procmux$9077_Y ;
  assign \$mstatus_d[5:1]$143 [0] = \$procmux$9082_Y ;
  assign \$procmux$9087_CMP  = nmi_mode_i;
  assign \$mstatus_d[4:2]$136  = \$procmux$9088_Y ;
  assign \$procmux$9094_CMP  = \$110y ;
  assign \$procmux$9097_CMP  = debug_csr_save_i;
  assign \$mtval_en$118  = \$procmux$9098_Y ;
  assign \$procmux$9104_CMP  = \$110y ;
  assign \$procmux$9107_CMP  = debug_csr_save_i;
  assign \$mtval_d$117  = \$procmux$9108_Y ;
  assign \$procmux$9114_CMP  = \$110y ;
  assign \$procmux$9117_CMP  = debug_csr_save_i;
  assign \$mcause_en$116  = \$procmux$9118_Y ;
  assign \$procmux$9124_CMP  = \$110y ;
  assign \$procmux$9127_CMP  = debug_csr_save_i;
  assign \$mcause_d$115  = \$procmux$9128_Y ;
  assign \$procmux$9134_CMP  = \$110y ;
  assign \$procmux$9137_CMP  = debug_csr_save_i;
  assign \$mepc_en$114  = \$procmux$9138_Y ;
  assign \$procmux$9144_CMP  = \$110y ;
  assign \$procmux$9147_CMP  = debug_csr_save_i;
  assign \$mepc_d$113  = \$procmux$9148_Y ;
  assign \$procmux$9154_CMP  = \$110y ;
  assign \$procmux$9157_CMP  = debug_csr_save_i;
  assign \$mstatus_en$112  = \$procmux$9158_Y ;
  assign \$procmux$9164_CMP  = \$110y ;
  assign \$procmux$9167_CMP  = debug_csr_save_i;
  assign \$mstatus_d[5:2]$111  = \$procmux$9168_Y ;
  assign \$procmux$9177_CMP  = debug_csr_save_i;
  assign \$mstack_en$133  = \$procmux$9178_Y ;
  assign \$procmux$9186_CMP  = debug_csr_save_i;
  assign \$depc_en$132  = \$procmux$9187_Y ;
  assign \$procmux$9195_CMP  = debug_csr_save_i;
  assign \$depc_d$131  = \$procmux$9196_Y ;
  assign \$procmux$9204_CMP  = debug_csr_save_i;
  assign \$dcsr_en$130  = \$procmux$9205_Y ;
  assign \$procmux$9213_CMP  = debug_csr_save_i;
  assign \$dcsr_d[8:6]$129  = \$procmux$9214_Y ;
  assign \$procmux$9222_CMP  = debug_csr_save_i;
  assign \$dcsr_d[1:0]$128  = \$procmux$9223_Y ;
  assign \$procmux$9232_CMP  = debug_csr_save_i;
  assign \$mtval_en$127  = \$procmux$9233_Y ;
  assign \$procmux$9242_CMP  = debug_csr_save_i;
  assign \$mtval_d$126  = \$procmux$9243_Y ;
  assign \$procmux$9252_CMP  = debug_csr_save_i;
  assign \$mcause_en$125  = \$procmux$9253_Y ;
  assign \$procmux$9262_CMP  = debug_csr_save_i;
  assign \$mcause_d$124  = \$procmux$9263_Y ;
  assign \$procmux$9272_CMP  = debug_csr_save_i;
  assign \$mepc_en$123  = \$procmux$9273_Y ;
  assign \$procmux$9282_CMP  = debug_csr_save_i;
  assign \$mepc_d$122  = \$procmux$9283_Y ;
  assign \$procmux$9292_CMP  = debug_csr_save_i;
  assign \$mstatus_en$121  = \$procmux$9293_Y ;
  assign \$procmux$9302_CMP  = debug_csr_save_i;
  assign \$mstatus_d[5:2]$120  = \$procmux$9303_Y ;
  assign \$exception_pc$109  = \$procmux$9312_Y ;
  assign \$mstack_en$156  = \$procmux$9319_Y ;
  assign \$depc_en$155  = \$procmux$9326_Y ;
  assign \$depc_d$154  = \$procmux$9333_Y ;
  assign \$dcsr_en$153  = \$procmux$9340_Y ;
  assign \$dcsr_d[8:6]$152  = \$procmux$9347_Y ;
  assign \$dcsr_d[1:0]$151  = \$procmux$9354_Y ;
  assign \$mtval_en$150  = \$procmux$9361_Y ;
  assign \$mtval_d$149  = \$procmux$9368_Y ;
  assign \$mcause_en$148  = \$procmux$9373_Y ;
  assign \$mcause_d$147  = \$procmux$9380_Y ;
  assign \$mepc_en$146  = \$procmux$9387_Y ;
  assign \$mepc_d$145  = \$procmux$9394_Y ;
  assign \$mstatus_en$144  = \$procmux$9401_Y ;
  assign \$procmux$9409_CMP  = \$110y ;
  assign \$procmux$9412_CMP  = debug_csr_save_i;
  assign \$mstack_en$119  = \$procmux$9413_Y ;
  assign \$priv_lvl_d$142  = \$procmux$9418_Y ;
  assign \$exception_pc$141  = \$procmux$9428_Y ;
  assign \$procmux$9438_CMP  = \$61y ;
  assign \$procmux$9442_CMP  = csr_we_int;
  assign \$dcsr_d[1:0]$62  = \$procmux$9441_Y ;
  assign \$procmux$9458_CMP  = \$57y ;
  assign \$procmux$9462_CMP  = csr_we_int;
  assign \$mstatus_d[3:2]$58  = \$procmux$9461_Y ;
  assign \$procmux$9467_CMP  = csr_we_int;
  assign \$mhpmcounterh_we$92  = \$procmux$9466_Y ;
  assign \$procmux$9473_CMP  = csr_we_int;
  assign \$mhpmcounter_we$91  = \$procmux$9472_Y ;
  assign \$procmux$9480_CMP  = csr_we_int;
  assign \$mcountinhibit_we$90  = \$procmux$9479_Y ;
  assign \$procmux$9488_CMP  = csr_we_int;
  assign \$dscratch1_en$89  = \$procmux$9487_Y ;
  assign \$procmux$9497_CMP  = csr_we_int;
  assign \$dscratch0_en$88  = \$procmux$9496_Y ;
  assign \$procmux$9507_CMP  = csr_we_int;
  assign \$depc_en$87  = \$procmux$9506_Y ;
  assign \$procmux$9519_CMP  = csr_we_int;
  assign \$dcsr_en$86  = \$procmux$9518_Y ;
  assign \$procmux$9531_CMP  = csr_we_int;
  assign \$dcsr_d$85  = \$procmux$9530_Y ;
  assign \$procmux$9543_CMP  = csr_we_int;
  assign \$mtvec_en$84  = \$procmux$9542_Y ;
  assign \$procmux$9556_CMP  = csr_we_int;
  assign \$mtval_en$83  = \$procmux$9555_Y ;
  assign \$procmux$9570_CMP  = csr_we_int;
  assign \$mcause_en$82  = \$procmux$9569_Y ;
  assign \$procmux$9585_CMP  = csr_we_int;
  assign \$mepc_en$81  = \$procmux$9584_Y ;
  assign \$procmux$9601_CMP  = csr_we_int;
  assign \$mscratch_en$80  = \$procmux$9600_Y ;
  assign \$procmux$9618_CMP  = csr_we_int;
  assign \$mie_en$79  = \$procmux$9617_Y ;
  assign \$procmux$9637_CMP  = csr_we_int;
  assign \$mstatus_en$78  = \$procmux$9636_Y ;
  assign \$procmux$9656_CMP  = csr_we_int;
  assign \$mstatus_d$77  = \$procmux$9655_Y ;
  assign \$procmux$9659_CMP  = csr_we_int;
  assign \$mhpmcounterh_we$108  = \$procmux$9658_Y ;
  assign \$procmux$9662_CMP  = csr_we_int;
  assign \$mhpmcounter_we$107  = \$procmux$9661_Y ;
  assign \$procmux$9665_CMP  = csr_we_int;
  assign \$mcountinhibit_we$106  = \$procmux$9664_Y ;
  assign \$procmux$9668_CMP  = csr_we_int;
  assign \$dscratch1_en$105  = \$procmux$9667_Y ;
  assign \$procmux$9671_CMP  = csr_we_int;
  assign \$dscratch0_en$104  = \$procmux$9670_Y ;
  assign \$procmux$9674_CMP  = csr_we_int;
  assign \$depc_en$103  = \$procmux$9673_Y ;
  assign \$procmux$9677_CMP  = csr_we_int;
  assign \$dcsr_en$102  = \$procmux$9676_Y ;
  assign \$procmux$9680_CMP  = csr_we_int;
  assign \$dcsr_d$101  = \$procmux$9679_Y ;
  assign \$procmux$9683_CMP  = csr_we_int;
  assign \$mtvec_en$100  = \$procmux$9682_Y ;
  assign \$procmux$9686_CMP  = csr_we_int;
  assign \$mtval_en$99  = \$procmux$9685_Y ;
  assign \$procmux$9689_CMP  = csr_we_int;
  assign \$mcause_en$98  = \$procmux$9688_Y ;
  assign \$procmux$9692_CMP  = csr_we_int;
  assign \$mepc_en$97  = \$procmux$9691_Y ;
  assign \$procmux$9695_CMP  = csr_we_int;
  assign \$mscratch_en$96  = \$procmux$9694_Y ;
  assign \$procmux$9698_CMP  = csr_we_int;
  assign \$mie_en$95  = \$procmux$9697_Y ;
  assign \$procmux$9701_CMP  = csr_we_int;
  assign \$mstatus_en$94  = \$procmux$9700_Y ;
  assign \$procmux$9704_CMP  = csr_we_int;
  assign \$mstatus_d$93  = \$procmux$9703_Y ;
  assign \$illegal_csr$52  = \$illegal_csr$51 ;
  assign \$procmux$9708_CMP  = \$50y ;
  assign \$illegal_csr$51  = \$procmux$9707_Y ;
  assign \$illegal_csr$8  = \$procmux$9746_Y ;
  assign \$illegal_csr$7  = \$procmux$9785_Y ;
  assign \$illegal_csr$29  = \$procmux$9788_Y ;
  assign \$csr_rdata_int$28  = \$procmux$9848_Y ;
  assign \$69y  = \$auto$rtlil.cc:3004:And$13195 ;
  assign \$76y  = \$auto$rtlil.cc:3004:And$13197 ;
  assign \$159y  = rst_ni;
  assign \$176y  = mcountinhibit_we;
  assign \$181y  = \$180y ;
  assign \$186y  = rst_ni;
  assign \$204y  = \$203y ;
  assign \$procmux$9043_CMP  = csr_restore_mret_i;
  assign \$procmux$9045_CMP  = csr_save_cause_i;
  assign \$procmux$9089_CMP  = csr_restore_mret_i;
  assign \$procmux$9169_CMP  = csr_save_cause_i;
  assign \$procmux$9304_CMP  = csr_save_cause_i;
  assign \$procmux$9052_CMP  = csr_restore_mret_i;
  assign \$procmux$9059_CMP  = csr_restore_mret_i;
  assign \$procmux$9066_CMP  = csr_restore_mret_i;
  assign \$procmux$9073_CMP  = csr_restore_mret_i;
  assign \$procmux$9078_CMP  = csr_restore_mret_i;
  assign \$procmux$9083_CMP  = csr_restore_mret_i;
  assign \$procmux$9099_CMP  = csr_save_cause_i;
  assign \$procmux$9109_CMP  = csr_save_cause_i;
  assign \$procmux$9119_CMP  = csr_save_cause_i;
  assign \$procmux$9129_CMP  = csr_save_cause_i;
  assign \$procmux$9139_CMP  = csr_save_cause_i;
  assign \$procmux$9311_CMP  = csr_save_if_i;
  assign \$procmux$9313_CMP  = csr_save_cause_i;
  assign \$procmux$9149_CMP  = csr_save_cause_i;
  assign \$procmux$9159_CMP  = csr_save_cause_i;
  assign \$procmux$9414_CMP  = csr_save_cause_i;
  assign \$procmux$9179_CMP  = csr_save_cause_i;
  assign \$procmux$9188_CMP  = csr_save_cause_i;
  assign \$procmux$9197_CMP  = csr_save_cause_i;
  assign \$procmux$9206_CMP  = csr_save_cause_i;
  assign \$procmux$9215_CMP  = csr_save_cause_i;
  assign \$procmux$9224_CMP  = csr_save_cause_i;
  assign \$procmux$9234_CMP  = csr_save_cause_i;
  assign \$procmux$9244_CMP  = csr_save_cause_i;
  assign \$procmux$9254_CMP  = csr_save_cause_i;
  assign \$procmux$9264_CMP  = csr_save_cause_i;
  assign \$procmux$9274_CMP  = csr_save_cause_i;
  assign \$procmux$9284_CMP  = csr_save_cause_i;
  assign \$procmux$9294_CMP  = csr_save_cause_i;
  assign \$procmux$9320_CMP  = csr_save_cause_i;
  assign \$procmux$9327_CMP  = csr_save_cause_i;
  assign \$procmux$9334_CMP  = csr_save_cause_i;
  assign \$procmux$9341_CMP  = csr_save_cause_i;
  assign \$procmux$9348_CMP  = csr_save_cause_i;
  assign \$procmux$9355_CMP  = csr_save_cause_i;
  assign \$procmux$9362_CMP  = csr_save_cause_i;
  assign \$procmux$9369_CMP  = csr_save_cause_i;
  assign \$procmux$9374_CMP  = csr_restore_mret_i;
  assign \$procmux$9376_CMP  = csr_save_cause_i;
  assign \$procmux$9381_CMP  = csr_restore_mret_i;
  assign \$procmux$9383_CMP  = csr_save_cause_i;
  assign \$procmux$9388_CMP  = csr_restore_mret_i;
  assign \$procmux$9390_CMP  = csr_save_cause_i;
  assign \$procmux$9395_CMP  = csr_restore_mret_i;
  assign \$procmux$9397_CMP  = csr_save_cause_i;
  assign \$procmux$9402_CMP  = csr_restore_mret_i;
  assign \$procmux$9404_CMP  = csr_save_cause_i;
  assign \$procmux$9419_CMP  = csr_restore_mret_i;
  assign \$procmux$9420_CMP  = csr_restore_dret_i;
  assign \$procmux$9422_CMP  = csr_save_cause_i;
  assign \$procmux$9429_CMP  = csr_save_cause_i;
  assign \$auto$rtlil.cc:3004:And$13197  = \$75y ;
  assign \$auto$rtlil.cc:3004:And$13195  = \$68y ;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_control_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire \$procmux$2000_Y ;
  wire \$procmux$2001_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output rd_data_o;
  wire rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input wr_data_i;
  wire wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rdata_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2000  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2001_CMP ),
    .Y(\$procmux$2000_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2001_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2000_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.g_dbg_tmatch_reg[0].u_tmatch_value_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$1998_Y ;
  wire \$procmux$1999_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$1998  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$1999_CMP ),
    .Y(\$procmux$1998_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$1999_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$1998_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.gen_trigger_regs.u_tselect_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire \$procmux$2002_Y ;
  wire \$procmux$2003_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output rd_data_o;
  wire rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input wr_data_i;
  wire wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rdata_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$2002  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2003_CMP ),
    .Y(\$procmux$2002_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2003_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2002_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dcsr_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2040_Y ;
  wire \$procmux$2041_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd1073741827),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2040  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2041_CMP ),
    .Y(\$procmux$2040_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2041_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2040_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_depc_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2038_Y ;
  wire \$procmux$2039_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2038  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2039_CMP ),
    .Y(\$procmux$2038_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2039_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2038_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dscratch0_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2036_Y ;
  wire \$procmux$2037_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2036  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2037_CMP ),
    .Y(\$procmux$2036_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2037_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2036_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_dscratch1_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2034_Y ;
  wire \$procmux$2035_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2034  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2035_CMP ),
    .Y(\$procmux$2034_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2035_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2034_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mcause_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [6:0] \$procmux$2046_Y ;
  wire \$procmux$2047_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [6:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [6:0] rd_data_o;
  wire [6:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [6:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [6:0] wr_data_i;
  wire [6:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$rdata_q  (
    .AD(7'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2046  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2047_CMP ),
    .Y(\$procmux$2046_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2047_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2046_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mepc_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2052_Y ;
  wire \$procmux$2053_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2052  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2053_CMP ),
    .Y(\$procmux$2052_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2053_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2052_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mie_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [18:0] \$procmux$2050_Y ;
  wire \$procmux$2051_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [18:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [18:0] rd_data_o;
  wire [18:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [18:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [18:0] wr_data_i;
  wire [18:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd19)
  ) \$driver$rdata_q  (
    .AD(19'h00000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd19)
  ) \$procmux$2050  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2051_CMP ),
    .Y(\$procmux$2050_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2051_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2050_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mscratch_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2048_Y ;
  wire \$procmux$2049_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2048  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2049_CMP ),
    .Y(\$procmux$2048_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2049_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2048_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_cause_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [6:0] \$procmux$2028_Y ;
  wire \$procmux$2029_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [6:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [6:0] rd_data_o;
  wire [6:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [6:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [6:0] wr_data_i;
  wire [6:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$rdata_q  (
    .AD(7'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$2028  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2029_CMP ),
    .Y(\$procmux$2028_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2029_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2028_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [2:0] \$procmux$2032_Y ;
  wire \$procmux$2033_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [2:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [2:0] rd_data_o;
  wire [2:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [2:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [2:0] wr_data_i;
  wire [2:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$rdata_q  (
    .AD(3'h4),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$2032  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2033_CMP ),
    .Y(\$procmux$2032_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2033_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2032_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstack_epc_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2030_Y ;
  wire \$procmux$2031_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2030  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2031_CMP ),
    .Y(\$procmux$2030_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2031_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2030_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mstatus_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [5:0] \$procmux$2054_Y ;
  wire \$procmux$2055_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [5:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [5:0] rd_data_o;
  wire [5:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [5:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [5:0] wr_data_i;
  wire [5:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$rdata_q  (
    .AD(6'h0c),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$2054  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2055_CMP ),
    .Y(\$procmux$2054_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2055_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2054_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mtval_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2044_Y ;
  wire \$procmux$2045_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2044  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2045_CMP ),
    .Y(\$procmux$2044_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2045_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2044_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_csr.sv:11.8" */
module \cve2_csr$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.cs_registers_i.u_mtvec_csr (clk_i, rst_ni, wr_data_i, wr_en_i, rd_data_o, rd_error_o);
  wire \$1y ;
  wire \$2y ;
  wire [31:0] \$procmux$2042_Y ;
  wire \$procmux$2043_CMP ;
  /* src = "rtl/cve2/cve2_csr.sv:31.14-33.8" */
  wire [31:0] \$rdata_q$3 ;
  /* src = "rtl/cve2/cve2_csr.sv:16.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_csr.sv:21.28" */
  output [31:0] rd_data_o;
  wire [31:0] rd_data_o;
  /* src = "rtl/cve2/cve2_csr.sv:23.28" */
  output rd_error_o;
  wire rd_error_o;
  /* src = "rtl/cve2/cve2_csr.sv:26.21" */
  wire [31:0] rdata_q;
  /* src = "rtl/cve2/cve2_csr.sv:17.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_csr.sv:19.28" */
  input [31:0] wr_data_i;
  wire [31:0] wr_data_i;
  /* src = "rtl/cve2/cve2_csr.sv:20.28" */
  input wr_en_i;
  wire wr_en_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_csr.sv:28.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q  (
    .AD(32'd1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$3 ),
    .Q(rdata_q)
  );
  /* src = "rtl/cve2/cve2_csr.sv:32.7-32.28|rtl/cve2/cve2_csr.sv:31.14-33.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$2042  (
    .A(rdata_q),
    .B(wr_data_i),
    .S(\$procmux$2043_CMP ),
    .Y(\$procmux$2042_Y )
  );
  assign rd_data_o = rdata_q;
  assign rd_error_o = 1'h0;
  assign \$procmux$2043_CMP  = wr_en_i;
  assign \$rdata_q$3  = \$procmux$2042_Y ;
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_decoder.sv:16.8" */
module \cve2_decoder$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.decoder_i (clk_i, rst_ni, instr_rdata_i, data_req_o, data_we_o, illegal_insn_o, instr_rdata_alu_i, illegal_c_insn_i, csr_access_o, csr_op_o, rf_raddr_a_o, rf_raddr_b_o, rf_ren_a_o, rf_ren_b_o, ebrk_insn_o, mret_insn_o, dret_insn_o, ecall_insn_o, wfi_insn_o, jump_set_o, instr_first_cycle_i
, imm_a_mux_sel_o, imm_b_mux_sel_o, imm_i_type_o, imm_s_type_o, imm_b_type_o, imm_u_type_o, imm_j_type_o, zimm_rs1_type_o, rf_wdata_sel_o, rf_we_o, rf_waddr_o, mac_en_o, alu_operator_o, alu_op_a_mux_sel_o, alu_op_b_mux_sel_o, alu_multicycle_o, mult_en_o, div_en_o, mult_sel_o, div_sel_o, multdiv_operator_o
, multdiv_signed_mode_o, data_type_o, data_sign_extension_o, jump_in_dec_o, branch_in_dec_o);
  wire \$0y ;
  wire \$132y ;
  wire \$136y ;
  wire \$137y ;
  wire \$152y ;
  wire \$15y ;
  wire \$165y ;
  wire \$166y ;
  wire \$167y ;
  wire \$168y ;
  wire \$169y ;
  wire \$1y ;
  wire \$21y ;
  wire \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire [4:0] \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$35y ;
  wire \$38y ;
  wire \$43y ;
  wire \$4y ;
  wire \$59y ;
  wire \$5y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$6y ;
  wire \$70y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12" */
  wire [1:0] \$alu_op_a_mux_sel_o$121 ;
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  wire [1:0] \$alu_op_a_mux_sel_o$125 ;
  /* src = "rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  wire [1:0] \$alu_op_a_mux_sel_o$130 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  wire [1:0] \$alu_op_a_mux_sel_o$150 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1164.11-1169.14" */
  wire [1:0] \$alu_op_a_mux_sel_o$153 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  wire [1:0] \$alu_op_a_mux_sel_o$156 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire [1:0] \$alu_op_a_mux_sel_o$161 ;
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12" */
  wire \$alu_op_b_mux_sel_o$122 ;
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  wire \$alu_op_b_mux_sel_o$126 ;
  /* src = "rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  wire \$alu_op_b_mux_sel_o$131 ;
  /* src = "rtl/cve2/cve2_decoder.sv:773.9-777.12" */
  wire \$alu_op_b_mux_sel_o$134 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  wire \$alu_op_b_mux_sel_o$151 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  wire \$alu_op_b_mux_sel_o$157 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire \$alu_op_b_mux_sel_o$162 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire [6:0] \$alu_operator_o$100 ;
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12" */
  wire [6:0] \$alu_operator_o$120 ;
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  wire [6:0] \$alu_operator_o$124 ;
  /* src = "rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  wire [6:0] \$alu_operator_o$127 ;
  /* src = "rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  wire [6:0] \$alu_operator_o$129 ;
  /* src = "rtl/cve2/cve2_decoder.sv:822.13-885.16" */
  wire [6:0] \$alu_operator_o$135 ;
  /* src = "rtl/cve2/cve2_decoder.sv:926.24-928.18" */
  wire [6:0] \$alu_operator_o$138 ;
  /* src = "rtl/cve2/cve2_decoder.sv:924.15-928.18" */
  wire [6:0] \$alu_operator_o$139 ;
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16" */
  wire [6:0] \$alu_operator_o$140 ;
  /* src = "rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  wire [6:0] \$alu_operator_o$141 ;
  /* src = "rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  wire [6:0] \$alu_operator_o$142 ;
  /* src = "rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  wire [6:0] \$alu_operator_o$145 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  wire [6:0] \$alu_operator_o$149 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire [6:0] \$alu_operator_o$160 ;
  /* src = "rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  wire [6:0] \$alu_operator_o$46 ;
  /* src = "rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  wire [6:0] \$alu_operator_o$51 ;
  wire \$auto$proc_rom.cc:154:do_switch$1 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$branch_in_dec_o$109 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$branch_in_dec_o$117 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$csr_access_o$103 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$csr_access_o$113 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$csr_access_o$85 ;
  /* src = "rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  wire \$csr_illegal$72 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$csr_illegal$75 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$csr_illegal$87 ;
  /* src = "rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  wire [1:0] \$csr_op$73 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire [1:0] \$csr_op$77 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire [1:0] \$csr_op$89 ;
  /* src = "rtl/cve2/cve2_decoder.sv:193.5-196.8" */
  wire [1:0] \$csr_op_o$9 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$data_req_o$104 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$data_req_o$114 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$data_sign_extension_o$107 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire [1:0] \$data_type_o$106 ;
  /* src = "rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  wire [1:0] \$data_type_o$20 ;
  /* src = "rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  wire [1:0] \$data_type_o$24 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$data_we_o$105 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$data_we_o$115 ;
  /* src = "rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  wire \$div_sel_o$144 ;
  /* src = "rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  wire \$div_sel_o$147 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire \$div_sel_o$164 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$dret_insn_o$63 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$dret_insn_o$80 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$dret_insn_o$92 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$ebrk_insn_o$61 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$ebrk_insn_o$78 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$ebrk_insn_o$90 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$ecall_insn_o$64 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$ecall_insn_o$81 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$ecall_insn_o$93 ;
  /* src = "rtl/cve2/cve2_decoder.sv:657.5-659.8" */
  wire \$illegal_insn$110 ;
  /* src = "rtl/cve2/cve2_decoder.sv:266.9-268.12" */
  wire \$illegal_insn$16 ;
  /* src = "rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  wire \$illegal_insn$17 ;
  /* src = "rtl/cve2/cve2_decoder.sv:300.9-302.12" */
  wire \$illegal_insn$18 ;
  /* src = "rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  wire \$illegal_insn$19 ;
  /* src = "rtl/cve2/cve2_decoder.sv:327.13-329.16" */
  wire \$illegal_insn$22 ;
  /* src = "rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  wire \$illegal_insn$23 ;
  /* src = "rtl/cve2/cve2_decoder.sv:371.17-375.20" */
  wire \$illegal_insn$28 ;
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24" */
  wire \$illegal_insn$29 ;
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  wire \$illegal_insn$30 ;
  /* src = "rtl/cve2/cve2_decoder.sv:416.28-420.22" */
  wire \$illegal_insn$33 ;
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22" */
  wire \$illegal_insn$34 ;
  /* src = "rtl/cve2/cve2_decoder.sv:425.28-429.22" */
  wire \$illegal_insn$36 ;
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22" */
  wire \$illegal_insn$37 ;
  /* src = "rtl/cve2/cve2_decoder.sv:432.19-436.22" */
  wire \$illegal_insn$39 ;
  /* src = "rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  wire \$illegal_insn$40 ;
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  wire \$illegal_insn$41 ;
  /* src = "rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  wire \$illegal_insn$42 ;
  /* src = "rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  wire \$illegal_insn$44 ;
  /* src = "rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  wire \$illegal_insn$49 ;
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  wire \$illegal_insn$55 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$illegal_insn$60 ;
  /* src = "rtl/cve2/cve2_decoder.sv:627.11-629.14" */
  wire \$illegal_insn$69 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$illegal_insn$74 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$illegal_insn$86 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  wire \$imm_a_mux_sel_o$154 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire \$imm_a_mux_sel_o$158 ;
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12" */
  wire [2:0] \$imm_b_mux_sel_o$119 ;
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  wire [2:0] \$imm_b_mux_sel_o$123 ;
  /* src = "rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  wire [2:0] \$imm_b_mux_sel_o$128 ;
  /* src = "rtl/cve2/cve2_decoder.sv:773.9-777.12" */
  wire [2:0] \$imm_b_mux_sel_o$133 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  wire [2:0] \$imm_b_mux_sel_o$148 ;
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  wire [2:0] \$imm_b_mux_sel_o$155 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire [2:0] \$imm_b_mux_sel_o$159 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$jump_in_dec_o$108 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$jump_in_dec_o$116 ;
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  wire \$jump_in_dec_o$58 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$jump_set_o$112 ;
  /* src = "rtl/cve2/cve2_decoder.sv:245.9-252.12" */
  wire \$jump_set_o$12 ;
  /* src = "rtl/cve2/cve2_decoder.sv:258.9-265.12" */
  wire \$jump_set_o$14 ;
  /* src = "rtl/cve2/cve2_decoder.sv:591.13-593.16" */
  wire \$jump_set_o$54 ;
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  wire \$jump_set_o$57 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$jump_set_o$95 ;
  /* src = "rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  wire \$mac_en_o$45 ;
  /* src = "rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  wire \$mac_en_o$50 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$mac_en_o$99 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$mret_insn_o$62 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$mret_insn_o$79 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$mret_insn_o$91 ;
  /* src = "rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  wire \$mult_sel_o$143 ;
  /* src = "rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  wire \$mult_sel_o$146 ;
  /* src = "rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  wire \$mult_sel_o$163 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire [1:0] \$multdiv_operator_o$101 ;
  /* src = "rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  wire [1:0] \$multdiv_operator_o$47 ;
  /* src = "rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  wire [1:0] \$multdiv_operator_o$52 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire [1:0] \$multdiv_signed_mode_o$102 ;
  /* src = "rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  wire [1:0] \$multdiv_signed_mode_o$48 ;
  /* src = "rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  wire [1:0] \$multdiv_signed_mode_o$53 ;
  wire [1:0] \$procmux$3403_Y ;
  wire \$procmux$3404_CMP ;
  wire [1:0] \$procmux$3406_Y ;
  wire \$procmux$3407_CMP ;
  wire [1:0] \$procmux$3408_Y ;
  wire \$procmux$3409_CMP ;
  wire \$procmux$3414_Y ;
  wire \$procmux$3415_CMP ;
  wire [1:0] \$procmux$3419_Y ;
  wire \$procmux$3420_CMP ;
  wire [1:0] \$procmux$3421_Y ;
  wire \$procmux$3422_CMP ;
  wire [2:0] \$procmux$3427_Y ;
  wire \$procmux$3428_CMP ;
  wire \$procmux$3432_Y ;
  wire \$procmux$3433_CMP ;
  wire \$procmux$3434_Y ;
  wire \$procmux$3435_CMP ;
  wire \$procmux$3441_Y ;
  wire \$procmux$3442_CMP ;
  wire [1:0] \$procmux$3446_Y ;
  wire \$procmux$3447_CMP ;
  wire \$procmux$3448_CMP ;
  wire [1:0] \$procmux$3449_Y ;
  wire \$procmux$3450_CMP ;
  wire [6:0] \$procmux$3454_Y ;
  wire \$procmux$3455_CMP ;
  wire \$procmux$3456_CMP ;
  wire [6:0] \$procmux$3457_Y ;
  wire \$procmux$3458_CMP ;
  wire [2:0] \$procmux$3462_Y ;
  wire \$procmux$3463_CMP ;
  wire [2:0] \$procmux$3464_Y ;
  wire \$procmux$3465_CMP ;
  wire \$procmux$3524_Y ;
  wire \$procmux$3525_CMP ;
  wire \$procmux$3526_Y ;
  wire \$procmux$3527_CMP ;
  wire \$procmux$3586_Y ;
  wire \$procmux$3587_CMP ;
  wire \$procmux$3588_Y ;
  wire \$procmux$3589_CMP ;
  wire [6:0] \$procmux$3594_Y ;
  wire \$procmux$3595_CMP ;
  wire \$procmux$3596_CMP ;
  wire \$procmux$3597_CMP ;
  wire \$procmux$3598_CMP ;
  wire \$procmux$3599_CMP ;
  wire \$procmux$3600_CMP ;
  wire \$procmux$3601_CMP ;
  wire \$procmux$3602_CMP ;
  wire \$procmux$3603_CMP ;
  wire \$procmux$3604_CMP ;
  wire \$procmux$3605_CMP ;
  wire \$procmux$3606_CMP ;
  wire \$procmux$3607_CMP ;
  wire \$procmux$3608_CMP ;
  wire \$procmux$3609_CMP ;
  wire \$procmux$3610_CMP ;
  wire \$procmux$3611_CMP ;
  wire \$procmux$3612_CMP ;
  wire [6:0] \$procmux$3614_Y ;
  wire \$procmux$3615_CMP ;
  wire [6:0] \$procmux$3616_Y ;
  wire \$procmux$3617_CMP ;
  wire \$procmux$3623_Y ;
  wire \$procmux$3624_CMP ;
  wire \$procmux$3625_Y ;
  wire \$procmux$3626_CMP ;
  wire \$procmux$3632_Y ;
  wire \$procmux$3633_CMP ;
  wire \$procmux$3634_Y ;
  wire \$procmux$3635_CMP ;
  wire [6:0] \$procmux$3641_Y ;
  wire \$procmux$3642_CMP ;
  wire [6:0] \$procmux$3643_Y ;
  wire \$procmux$3644_CMP ;
  wire [6:0] \$procmux$3650_Y ;
  wire \$procmux$3651_CMP ;
  wire [6:0] \$procmux$3652_Y ;
  wire \$procmux$3653_CMP ;
  wire [6:0] \$procmux$3658_Y ;
  wire \$procmux$3659_CMP ;
  wire [6:0] \$procmux$3661_Y ;
  wire \$procmux$3662_CMP ;
  wire [6:0] \$procmux$3663_Y ;
  wire \$procmux$3664_CMP ;
  wire [6:0] \$procmux$3665_Y ;
  wire \$procmux$3666_CMP ;
  wire [6:0] \$procmux$3673_Y ;
  wire \$procmux$3674_CMP ;
  wire [6:0] \$procmux$3675_Y ;
  wire \$procmux$3676_CMP ;
  wire [6:0] \$procmux$3677_Y ;
  wire \$procmux$3678_CMP ;
  wire [6:0] \$procmux$3684_Y ;
  wire \$procmux$3685_CMP ;
  wire [6:0] \$procmux$3686_Y ;
  wire \$procmux$3687_CMP ;
  wire [6:0] \$procmux$3693_Y ;
  wire \$procmux$3694_CMP ;
  wire \$procmux$3695_CMP ;
  wire \$procmux$3696_CMP ;
  wire \$procmux$3697_CMP ;
  wire \$procmux$3698_CMP ;
  wire \$procmux$3699_CMP ;
  wire \$procmux$3700_CMP ;
  wire \$procmux$3701_CMP ;
  wire [6:0] \$procmux$3702_Y ;
  wire \$procmux$3703_CMP ;
  wire \$procmux$3712_Y ;
  wire \$procmux$3713_CMP ;
  wire \$procmux$3714_Y ;
  wire \$procmux$3715_CMP ;
  wire [2:0] \$procmux$3724_Y ;
  wire \$procmux$3725_CMP ;
  wire [2:0] \$procmux$3726_Y ;
  wire \$procmux$3727_CMP ;
  wire \$procmux$3738_Y ;
  wire \$procmux$3739_CMP ;
  wire \$procmux$3740_Y ;
  wire \$procmux$3741_CMP ;
  wire [1:0] \$procmux$3752_Y ;
  wire \$procmux$3753_CMP ;
  wire [1:0] \$procmux$3754_Y ;
  wire \$procmux$3755_CMP ;
  wire [6:0] \$procmux$3767_Y ;
  wire \$procmux$3768_CMP ;
  wire [6:0] \$procmux$3769_Y ;
  wire \$procmux$3770_CMP ;
  wire [2:0] \$procmux$3782_Y ;
  wire \$procmux$3783_CMP ;
  wire [2:0] \$procmux$3784_Y ;
  wire \$procmux$3785_CMP ;
  wire [6:0] \$procmux$3796_Y ;
  wire \$procmux$3797_CMP ;
  wire \$procmux$3798_CMP ;
  wire \$procmux$3799_CMP ;
  wire \$procmux$3800_CMP ;
  wire \$procmux$3801_CMP ;
  wire \$procmux$3802_CMP ;
  wire [6:0] \$procmux$3803_Y ;
  wire \$procmux$3804_CMP ;
  wire \$procmux$3817_Y ;
  wire \$procmux$3818_CMP ;
  wire [1:0] \$procmux$3830_Y ;
  wire \$procmux$3831_CMP ;
  wire [1:0] \$procmux$3832_Y ;
  wire \$procmux$3833_CMP ;
  wire [6:0] \$procmux$3846_Y ;
  wire \$procmux$3847_CMP ;
  wire [2:0] \$procmux$3859_Y ;
  wire \$procmux$3860_CMP ;
  wire [2:0] \$procmux$3861_Y ;
  wire \$procmux$3862_CMP ;
  wire \$procmux$3876_Y ;
  wire \$procmux$3877_CMP ;
  wire [1:0] \$procmux$3891_Y ;
  wire \$procmux$3892_CMP ;
  wire [6:0] \$procmux$3906_Y ;
  wire \$procmux$3907_CMP ;
  wire [2:0] \$procmux$3920_Y ;
  wire \$procmux$3921_CMP ;
  wire [2:0] \$procmux$3922_Y ;
  wire \$procmux$3923_CMP ;
  wire \$procmux$3928_Y ;
  wire \$procmux$3929_CMP ;
  wire \$procmux$3934_Y ;
  wire \$procmux$3935_CMP ;
  wire \$procmux$3938_Y ;
  wire \$procmux$3939_CMP ;
  wire \$procmux$3941_CMP ;
  wire \$procmux$3943_CMP ;
  wire \$procmux$3946_CMP ;
  wire \$procmux$3948_CMP ;
  wire \$procmux$3950_CMP ;
  wire \$procmux$3952_CMP ;
  wire [1:0] \$procmux$3955_Y ;
  wire \$procmux$3956_CMP ;
  wire \$procmux$3958_CMP ;
  wire \$procmux$3960_CMP ;
  wire \$procmux$3962_CMP ;
  wire \$procmux$3963_CMP ;
  wire \$procmux$3964_CMP ;
  wire \$procmux$3966_CMP ;
  wire \$procmux$3968_CMP ;
  wire \$procmux$3970_CMP ;
  wire \$procmux$3972_CMP ;
  wire [6:0] \$procmux$3976_Y ;
  wire \$procmux$3977_CMP ;
  wire \$procmux$3979_CMP ;
  wire \$procmux$3981_CMP ;
  wire \$procmux$3982_CMP ;
  wire \$procmux$3983_CMP ;
  wire \$procmux$3984_CMP ;
  wire \$procmux$3986_CMP ;
  wire \$procmux$3988_CMP ;
  wire \$procmux$3990_CMP ;
  wire \$procmux$3992_CMP ;
  wire [2:0] \$procmux$3995_Y ;
  wire \$procmux$3996_CMP ;
  wire \$procmux$3998_CMP ;
  wire \$procmux$4000_CMP ;
  wire \$procmux$4001_CMP ;
  wire \$procmux$4003_CMP ;
  wire \$procmux$4005_CMP ;
  wire \$procmux$4007_CMP ;
  wire \$procmux$4009_CMP ;
  wire \$procmux$4012_Y ;
  wire \$procmux$4013_CMP ;
  wire \$procmux$4015_Y ;
  wire \$procmux$4016_CMP ;
  wire \$procmux$4018_Y ;
  wire \$procmux$4019_CMP ;
  wire \$procmux$4021_Y ;
  wire \$procmux$4022_CMP ;
  wire \$procmux$4024_Y ;
  wire \$procmux$4025_CMP ;
  wire \$procmux$4027_Y ;
  wire \$procmux$4028_CMP ;
  wire \$procmux$4030_Y ;
  wire \$procmux$4031_CMP ;
  wire \$procmux$4033_Y ;
  wire \$procmux$4034_CMP ;
  wire \$procmux$4036_Y ;
  wire \$procmux$4037_CMP ;
  wire [1:0] \$procmux$4041_Y ;
  wire \$procmux$4042_CMP ;
  wire \$procmux$4043_CMP ;
  wire \$procmux$4044_CMP ;
  wire [1:0] \$procmux$4046_Y ;
  wire \$procmux$4047_CMP ;
  wire [1:0] \$procmux$4048_Y ;
  wire \$procmux$4049_CMP ;
  wire \$procmux$4053_Y ;
  wire \$procmux$4054_CMP ;
  wire \$procmux$4055_CMP ;
  wire \$procmux$4056_CMP ;
  wire \$procmux$4058_Y ;
  wire \$procmux$4059_CMP ;
  wire \$procmux$4060_Y ;
  wire \$procmux$4061_CMP ;
  wire \$procmux$4063_Y ;
  wire \$procmux$4064_CMP ;
  wire \$procmux$4066_Y ;
  wire \$procmux$4067_CMP ;
  wire \$procmux$4068_Y ;
  wire \$procmux$4069_CMP ;
  wire \$procmux$4074_Y ;
  wire \$procmux$4075_CMP ;
  wire \$procmux$4076_Y ;
  wire \$procmux$4077_CMP ;
  wire \$procmux$4081_Y ;
  wire \$procmux$4082_CMP ;
  wire \$procmux$4083_Y ;
  wire \$procmux$4084_CMP ;
  wire \$procmux$4085_Y ;
  wire \$procmux$4086_CMP ;
  wire \$procmux$4090_Y ;
  wire \$procmux$4091_CMP ;
  wire \$procmux$4092_Y ;
  wire \$procmux$4093_CMP ;
  wire \$procmux$4094_Y ;
  wire \$procmux$4095_CMP ;
  wire \$procmux$4103_Y ;
  wire \$procmux$4104_CMP ;
  wire \$procmux$4105_Y ;
  wire \$procmux$4106_CMP ;
  wire \$procmux$4107_Y ;
  wire \$procmux$4108_CMP ;
  wire \$procmux$4113_Y ;
  wire \$procmux$4114_CMP ;
  wire \$procmux$4115_Y ;
  wire \$procmux$4116_CMP ;
  wire \$procmux$4117_Y ;
  wire \$procmux$4118_CMP ;
  wire \$procmux$4124_Y ;
  wire \$procmux$4125_CMP ;
  wire \$procmux$4126_Y ;
  wire \$procmux$4127_CMP ;
  wire \$procmux$4128_Y ;
  wire \$procmux$4129_CMP ;
  wire \$procmux$4136_Y ;
  wire \$procmux$4137_CMP ;
  wire \$procmux$4138_Y ;
  wire \$procmux$4139_CMP ;
  wire \$procmux$4140_Y ;
  wire \$procmux$4141_CMP ;
  wire \$procmux$4145_Y ;
  wire \$procmux$4146_CMP ;
  wire \$procmux$4147_CMP ;
  wire \$procmux$4148_CMP ;
  wire \$procmux$4149_CMP ;
  wire \$procmux$4150_CMP ;
  wire \$procmux$4151_Y ;
  wire \$procmux$4152_CMP ;
  wire \$procmux$4153_Y ;
  wire \$procmux$4154_CMP ;
  wire \$procmux$4158_Y ;
  wire \$procmux$4159_CMP ;
  wire \$procmux$4160_Y ;
  wire \$procmux$4161_CMP ;
  wire \$procmux$4165_Y ;
  wire \$procmux$4166_CMP ;
  wire \$procmux$4167_Y ;
  wire \$procmux$4168_CMP ;
  wire \$procmux$4172_Y ;
  wire \$procmux$4173_CMP ;
  wire \$procmux$4174_Y ;
  wire \$procmux$4175_CMP ;
  wire \$procmux$4179_Y ;
  wire \$procmux$4180_CMP ;
  wire \$procmux$4181_Y ;
  wire \$procmux$4182_CMP ;
  wire \$procmux$4186_Y ;
  wire \$procmux$4187_CMP ;
  wire \$procmux$4188_Y ;
  wire \$procmux$4189_CMP ;
  wire \$procmux$4193_Y ;
  wire \$procmux$4194_CMP ;
  wire \$procmux$4195_Y ;
  wire \$procmux$4196_CMP ;
  wire \$procmux$4200_Y ;
  wire \$procmux$4201_CMP ;
  wire \$procmux$4202_Y ;
  wire \$procmux$4203_CMP ;
  wire \$procmux$4207_Y ;
  wire \$procmux$4208_CMP ;
  wire \$procmux$4209_Y ;
  wire \$procmux$4210_CMP ;
  wire [1:0] \$procmux$4214_Y ;
  wire \$procmux$4215_CMP ;
  wire [1:0] \$procmux$4216_Y ;
  wire \$procmux$4217_CMP ;
  wire \$procmux$4221_Y ;
  wire \$procmux$4222_CMP ;
  wire \$procmux$4223_Y ;
  wire \$procmux$4224_CMP ;
  wire \$procmux$4228_Y ;
  wire \$procmux$4229_CMP ;
  wire \$procmux$4230_Y ;
  wire \$procmux$4231_CMP ;
  wire \$procmux$4235_Y ;
  wire \$procmux$4236_CMP ;
  wire \$procmux$4237_Y ;
  wire \$procmux$4238_CMP ;
  wire \$procmux$4239_Y ;
  wire \$procmux$4240_CMP ;
  wire \$procmux$4245_Y ;
  wire \$procmux$4246_CMP ;
  wire \$procmux$4247_Y ;
  wire \$procmux$4248_CMP ;
  wire \$procmux$4253_Y ;
  wire \$procmux$4254_CMP ;
  wire \$procmux$4255_Y ;
  wire \$procmux$4256_CMP ;
  wire \$procmux$4263_Y ;
  wire \$procmux$4264_CMP ;
  wire \$procmux$4268_Y ;
  wire \$procmux$4269_CMP ;
  wire \$procmux$4270_CMP ;
  wire \$procmux$4271_Y ;
  wire \$procmux$4272_CMP ;
  wire \$procmux$4289_Y ;
  wire [9:0] \$procmux$4290_CMP ;
  wire \$procmux$4290_CTRL ;
  wire \$procmux$4292_Y ;
  wire \$procmux$4293_CMP ;
  wire \$procmux$4294_Y ;
  wire \$procmux$4295_CMP ;
  wire [1:0] \$procmux$4301_Y ;
  wire \$procmux$4302_CMP ;
  wire \$procmux$4303_CMP ;
  wire \$procmux$4304_CMP ;
  wire \$procmux$4305_CMP ;
  wire [1:0] \$procmux$4307_Y ;
  wire \$procmux$4308_CMP ;
  wire [1:0] \$procmux$4309_Y ;
  wire \$procmux$4310_CMP ;
  wire [1:0] \$procmux$4315_Y ;
  wire \$procmux$4316_CMP ;
  wire \$procmux$4317_CMP ;
  wire \$procmux$4318_CMP ;
  wire \$procmux$4319_CMP ;
  wire \$procmux$4320_CMP ;
  wire \$procmux$4321_CMP ;
  wire \$procmux$4322_CMP ;
  wire [1:0] \$procmux$4324_Y ;
  wire \$procmux$4325_CMP ;
  wire [1:0] \$procmux$4326_Y ;
  wire \$procmux$4327_CMP ;
  wire [6:0] \$procmux$4343_Y ;
  wire \$procmux$4344_CMP ;
  wire [6:0] \$procmux$4346_Y ;
  wire \$procmux$4347_CMP ;
  wire [6:0] \$procmux$4348_Y ;
  wire \$procmux$4349_CMP ;
  wire \$procmux$4365_Y ;
  wire \$procmux$4366_CMP ;
  wire \$procmux$4368_Y ;
  wire \$procmux$4369_CMP ;
  wire \$procmux$4370_Y ;
  wire \$procmux$4371_CMP ;
  wire \$procmux$4377_Y ;
  wire \$procmux$4378_CMP ;
  wire \$procmux$4379_Y ;
  wire \$procmux$4380_CMP ;
  wire [1:0] \$procmux$4386_Y ;
  wire \$procmux$4387_CMP ;
  wire [1:0] \$procmux$4388_Y ;
  wire \$procmux$4389_CMP ;
  wire [1:0] \$procmux$4395_Y ;
  wire \$procmux$4396_CMP ;
  wire [1:0] \$procmux$4397_Y ;
  wire \$procmux$4398_CMP ;
  wire [6:0] \$procmux$4404_Y ;
  wire \$procmux$4405_CMP ;
  wire [6:0] \$procmux$4406_Y ;
  wire \$procmux$4407_CMP ;
  wire \$procmux$4413_Y ;
  wire \$procmux$4414_CMP ;
  wire \$procmux$4415_Y ;
  wire \$procmux$4416_CMP ;
  wire \$procmux$4424_Y ;
  wire \$procmux$4425_CMP ;
  wire \$procmux$4427_Y ;
  wire \$procmux$4428_CMP ;
  wire \$procmux$4429_Y ;
  wire \$procmux$4430_CMP ;
  wire \$procmux$4431_Y ;
  wire \$procmux$4432_CMP ;
  wire \$procmux$4440_Y ;
  wire \$procmux$4441_CMP ;
  wire \$procmux$4443_Y ;
  wire \$procmux$4444_CMP ;
  wire \$procmux$4445_Y ;
  wire \$procmux$4446_CMP ;
  wire \$procmux$4447_Y ;
  wire \$procmux$4448_CMP ;
  wire \$procmux$4457_Y ;
  wire \$procmux$4458_CMP ;
  wire \$procmux$4460_Y ;
  wire \$procmux$4461_CMP ;
  wire \$procmux$4462_Y ;
  wire \$procmux$4463_CMP ;
  wire \$procmux$4464_Y ;
  wire \$procmux$4465_CMP ;
  wire \$procmux$4473_Y ;
  wire \$procmux$4474_CMP ;
  wire \$procmux$4476_Y ;
  wire \$procmux$4477_CMP ;
  wire \$procmux$4478_Y ;
  wire \$procmux$4479_CMP ;
  wire \$procmux$4480_Y ;
  wire \$procmux$4481_CMP ;
  wire \$procmux$4489_Y ;
  wire \$procmux$4490_CMP ;
  wire \$procmux$4492_Y ;
  wire \$procmux$4493_CMP ;
  wire \$procmux$4494_Y ;
  wire \$procmux$4495_CMP ;
  wire \$procmux$4496_Y ;
  wire \$procmux$4497_CMP ;
  wire \$procmux$4504_Y ;
  wire \$procmux$4505_CMP ;
  wire \$procmux$4507_CMP ;
  wire \$procmux$4508_CMP ;
  wire [1:0] \$procmux$4509_CMP ;
  wire \$procmux$4509_CTRL ;
  wire \$procmux$4511_Y ;
  wire \$procmux$4512_CMP ;
  wire \$procmux$4513_Y ;
  wire \$procmux$4514_CMP ;
  wire \$procmux$4515_Y ;
  wire \$procmux$4516_CMP ;
  wire \$procmux$4523_Y ;
  wire \$procmux$4524_CMP ;
  wire \$procmux$4525_Y ;
  wire \$procmux$4526_CMP ;
  wire \$procmux$4527_Y ;
  wire \$procmux$4528_CMP ;
  wire \$procmux$4536_Y ;
  wire \$procmux$4537_CMP ;
  wire \$procmux$4538_Y ;
  wire \$procmux$4539_CMP ;
  wire \$procmux$4540_Y ;
  wire \$procmux$4541_CMP ;
  wire \$procmux$4542_Y ;
  wire \$procmux$4543_CMP ;
  wire \$procmux$4553_Y ;
  wire \$procmux$4554_CMP ;
  wire \$procmux$4555_Y ;
  wire \$procmux$4556_CMP ;
  wire \$procmux$4557_Y ;
  wire \$procmux$4558_CMP ;
  wire \$procmux$4566_Y ;
  wire \$procmux$4567_CMP ;
  wire \$procmux$4569_CMP ;
  wire \$procmux$4570_CMP ;
  wire \$procmux$4571_Y ;
  wire \$procmux$4572_CMP ;
  wire \$procmux$4573_Y ;
  wire \$procmux$4574_CMP ;
  wire \$procmux$4580_Y ;
  wire \$procmux$4581_CMP ;
  wire \$procmux$4583_CMP ;
  wire [5:0] \$procmux$4584_CMP ;
  wire \$procmux$4584_CTRL ;
  wire \$procmux$4585_Y ;
  wire \$procmux$4586_CMP ;
  wire \$procmux$4595_Y ;
  wire \$procmux$4596_CMP ;
  wire \$procmux$4597_Y ;
  wire \$procmux$4598_CMP ;
  wire \$procmux$4599_Y ;
  wire \$procmux$4600_CMP ;
  wire [1:0] \$procmux$4611_Y ;
  wire \$procmux$4612_CMP ;
  wire \$procmux$4613_CMP ;
  wire [1:0] \$procmux$4614_Y ;
  wire \$procmux$4615_CMP ;
  wire \$procmux$4625_Y ;
  wire \$procmux$4626_CMP ;
  wire \$procmux$4627_CMP ;
  wire \$procmux$4628_CMP ;
  wire \$procmux$4629_Y ;
  wire \$procmux$4630_CMP ;
  wire [1:0] \$procmux$4642_Y ;
  wire \$procmux$4643_CMP ;
  wire \$procmux$4644_CMP ;
  wire [1:0] \$procmux$4645_Y ;
  wire \$procmux$4646_CMP ;
  wire \$procmux$4657_Y ;
  wire \$procmux$4658_CMP ;
  wire \$procmux$4659_CMP ;
  wire \$procmux$4660_CMP ;
  wire \$procmux$4661_Y ;
  wire \$procmux$4662_CMP ;
  wire \$procmux$4671_Y ;
  wire \$procmux$4672_CMP ;
  wire \$procmux$4673_Y ;
  wire \$procmux$4674_CMP ;
  wire \$procmux$4685_Y ;
  wire [5:0] \$procmux$4686_CMP ;
  wire \$procmux$4686_CTRL ;
  wire \$procmux$4687_Y ;
  wire \$procmux$4688_CMP ;
  wire \$procmux$4700_Y ;
  wire \$procmux$4701_CMP ;
  wire \$procmux$4702_Y ;
  wire \$procmux$4703_CMP ;
  wire \$procmux$4715_Y ;
  wire \$procmux$4716_CMP ;
  wire \$procmux$4717_Y ;
  wire \$procmux$4718_CMP ;
  wire \$procmux$4730_Y ;
  wire \$procmux$4731_CMP ;
  wire \$procmux$4732_Y ;
  wire \$procmux$4733_CMP ;
  wire \$procmux$4746_Y ;
  wire \$procmux$4747_CMP ;
  wire \$procmux$4748_Y ;
  wire \$procmux$4749_CMP ;
  wire \$procmux$4762_Y ;
  wire \$procmux$4763_CMP ;
  wire \$procmux$4764_Y ;
  wire \$procmux$4765_CMP ;
  wire \$procmux$4776_Y ;
  wire \$procmux$4777_CMP ;
  wire \$procmux$4781_Y ;
  wire \$procmux$4782_CMP ;
  wire \$procmux$4784_CMP ;
  wire \$procmux$4786_CMP ;
  wire \$procmux$4795_Y ;
  wire \$procmux$4796_CMP ;
  wire [1:0] \$procmux$4805_Y ;
  wire \$procmux$4806_CMP ;
  wire \$procmux$4808_CMP ;
  wire \$procmux$4818_Y ;
  wire \$procmux$4819_CMP ;
  wire \$procmux$4828_Y ;
  wire \$procmux$4829_CMP ;
  wire \$procmux$4831_CMP ;
  wire \$procmux$4834_Y ;
  wire \$procmux$4835_CMP ;
  wire [1:0] \$procmux$4840_Y ;
  wire \$procmux$4841_CMP ;
  wire [1:0] \$procmux$4846_Y ;
  wire \$procmux$4847_CMP ;
  wire [6:0] \$procmux$4852_Y ;
  wire \$procmux$4853_CMP ;
  wire \$procmux$4858_Y ;
  wire \$procmux$4859_CMP ;
  wire \$procmux$4864_Y ;
  wire \$procmux$4865_CMP ;
  wire \$procmux$4867_CMP ;
  wire \$procmux$4869_CMP ;
  wire \$procmux$4872_Y ;
  wire \$procmux$4873_CMP ;
  wire \$procmux$4875_CMP ;
  wire \$procmux$4877_CMP ;
  wire \$procmux$4879_CMP ;
  wire \$procmux$4881_CMP ;
  wire \$procmux$4883_CMP ;
  wire \$procmux$4885_CMP ;
  wire \$procmux$4888_Y ;
  wire \$procmux$4889_CMP ;
  wire \$procmux$4893_Y ;
  wire \$procmux$4894_CMP ;
  wire \$procmux$4896_CMP ;
  wire \$procmux$4898_CMP ;
  wire \$procmux$4901_Y ;
  wire \$procmux$4902_CMP ;
  wire \$procmux$4905_Y ;
  wire \$procmux$4906_CMP ;
  wire \$procmux$4909_Y ;
  wire \$procmux$4910_CMP ;
  wire \$procmux$4913_Y ;
  wire \$procmux$4914_CMP ;
  wire \$procmux$4917_Y ;
  wire \$procmux$4918_CMP ;
  wire [1:0] \$procmux$4921_Y ;
  wire \$procmux$4922_CMP ;
  wire \$procmux$4925_Y ;
  wire \$procmux$4926_CMP ;
  wire \$procmux$4928_CMP ;
  wire \$procmux$4930_CMP ;
  wire \$procmux$4932_CMP ;
  wire \$procmux$4933_CMP ;
  wire \$procmux$4934_CMP ;
  wire \$procmux$4936_CMP ;
  wire \$procmux$4938_CMP ;
  wire \$procmux$4941_Y ;
  wire \$procmux$4942_CMP ;
  wire \$procmux$4945_Y ;
  wire \$procmux$4946_CMP ;
  wire \$procmux$4948_CMP ;
  wire \$procmux$4950_CMP ;
  wire \$procmux$4952_CMP ;
  wire \$procmux$4953_CMP ;
  wire \$procmux$4954_CMP ;
  wire \$procmux$4956_CMP ;
  wire \$procmux$4958_CMP ;
  wire \$procmux$4960_CMP ;
  wire \$procmux$4962_CMP ;
  wire \$procmux$4963_CMP ;
  wire [1:0] \$procmux$4964_Y ;
  wire \$procmux$4965_CMP ;
  /* src = "rtl/cve2/cve2_decoder.sv:636.11-638.14" */
  wire \$rf_ren_a_o$71 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$rf_ren_a_o$84 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$rf_ren_a_o$97 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$rf_ren_b_o$98 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$rf_wdata_sel_o$83 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$rf_wdata_sel_o$96 ;
  /* src = "rtl/cve2/cve2_decoder.sv:245.9-252.12" */
  wire \$rf_we$11 ;
  /* src = "rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  wire \$rf_we$111 ;
  /* src = "rtl/cve2/cve2_decoder.sv:258.9-265.12" */
  wire \$rf_we$13 ;
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  wire \$rf_we$56 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$rf_we$76 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$rf_we$88 ;
  /* src = "rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  wire \$wfi_insn_o$65 ;
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  wire \$wfi_insn_o$82 ;
  /* src = "rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  wire \$wfi_insn_o$94 ;
  /* src = "rtl/cve2/cve2_decoder.sv:70.32" */
  output alu_multicycle_o;
  wire alu_multicycle_o;
  /* src = "rtl/cve2/cve2_decoder.sv:66.32" */
  output [1:0] alu_op_a_mux_sel_o;
  wire [1:0] alu_op_a_mux_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:68.32" */
  output alu_op_b_mux_sel_o;
  wire alu_op_b_mux_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:65.32" */
  output [6:0] alu_operator_o;
  wire [6:0] alu_operator_o;
  /* src = "rtl/cve2/cve2_decoder.sv:95.32" */
  output branch_in_dec_o;
  wire branch_in_dec_o;
  /* src = "rtl/cve2/cve2_decoder.sv:21.32" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_decoder.sv:82.32" */
  output csr_access_o;
  wire csr_access_o;
  /* src = "rtl/cve2/cve2_decoder.sv:102.16" */
  wire csr_illegal;
  /* src = "rtl/cve2/cve2_decoder.sv:117.16" */
  wire [1:0] csr_op;
  /* src = "rtl/cve2/cve2_decoder.sv:83.32" */
  output [1:0] csr_op_o;
  wire [1:0] csr_op_o;
  /* src = "rtl/cve2/cve2_decoder.sv:86.32" */
  output data_req_o;
  wire data_req_o;
  /* src = "rtl/cve2/cve2_decoder.sv:90.32" */
  output data_sign_extension_o;
  wire data_sign_extension_o;
  /* src = "rtl/cve2/cve2_decoder.sv:88.32" */
  output [1:0] data_type_o;
  wire [1:0] data_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:87.32" */
  output data_we_o;
  wire data_we_o;
  /* src = "rtl/cve2/cve2_decoder.sv:74.32" */
  output div_en_o;
  wire div_en_o;
  /* src = "rtl/cve2/cve2_decoder.sv:76.32" */
  output div_sel_o;
  wire div_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:29.32" */
  output dret_insn_o;
  wire dret_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:26.32" */
  output ebrk_insn_o;
  wire ebrk_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:30.32" */
  output ecall_insn_o;
  wire ecall_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:152.11" */
  wire \gen_no_rs3_flop.unused_clk ;
  /* src = "rtl/cve2/cve2_decoder.sv:153.11" */
  wire \gen_no_rs3_flop.unused_rst_n ;
  /* src = "rtl/cve2/cve2_decoder.sv:40.32" */
  input illegal_c_insn_i;
  wire illegal_c_insn_i;
  /* src = "rtl/cve2/cve2_decoder.sv:100.16" */
  wire illegal_insn;
  /* src = "rtl/cve2/cve2_decoder.sv:25.32" */
  output illegal_insn_o;
  wire illegal_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:101.16" */
  wire illegal_reg_rv32e;
  /* src = "rtl/cve2/cve2_decoder.sv:43.33" */
  output imm_a_mux_sel_o;
  wire imm_a_mux_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:44.33" */
  output [2:0] imm_b_mux_sel_o;
  wire [2:0] imm_b_mux_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:47.33" */
  output [31:0] imm_b_type_o;
  wire [31:0] imm_b_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:45.33" */
  output [31:0] imm_i_type_o;
  wire [31:0] imm_i_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:49.33" */
  output [31:0] imm_j_type_o;
  wire [31:0] imm_j_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:46.33" */
  output [31:0] imm_s_type_o;
  wire [31:0] imm_s_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:48.33" */
  output [31:0] imm_u_type_o;
  wire [31:0] imm_u_type_o;
  /* src = "rtl/cve2/cve2_decoder.sv:105.16" */
  wire [31:0] instr;
  /* src = "rtl/cve2/cve2_decoder.sv:106.16" */
  wire [31:0] instr_alu;
  /* src = "rtl/cve2/cve2_decoder.sv:35.32" */
  input instr_first_cycle_i;
  wire instr_first_cycle_i;
  /* src = "rtl/cve2/cve2_decoder.sv:112.15" */
  wire [4:0] instr_rd;
  /* src = "rtl/cve2/cve2_decoder.sv:37.32" */
  input [31:0] instr_rdata_alu_i;
  wire [31:0] instr_rdata_alu_i;
  /* src = "rtl/cve2/cve2_decoder.sv:36.32" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/cve2/cve2_decoder.sv:109.15" */
  wire [4:0] instr_rs1;
  /* src = "rtl/cve2/cve2_decoder.sv:110.15" */
  wire [4:0] instr_rs2;
  /* src = "rtl/cve2/cve2_decoder.sv:111.15" */
  wire [4:0] instr_rs3;
  /* src = "rtl/cve2/cve2_decoder.sv:94.32" */
  output jump_in_dec_o;
  wire jump_in_dec_o;
  /* src = "rtl/cve2/cve2_decoder.sv:32.32" */
  output jump_set_o;
  wire jump_set_o;
  /* src = "rtl/cve2/cve2_decoder.sv:61.32" */
  output mac_en_o;
  wire mac_en_o;
  /* src = "rtl/cve2/cve2_decoder.sv:27.32" */
  output mret_insn_o;
  wire mret_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:73.32" */
  output mult_en_o;
  wire mult_en_o;
  /* src = "rtl/cve2/cve2_decoder.sv:75.32" */
  output mult_sel_o;
  wire mult_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:78.32" */
  output [1:0] multdiv_operator_o;
  wire [1:0] multdiv_operator_o;
  /* src = "rtl/cve2/cve2_decoder.sv:79.32" */
  output [1:0] multdiv_signed_mode_o;
  wire [1:0] multdiv_signed_mode_o;
  /* src = "rtl/cve2/cve2_decoder.sv:119.16" */
  wire [6:0] opcode;
  /* src = "rtl/cve2/cve2_decoder.sv:120.16" */
  wire [6:0] opcode_alu;
  /* src = "rtl/cve2/cve2_decoder.sv:55.32" */
  output [4:0] rf_raddr_a_o;
  wire [4:0] rf_raddr_a_o;
  /* src = "rtl/cve2/cve2_decoder.sv:56.32" */
  output [4:0] rf_raddr_b_o;
  wire [4:0] rf_raddr_b_o;
  /* src = "rtl/cve2/cve2_decoder.sv:58.32" */
  output rf_ren_a_o;
  wire rf_ren_a_o;
  /* src = "rtl/cve2/cve2_decoder.sv:59.32" */
  output rf_ren_b_o;
  wire rf_ren_b_o;
  /* src = "rtl/cve2/cve2_decoder.sv:57.32" */
  output [4:0] rf_waddr_o;
  wire [4:0] rf_waddr_o;
  /* src = "rtl/cve2/cve2_decoder.sv:53.32" */
  output rf_wdata_sel_o;
  wire rf_wdata_sel_o;
  /* src = "rtl/cve2/cve2_decoder.sv:103.16" */
  wire rf_we;
  /* src = "rtl/cve2/cve2_decoder.sv:54.32" */
  output rf_we_o;
  wire rf_we_o;
  /* src = "rtl/cve2/cve2_decoder.sv:22.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_decoder.sv:107.16" */
  wire [9:0] unused_instr_alu;
  /* src = "rtl/cve2/cve2_decoder.sv:114.16" */
  wire use_rs3_d;
  /* src = "rtl/cve2/cve2_decoder.sv:115.16" */
  wire use_rs3_q;
  /* src = "rtl/cve2/cve2_decoder.sv:31.32" */
  output wfi_insn_o;
  wire wfi_insn_o;
  /* src = "rtl/cve2/cve2_decoder.sv:50.33" */
  output [31:0] zimm_rs1_type_o;
  wire [31:0] zimm_rs1_type_o;
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24" */
  reg [0:0] \$auto$proc_rom.cc:155:do_switch$2  [31:0];
  initial begin
    \$auto$proc_rom.cc:155:do_switch$2 [0] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [1] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [2] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [3] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [4] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [5] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [6] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [7] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [8] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [9] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [10] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [11] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [12] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [13] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [14] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [15] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [16] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [17] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [18] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [19] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [20] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [21] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [22] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [23] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [24] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [25] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [26] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [27] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [28] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [29] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [30] = 1'h1;
    \$auto$proc_rom.cc:155:do_switch$2 [31] = 1'h1;
  end
  assign \$auto$proc_rom.cc:154:do_switch$1  = \$auto$proc_rom.cc:155:do_switch$2 [instr[24:20]];
  /* src = "rtl/cve2/cve2_decoder.sv:167.38-167.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(instr_first_cycle_i),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:773.13-773.27" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(instr_alu[14]),
    .Y(\$132y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:924.19-924.48" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(instr_alu[31:27]),
    .Y(\$136y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:926.28-926.57" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(instr_alu[31:27]),
    .B(5'h08),
    .Y(\$137y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:266.13-266.33" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(instr[14:12]),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:1154.13-1154.39" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(instr_alu[14:12]),
    .Y(\$152y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:1178.22-1178.54" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$165  (
    .A(mult_sel_o),
    .B(1'h0),
    .S(illegal_insn),
    .Y(\$165y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:1179.22-1179.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$166  (
    .A(div_sel_o),
    .B(1'h0),
    .S(illegal_insn),
    .Y(\$166y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:319.33-319.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(instr[14]),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:363.42-363.63" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(instr[26:25]),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:363.41-363.78" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$26  (
    .A(1'h1),
    .B(1'h0),
    .S(\$25y ),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:371.21-371.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(instr[26]),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:405.44-405.65" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(instr[26:25]),
    .Y(\$31y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:405.43-405.80" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$32  (
    .A(1'h1),
    .B(1'h0),
    .S(\$31y ),
    .Y(\$32y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:425.32-425.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(instr[24:20]),
    .B(5'h07),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:432.23-432.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(instr[26]),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:193.10-193.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(csr_op),
    .B(2'h2),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:452.13-452.55" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A({ instr[26], instr[13:12] }),
    .B(3'h5),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:193.34-193.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(csr_op),
    .B(2'h3),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:602.13-602.35" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(instr[14:12]),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:193.10-193.56" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$4y ),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:627.15-627.32" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(instr_rs1),
    .Y(\$66y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:627.36-627.52" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(instr_rd),
    .Y(\$67y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:627.15-627.52" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(\$66y ),
    .B(\$67y ),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:194.9-194.24" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(instr_rs1),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:636.15-636.25" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A(instr[14]),
    .Y(\$70y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:193.9-194.24" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1166.13-1166.43|rtl/cve2/cve2_decoder.sv:1164.11-1169.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3403  (
    .A(2'h0),
    .B(2'h3),
    .S(\$procmux$3404_CMP ),
    .Y(\$procmux$3403_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.41-1158.12|rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3406  (
    .A(\$procmux$3403_Y ),
    .B(2'hx),
    .S(\$procmux$3407_CMP ),
    .Y(\$procmux$3406_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3408  (
    .A(2'hx),
    .B(\$procmux$3406_Y ),
    .S(\$procmux$3409_CMP ),
    .Y(\$procmux$3408_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3409_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3409_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3414  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$3415_CMP ),
    .Y(\$procmux$3414_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3415_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3415_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.41-1158.12|rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3419  (
    .A(\$alu_op_a_mux_sel_o$153 ),
    .B(2'h0),
    .S(\$procmux$3420_CMP ),
    .Y(\$procmux$3419_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3421  (
    .A(2'hx),
    .B(\$procmux$3419_Y ),
    .S(\$procmux$3422_CMP ),
    .Y(\$procmux$3421_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3422_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3422_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3427  (
    .A(3'hx),
    .B(3'h0),
    .S(\$procmux$3428_CMP ),
    .Y(\$procmux$3427_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3428_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3428_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.41-1158.12|rtl/cve2/cve2_decoder.sv:1154.9-1170.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3432  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3433_CMP ),
    .Y(\$procmux$3432_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3434  (
    .A(1'hx),
    .B(\$procmux$3432_Y ),
    .S(\$procmux$3435_CMP ),
    .Y(\$procmux$3434_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3435_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3435_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3441  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$3442_CMP ),
    .Y(\$procmux$3441_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3442_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3442_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$3446  (
    .A(2'h3),
    .B(4'h2),
    .S({ \$procmux$3448_CMP , \$procmux$3447_CMP  }),
    .Y(\$procmux$3446_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3447_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3447_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1136.19-1141.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3448_CMP0  (
    .A(instr_alu[14:12]),
    .Y(\$procmux$3448_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3449  (
    .A(2'hx),
    .B(\$procmux$3446_Y ),
    .S(\$procmux$3450_CMP ),
    .Y(\$procmux$3449_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3450_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3450_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd7)
  ) \$procmux$3454  (
    .A(7'h2c),
    .B(14'h0000),
    .S({ \$procmux$3456_CMP , \$procmux$3455_CMP  }),
    .Y(\$procmux$3454_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3455_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3455_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1136.19-1141.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3456_CMP0  (
    .A(instr_alu[14:12]),
    .Y(\$procmux$3456_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3457  (
    .A(7'hxx),
    .B(\$procmux$3454_Y ),
    .S(\$procmux$3458_CMP ),
    .Y(\$procmux$3457_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3458_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3458_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3462  (
    .A(3'h0),
    .B(3'h5),
    .S(\$procmux$3463_CMP ),
    .Y(\$procmux$3462_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1142.19-1148.14|rtl/cve2/cve2_decoder.sv:1135.9-1150.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3463_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3463_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3464  (
    .A(3'hx),
    .B(\$procmux$3462_Y ),
    .S(\$procmux$3465_CMP ),
    .Y(\$procmux$3464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3465_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3465_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3524  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$3525_CMP ),
    .Y(\$procmux$3524_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3526  (
    .A(1'hx),
    .B(\$procmux$3524_Y ),
    .S(\$procmux$3527_CMP ),
    .Y(\$procmux$3526_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3527_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3527_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3586  (
    .A(1'h0),
    .B(1'hx),
    .S(\$procmux$3587_CMP ),
    .Y(\$procmux$3586_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3588  (
    .A(1'hx),
    .B(\$procmux$3586_Y ),
    .S(\$procmux$3589_CMP ),
    .Y(\$procmux$3588_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3589_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3589_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1120.36-1123.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$pmux  #(
    .S_WIDTH(32'd18),
    .WIDTH(32'd7)
  ) \$procmux$3594  (
    .A(7'h2c),
    .B(126'h00015608184142444100000000000000),
    .S({ \$procmux$3612_CMP , \$procmux$3611_CMP , \$procmux$3610_CMP , \$procmux$3609_CMP , \$procmux$3608_CMP , \$procmux$3607_CMP , \$procmux$3606_CMP , \$procmux$3605_CMP , \$procmux$3604_CMP , \$procmux$3603_CMP , \$procmux$3602_CMP , \$procmux$3601_CMP , \$procmux$3600_CMP , \$procmux$3599_CMP , \$procmux$3598_CMP , \$procmux$3597_CMP , \$procmux$3596_CMP , \$procmux$3595_CMP  }),
    .Y(\$procmux$3594_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1120.36-1123.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3595_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00f),
    .Y(\$procmux$3595_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1116.36-1119.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3596_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00e),
    .Y(\$procmux$3596_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1112.36-1115.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3597_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00d),
    .Y(\$procmux$3597_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1108.36-1111.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3598_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00c),
    .Y(\$procmux$3598_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1104.36-1107.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3599_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00b),
    .Y(\$procmux$3599_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1100.36-1103.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3600_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h00a),
    .Y(\$procmux$3600_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1096.36-1099.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3601_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h009),
    .Y(\$procmux$3601_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1092.36-1095.16|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3602_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h008),
    .Y(\$procmux$3602_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:997.36-997.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3603_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h200),
    .Y(\$procmux$3603_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:994.36-994.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3604_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h105),
    .Y(\$procmux$3604_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:993.36-993.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3605_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h005),
    .Y(\$procmux$3605_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:992.36-992.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3606_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h001),
    .Y(\$procmux$3606_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:991.36-991.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3607_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h007),
    .Y(\$procmux$3607_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:990.36-990.60|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3608_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h006),
    .Y(\$procmux$3608_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:989.36-989.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3609_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h004),
    .Y(\$procmux$3609_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:987.36-987.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3610_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h002),
    .Y(\$procmux$3610_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:986.36-986.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3611_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .B(10'h100),
    .Y(\$procmux$3611_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:985.36-985.61|rtl/cve2/cve2_decoder.sv:983.11-1126.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$3612_CMP0  (
    .A({ instr_alu[31:25], instr_alu[14:12] }),
    .Y(\$procmux$3612_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3614  (
    .A(\$procmux$3594_Y ),
    .B(7'hxx),
    .S(\$procmux$3615_CMP ),
    .Y(\$procmux$3614_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3616  (
    .A(7'hxx),
    .B(\$procmux$3614_Y ),
    .S(\$procmux$3617_CMP ),
    .Y(\$procmux$3616_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3617_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3617_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3623  (
    .A(\$div_sel_o$144 ),
    .B(1'h0),
    .S(\$procmux$3624_CMP ),
    .Y(\$procmux$3623_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3625  (
    .A(1'hx),
    .B(\$procmux$3623_Y ),
    .S(\$procmux$3626_CMP ),
    .Y(\$procmux$3625_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3626_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3626_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3632  (
    .A(\$mult_sel_o$143 ),
    .B(1'h0),
    .S(\$procmux$3633_CMP ),
    .Y(\$procmux$3632_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3634  (
    .A(1'hx),
    .B(\$procmux$3632_Y ),
    .S(\$procmux$3635_CMP ),
    .Y(\$procmux$3634_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3635_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3635_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:941.11-981.14|rtl/cve2/cve2_decoder.sv:940.9-1127.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3641  (
    .A(\$alu_operator_o$142 ),
    .B(7'h2c),
    .S(\$procmux$3642_CMP ),
    .Y(\$procmux$3641_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3643  (
    .A(7'hxx),
    .B(\$procmux$3641_Y ),
    .S(\$procmux$3644_CMP ),
    .Y(\$procmux$3643_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3644_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3644_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3650  (
    .A(7'hxx),
    .B(\$alu_operator_o$139 ),
    .S(\$procmux$3651_CMP ),
    .Y(\$procmux$3650_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3651_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h5),
    .Y(\$procmux$3651_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3652  (
    .A(7'hxx),
    .B(\$procmux$3650_Y ),
    .S(\$procmux$3653_CMP ),
    .Y(\$procmux$3652_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3653_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3653_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:927.17-927.42|rtl/cve2/cve2_decoder.sv:926.24-928.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3658  (
    .A(7'h2c),
    .B(7'h08),
    .S(\$procmux$3659_CMP ),
    .Y(\$procmux$3658_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:925.17-925.42|rtl/cve2/cve2_decoder.sv:924.15-928.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3661  (
    .A(\$procmux$3658_Y ),
    .B(7'hxx),
    .S(\$procmux$3662_CMP ),
    .Y(\$procmux$3661_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3663  (
    .A(7'hxx),
    .B(\$procmux$3661_Y ),
    .S(\$procmux$3664_CMP ),
    .Y(\$procmux$3663_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3664_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h5),
    .Y(\$procmux$3664_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3665  (
    .A(7'hxx),
    .B(\$procmux$3663_Y ),
    .S(\$procmux$3666_CMP ),
    .Y(\$procmux$3665_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3666_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3666_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:925.17-925.42|rtl/cve2/cve2_decoder.sv:924.15-928.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3673  (
    .A(\$alu_operator_o$138 ),
    .B(7'h09),
    .S(\$procmux$3674_CMP ),
    .Y(\$procmux$3673_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3675  (
    .A(7'hxx),
    .B(\$procmux$3673_Y ),
    .S(\$procmux$3676_CMP ),
    .Y(\$procmux$3675_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3676_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h5),
    .Y(\$procmux$3676_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3677  (
    .A(7'hxx),
    .B(\$procmux$3675_Y ),
    .S(\$procmux$3678_CMP ),
    .Y(\$procmux$3677_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3678_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3678_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:822.13-885.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3684  (
    .A(7'hxx),
    .B(7'h0a),
    .S(\$procmux$3685_CMP ),
    .Y(\$procmux$3684_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:822.13-885.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3685_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3685_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3686  (
    .A(7'hxx),
    .B(\$procmux$3684_Y ),
    .S(\$procmux$3687_CMP ),
    .Y(\$procmux$3686_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3687_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3687_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd7)
  ) \$procmux$3693  (
    .A(7'hxx),
    .B({ 42'h002b5808184, \$alu_operator_o$135 , \$alu_operator_o$140  }),
    .S({ \$procmux$3701_CMP , \$procmux$3700_CMP , \$procmux$3699_CMP , \$procmux$3698_CMP , \$procmux$3697_CMP , \$procmux$3696_CMP , \$procmux$3695_CMP , \$procmux$3694_CMP  }),
    .Y(\$procmux$3693_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:889.13-929.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3694_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h5),
    .Y(\$procmux$3694_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:822.13-885.16|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3695_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3695_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:819.19-819.44|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3696_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h7),
    .Y(\$procmux$3696_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:818.19-818.43|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3697_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h6),
    .Y(\$procmux$3697_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:817.19-817.44|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3698_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h4),
    .Y(\$procmux$3698_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:816.19-816.45|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3699_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h3),
    .Y(\$procmux$3699_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:815.19-815.44|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3700_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h2),
    .Y(\$procmux$3700_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:814.19-814.44|rtl/cve2/cve2_decoder.sv:813.9-933.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3701_CMP0  (
    .A(instr_alu[14:12]),
    .Y(\$procmux$3701_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3702  (
    .A(7'hxx),
    .B(\$procmux$3693_Y ),
    .S(\$procmux$3703_CMP ),
    .Y(\$procmux$3702_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3703_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3703_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:773.29-777.12|rtl/cve2/cve2_decoder.sv:773.9-777.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3712  (
    .A(1'h1),
    .B(1'h0),
    .S(instr_rdata_alu_i[14]),
    .Y(\$procmux$3712_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3714  (
    .A(1'hx),
    .B(\$procmux$3712_Y ),
    .S(\$procmux$3715_CMP ),
    .Y(\$procmux$3714_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3715_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$3715_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:773.29-777.12|rtl/cve2/cve2_decoder.sv:773.9-777.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3724  (
    .A(3'h1),
    .B(3'h0),
    .S(instr_rdata_alu_i[14]),
    .Y(\$procmux$3724_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3726  (
    .A(3'hx),
    .B(\$procmux$3724_Y ),
    .S(\$procmux$3727_CMP ),
    .Y(\$procmux$3726_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3727_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$3727_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:750.34-754.12|rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3738  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$3739_CMP ),
    .Y(\$procmux$3738_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3740  (
    .A(1'hx),
    .B(\$procmux$3738_Y ),
    .S(\$procmux$3741_CMP ),
    .Y(\$procmux$3740_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3741_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3741_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:750.34-754.12|rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3752  (
    .A(2'h2),
    .B(2'h0),
    .S(\$procmux$3753_CMP ),
    .Y(\$procmux$3752_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3754  (
    .A(2'hx),
    .B(\$procmux$3752_Y ),
    .S(\$procmux$3755_CMP ),
    .Y(\$procmux$3754_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3755_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3755_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:750.34-754.12|rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3767  (
    .A(7'h00),
    .B(\$alu_operator_o$127 ),
    .S(\$procmux$3768_CMP ),
    .Y(\$procmux$3767_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3769  (
    .A(7'hxx),
    .B(\$procmux$3767_Y ),
    .S(\$procmux$3770_CMP ),
    .Y(\$procmux$3769_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3770_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3770_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:750.34-754.12|rtl/cve2/cve2_decoder.sv:750.9-761.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3782  (
    .A(3'h2),
    .B(3'h0),
    .S(\$procmux$3783_CMP ),
    .Y(\$procmux$3782_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3784  (
    .A(3'hx),
    .B(\$procmux$3782_Y ),
    .S(\$procmux$3785_CMP ),
    .Y(\$procmux$3784_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3785_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3785_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:744.20-744.45|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd7)
  ) \$procmux$3796  (
    .A(7'h2c),
    .B(42'h0e9e326cd1c),
    .S({ \$procmux$3802_CMP , \$procmux$3801_CMP , \$procmux$3800_CMP , \$procmux$3799_CMP , \$procmux$3798_CMP , \$procmux$3797_CMP  }),
    .Y(\$procmux$3796_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:744.20-744.45|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3797_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h7),
    .Y(\$procmux$3797_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:743.20-743.45|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3798_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h6),
    .Y(\$procmux$3798_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:742.20-742.44|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3799_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h5),
    .Y(\$procmux$3799_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:741.20-741.44|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3800_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h4),
    .Y(\$procmux$3800_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:740.20-740.44|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3801_CMP0  (
    .A(instr_alu[14:12]),
    .B(3'h1),
    .Y(\$procmux$3801_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:739.20-739.44|rtl/cve2/cve2_decoder.sv:738.9-746.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$3802_CMP0  (
    .A(instr_alu[14:12]),
    .Y(\$procmux$3802_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3803  (
    .A(7'hxx),
    .B(\$procmux$3796_Y ),
    .S(\$procmux$3804_CMP ),
    .Y(\$procmux$3803_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3804_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3804_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3817  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$3818_CMP ),
    .Y(\$procmux$3817_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3818_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3818_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.34-727.12|rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3830  (
    .A(2'h2),
    .B(2'h0),
    .S(\$procmux$3831_CMP ),
    .Y(\$procmux$3830_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3832  (
    .A(2'hx),
    .B(\$procmux$3830_Y ),
    .S(\$procmux$3833_CMP ),
    .Y(\$procmux$3832_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3833_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3833_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3846  (
    .A(7'hxx),
    .B(7'h00),
    .S(\$procmux$3847_CMP ),
    .Y(\$procmux$3846_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3847_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3847_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.34-727.12|rtl/cve2/cve2_decoder.sv:721.9-733.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3859  (
    .A(3'h5),
    .B(3'h0),
    .S(\$procmux$3860_CMP ),
    .Y(\$procmux$3859_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3861  (
    .A(3'hx),
    .B(\$procmux$3859_Y ),
    .S(\$procmux$3862_CMP ),
    .Y(\$procmux$3861_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3862_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3862_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3876  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$3877_CMP ),
    .Y(\$procmux$3876_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3877_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3877_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3891  (
    .A(2'hx),
    .B(2'h2),
    .S(\$procmux$3892_CMP ),
    .Y(\$procmux$3891_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3892_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3892_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3906  (
    .A(7'hxx),
    .B(7'h00),
    .S(\$procmux$3907_CMP ),
    .Y(\$procmux$3906_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3907_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3907_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.34-710.12|rtl/cve2/cve2_decoder.sv:704.9-716.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3920  (
    .A(3'h5),
    .B(3'h4),
    .S(\$procmux$3921_CMP ),
    .Y(\$procmux$3920_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$3922  (
    .A(3'hx),
    .B(\$procmux$3920_Y ),
    .S(\$procmux$3923_CMP ),
    .Y(\$procmux$3922_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3923_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3923_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3928  (
    .A(1'h0),
    .B(\$div_sel_o$147 ),
    .S(\$procmux$3929_CMP ),
    .Y(\$procmux$3928_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3929_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3929_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3934  (
    .A(1'h0),
    .B(\$mult_sel_o$146 ),
    .S(\$procmux$3935_CMP ),
    .Y(\$procmux$3934_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3935_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3935_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd1)
  ) \$procmux$3938  (
    .A(1'h1),
    .B({ \$alu_op_b_mux_sel_o$122 , \$alu_op_b_mux_sel_o$126 , \$alu_op_b_mux_sel_o$131 , \$alu_op_b_mux_sel_o$134 , 1'h0, \$alu_op_b_mux_sel_o$151 , \$alu_op_b_mux_sel_o$157  }),
    .S({ \$procmux$3952_CMP , \$procmux$3950_CMP , \$procmux$3948_CMP , \$procmux$3946_CMP , \$procmux$3943_CMP , \$procmux$3941_CMP , \$procmux$3939_CMP  }),
    .Y(\$procmux$3938_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3939_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3939_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3941_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3941_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3943_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3943_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3946_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$3946_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3948_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3948_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3950_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3950_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3952_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3952_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd2)
  ) \$procmux$3955  (
    .A(2'h3),
    .B({ \$alu_op_a_mux_sel_o$121 , \$alu_op_a_mux_sel_o$125 , \$alu_op_a_mux_sel_o$130 , 10'h020, \$alu_op_a_mux_sel_o$150 , \$alu_op_a_mux_sel_o$156  }),
    .S({ \$procmux$3972_CMP , \$procmux$3970_CMP , \$procmux$3968_CMP , \$procmux$3966_CMP , \$procmux$3964_CMP , \$procmux$3963_CMP , \$procmux$3962_CMP , \$procmux$3960_CMP , \$procmux$3958_CMP , \$procmux$3956_CMP  }),
    .Y(\$procmux$3955_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3956_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3956_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3958_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3958_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3960_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3960_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3962_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3962_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:801.21-806.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3963_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h17),
    .Y(\$procmux$3963_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:780.20-787.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3964_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h03),
    .Y(\$procmux$3964_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3966_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$3966_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3968_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3968_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3970_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3970_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3972_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3972_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd7)
  ) \$procmux$3976  (
    .A(7'h2c),
    .B({ \$alu_operator_o$120 , \$alu_operator_o$124 , \$alu_operator_o$129 , 28'h0000000, \$alu_operator_o$141 , \$alu_operator_o$145 , \$alu_operator_o$149  }),
    .S({ \$procmux$3992_CMP , \$procmux$3990_CMP , \$procmux$3988_CMP , \$procmux$3986_CMP , \$procmux$3984_CMP , \$procmux$3983_CMP , \$procmux$3982_CMP , \$procmux$3981_CMP , \$procmux$3979_CMP , \$procmux$3977_CMP  }),
    .Y(\$procmux$3976_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3977_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3977_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:936.18-1128.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3979_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h33),
    .Y(\$procmux$3979_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:808.22-934.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3981_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h13),
    .Y(\$procmux$3981_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:801.21-806.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3982_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h17),
    .Y(\$procmux$3982_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:793.19-799.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3983_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h37),
    .Y(\$procmux$3983_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:780.20-787.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3984_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h03),
    .Y(\$procmux$3984_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3986_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$3986_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3988_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$3988_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3990_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$3990_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3992_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$3992_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd3)
  ) \$procmux$3995  (
    .A(3'h0),
    .B({ \$imm_b_mux_sel_o$119 , \$imm_b_mux_sel_o$123 , \$imm_b_mux_sel_o$128 , \$imm_b_mux_sel_o$133 , 6'h1b, \$imm_b_mux_sel_o$148 , \$imm_b_mux_sel_o$155  }),
    .S({ \$procmux$4009_CMP , \$procmux$4007_CMP , \$procmux$4005_CMP , \$procmux$4003_CMP , \$procmux$4001_CMP , \$procmux$4000_CMP , \$procmux$3998_CMP , \$procmux$3996_CMP  }),
    .Y(\$procmux$3995_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3996_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$3996_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1135.9-1150.16|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$3998_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h0f),
    .Y(\$procmux$3998_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:801.21-806.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4000_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h17),
    .Y(\$procmux$4000_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:793.19-799.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4001_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h37),
    .Y(\$procmux$4001_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:768.21-778.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4003_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h23),
    .Y(\$procmux$4003_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:736.22-762.10|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4005_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h63),
    .Y(\$procmux$4005_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:721.9-733.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4007_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h67),
    .Y(\$procmux$4007_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:704.9-716.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4009_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4009_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4012  (
    .A(1'h1),
    .B(\$imm_a_mux_sel_o$154 ),
    .S(\$procmux$4013_CMP ),
    .Y(\$procmux$4012_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:1154.9-1170.12|rtl/cve2/cve2_decoder.sv:696.5-1174.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4013_CMP0  (
    .A(instr_alu[6:0]),
    .B(7'h73),
    .Y(\$procmux$4013_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4015  (
    .A(\$branch_in_dec_o$109 ),
    .B(1'h0),
    .S(\$procmux$4016_CMP ),
    .Y(\$procmux$4015_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4018  (
    .A(\$jump_in_dec_o$108 ),
    .B(1'h0),
    .S(\$procmux$4019_CMP ),
    .Y(\$procmux$4018_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4021  (
    .A(\$data_we_o$105 ),
    .B(1'h0),
    .S(\$procmux$4022_CMP ),
    .Y(\$procmux$4021_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4024  (
    .A(\$data_req_o$104 ),
    .B(1'h0),
    .S(\$procmux$4025_CMP ),
    .Y(\$procmux$4024_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4027  (
    .A(\$csr_access_o$103 ),
    .B(1'h0),
    .S(\$procmux$4028_CMP ),
    .Y(\$procmux$4027_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4030  (
    .A(\$jump_set_o$95 ),
    .B(1'h0),
    .S(\$procmux$4031_CMP ),
    .Y(\$procmux$4030_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:666.23-674.8|rtl/cve2/cve2_decoder.sv:666.5-674.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4033  (
    .A(\$rf_we$88 ),
    .B(1'h0),
    .S(\$procmux$4034_CMP ),
    .Y(\$procmux$4033_Y )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:658.7-658.27|rtl/cve2/cve2_decoder.sv:657.5-659.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4036  (
    .A(\$illegal_insn$86 ),
    .B(1'h1),
    .S(\$procmux$4037_CMP ),
    .Y(\$procmux$4036_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:643.22-643.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd2)
  ) \$procmux$4041  (
    .A(2'h0),
    .B(6'h1b),
    .S({ \$procmux$4044_CMP , \$procmux$4043_CMP , \$procmux$4042_CMP  }),
    .Y(\$procmux$4041_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:643.22-643.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4042_CMP0  (
    .A(instr[13:12]),
    .B(2'h3),
    .Y(\$procmux$4042_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:642.22-642.42|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4043_CMP0  (
    .A(instr[13:12]),
    .B(2'h2),
    .Y(\$procmux$4043_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:641.22-641.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4044_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4044_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4046  (
    .A(\$procmux$4041_Y ),
    .B(2'hx),
    .S(\$procmux$4047_CMP ),
    .Y(\$procmux$4046_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4048  (
    .A(2'hx),
    .B(\$procmux$4046_Y ),
    .S(\$procmux$4049_CMP ),
    .Y(\$procmux$4048_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4049_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4049_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:643.22-643.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4053  (
    .A(1'h1),
    .B(3'h0),
    .S({ \$procmux$4056_CMP , \$procmux$4055_CMP , \$procmux$4054_CMP  }),
    .Y(\$procmux$4053_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:643.22-643.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4054_CMP0  (
    .A(instr[13:12]),
    .B(2'h3),
    .Y(\$procmux$4054_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:642.22-642.42|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4055_CMP0  (
    .A(instr[13:12]),
    .B(2'h2),
    .Y(\$procmux$4055_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:641.22-641.44|rtl/cve2/cve2_decoder.sv:640.11-645.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4056_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4056_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4058  (
    .A(\$procmux$4053_Y ),
    .B(1'hx),
    .S(\$procmux$4059_CMP ),
    .Y(\$procmux$4058_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4060  (
    .A(1'hx),
    .B(\$procmux$4058_Y ),
    .S(\$procmux$4061_CMP ),
    .Y(\$procmux$4060_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4061_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4061_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:637.13-637.39|rtl/cve2/cve2_decoder.sv:636.11-638.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4063  (
    .A(1'h1),
    .B(1'h0),
    .S(instr_rdata_i[14]),
    .Y(\$procmux$4063_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4066  (
    .A(\$procmux$4063_Y ),
    .B(1'hx),
    .S(\$procmux$4067_CMP ),
    .Y(\$procmux$4066_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4068  (
    .A(1'hx),
    .B(\$procmux$4066_Y ),
    .S(\$procmux$4069_CMP ),
    .Y(\$procmux$4068_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4069_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4069_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4074  (
    .A(\$csr_illegal$72 ),
    .B(\$illegal_insn$69 ),
    .S(\$procmux$4075_CMP ),
    .Y(\$procmux$4074_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4076  (
    .A(1'hx),
    .B(\$procmux$4074_Y ),
    .S(\$procmux$4077_CMP ),
    .Y(\$procmux$4076_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4077_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4077_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:628.13-628.33|rtl/cve2/cve2_decoder.sv:627.11-629.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4081  (
    .A(\$illegal_insn$60 ),
    .B(1'h1),
    .S(\$procmux$4082_CMP ),
    .Y(\$procmux$4081_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4083  (
    .A(1'hx),
    .B(\$procmux$4081_Y ),
    .S(\$procmux$4084_CMP ),
    .Y(\$procmux$4083_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4085  (
    .A(1'hx),
    .B(\$procmux$4083_Y ),
    .S(\$procmux$4086_CMP ),
    .Y(\$procmux$4085_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4086_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4086_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:620.15-620.33|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4090  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4091_CMP ),
    .Y(\$procmux$4090_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:620.15-620.33|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4091_CMP0  (
    .A(instr[31:20]),
    .B(12'h105),
    .Y(\$procmux$4091_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4092  (
    .A(1'hx),
    .B(\$procmux$4090_Y ),
    .S(\$procmux$4093_CMP ),
    .Y(\$procmux$4092_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4094  (
    .A(1'hx),
    .B(\$procmux$4092_Y ),
    .S(\$procmux$4095_CMP ),
    .Y(\$procmux$4094_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4095_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4095_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:607.15-607.35|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4103  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4104_CMP ),
    .Y(\$procmux$4103_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:607.15-607.35|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4104_CMP0  (
    .A(instr[31:20]),
    .Y(\$procmux$4104_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4105  (
    .A(1'hx),
    .B(\$procmux$4103_Y ),
    .S(\$procmux$4106_CMP ),
    .Y(\$procmux$4105_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4107  (
    .A(1'hx),
    .B(\$procmux$4105_Y ),
    .S(\$procmux$4108_CMP ),
    .Y(\$procmux$4107_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4108_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4108_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:617.15-617.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4113  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4114_CMP ),
    .Y(\$procmux$4113_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:617.15-617.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4114_CMP0  (
    .A(instr[31:20]),
    .B(12'h7b2),
    .Y(\$procmux$4114_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4115  (
    .A(1'hx),
    .B(\$procmux$4113_Y ),
    .S(\$procmux$4116_CMP ),
    .Y(\$procmux$4115_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4117  (
    .A(1'hx),
    .B(\$procmux$4115_Y ),
    .S(\$procmux$4118_CMP ),
    .Y(\$procmux$4117_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4118_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4118_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:614.15-614.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4124  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4125_CMP ),
    .Y(\$procmux$4124_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:614.15-614.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4125_CMP0  (
    .A(instr[31:20]),
    .B(12'h302),
    .Y(\$procmux$4125_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4126  (
    .A(1'hx),
    .B(\$procmux$4124_Y ),
    .S(\$procmux$4127_CMP ),
    .Y(\$procmux$4126_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4128  (
    .A(1'hx),
    .B(\$procmux$4126_Y ),
    .S(\$procmux$4129_CMP ),
    .Y(\$procmux$4128_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4129_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4129_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:611.15-611.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4136  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4137_CMP ),
    .Y(\$procmux$4136_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:611.15-611.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4137_CMP0  (
    .A(instr[31:20]),
    .B(12'h001),
    .Y(\$procmux$4137_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4138  (
    .A(1'hx),
    .B(\$procmux$4136_Y ),
    .S(\$procmux$4139_CMP ),
    .Y(\$procmux$4138_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4140  (
    .A(1'hx),
    .B(\$procmux$4138_Y ),
    .S(\$procmux$4141_CMP ),
    .Y(\$procmux$4140_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4141_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4141_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:620.15-620.33|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$4145  (
    .A(1'h1),
    .B(5'h00),
    .S({ \$procmux$4150_CMP , \$procmux$4149_CMP , \$procmux$4148_CMP , \$procmux$4147_CMP , \$procmux$4146_CMP  }),
    .Y(\$procmux$4145_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:620.15-620.33|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4146_CMP0  (
    .A(instr[31:20]),
    .B(12'h105),
    .Y(\$procmux$4146_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:617.15-617.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4147_CMP0  (
    .A(instr[31:20]),
    .B(12'h7b2),
    .Y(\$procmux$4147_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:614.15-614.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4148_CMP0  (
    .A(instr[31:20]),
    .B(12'h302),
    .Y(\$procmux$4148_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:611.15-611.34|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4149_CMP0  (
    .A(instr[31:20]),
    .B(12'h001),
    .Y(\$procmux$4149_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:607.15-607.35|rtl/cve2/cve2_decoder.sv:604.11-624.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$4150_CMP0  (
    .A(instr[31:20]),
    .Y(\$procmux$4150_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4151  (
    .A(1'hx),
    .B(\$procmux$4145_Y ),
    .S(\$procmux$4152_CMP ),
    .Y(\$procmux$4151_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4153  (
    .A(1'hx),
    .B(\$procmux$4151_Y ),
    .S(\$procmux$4154_CMP ),
    .Y(\$procmux$4153_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4154_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4154_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4158  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4159_CMP ),
    .Y(\$procmux$4158_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4160  (
    .A(1'hx),
    .B(\$procmux$4158_Y ),
    .S(\$procmux$4161_CMP ),
    .Y(\$procmux$4160_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4161_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4161_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4165  (
    .A(\$rf_ren_a_o$71 ),
    .B(1'h0),
    .S(\$procmux$4166_CMP ),
    .Y(\$procmux$4165_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4167  (
    .A(1'hx),
    .B(\$procmux$4165_Y ),
    .S(\$procmux$4168_CMP ),
    .Y(\$procmux$4167_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4168_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4168_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4172  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4173_CMP ),
    .Y(\$procmux$4172_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4174  (
    .A(1'hx),
    .B(\$procmux$4172_Y ),
    .S(\$procmux$4175_CMP ),
    .Y(\$procmux$4174_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4175_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4175_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4179  (
    .A(1'h0),
    .B(\$wfi_insn_o$65 ),
    .S(\$procmux$4180_CMP ),
    .Y(\$procmux$4179_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4181  (
    .A(1'hx),
    .B(\$procmux$4179_Y ),
    .S(\$procmux$4182_CMP ),
    .Y(\$procmux$4181_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4182_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4182_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4186  (
    .A(1'h0),
    .B(\$ecall_insn_o$64 ),
    .S(\$procmux$4187_CMP ),
    .Y(\$procmux$4186_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4188  (
    .A(1'hx),
    .B(\$procmux$4186_Y ),
    .S(\$procmux$4189_CMP ),
    .Y(\$procmux$4188_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4189_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4189_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4193  (
    .A(1'h0),
    .B(\$dret_insn_o$63 ),
    .S(\$procmux$4194_CMP ),
    .Y(\$procmux$4193_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4195  (
    .A(1'hx),
    .B(\$procmux$4193_Y ),
    .S(\$procmux$4196_CMP ),
    .Y(\$procmux$4195_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4196_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4196_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4200  (
    .A(1'h0),
    .B(\$mret_insn_o$62 ),
    .S(\$procmux$4201_CMP ),
    .Y(\$procmux$4200_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4202  (
    .A(1'hx),
    .B(\$procmux$4200_Y ),
    .S(\$procmux$4203_CMP ),
    .Y(\$procmux$4202_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4203_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4203_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4207  (
    .A(1'h0),
    .B(\$ebrk_insn_o$61 ),
    .S(\$procmux$4208_CMP ),
    .Y(\$procmux$4207_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4209  (
    .A(1'hx),
    .B(\$procmux$4207_Y ),
    .S(\$procmux$4210_CMP ),
    .Y(\$procmux$4209_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4210_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4210_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4214  (
    .A(\$csr_op$73 ),
    .B(2'h0),
    .S(\$procmux$4215_CMP ),
    .Y(\$procmux$4214_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4216  (
    .A(2'hx),
    .B(\$procmux$4214_Y ),
    .S(\$procmux$4217_CMP ),
    .Y(\$procmux$4216_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4217_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4217_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4221  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4222_CMP ),
    .Y(\$procmux$4221_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4223  (
    .A(1'hx),
    .B(\$procmux$4221_Y ),
    .S(\$procmux$4224_CMP ),
    .Y(\$procmux$4223_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4224_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4224_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.37-630.12|rtl/cve2/cve2_decoder.sv:602.9-648.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4228  (
    .A(\$csr_illegal$72 ),
    .B(1'h0),
    .S(\$procmux$4229_CMP ),
    .Y(\$procmux$4228_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4230  (
    .A(1'hx),
    .B(\$procmux$4228_Y ),
    .S(\$procmux$4231_CMP ),
    .Y(\$procmux$4230_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4231_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4231_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:592.15-592.39|rtl/cve2/cve2_decoder.sv:591.13-593.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4235  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4236_CMP ),
    .Y(\$procmux$4235_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4237  (
    .A(1'hx),
    .B(\$procmux$4235_Y ),
    .S(\$procmux$4238_CMP ),
    .Y(\$procmux$4237_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4238_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4238_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4239  (
    .A(1'hx),
    .B(\$procmux$4237_Y ),
    .S(\$procmux$4240_CMP ),
    .Y(\$procmux$4239_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4240_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4240_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4245  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4246_CMP ),
    .Y(\$procmux$4245_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4246_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4246_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4247  (
    .A(1'hx),
    .B(\$procmux$4245_Y ),
    .S(\$procmux$4248_CMP ),
    .Y(\$procmux$4247_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4248_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4248_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4253  (
    .A(1'h0),
    .B(\$jump_set_o$54 ),
    .S(\$procmux$4254_CMP ),
    .Y(\$procmux$4253_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4254_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4254_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4255  (
    .A(1'hx),
    .B(\$procmux$4253_Y ),
    .S(\$procmux$4256_CMP ),
    .Y(\$procmux$4255_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4256_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4256_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4263  (
    .A(1'hx),
    .B(1'h0),
    .S(\$procmux$4264_CMP ),
    .Y(\$procmux$4263_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4264_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4264_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$4268  (
    .A(1'h1),
    .B(2'h0),
    .S({ \$procmux$4270_CMP , \$procmux$4269_CMP  }),
    .Y(\$procmux$4268_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:583.19-594.14|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4269_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4269_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:581.13-581.36|rtl/cve2/cve2_decoder.sv:578.9-598.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4270_CMP0  (
    .A(instr[14:12]),
    .Y(\$procmux$4270_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4271  (
    .A(1'hx),
    .B(\$procmux$4268_Y ),
    .S(\$procmux$4272_CMP ),
    .Y(\$procmux$4271_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4272_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4272_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4289  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4290_CTRL ),
    .Y(\$procmux$4289_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_ANY  (
    .A(\$procmux$4290_CMP ),
    .Y(\$procmux$4290_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .Y(\$procmux$4290_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP1  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h100),
    .Y(\$procmux$4290_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP2  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h002),
    .Y(\$procmux$4290_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP3  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h003),
    .Y(\$procmux$4290_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP4  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h004),
    .Y(\$procmux$4290_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP5  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h006),
    .Y(\$procmux$4290_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP6  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h007),
    .Y(\$procmux$4290_CMP [6])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP7  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h001),
    .Y(\$procmux$4290_CMP [7])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP8  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h005),
    .Y(\$procmux$4290_CMP [8])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:466.36-466.56|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4290_CMP9  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h105),
    .Y(\$procmux$4290_CMP [9])
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4292  (
    .A(\$procmux$4289_Y ),
    .B(1'hx),
    .S(\$procmux$4293_CMP ),
    .Y(\$procmux$4292_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4294  (
    .A(1'hx),
    .B(\$procmux$4292_Y ),
    .S(\$procmux$4295_CMP ),
    .Y(\$procmux$4294_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4295_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4295_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:556.36-560.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd2)
  ) \$procmux$4301  (
    .A(2'h0),
    .B(8'hdf),
    .S({ \$procmux$4305_CMP , \$procmux$4304_CMP , \$procmux$4303_CMP , \$procmux$4302_CMP  }),
    .Y(\$procmux$4301_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:556.36-560.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4302_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00e),
    .Y(\$procmux$4302_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:546.36-550.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4303_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00c),
    .Y(\$procmux$4303_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:536.36-540.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4304_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00a),
    .Y(\$procmux$4304_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:531.36-535.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4305_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h009),
    .Y(\$procmux$4305_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4307  (
    .A(\$procmux$4301_Y ),
    .B(2'hx),
    .S(\$procmux$4308_CMP ),
    .Y(\$procmux$4307_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4309  (
    .A(2'hx),
    .B(\$procmux$4307_Y ),
    .S(\$procmux$4310_CMP ),
    .Y(\$procmux$4309_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4310_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4310_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:561.36-565.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd2)
  ) \$procmux$4315  (
    .A(2'h0),
    .B(14'h15af),
    .S({ \$procmux$4322_CMP , \$procmux$4321_CMP , \$procmux$4320_CMP , \$procmux$4319_CMP , \$procmux$4318_CMP , \$procmux$4317_CMP , \$procmux$4316_CMP  }),
    .Y(\$procmux$4315_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:561.36-565.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4316_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00f),
    .Y(\$procmux$4316_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:556.36-560.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4317_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00e),
    .Y(\$procmux$4317_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:551.36-555.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4318_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00d),
    .Y(\$procmux$4318_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:546.36-550.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4319_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00c),
    .Y(\$procmux$4319_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:541.36-545.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4320_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00b),
    .Y(\$procmux$4320_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:536.36-540.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4321_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h00a),
    .Y(\$procmux$4321_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:531.36-535.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4322_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h009),
    .Y(\$procmux$4322_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4324  (
    .A(\$procmux$4315_Y ),
    .B(2'hx),
    .S(\$procmux$4325_CMP ),
    .Y(\$procmux$4324_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4326  (
    .A(2'hx),
    .B(\$procmux$4324_Y ),
    .S(\$procmux$4327_CMP ),
    .Y(\$procmux$4326_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4327_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4327_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:469.36-478.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4343  (
    .A(\$alu_operator_o$160 ),
    .B(7'h41),
    .S(\$procmux$4344_CMP ),
    .Y(\$procmux$4343_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:469.36-478.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4344_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h200),
    .Y(\$procmux$4344_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4346  (
    .A(\$procmux$4343_Y ),
    .B(7'hxx),
    .S(\$procmux$4347_CMP ),
    .Y(\$procmux$4346_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4348  (
    .A(7'hxx),
    .B(\$procmux$4346_Y ),
    .S(\$procmux$4349_CMP ),
    .Y(\$procmux$4348_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4349_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4349_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:469.36-478.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4365  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4366_CMP ),
    .Y(\$procmux$4365_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:469.36-478.16|rtl/cve2/cve2_decoder.sv:455.11-569.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$procmux$4366_CMP0  (
    .A({ instr[31:25], instr[14:12] }),
    .B(10'h200),
    .Y(\$procmux$4366_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4368  (
    .A(\$procmux$4365_Y ),
    .B(1'hx),
    .S(\$procmux$4369_CMP ),
    .Y(\$procmux$4368_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4370  (
    .A(1'hx),
    .B(\$procmux$4368_Y ),
    .S(\$procmux$4371_CMP ),
    .Y(\$procmux$4370_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4371_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4371_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4377  (
    .A(\$illegal_insn$44 ),
    .B(1'h1),
    .S(\$procmux$4378_CMP ),
    .Y(\$procmux$4377_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4379  (
    .A(1'hx),
    .B(\$procmux$4377_Y ),
    .S(\$procmux$4380_CMP ),
    .Y(\$procmux$4379_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4380_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4380_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4386  (
    .A(\$multdiv_signed_mode_o$48 ),
    .B(2'h0),
    .S(\$procmux$4387_CMP ),
    .Y(\$procmux$4386_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4388  (
    .A(2'hx),
    .B(\$procmux$4386_Y ),
    .S(\$procmux$4389_CMP ),
    .Y(\$procmux$4388_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4389_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4389_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4395  (
    .A(\$multdiv_operator_o$47 ),
    .B(2'h0),
    .S(\$procmux$4396_CMP ),
    .Y(\$procmux$4395_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4397  (
    .A(2'hx),
    .B(\$procmux$4395_Y ),
    .S(\$procmux$4398_CMP ),
    .Y(\$procmux$4397_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4398_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4398_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4404  (
    .A(\$alu_operator_o$46 ),
    .B(\$alu_operator_o$160 ),
    .S(\$procmux$4405_CMP ),
    .Y(\$procmux$4404_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4406  (
    .A(7'hxx),
    .B(\$procmux$4404_Y ),
    .S(\$procmux$4407_CMP ),
    .Y(\$procmux$4406_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4407_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4407_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:453.11-453.61|rtl/cve2/cve2_decoder.sv:452.9-570.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4413  (
    .A(\$mac_en_o$45 ),
    .B(1'h0),
    .S(\$procmux$4414_CMP ),
    .Y(\$procmux$4413_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4415  (
    .A(1'hx),
    .B(\$procmux$4413_Y ),
    .S(\$procmux$4416_CMP ),
    .Y(\$procmux$4415_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4416_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4416_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:432.19-436.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4424  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$4425_CMP ),
    .Y(\$procmux$4424_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:432.19-436.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4425_CMP0  (
    .A(instr[31:27]),
    .B(5'h01),
    .Y(\$procmux$4425_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4427  (
    .A(\$procmux$4424_Y ),
    .B(1'hx),
    .S(\$procmux$4428_CMP ),
    .Y(\$procmux$4427_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4429  (
    .A(1'hx),
    .B(\$procmux$4427_Y ),
    .S(\$procmux$4430_CMP ),
    .Y(\$procmux$4429_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4430_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4430_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4431  (
    .A(1'hx),
    .B(\$procmux$4429_Y ),
    .S(\$procmux$4432_CMP ),
    .Y(\$procmux$4431_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4432_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4432_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4440  (
    .A(1'hx),
    .B(\$illegal_insn$36 ),
    .S(\$procmux$4441_CMP ),
    .Y(\$procmux$4440_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4441_CMP0  (
    .A(instr[31:27]),
    .B(5'h05),
    .Y(\$procmux$4441_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4443  (
    .A(\$procmux$4440_Y ),
    .B(1'hx),
    .S(\$procmux$4444_CMP ),
    .Y(\$procmux$4443_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4445  (
    .A(1'hx),
    .B(\$procmux$4443_Y ),
    .S(\$procmux$4446_CMP ),
    .Y(\$procmux$4445_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4446_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4446_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4447  (
    .A(1'hx),
    .B(\$procmux$4445_Y ),
    .S(\$procmux$4448_CMP ),
    .Y(\$procmux$4447_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4448_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4448_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4457  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$4458_CMP ),
    .Y(\$procmux$4457_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4458_CMP0  (
    .A(instr[31:27]),
    .B(5'h05),
    .Y(\$procmux$4458_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4460  (
    .A(\$procmux$4457_Y ),
    .B(1'hx),
    .S(\$procmux$4461_CMP ),
    .Y(\$procmux$4460_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4462  (
    .A(1'hx),
    .B(\$procmux$4460_Y ),
    .S(\$procmux$4463_CMP ),
    .Y(\$procmux$4462_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4463_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4463_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4464  (
    .A(1'hx),
    .B(\$procmux$4462_Y ),
    .S(\$procmux$4465_CMP ),
    .Y(\$procmux$4464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4465_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4465_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4473  (
    .A(1'hx),
    .B(\$illegal_insn$33 ),
    .S(\$procmux$4474_CMP ),
    .Y(\$procmux$4473_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4474_CMP0  (
    .A(instr[31:27]),
    .B(5'h0d),
    .Y(\$procmux$4474_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4476  (
    .A(\$procmux$4473_Y ),
    .B(1'hx),
    .S(\$procmux$4477_CMP ),
    .Y(\$procmux$4476_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4478  (
    .A(1'hx),
    .B(\$procmux$4476_Y ),
    .S(\$procmux$4479_CMP ),
    .Y(\$procmux$4478_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4479_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4479_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4480  (
    .A(1'hx),
    .B(\$procmux$4478_Y ),
    .S(\$procmux$4481_CMP ),
    .Y(\$procmux$4480_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4481_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4481_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4489  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$4490_CMP ),
    .Y(\$procmux$4489_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4490_CMP0  (
    .A(instr[31:27]),
    .B(5'h0d),
    .Y(\$procmux$4490_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4492  (
    .A(\$procmux$4489_Y ),
    .B(1'hx),
    .S(\$procmux$4493_CMP ),
    .Y(\$procmux$4492_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4494  (
    .A(1'hx),
    .B(\$procmux$4492_Y ),
    .S(\$procmux$4495_CMP ),
    .Y(\$procmux$4494_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4495_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4495_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4496  (
    .A(1'hx),
    .B(\$procmux$4494_Y ),
    .S(\$procmux$4497_CMP ),
    .Y(\$procmux$4496_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4497_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4497_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:432.19-436.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$4504  (
    .A(1'h1),
    .B({ \$32y , \$illegal_insn$34 , \$illegal_insn$37 , \$illegal_insn$39  }),
    .S({ \$procmux$4509_CTRL , \$procmux$4508_CMP , \$procmux$4507_CMP , \$procmux$4505_CMP  }),
    .Y(\$procmux$4504_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:432.19-436.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4505_CMP0  (
    .A(instr[31:27]),
    .B(5'h01),
    .Y(\$procmux$4505_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:423.19-429.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4507_CMP0  (
    .A(instr[31:27]),
    .B(5'h05),
    .Y(\$procmux$4507_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:414.19-420.22|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4508_CMP0  (
    .A(instr[31:27]),
    .B(5'h0d),
    .Y(\$procmux$4508_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:405.28-405.81|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4509_ANY  (
    .A(\$procmux$4509_CMP ),
    .Y(\$procmux$4509_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:405.28-405.81|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4509_CMP0  (
    .A(instr[31:27]),
    .Y(\$procmux$4509_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:405.28-405.81|rtl/cve2/cve2_decoder.sv:403.15-440.22" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4509_CMP1  (
    .A(instr[31:27]),
    .B(5'h08),
    .Y(\$procmux$4509_CMP [1])
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4511  (
    .A(\$procmux$4504_Y ),
    .B(1'hx),
    .S(\$procmux$4512_CMP ),
    .Y(\$procmux$4511_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4513  (
    .A(1'hx),
    .B(\$procmux$4511_Y ),
    .S(\$procmux$4514_CMP ),
    .Y(\$procmux$4513_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4514_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4514_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4515  (
    .A(1'hx),
    .B(\$procmux$4513_Y ),
    .S(\$procmux$4516_CMP ),
    .Y(\$procmux$4515_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4516_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4516_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:401.15-401.65|rtl/cve2/cve2_decoder.sv:400.13-441.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4523  (
    .A(\$illegal_insn$40 ),
    .B(1'h1),
    .S(\$procmux$4524_CMP ),
    .Y(\$procmux$4523_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4525  (
    .A(1'hx),
    .B(\$procmux$4523_Y ),
    .S(\$procmux$4526_CMP ),
    .Y(\$procmux$4525_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4526_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4526_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4527  (
    .A(1'hx),
    .B(\$procmux$4525_Y ),
    .S(\$procmux$4528_CMP ),
    .Y(\$procmux$4527_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4528_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4528_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4536  (
    .A(1'h1),
    .B(\$auto$proc_rom.cc:154:do_switch$1 ),
    .S(\$procmux$4537_CMP ),
    .Y(\$procmux$4536_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4537_CMP0  (
    .A(instr[26:25]),
    .Y(\$procmux$4537_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4538  (
    .A(1'hx),
    .B(\$procmux$4536_Y ),
    .S(\$procmux$4539_CMP ),
    .Y(\$procmux$4538_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4539_CMP0  (
    .A(instr[31:27]),
    .B(5'h0c),
    .Y(\$procmux$4539_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4540  (
    .A(1'hx),
    .B(\$procmux$4538_Y ),
    .S(\$procmux$4541_CMP ),
    .Y(\$procmux$4540_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4541_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4541_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4542  (
    .A(1'hx),
    .B(\$procmux$4540_Y ),
    .S(\$procmux$4543_CMP ),
    .Y(\$procmux$4542_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4543_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4543_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:371.17-375.20|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4553  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$4554_CMP ),
    .Y(\$procmux$4553_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:371.17-375.20|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4554_CMP0  (
    .A(instr[31:27]),
    .B(5'h01),
    .Y(\$procmux$4554_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4555  (
    .A(1'hx),
    .B(\$procmux$4553_Y ),
    .S(\$procmux$4556_CMP ),
    .Y(\$procmux$4555_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4556_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4556_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4557  (
    .A(1'hx),
    .B(\$procmux$4555_Y ),
    .S(\$procmux$4558_CMP ),
    .Y(\$procmux$4557_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4558_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4558_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4566  (
    .A(1'h1),
    .B({ \$26y , \$illegal_insn$28 , \$illegal_insn$29  }),
    .S({ \$procmux$4570_CMP , \$procmux$4569_CMP , \$procmux$4567_CMP  }),
    .Y(\$procmux$4566_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:378.17-393.24|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4567_CMP0  (
    .A(instr[31:27]),
    .B(5'h0c),
    .Y(\$procmux$4567_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:371.17-375.20|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4569_CMP0  (
    .A(instr[31:27]),
    .B(5'h01),
    .Y(\$procmux$4569_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:363.26-363.79|rtl/cve2/cve2_decoder.sv:362.13-396.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$4570_CMP0  (
    .A(instr[31:27]),
    .Y(\$procmux$4570_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4571  (
    .A(1'hx),
    .B(\$procmux$4566_Y ),
    .S(\$procmux$4572_CMP ),
    .Y(\$procmux$4571_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4572_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4572_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4573  (
    .A(1'hx),
    .B(\$procmux$4571_Y ),
    .S(\$procmux$4574_CMP ),
    .Y(\$procmux$4573_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4574_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4574_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4580  (
    .A(1'hx),
    .B({ 1'h0, \$illegal_insn$30 , \$illegal_insn$41  }),
    .S({ \$procmux$4584_CTRL , \$procmux$4583_CMP , \$procmux$4581_CMP  }),
    .Y(\$procmux$4580_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:400.13-441.16|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4581_CMP0  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4581_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:362.13-396.20|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4583_CMP0  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4583_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_ANY  (
    .A(\$procmux$4584_CMP ),
    .Y(\$procmux$4584_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP0  (
    .A(instr[14:12]),
    .Y(\$procmux$4584_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP1  (
    .A(instr[14:12]),
    .B(3'h2),
    .Y(\$procmux$4584_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP2  (
    .A(instr[14:12]),
    .B(3'h3),
    .Y(\$procmux$4584_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP3  (
    .A(instr[14:12]),
    .B(3'h4),
    .Y(\$procmux$4584_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP4  (
    .A(instr[14:12]),
    .B(3'h6),
    .Y(\$procmux$4584_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:359.19-359.39|rtl/cve2/cve2_decoder.sv:353.9-445.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4584_CMP5  (
    .A(instr[14:12]),
    .B(3'h7),
    .Y(\$procmux$4584_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4585  (
    .A(1'hx),
    .B(\$procmux$4580_Y ),
    .S(\$procmux$4586_CMP ),
    .Y(\$procmux$4585_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4586_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4586_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:328.15-328.35|rtl/cve2/cve2_decoder.sv:327.13-329.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4595  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4596_CMP ),
    .Y(\$procmux$4595_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:325.18-330.14|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4597  (
    .A(1'hx),
    .B(\$procmux$4595_Y ),
    .S(\$procmux$4598_CMP ),
    .Y(\$procmux$4597_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:325.18-330.14|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4598_CMP0  (
    .A(instr[13:12]),
    .B(2'h2),
    .Y(\$procmux$4598_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4599  (
    .A(1'hx),
    .B(\$procmux$4597_Y ),
    .S(\$procmux$4600_CMP ),
    .Y(\$procmux$4599_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4600_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4600_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:324.18-324.38|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$4611  (
    .A(2'h0),
    .B(4'h9),
    .S({ \$procmux$4613_CMP , \$procmux$4612_CMP  }),
    .Y(\$procmux$4611_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:324.18-324.38|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4612_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4612_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:323.18-323.38|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4613_CMP0  (
    .A(instr[13:12]),
    .Y(\$procmux$4613_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4614  (
    .A(2'hx),
    .B(\$procmux$4611_Y ),
    .S(\$procmux$4615_CMP ),
    .Y(\$procmux$4614_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4615_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4615_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:325.18-330.14|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4625  (
    .A(1'h1),
    .B({ 2'h0, \$illegal_insn$22  }),
    .S({ \$procmux$4628_CMP , \$procmux$4627_CMP , \$procmux$4626_CMP  }),
    .Y(\$procmux$4625_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:325.18-330.14|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4626_CMP0  (
    .A(instr[13:12]),
    .B(2'h2),
    .Y(\$procmux$4626_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:324.18-324.38|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4627_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4627_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:323.18-323.38|rtl/cve2/cve2_decoder.sv:322.9-334.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4628_CMP0  (
    .A(instr[13:12]),
    .Y(\$procmux$4628_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4629  (
    .A(1'hx),
    .B(\$procmux$4625_Y ),
    .S(\$procmux$4630_CMP ),
    .Y(\$procmux$4629_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4630_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4630_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:307.20-307.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$4642  (
    .A(2'h0),
    .B(4'h9),
    .S({ \$procmux$4644_CMP , \$procmux$4643_CMP  }),
    .Y(\$procmux$4642_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:307.20-307.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4643_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4643_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:306.20-306.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4644_CMP0  (
    .A(instr[13:12]),
    .Y(\$procmux$4644_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4645  (
    .A(2'hx),
    .B(\$procmux$4642_Y ),
    .S(\$procmux$4646_CMP ),
    .Y(\$procmux$4645_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4646_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4646_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:308.20-308.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4657  (
    .A(1'h1),
    .B({ \$illegal_insn$18 , \$illegal_insn$18 , \$illegal_insn$18  }),
    .S({ \$procmux$4660_CMP , \$procmux$4659_CMP , \$procmux$4658_CMP  }),
    .Y(\$procmux$4657_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:308.20-308.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4658_CMP0  (
    .A(instr[13:12]),
    .B(2'h2),
    .Y(\$procmux$4658_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:307.20-307.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4659_CMP0  (
    .A(instr[13:12]),
    .B(2'h1),
    .Y(\$procmux$4659_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:306.20-306.41|rtl/cve2/cve2_decoder.sv:305.9-310.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$4660_CMP0  (
    .A(instr[13:12]),
    .Y(\$procmux$4660_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4661  (
    .A(1'hx),
    .B(\$procmux$4657_Y ),
    .S(\$procmux$4662_CMP ),
    .Y(\$procmux$4661_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4662_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4662_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:301.11-301.31|rtl/cve2/cve2_decoder.sv:300.9-302.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4671  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4672_CMP ),
    .Y(\$procmux$4671_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4673  (
    .A(1'hx),
    .B(\$procmux$4671_Y ),
    .S(\$procmux$4674_CMP ),
    .Y(\$procmux$4673_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4674_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4674_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4685  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4686_CTRL ),
    .Y(\$procmux$4685_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_ANY  (
    .A(\$procmux$4686_CMP ),
    .Y(\$procmux$4686_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP0  (
    .A(instr[14:12]),
    .Y(\$procmux$4686_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP1  (
    .A(instr[14:12]),
    .B(3'h1),
    .Y(\$procmux$4686_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP2  (
    .A(instr[14:12]),
    .B(3'h4),
    .Y(\$procmux$4686_CMP [2])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP3  (
    .A(instr[14:12]),
    .B(3'h5),
    .Y(\$procmux$4686_CMP [3])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP4  (
    .A(instr[14:12]),
    .B(3'h6),
    .Y(\$procmux$4686_CMP [4])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:282.20-282.40|rtl/cve2/cve2_decoder.sv:276.9-284.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$4686_CMP5  (
    .A(instr[14:12]),
    .B(3'h7),
    .Y(\$procmux$4686_CMP [5])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4687  (
    .A(1'hx),
    .B(\$procmux$4685_Y ),
    .S(\$procmux$4688_CMP ),
    .Y(\$procmux$4687_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4688_CMP0  (
    .A(instr[6:0]),
    .B(7'h63),
    .Y(\$procmux$4688_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:267.11-267.31|rtl/cve2/cve2_decoder.sv:266.9-268.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4700  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4701_CMP ),
    .Y(\$procmux$4700_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4702  (
    .A(1'hx),
    .B(\$procmux$4700_Y ),
    .S(\$procmux$4703_CMP ),
    .Y(\$procmux$4702_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4703_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4703_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:258.34-262.12|rtl/cve2/cve2_decoder.sv:258.9-265.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4715  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4716_CMP ),
    .Y(\$procmux$4715_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4717  (
    .A(1'hx),
    .B(\$procmux$4715_Y ),
    .S(\$procmux$4718_CMP ),
    .Y(\$procmux$4717_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4718_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4718_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:258.34-262.12|rtl/cve2/cve2_decoder.sv:258.9-265.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4730  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4731_CMP ),
    .Y(\$procmux$4730_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4732  (
    .A(1'hx),
    .B(\$procmux$4730_Y ),
    .S(\$procmux$4733_CMP ),
    .Y(\$procmux$4732_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4733_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4733_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:245.34-249.12|rtl/cve2/cve2_decoder.sv:245.9-252.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4746  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$4747_CMP ),
    .Y(\$procmux$4746_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4748  (
    .A(1'hx),
    .B(\$procmux$4746_Y ),
    .S(\$procmux$4749_CMP ),
    .Y(\$procmux$4748_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4749_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4749_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:245.34-249.12|rtl/cve2/cve2_decoder.sv:245.9-252.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4762  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4763_CMP ),
    .Y(\$procmux$4762_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4764  (
    .A(1'hx),
    .B(\$procmux$4762_Y ),
    .S(\$procmux$4765_CMP ),
    .Y(\$procmux$4764_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4765_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4765_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4776  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4777_CMP ),
    .Y(\$procmux$4776_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4777_CMP0  (
    .A(instr[6:0]),
    .B(7'h63),
    .Y(\$procmux$4777_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4781  (
    .A(1'h0),
    .B({ 2'h3, \$jump_in_dec_o$58  }),
    .S({ \$procmux$4786_CMP , \$procmux$4784_CMP , \$procmux$4782_CMP  }),
    .Y(\$procmux$4781_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4782_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4782_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4784_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4784_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4786_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4786_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4795  (
    .A(1'h0),
    .B(\$21y ),
    .S(\$procmux$4796_CMP ),
    .Y(\$procmux$4795_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4796_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4796_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$4805  (
    .A(2'h0),
    .B({ \$data_type_o$20 , \$data_type_o$24  }),
    .S({ \$procmux$4808_CMP , \$procmux$4806_CMP  }),
    .Y(\$procmux$4805_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4806_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4806_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4808_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4808_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4818  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$4819_CMP ),
    .Y(\$procmux$4818_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4819_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4819_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$4828  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$4831_CMP , \$procmux$4829_CMP  }),
    .Y(\$procmux$4828_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4829_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4829_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4831_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4831_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4834  (
    .A(1'h0),
    .B(\$csr_access_o$85 ),
    .S(\$procmux$4835_CMP ),
    .Y(\$procmux$4834_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4835_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4835_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4840  (
    .A(2'h0),
    .B(\$multdiv_signed_mode_o$53 ),
    .S(\$procmux$4841_CMP ),
    .Y(\$procmux$4840_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4841_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4841_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4846  (
    .A(2'h0),
    .B(\$multdiv_operator_o$52 ),
    .S(\$procmux$4847_CMP ),
    .Y(\$procmux$4846_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4847_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4847_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$4852  (
    .A(\$alu_operator_o$160 ),
    .B(\$alu_operator_o$51 ),
    .S(\$procmux$4853_CMP ),
    .Y(\$procmux$4852_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4853_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4853_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4858  (
    .A(1'h0),
    .B(\$mac_en_o$50 ),
    .S(\$procmux$4859_CMP ),
    .Y(\$procmux$4858_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4859_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4859_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4864  (
    .A(1'h0),
    .B(3'h7),
    .S({ \$procmux$4869_CMP , \$procmux$4867_CMP , \$procmux$4865_CMP  }),
    .Y(\$procmux$4864_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4865_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4865_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4867_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4867_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4869_CMP0  (
    .A(instr[6:0]),
    .B(7'h63),
    .Y(\$procmux$4869_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd7),
    .WIDTH(32'd1)
  ) \$procmux$4872  (
    .A(1'h0),
    .B({ 6'h3f, \$rf_ren_a_o$84  }),
    .S({ \$procmux$4885_CMP , \$procmux$4883_CMP , \$procmux$4881_CMP , \$procmux$4879_CMP , \$procmux$4877_CMP , \$procmux$4875_CMP , \$procmux$4873_CMP  }),
    .Y(\$procmux$4872_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4873_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4873_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4875_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4875_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4877_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4877_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4879_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4879_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4881_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4881_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4883_CMP0  (
    .A(instr[6:0]),
    .B(7'h63),
    .Y(\$procmux$4883_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4885_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4885_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4888  (
    .A(1'h0),
    .B(\$rf_wdata_sel_o$83 ),
    .S(\$procmux$4889_CMP ),
    .Y(\$procmux$4888_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4889_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4889_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$4893  (
    .A(1'h0),
    .B({ \$jump_set_o$12 , \$jump_set_o$14 , \$jump_set_o$57  }),
    .S({ \$procmux$4898_CMP , \$procmux$4896_CMP , \$procmux$4894_CMP  }),
    .Y(\$procmux$4893_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4894_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4894_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4896_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4896_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4898_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4898_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4901  (
    .A(1'h0),
    .B(\$wfi_insn_o$82 ),
    .S(\$procmux$4902_CMP ),
    .Y(\$procmux$4901_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4902_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4902_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4905  (
    .A(1'h0),
    .B(\$ecall_insn_o$81 ),
    .S(\$procmux$4906_CMP ),
    .Y(\$procmux$4905_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4906_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4906_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4909  (
    .A(1'h0),
    .B(\$dret_insn_o$80 ),
    .S(\$procmux$4910_CMP ),
    .Y(\$procmux$4909_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4910_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4910_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4913  (
    .A(1'h0),
    .B(\$mret_insn_o$79 ),
    .S(\$procmux$4914_CMP ),
    .Y(\$procmux$4913_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4914_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4914_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4917  (
    .A(1'h0),
    .B(\$ebrk_insn_o$78 ),
    .S(\$procmux$4918_CMP ),
    .Y(\$procmux$4917_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4918_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4918_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4921  (
    .A(2'h0),
    .B(\$csr_op$77 ),
    .S(\$procmux$4922_CMP ),
    .Y(\$procmux$4921_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4922_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4922_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$4925  (
    .A(1'h0),
    .B({ \$rf_we$11 , \$rf_we$13 , 4'hf, \$rf_we$56 , \$rf_we$76  }),
    .S({ \$procmux$4938_CMP , \$procmux$4936_CMP , \$procmux$4934_CMP , \$procmux$4933_CMP , \$procmux$4932_CMP , \$procmux$4930_CMP , \$procmux$4928_CMP , \$procmux$4926_CMP  }),
    .Y(\$procmux$4925_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4926_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4926_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4928_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4928_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4930_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4930_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4932_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4932_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:346.9-346.33|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4933_CMP0  (
    .A(instr[6:0]),
    .B(7'h17),
    .Y(\$procmux$4933_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:342.9-342.33|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4934_CMP0  (
    .A(instr[6:0]),
    .B(7'h37),
    .Y(\$procmux$4934_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4936_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4936_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4938_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4938_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$4941  (
    .A(1'h0),
    .B(\$csr_illegal$75 ),
    .S(\$procmux$4942_CMP ),
    .Y(\$procmux$4941_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4942_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4942_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$pmux  #(
    .S_WIDTH(32'd11),
    .WIDTH(32'd1)
  ) \$procmux$4945  (
    .A(1'h1),
    .B({ 1'h0, \$illegal_insn$16 , \$illegal_insn$17 , \$illegal_insn$19 , \$illegal_insn$23 , 2'h0, \$illegal_insn$42 , \$illegal_insn$49 , \$illegal_insn$55 , \$illegal_insn$74  }),
    .S({ \$procmux$4963_CMP , \$procmux$4962_CMP , \$procmux$4960_CMP , \$procmux$4958_CMP , \$procmux$4956_CMP , \$procmux$4954_CMP , \$procmux$4953_CMP , \$procmux$4952_CMP , \$procmux$4950_CMP , \$procmux$4948_CMP , \$procmux$4946_CMP  }),
    .Y(\$procmux$4945_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:602.9-648.12|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4946_CMP0  (
    .A(instr[6:0]),
    .B(7'h73),
    .Y(\$procmux$4946_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:578.9-598.16|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4948_CMP0  (
    .A(instr[6:0]),
    .B(7'h0f),
    .Y(\$procmux$4948_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:448.18-571.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4950_CMP0  (
    .A(instr[6:0]),
    .B(7'h33),
    .Y(\$procmux$4950_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:349.22-446.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4952_CMP0  (
    .A(instr[6:0]),
    .B(7'h13),
    .Y(\$procmux$4952_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:346.9-346.33|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4953_CMP0  (
    .A(instr[6:0]),
    .B(7'h17),
    .Y(\$procmux$4953_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:342.9-342.33|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4954_CMP0  (
    .A(instr[6:0]),
    .B(7'h37),
    .Y(\$procmux$4954_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:313.20-335.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4956_CMP0  (
    .A(instr[6:0]),
    .B(7'h03),
    .Y(\$procmux$4956_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:294.21-311.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4958_CMP0  (
    .A(instr[6:0]),
    .B(7'h23),
    .Y(\$procmux$4958_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:273.22-288.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4960_CMP0  (
    .A(instr[6:0]),
    .B(7'h63),
    .Y(\$procmux$4960_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:255.20-271.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4962_CMP0  (
    .A(instr[6:0]),
    .B(7'h67),
    .Y(\$procmux$4962_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_decoder.sv:242.19-253.10|rtl/cve2/cve2_decoder.sv:236.5-654.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$procmux$4963_CMP0  (
    .A(instr[6:0]),
    .B(7'h6f),
    .Y(\$procmux$4963_CMP )
  );
  /* src = "rtl/cve2/cve2_decoder.sv:195.7-195.30|rtl/cve2/cve2_decoder.sv:193.5-196.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$4964  (
    .A(\$csr_op$89 ),
    .B(2'h0),
    .S(\$procmux$4965_CMP ),
    .Y(\$procmux$4964_Y )
  );
  assign instr = instr_rdata_i;
  assign instr_alu = instr_rdata_alu_i;
  assign imm_i_type_o = { instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31:20] };
  assign imm_s_type_o = { instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31:25], instr[11:7] };
  assign imm_b_type_o = { instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[7], instr[30:25], instr[11:8], 1'h0 };
  assign imm_u_type_o = { instr[31:12], 12'h000 };
  assign imm_j_type_o = { instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[31], instr[19:12], instr[20], instr[30:21], 1'h0 };
  assign zimm_rs1_type_o = { 27'h0000000, instr_rs1 };
  assign \gen_no_rs3_flop.unused_clk  = clk_i;
  assign \gen_no_rs3_flop.unused_rst_n  = rst_ni;
  assign use_rs3_q = use_rs3_d;
  assign instr_rs1 = instr[19:15];
  assign instr_rs2 = instr[24:20];
  assign instr_rs3 = instr[31:27];
  assign rf_raddr_a_o = \$2y ;
  assign rf_raddr_b_o = instr_rs2;
  assign instr_rd = instr[11:7];
  assign rf_waddr_o = instr_rd;
  assign illegal_reg_rv32e = 1'h0;
  assign csr_op_o = \$csr_op_o$9 ;
  assign illegal_insn = \$illegal_insn$110 ;
  assign csr_illegal = \$csr_illegal$87 ;
  assign rf_we = \$rf_we$111 ;
  assign csr_op = \$csr_op$89 ;
  assign opcode = instr[6:0];
  assign ebrk_insn_o = \$ebrk_insn_o$90 ;
  assign mret_insn_o = \$mret_insn_o$91 ;
  assign dret_insn_o = \$dret_insn_o$92 ;
  assign ecall_insn_o = \$ecall_insn_o$93 ;
  assign wfi_insn_o = \$wfi_insn_o$94 ;
  assign jump_set_o = \$jump_set_o$112 ;
  assign rf_wdata_sel_o = \$rf_wdata_sel_o$96 ;
  assign rf_ren_a_o = \$rf_ren_a_o$97 ;
  assign rf_ren_b_o = \$rf_ren_b_o$98 ;
  assign mac_en_o = \$mac_en_o$99 ;
  assign alu_operator_o = \$alu_operator_o$100 ;
  assign multdiv_operator_o = \$multdiv_operator_o$101 ;
  assign multdiv_signed_mode_o = \$multdiv_signed_mode_o$102 ;
  assign csr_access_o = \$csr_access_o$113 ;
  assign data_req_o = \$data_req_o$114 ;
  assign data_we_o = \$data_we_o$115 ;
  assign data_type_o = \$data_type_o$106 ;
  assign data_sign_extension_o = \$data_sign_extension_o$107 ;
  assign jump_in_dec_o = \$jump_in_dec_o$116 ;
  assign branch_in_dec_o = \$branch_in_dec_o$117 ;
  assign use_rs3_d = 1'h0;
  assign opcode_alu = instr_alu[6:0];
  assign imm_a_mux_sel_o = \$imm_a_mux_sel_o$158 ;
  assign imm_b_mux_sel_o = \$imm_b_mux_sel_o$159 ;
  assign alu_operator_o = \$alu_operator_o$160 ;
  assign alu_op_a_mux_sel_o = \$alu_op_a_mux_sel_o$161 ;
  assign alu_op_b_mux_sel_o = \$alu_op_b_mux_sel_o$162 ;
  assign alu_multicycle_o = 1'h0;
  assign mult_sel_o = \$mult_sel_o$163 ;
  assign div_sel_o = \$div_sel_o$164 ;
  assign mult_en_o = \$165y ;
  assign div_en_o = \$166y ;
  assign illegal_insn_o = \$167y ;
  assign rf_we_o = \$169y ;
  assign unused_instr_alu = { instr_alu[19:15], instr_alu[11:7] };
  assign \$procmux$3404_CMP  = instr_alu[14];
  assign \$procmux$3407_CMP  = \$152y ;
  assign \$alu_op_a_mux_sel_o$153  = \$procmux$3408_Y ;
  assign \$alu_op_b_mux_sel_o$157  = \$procmux$3414_Y ;
  assign \$procmux$3420_CMP  = \$152y ;
  assign \$alu_op_a_mux_sel_o$156  = \$procmux$3421_Y ;
  assign \$imm_b_mux_sel_o$155  = \$procmux$3427_Y ;
  assign \$procmux$3433_CMP  = \$152y ;
  assign \$imm_a_mux_sel_o$154  = \$procmux$3434_Y ;
  assign \$alu_op_b_mux_sel_o$151  = \$procmux$3441_Y ;
  assign \$alu_op_a_mux_sel_o$150  = \$procmux$3449_Y ;
  assign \$alu_operator_o$149  = \$procmux$3457_Y ;
  assign \$imm_b_mux_sel_o$148  = \$procmux$3464_Y ;
  assign \$procmux$3525_CMP  = instr_alu[26];
  assign \$div_sel_o$144  = \$procmux$3526_Y ;
  assign \$procmux$3587_CMP  = instr_alu[26];
  assign \$mult_sel_o$143  = \$procmux$3588_Y ;
  assign \$procmux$3615_CMP  = instr_alu[26];
  assign \$alu_operator_o$142  = \$procmux$3616_Y ;
  assign \$procmux$3624_CMP  = instr_alu[26];
  assign \$div_sel_o$147  = \$procmux$3625_Y ;
  assign \$procmux$3633_CMP  = instr_alu[26];
  assign \$mult_sel_o$146  = \$procmux$3634_Y ;
  assign \$procmux$3642_CMP  = instr_alu[26];
  assign \$alu_operator_o$145  = \$procmux$3643_Y ;
  assign \$alu_operator_o$140  = \$procmux$3652_Y ;
  assign \$procmux$3659_CMP  = \$137y ;
  assign \$procmux$3662_CMP  = \$136y ;
  assign \$alu_operator_o$138  = \$procmux$3665_Y ;
  assign \$procmux$3674_CMP  = \$136y ;
  assign \$alu_operator_o$139  = \$procmux$3677_Y ;
  assign \$alu_operator_o$135  = \$procmux$3686_Y ;
  assign \$alu_operator_o$141  = \$procmux$3702_Y ;
  assign \$procmux$3713_CMP  = \$132y ;
  assign \$alu_op_b_mux_sel_o$134  = \$procmux$3714_Y ;
  assign \$procmux$3725_CMP  = \$132y ;
  assign \$imm_b_mux_sel_o$133  = \$procmux$3726_Y ;
  assign \$procmux$3739_CMP  = instr_first_cycle_i;
  assign \$alu_op_b_mux_sel_o$131  = \$procmux$3740_Y ;
  assign \$procmux$3753_CMP  = instr_first_cycle_i;
  assign \$alu_op_a_mux_sel_o$130  = \$procmux$3754_Y ;
  assign \$procmux$3768_CMP  = instr_first_cycle_i;
  assign \$alu_operator_o$129  = \$procmux$3769_Y ;
  assign \$procmux$3783_CMP  = instr_first_cycle_i;
  assign \$imm_b_mux_sel_o$128  = \$procmux$3784_Y ;
  assign \$alu_operator_o$127  = \$procmux$3803_Y ;
  assign \$alu_op_b_mux_sel_o$126  = \$procmux$3817_Y ;
  assign \$procmux$3831_CMP  = instr_first_cycle_i;
  assign \$alu_op_a_mux_sel_o$125  = \$procmux$3832_Y ;
  assign \$alu_operator_o$124  = \$procmux$3846_Y ;
  assign \$procmux$3860_CMP  = instr_first_cycle_i;
  assign \$imm_b_mux_sel_o$123  = \$procmux$3861_Y ;
  assign \$alu_op_b_mux_sel_o$122  = \$procmux$3876_Y ;
  assign \$alu_op_a_mux_sel_o$121  = \$procmux$3891_Y ;
  assign \$alu_operator_o$120  = \$procmux$3906_Y ;
  assign \$procmux$3921_CMP  = instr_first_cycle_i;
  assign \$imm_b_mux_sel_o$119  = \$procmux$3922_Y ;
  assign \$div_sel_o$164  = \$procmux$3928_Y ;
  assign \$mult_sel_o$163  = \$procmux$3934_Y ;
  assign \$alu_op_b_mux_sel_o$162  = \$procmux$3938_Y ;
  assign \$alu_op_a_mux_sel_o$161  = \$procmux$3955_Y ;
  assign \$alu_operator_o$160  = \$procmux$3976_Y ;
  assign \$imm_b_mux_sel_o$159  = \$procmux$3995_Y ;
  assign \$imm_a_mux_sel_o$158  = \$procmux$4012_Y ;
  assign \$procmux$4016_CMP  = \$illegal_insn$110 ;
  assign \$branch_in_dec_o$117  = \$procmux$4015_Y ;
  assign \$procmux$4019_CMP  = \$illegal_insn$110 ;
  assign \$jump_in_dec_o$116  = \$procmux$4018_Y ;
  assign \$procmux$4022_CMP  = \$illegal_insn$110 ;
  assign \$data_we_o$115  = \$procmux$4021_Y ;
  assign \$procmux$4025_CMP  = \$illegal_insn$110 ;
  assign \$data_req_o$114  = \$procmux$4024_Y ;
  assign \$procmux$4028_CMP  = \$illegal_insn$110 ;
  assign \$csr_access_o$113  = \$procmux$4027_Y ;
  assign \$procmux$4031_CMP  = \$illegal_insn$110 ;
  assign \$jump_set_o$112  = \$procmux$4030_Y ;
  assign \$procmux$4034_CMP  = \$illegal_insn$110 ;
  assign \$rf_we$111  = \$procmux$4033_Y ;
  assign \$procmux$4037_CMP  = illegal_c_insn_i;
  assign \$illegal_insn$110  = \$procmux$4036_Y ;
  assign \$procmux$4047_CMP  = \$59y ;
  assign \$csr_op$73  = \$procmux$4048_Y ;
  assign \$procmux$4059_CMP  = \$59y ;
  assign \$csr_illegal$72  = \$procmux$4060_Y ;
  assign \$procmux$4064_CMP  = \$70y ;
  assign \$procmux$4067_CMP  = \$59y ;
  assign \$rf_ren_a_o$71  = \$procmux$4068_Y ;
  assign \$procmux$4075_CMP  = \$59y ;
  assign \$illegal_insn$74  = \$procmux$4076_Y ;
  assign \$procmux$4082_CMP  = \$68y ;
  assign \$procmux$4084_CMP  = \$59y ;
  assign \$illegal_insn$69  = \$procmux$4085_Y ;
  assign \$procmux$4093_CMP  = \$59y ;
  assign \$wfi_insn_o$65  = \$procmux$4094_Y ;
  assign \$procmux$4106_CMP  = \$59y ;
  assign \$ecall_insn_o$64  = \$procmux$4107_Y ;
  assign \$procmux$4116_CMP  = \$59y ;
  assign \$dret_insn_o$63  = \$procmux$4117_Y ;
  assign \$procmux$4127_CMP  = \$59y ;
  assign \$mret_insn_o$62  = \$procmux$4128_Y ;
  assign \$procmux$4139_CMP  = \$59y ;
  assign \$ebrk_insn_o$61  = \$procmux$4140_Y ;
  assign \$procmux$4152_CMP  = \$59y ;
  assign \$illegal_insn$60  = \$procmux$4153_Y ;
  assign \$procmux$4159_CMP  = \$59y ;
  assign \$csr_access_o$85  = \$procmux$4160_Y ;
  assign \$procmux$4166_CMP  = \$59y ;
  assign \$rf_ren_a_o$84  = \$procmux$4167_Y ;
  assign \$procmux$4173_CMP  = \$59y ;
  assign \$rf_wdata_sel_o$83  = \$procmux$4174_Y ;
  assign \$procmux$4180_CMP  = \$59y ;
  assign \$wfi_insn_o$82  = \$procmux$4181_Y ;
  assign \$procmux$4187_CMP  = \$59y ;
  assign \$ecall_insn_o$81  = \$procmux$4188_Y ;
  assign \$procmux$4194_CMP  = \$59y ;
  assign \$dret_insn_o$80  = \$procmux$4195_Y ;
  assign \$procmux$4201_CMP  = \$59y ;
  assign \$mret_insn_o$79  = \$procmux$4202_Y ;
  assign \$procmux$4208_CMP  = \$59y ;
  assign \$ebrk_insn_o$78  = \$procmux$4209_Y ;
  assign \$procmux$4215_CMP  = \$59y ;
  assign \$csr_op$77  = \$procmux$4216_Y ;
  assign \$procmux$4222_CMP  = \$59y ;
  assign \$rf_we$76  = \$procmux$4223_Y ;
  assign \$procmux$4229_CMP  = \$59y ;
  assign \$csr_illegal$75  = \$procmux$4230_Y ;
  assign \$procmux$4236_CMP  = instr_first_cycle_i;
  assign \$jump_set_o$54  = \$procmux$4239_Y ;
  assign \$jump_in_dec_o$58  = \$procmux$4247_Y ;
  assign \$jump_set_o$57  = \$procmux$4255_Y ;
  assign \$rf_we$56  = \$procmux$4263_Y ;
  assign \$illegal_insn$55  = \$procmux$4271_Y ;
  assign \$procmux$4293_CMP  = \$43y ;
  assign \$illegal_insn$44  = \$procmux$4294_Y ;
  assign \$procmux$4308_CMP  = \$43y ;
  assign \$multdiv_signed_mode_o$48  = \$procmux$4309_Y ;
  assign \$procmux$4325_CMP  = \$43y ;
  assign \$multdiv_operator_o$47  = \$procmux$4326_Y ;
  assign \$procmux$4347_CMP  = \$43y ;
  assign \$alu_operator_o$46  = \$procmux$4348_Y ;
  assign \$procmux$4369_CMP  = \$43y ;
  assign \$mac_en_o$45  = \$procmux$4370_Y ;
  assign \$procmux$4378_CMP  = \$43y ;
  assign \$illegal_insn$49  = \$procmux$4379_Y ;
  assign \$procmux$4387_CMP  = \$43y ;
  assign \$multdiv_signed_mode_o$53  = \$procmux$4388_Y ;
  assign \$procmux$4396_CMP  = \$43y ;
  assign \$multdiv_operator_o$52  = \$procmux$4397_Y ;
  assign \$procmux$4405_CMP  = \$43y ;
  assign \$alu_operator_o$51  = \$procmux$4406_Y ;
  assign \$procmux$4414_CMP  = \$43y ;
  assign \$mac_en_o$50  = \$procmux$4415_Y ;
  assign \$procmux$4428_CMP  = instr[26];
  assign \$illegal_insn$39  = \$procmux$4431_Y ;
  assign \$procmux$4444_CMP  = instr[26];
  assign \$illegal_insn$37  = \$procmux$4447_Y ;
  assign \$procmux$4461_CMP  = instr[26];
  assign \$illegal_insn$36  = \$procmux$4464_Y ;
  assign \$procmux$4477_CMP  = instr[26];
  assign \$illegal_insn$34  = \$procmux$4480_Y ;
  assign \$procmux$4493_CMP  = instr[26];
  assign \$illegal_insn$33  = \$procmux$4496_Y ;
  assign \$procmux$4512_CMP  = instr[26];
  assign \$illegal_insn$40  = \$procmux$4515_Y ;
  assign \$procmux$4524_CMP  = instr[26];
  assign \$illegal_insn$41  = \$procmux$4527_Y ;
  assign \$illegal_insn$29  = \$procmux$4542_Y ;
  assign \$illegal_insn$28  = \$procmux$4557_Y ;
  assign \$illegal_insn$30  = \$procmux$4573_Y ;
  assign \$illegal_insn$42  = \$procmux$4585_Y ;
  assign \$procmux$4596_CMP  = instr[14];
  assign \$illegal_insn$22  = \$procmux$4599_Y ;
  assign \$data_type_o$24  = \$procmux$4614_Y ;
  assign \$illegal_insn$23  = \$procmux$4629_Y ;
  assign \$data_type_o$20  = \$procmux$4645_Y ;
  assign \$illegal_insn$19  = \$procmux$4661_Y ;
  assign \$procmux$4672_CMP  = instr[14];
  assign \$illegal_insn$18  = \$procmux$4673_Y ;
  assign \$illegal_insn$17  = \$procmux$4687_Y ;
  assign \$procmux$4701_CMP  = \$15y ;
  assign \$illegal_insn$16  = \$procmux$4702_Y ;
  assign \$procmux$4716_CMP  = instr_first_cycle_i;
  assign \$rf_we$13  = \$procmux$4717_Y ;
  assign \$procmux$4731_CMP  = instr_first_cycle_i;
  assign \$jump_set_o$14  = \$procmux$4732_Y ;
  assign \$procmux$4747_CMP  = instr_first_cycle_i;
  assign \$rf_we$11  = \$procmux$4748_Y ;
  assign \$procmux$4763_CMP  = instr_first_cycle_i;
  assign \$jump_set_o$12  = \$procmux$4764_Y ;
  assign \$branch_in_dec_o$109  = \$procmux$4776_Y ;
  assign \$jump_in_dec_o$108  = \$procmux$4781_Y ;
  assign \$data_sign_extension_o$107  = \$procmux$4795_Y ;
  assign \$data_type_o$106  = \$procmux$4805_Y ;
  assign \$data_we_o$105  = \$procmux$4818_Y ;
  assign \$data_req_o$104  = \$procmux$4828_Y ;
  assign \$csr_access_o$103  = \$procmux$4834_Y ;
  assign \$multdiv_signed_mode_o$102  = \$procmux$4840_Y ;
  assign \$multdiv_operator_o$101  = \$procmux$4846_Y ;
  assign \$alu_operator_o$160  = \$procmux$4852_Y ;
  assign \$mac_en_o$99  = \$procmux$4858_Y ;
  assign \$rf_ren_b_o$98  = \$procmux$4864_Y ;
  assign \$rf_ren_a_o$97  = \$procmux$4872_Y ;
  assign \$rf_wdata_sel_o$96  = \$procmux$4888_Y ;
  assign \$jump_set_o$95  = \$procmux$4893_Y ;
  assign \$wfi_insn_o$94  = \$procmux$4901_Y ;
  assign \$ecall_insn_o$93  = \$procmux$4905_Y ;
  assign \$dret_insn_o$92  = \$procmux$4909_Y ;
  assign \$mret_insn_o$91  = \$procmux$4913_Y ;
  assign \$ebrk_insn_o$90  = \$procmux$4917_Y ;
  assign \$csr_op$89  = \$procmux$4921_Y ;
  assign \$rf_we$88  = \$procmux$4925_Y ;
  assign \$csr_illegal$87  = \$procmux$4941_Y ;
  assign \$illegal_insn$86  = \$procmux$4945_Y ;
  assign \$procmux$4965_CMP  = \$8y ;
  assign \$csr_op_o$9  = \$procmux$4964_Y ;
  assign \$1y  = 1'h0;
  assign \$2y  = instr_rs1;
  assign \$167y  = \$procmux$4036_Y ;
  assign \$168y  = 1'h1;
  assign \$169y  = \$procmux$4033_Y ;
endmodule

/* src = "rtl/cve2/cve2_ex_block.sv:11.8" */
module \cve2_ex_block$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.ex_block_i (clk_i, rst_ni, alu_operator_i, alu_operand_a_i, alu_operand_b_i, alu_instr_first_cycle_i, multdiv_operator_i, mult_en_i, div_en_i, mult_sel_i, div_sel_i, multdiv_signed_mode_i, multdiv_operand_a_i, multdiv_operand_b_i, imd_val_we_o, imd_val_d_o, imd_val_q_i, alu_adder_result_ex_o, result_ex_o, branch_target_o, branch_decision_o
, ex_valid_o);
  wire [33:0] \$1 ;
  wire \$10y ;
  wire [33:0] \$2y ;
  wire [33:0] \$4 ;
  wire [33:0] \$5y ;
  wire [1:0] \$6y ;
  wire [31:0] \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_ex_block.sv:40.33" */
  output [31:0] alu_adder_result_ex_o;
  wire [31:0] alu_adder_result_ex_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:53.16" */
  wire [33:0] alu_adder_result_ext;
  /* src = "rtl/cve2/cve2_ex_block.sv:54.16" */
  wire alu_cmp_result;
  /* src = "rtl/cve2/cve2_ex_block.sv:58.16" */
  wire [63:0] alu_imd_val_d;
  /* src = "rtl/cve2/cve2_ex_block.sv:57.16" */
  wire [63:0] alu_imd_val_q;
  /* src = "rtl/cve2/cve2_ex_block.sv:59.16" */
  wire [1:0] alu_imd_val_we;
  /* src = "rtl/cve2/cve2_ex_block.sv:22.33" */
  input alu_instr_first_cycle_i;
  wire alu_instr_first_cycle_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:54.32" */
  wire alu_is_equal_result;
  /* src = "rtl/cve2/cve2_ex_block.sv:20.33" */
  input [31:0] alu_operand_a_i;
  wire [31:0] alu_operand_a_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:21.33" */
  input [31:0] alu_operand_b_i;
  wire [31:0] alu_operand_b_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:19.33" */
  input [6:0] alu_operator_i;
  wire [6:0] alu_operator_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:50.16" */
  wire [31:0] alu_result;
  /* src = "rtl/cve2/cve2_ex_block.sv:43.33" */
  output branch_decision_o;
  wire branch_decision_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:42.33" */
  output [31:0] branch_target_o;
  wire [31:0] branch_target_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:15.33" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:27.33" */
  input div_en_i;
  wire div_en_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:29.33" */
  input div_sel_i;
  wire div_sel_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:45.33" */
  output ex_valid_o;
  wire ex_valid_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:36.33" */
  output [67:0] imd_val_d_o;
  wire [67:0] imd_val_d_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:37.33" */
  input [67:0] imd_val_q_i;
  wire [67:0] imd_val_q_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:35.33" */
  output [1:0] imd_val_we_o;
  wire [1:0] imd_val_we_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:26.33" */
  input mult_en_i;
  wire mult_en_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:28.33" */
  input mult_sel_i;
  wire mult_sel_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:52.39" */
  wire [32:0] multdiv_alu_operand_a;
  /* src = "rtl/cve2/cve2_ex_block.sv:52.16" */
  wire [32:0] multdiv_alu_operand_b;
  /* src = "rtl/cve2/cve2_ex_block.sv:61.16" */
  wire [1:0] multdiv_imd_val_we;
  /* src = "rtl/cve2/cve2_ex_block.sv:31.33" */
  input [31:0] multdiv_operand_a_i;
  wire [31:0] multdiv_operand_a_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:32.33" */
  input [31:0] multdiv_operand_b_i;
  wire [31:0] multdiv_operand_b_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:25.33" */
  input [1:0] multdiv_operator_i;
  wire [1:0] multdiv_operator_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:50.28" */
  wire [31:0] multdiv_result;
  /* src = "rtl/cve2/cve2_ex_block.sv:56.16" */
  wire multdiv_sel;
  /* src = "rtl/cve2/cve2_ex_block.sv:30.33" */
  input [1:0] multdiv_signed_mode_i;
  wire [1:0] multdiv_signed_mode_i;
  /* src = "rtl/cve2/cve2_ex_block.sv:55.16" */
  wire multdiv_valid;
  /* src = "rtl/cve2/cve2_ex_block.sv:41.33" */
  output [31:0] result_ex_o;
  wire [31:0] result_ex_o;
  /* src = "rtl/cve2/cve2_ex_block.sv:16.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_ex_block.sv:60.16" */
  reg [33:0] multdiv_imd_val_d [1:0];
  assign \$4  = multdiv_imd_val_d[32'd1];
  assign \$1  = multdiv_imd_val_d[32'd0];
  /* src = "rtl/cve2/cve2_ex_block.sv:178.55-178.70" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(alu_imd_val_we),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_ex_block.sv:178.53-178.71" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_ex_block.sv:97.5" */
  \cve2_alu$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.ex_block_i.alu_i  alu_i (
    .adder_result_ext_o(alu_adder_result_ext),
    .adder_result_o(alu_adder_result_ex_o),
    .comparison_result_o(alu_cmp_result),
    .imd_val_d_o(alu_imd_val_d),
    .imd_val_q_i(alu_imd_val_q),
    .imd_val_we_o(alu_imd_val_we),
    .instr_first_cycle_i(alu_instr_first_cycle_i),
    .is_equal_result_o(alu_is_equal_result),
    .multdiv_operand_a_i(33'h000000000),
    .multdiv_operand_b_i(33'h000000000),
    .multdiv_sel_i(1'h0),
    .operand_a_i(alu_operand_a_i),
    .operand_b_i(alu_operand_b_i),
    .operator_i(alu_operator_i),
    .result_o(alu_result)
  );
  assign multdiv_sel = 1'h0;
  assign imd_val_d_o[67:34] = \$2y ;
  assign imd_val_d_o[33:0] = \$5y ;
  assign imd_val_we_o = \$6y ;
  assign alu_imd_val_q = { imd_val_q_i[65:34], imd_val_q_i[31:0] };
  assign result_ex_o = \$7y ;
  assign branch_decision_o = alu_cmp_result;
  assign branch_target_o = alu_adder_result_ex_o;
  assign multdiv_alu_operand_a = 33'h000000000;
  assign multdiv_alu_operand_b = 33'h000000000;
  assign multdiv_result = 32'd0;
  assign multdiv_valid = 1'h0;
  assign ex_valid_o = \$10y ;
  assign \$2y  = { 2'h0, alu_imd_val_d[63:32] };
  assign \$6y  = alu_imd_val_we;
  assign \$10y  = \$9y ;
  assign \$7y  = alu_result;
  assign \$5y  = { 2'h0, alu_imd_val_d[31:0] };
endmodule

/* src = "rtl/cve2/cve2_fetch_fifo.sv:15.8" */
module \cve2_fetch_fifo$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.prefetch_buffer_i.fifo_i (clk_i, rst_ni, clear_i, busy_o, in_valid_i, in_addr_i, in_rdata_i, in_err_i, out_valid_o, out_ready_i, out_addr_o, out_rdata_o, out_err_o, out_err_plus2_o);
  wire [31:0] \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire \$2y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire [30:0] \$38y ;
  wire [30:0] \$39y ;
  wire [31:0] \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire [31:0] \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$70y ;
  wire \$71y ;
  wire \$72y ;
  wire [31:0] \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$84y ;
  wire \$85y ;
  wire \$87y ;
  wire \$88y ;
  wire \$8y ;
  wire \$92y ;
  wire \$93y ;
  wire \$97y ;
  wire \$98y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire \$err_q[0]$90 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire \$err_q[1]$95 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire \$err_q[2]$100 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:154.14-156.8" */
  wire [30:0] \$instr_addr_q$43 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  wire \$out_err_o$32 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  wire \$out_err_plus2_o$33 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  wire [31:0] \$out_rdata_o$31 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:119.7-123.10" */
  wire \$out_valid_o$29 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  wire \$out_valid_o$30 ;
  wire \$procmux$1781_Y ;
  wire \$procmux$1782_CMP ;
  wire [31:0] \$procmux$1783_Y ;
  wire \$procmux$1784_CMP ;
  wire \$procmux$1785_Y ;
  wire \$procmux$1786_CMP ;
  wire [31:0] \$procmux$1787_Y ;
  wire \$procmux$1788_CMP ;
  wire \$procmux$1789_Y ;
  wire \$procmux$1790_CMP ;
  wire [31:0] \$procmux$1791_Y ;
  wire \$procmux$1792_CMP ;
  wire [30:0] \$procmux$1793_Y ;
  wire \$procmux$1794_CMP ;
  wire \$procmux$1797_Y ;
  wire \$procmux$1798_CMP ;
  wire \$procmux$1801_Y ;
  wire \$procmux$1802_CMP ;
  wire [31:0] \$procmux$1805_Y ;
  wire \$procmux$1806_CMP ;
  wire \$procmux$1809_Y ;
  wire \$procmux$1810_CMP ;
  wire \$procmux$1813_Y ;
  wire \$procmux$1814_CMP ;
  wire \$procmux$1815_Y ;
  wire \$procmux$1816_CMP ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire [31:0] \$rdata_q[31:0]$89 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire [31:0] \$rdata_q[63:32]$94 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  wire [31:0] \$rdata_q[95:64]$99 ;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:57.29" */
  wire addr_incr_two;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:55.29" */
  wire aligned_is_compressed;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:23.31" */
  output [1:0] busy_o;
  wire [1:0] busy_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:22.31" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:18.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:48.29" */
  wire [2:0] entry_en;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:52.29" */
  wire err;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:44.29" */
  wire [2:0] err_d;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:52.51" */
  wire err_plus2;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:44.40" */
  wire [2:0] err_q;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:52.36" */
  wire err_unaligned;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:27.31" */
  input [31:0] in_addr_i;
  wire [31:0] in_addr_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:29.31" */
  input in_err_i;
  wire in_err_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:28.31" */
  input [31:0] in_rdata_i;
  wire [31:0] in_rdata_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:26.31" */
  input in_valid_i;
  wire in_valid_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:59.29" */
  wire [30:0] instr_addr_d;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:60.29" */
  wire instr_addr_en;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:58.29" */
  wire [30:0] instr_addr_next;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:59.43" */
  wire [30:0] instr_addr_q;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:46.29" */
  wire [2:0] lowest_free_entry;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:34.31" */
  output [31:0] out_addr_o;
  wire [31:0] out_addr_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:36.31" */
  output out_err_o;
  wire out_err_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:37.31" */
  output out_err_plus2_o;
  wire out_err_plus2_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:35.31" */
  output [31:0] out_rdata_o;
  wire [31:0] out_rdata_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:33.31" */
  input out_ready_i;
  wire out_ready_i;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:32.31" */
  output out_valid_o;
  wire out_valid_o;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:50.29" */
  wire pop_fifo;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:51.29" */
  wire [31:0] rdata;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:43.29" */
  wire [95:0] rdata_d;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:43.40" */
  wire [95:0] rdata_q;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:51.36" */
  wire [31:0] rdata_unaligned;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:19.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:55.52" */
  wire unaligned_is_compressed;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:61.29" */
  wire unused_addr_in;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:53.29" */
  wire valid;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:45.29" */
  wire [2:0] valid_d;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:47.43" */
  wire [2:0] valid_popped;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:47.29" */
  wire [2:0] valid_pushed;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:45.40" */
  wire [2:0] valid_q;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:53.36" */
  wire valid_unaligned;
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:67.18-67.54" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$0  (
    .A(in_rdata_i),
    .B(rdata_q[31:0]),
    .S(valid_q[0]),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:68.18-68.52" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$1  (
    .A(in_err_i),
    .B(err_q[0]),
    .S(valid_q[0]),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:91.54-91.78" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(unaligned_is_compressed),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:91.43-91.78" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(err_q[1]),
    .B(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:91.42-91.90" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$11y ),
    .B(err_q[0]),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:91.28-93.96" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$13  (
    .A(\$9y ),
    .B(\$12y ),
    .S(valid_q[1]),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:98.42-98.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(in_err_i),
    .B(valid_q[0]),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:98.66-98.75" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(err_q[0]),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:98.42-98.75" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:97.53-97.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(err_q[0]),
    .Y(\$17y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:97.42-97.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(err_q[1]),
    .B(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:97.28-98.76" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$19  (
    .A(\$16y ),
    .B(\$18y ),
    .S(valid_q[1]),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:69.18-69.41" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(valid_q[0]),
    .B(in_valid_i),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:102.42-102.65" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(valid_q[0]),
    .B(in_valid_i),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:101.28-102.66" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$21  (
    .A(\$20y ),
    .B(1'h1),
    .S(valid_q[1]),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:105.37-105.58" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(rdata[17:16]),
    .B(2'h3),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:105.62-105.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(err),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:105.36-105.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$22y ),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:106.37-106.58" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(rdata[1:0]),
    .B(2'h3),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:106.62-106.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(err),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:106.36-106.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(\$25y ),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:83.28-84.73" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$3  (
    .A({ in_rdata_i[15:0], rdata[31:16] }),
    .B({ rdata_q[47:32], rdata[31:16] }),
    .S(valid_q[1]),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:138.37-138.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(out_ready_i),
    .B(out_valid_o),
    .Y(\$34y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:138.26-138.63" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(clear_i),
    .B(\$34y ),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:141.26-142.65" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$36  (
    .A(aligned_is_compressed),
    .B(unaligned_is_compressed),
    .S(instr_addr_q[0]),
    .Y(\$36y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:146.36-146.50" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(addr_incr_two),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:144.29-146.65" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd31),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd31),
    .Y_WIDTH(32'd31)
  ) \$38  (
    .A(instr_addr_q),
    .B({ 29'h00000000, \$37y , addr_incr_two }),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:148.25-149.50" */
  \$mux  #(
    .WIDTH(32'd31)
  ) \$39  (
    .A(instr_addr_next),
    .B(in_addr_i[31:1]),
    .S(clear_i),
    .Y(\$39y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:92.43-92.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(valid_q[0]),
    .B(err_q[0]),
    .Y(\$4y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:179.21-179.46" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(out_ready_i),
    .B(out_valid_o),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:179.50-179.72" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(aligned_is_compressed),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:179.50-179.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$45y ),
    .B(out_addr_o[1]),
    .Y(\$46y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:179.21-179.89" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$44y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:184.37-184.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(valid_q[0]),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:190.31-190.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(in_valid_i),
    .B(lowest_free_entry[0]),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:93.55-93.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(valid_q[0]),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:190.30-191.40" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(valid_q[0]),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:193.30-193.76" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$51  (
    .A(valid_pushed[0]),
    .B(valid_pushed[1]),
    .S(pop_fifo),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:195.43-195.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(clear_i),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:195.25-195.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(valid_popped[0]),
    .B(\$52y ),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:198.27-198.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(valid_pushed[1]),
    .B(pop_fifo),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.27-200.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(in_valid_i),
    .B(lowest_free_entry[0]),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.63-200.72" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(pop_fifo),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.27-200.72" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(\$55y ),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:198.26-200.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$54y ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:203.26-203.66" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$59  (
    .A(in_rdata_i),
    .B(rdata_q[63:32]),
    .S(valid_q[1]),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:93.69-93.93" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(unaligned_is_compressed),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:204.26-204.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$60  (
    .A(in_err_i),
    .B(err_q[1]),
    .S(valid_q[1]),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:186.37-186.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(valid_q[1]),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:186.37-186.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(valid_q[0]),
    .Y(\$62y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:190.31-190.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(in_valid_i),
    .B(lowest_free_entry[1]),
    .Y(\$63y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:190.30-191.40" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(\$63y ),
    .B(valid_q[1]),
    .Y(\$64y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:193.30-193.76" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$65  (
    .A(valid_pushed[1]),
    .B(valid_pushed[2]),
    .S(pop_fifo),
    .Y(\$65y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:195.43-195.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(clear_i),
    .Y(\$66y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:195.25-195.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(valid_popped[1]),
    .B(\$66y ),
    .Y(\$67y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:198.27-198.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(valid_pushed[2]),
    .B(pop_fifo),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.27-200.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(in_valid_i),
    .B(lowest_free_entry[1]),
    .Y(\$69y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:93.55-93.93" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.63-200.72" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A(pop_fifo),
    .Y(\$70y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:200.27-200.72" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(\$69y ),
    .B(\$70y ),
    .Y(\$71y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:198.26-200.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(\$68y ),
    .B(\$71y ),
    .Y(\$72y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:203.26-203.66" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$73  (
    .A(in_rdata_i),
    .B(rdata_q[95:64]),
    .S(valid_q[2]),
    .Y(\$73y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:204.26-204.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$74  (
    .A(in_err_i),
    .B(err_q[2]),
    .S(valid_q[2]),
    .Y(\$74y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:207.39-207.56" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$75  (
    .A(valid_q[2]),
    .Y(\$75y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:207.39-207.75" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(\$75y ),
    .B(valid_q[1]),
    .Y(\$76y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:208.59-208.98" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(in_valid_i),
    .B(lowest_free_entry[2]),
    .Y(\$77y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:208.39-208.99" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$78  (
    .A(valid_q[2]),
    .B(\$77y ),
    .Y(\$78y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:209.39-209.78" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$79  (
    .A(valid_pushed[2]),
    .B(1'h0),
    .S(pop_fifo),
    .Y(\$79y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:93.43-93.94" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(in_err_i),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:210.63-210.71" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(clear_i),
    .Y(\$80y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:210.39-210.71" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(valid_popped[2]),
    .B(\$80y ),
    .Y(\$81y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:211.39-211.78" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(in_valid_i),
    .B(lowest_free_entry[2]),
    .Y(\$82y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(rst_ni),
    .Y(\$84y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(rst_ni),
    .Y(\$87y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:92.42-93.95" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$4y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(rst_ni),
    .Y(\$92y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(rst_ni),
    .Y(\$97y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$err_q[0:0]  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$err_q[0]$90 ),
    .Q(err_q[0])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$err_q[1:1]  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$err_q[1]$95 ),
    .Q(err_q[1])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$err_q[2:2]  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$err_q[2]$100 ),
    .Q(err_q[2])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:151.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd31)
  ) \$driver$instr_addr_q  (
    .AD(31'h00000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_addr_q$43 ),
    .Q(instr_addr_q)
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q[0]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q[31:0]$89 ),
    .Q(rdata_q[31:0])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q[1]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q[63:32]$94 ),
    .Q(rdata_q[63:32])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:228.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rdata_q[2]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q[95:64]$99 ),
    .Q(rdata_q[95:64])
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:219.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$valid_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(valid_d),
    .Q(valid_q)
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1781  (
    .A(err_q[1]),
    .B(\$74y ),
    .S(\$procmux$1782_CMP ),
    .Y(\$procmux$1781_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$1783  (
    .A(rdata_q[63:32]),
    .B(\$73y ),
    .S(\$procmux$1784_CMP ),
    .Y(\$procmux$1783_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1785  (
    .A(err_q[0]),
    .B(\$60y ),
    .S(\$procmux$1786_CMP ),
    .Y(\$procmux$1785_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$1787  (
    .A(rdata_q[31:0]),
    .B(\$59y ),
    .S(\$procmux$1788_CMP ),
    .Y(\$procmux$1787_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1789  (
    .A(err_q[2]),
    .B(in_err_i),
    .S(\$procmux$1790_CMP ),
    .Y(\$procmux$1789_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:232.35-235.12|rtl/cve2/cve2_fetch_fifo.sv:232.18-235.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$1791  (
    .A(rdata_q[95:64]),
    .B(in_rdata_i),
    .S(\$procmux$1792_CMP ),
    .Y(\$procmux$1791_Y )
  );
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:155.7-155.36|rtl/cve2/cve2_fetch_fifo.sv:154.14-156.8" */
  \$mux  #(
    .WIDTH(32'd31)
  ) \$procmux$1793  (
    .A(instr_addr_q),
    .B(\$39y ),
    .S(\$procmux$1794_CMP ),
    .Y(\$procmux$1793_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.24-124.8|rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1797  (
    .A(1'h0),
    .B(\$19y ),
    .S(\$procmux$1798_CMP ),
    .Y(\$procmux$1797_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.24-124.8|rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1801  (
    .A(\$1y ),
    .B(\$13y ),
    .S(\$procmux$1802_CMP ),
    .Y(\$procmux$1801_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.24-124.8|rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$1805  (
    .A(\$0y ),
    .B(\$3y ),
    .S(\$procmux$1806_CMP ),
    .Y(\$procmux$1805_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.24-124.8|rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1809  (
    .A(\$2y ),
    .B(\$out_valid_o$29 ),
    .S(\$procmux$1810_CMP ),
    .Y(\$procmux$1809_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:120.9-120.29|rtl/cve2/cve2_fetch_fifo.sv:119.7-123.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1813  (
    .A(\$21y ),
    .B(\$2y ),
    .S(\$procmux$1814_CMP ),
    .Y(\$procmux$1813_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_fetch_fifo.sv:113.24-124.8|rtl/cve2/cve2_fetch_fifo.sv:113.5-130.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1815  (
    .A(1'hx),
    .B(\$procmux$1813_Y ),
    .S(\$procmux$1816_CMP ),
    .Y(\$procmux$1815_Y )
  );
  assign rdata = \$0y ;
  assign err = \$1y ;
  assign valid = \$2y ;
  assign rdata_unaligned = \$3y ;
  assign err_unaligned = \$13y ;
  assign err_plus2 = \$19y ;
  assign valid_unaligned = \$21y ;
  assign unaligned_is_compressed = \$24y ;
  assign aligned_is_compressed = \$27y ;
  assign out_valid_o = \$out_valid_o$30 ;
  assign out_rdata_o = \$out_rdata_o$31 ;
  assign out_err_o = \$out_err_o$32 ;
  assign out_err_plus2_o = \$out_err_plus2_o$33 ;
  assign instr_addr_en = \$35y ;
  assign addr_incr_two = \$36y ;
  assign instr_addr_next = \$38y ;
  assign instr_addr_d = \$39y ;
  assign out_addr_o = { instr_addr_q, 1'h0 };
  assign unused_addr_in = in_addr_i[0];
  assign busy_o = valid_q[2:1];
  assign pop_fifo = \$47y ;
  assign lowest_free_entry[0] = \$48y ;
  assign valid_pushed[0] = \$50y ;
  assign valid_popped[0] = \$51y ;
  assign valid_d[0] = \$53y ;
  assign entry_en[0] = \$58y ;
  assign rdata_d[31:0] = \$59y ;
  assign err_d[0] = \$60y ;
  assign lowest_free_entry[1] = \$62y ;
  assign valid_pushed[1] = \$64y ;
  assign valid_popped[1] = \$65y ;
  assign valid_d[1] = \$67y ;
  assign entry_en[1] = \$72y ;
  assign rdata_d[63:32] = \$73y ;
  assign err_d[1] = \$74y ;
  assign lowest_free_entry[2] = \$76y ;
  assign valid_pushed[2] = \$78y ;
  assign valid_popped[2] = \$79y ;
  assign valid_d[2] = \$81y ;
  assign entry_en[2] = \$82y ;
  assign rdata_d[95:64] = in_rdata_i;
  assign err_d[2] = in_err_i;
  assign \$procmux$1782_CMP  = entry_en[1];
  assign \$err_q[1]$95  = \$procmux$1781_Y ;
  assign \$procmux$1784_CMP  = entry_en[1];
  assign \$rdata_q[63:32]$94  = \$procmux$1783_Y ;
  assign \$procmux$1786_CMP  = entry_en[0];
  assign \$err_q[0]$90  = \$procmux$1785_Y ;
  assign \$procmux$1788_CMP  = entry_en[0];
  assign \$rdata_q[31:0]$89  = \$procmux$1787_Y ;
  assign \$procmux$1790_CMP  = entry_en[2];
  assign \$err_q[2]$100  = \$procmux$1789_Y ;
  assign \$procmux$1792_CMP  = entry_en[2];
  assign \$rdata_q[95:64]$99  = \$procmux$1791_Y ;
  assign \$procmux$1794_CMP  = instr_addr_en;
  assign \$instr_addr_q$43  = \$procmux$1793_Y ;
  assign \$procmux$1798_CMP  = out_addr_o[1];
  assign \$out_err_plus2_o$33  = \$procmux$1797_Y ;
  assign \$procmux$1802_CMP  = out_addr_o[1];
  assign \$out_err_o$32  = \$procmux$1801_Y ;
  assign \$procmux$1806_CMP  = out_addr_o[1];
  assign \$out_rdata_o$31  = \$procmux$1805_Y ;
  assign \$procmux$1810_CMP  = out_addr_o[1];
  assign \$out_valid_o$30  = \$procmux$1809_Y ;
  assign \$procmux$1814_CMP  = unaligned_is_compressed;
  assign \$procmux$1816_CMP  = out_addr_o[1];
  assign \$out_valid_o$29  = \$procmux$1815_Y ;
  assign \$85y  = rst_ni;
  assign \$42y  = rst_ni;
  assign \$88y  = rst_ni;
  assign \$93y  = rst_ni;
  assign \$98y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_id_stage.sv:19.8" */
module \cve2_id_stage$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i (clk_i, rst_ni, irqs_i, instr_req_o, instr_rdata_i, debug_req_i, fetch_enable_i, irq_nm_i, ctrl_busy_o, illegal_insn_o, instr_valid_i, instr_rdata_alu_i, instr_rdata_c_i, instr_is_compressed_i, instr_first_cycle_id_o, instr_valid_clear_o, id_in_ready_o, branch_decision_i, pc_set_o, pc_mux_o, exc_pc_mux_o
, exc_cause_o, illegal_c_insn_i, instr_fetch_err_i, instr_fetch_err_plus2_i, pc_id_i, ex_valid_i, lsu_resp_valid_i, alu_operator_ex_o, alu_operand_a_ex_o, alu_operand_b_ex_o, imd_val_we_ex_i, imd_val_d_ex_i, imd_val_q_ex_o, mult_en_ex_o, div_en_ex_o, mult_sel_ex_o, div_sel_ex_o, multdiv_operator_ex_o, multdiv_signed_mode_ex_o, multdiv_operand_a_ex_o, multdiv_operand_b_ex_o
, csr_access_o, csr_op_o, csr_op_en_o, csr_save_if_o, csr_save_id_o, csr_restore_mret_id_o, csr_restore_dret_id_o, csr_save_cause_o, csr_mtval_o, priv_mode_i, csr_mstatus_tw_i, illegal_csr_insn_i, lsu_req_o, lsu_we_o, lsu_type_o, lsu_sign_ext_o, lsu_wdata_o, lsu_addr_incr_req_i, lsu_addr_last_i, csr_mstatus_mie_i, irq_pending_i
, nmi_mode_o, lsu_load_err_i, lsu_store_err_i, debug_mode_o, debug_cause_o, debug_csr_save_o, debug_single_step_i, debug_ebreakm_i, debug_ebreaku_i, trigger_match_i, result_ex_i, csr_rdata_i, rf_raddr_a_o, rf_rdata_a_i, rf_raddr_b_o, rf_rdata_b_i, rf_ren_a_o, rf_ren_b_o, rf_waddr_id_o, rf_wdata_id_o, rf_we_id_o
, en_wb_o, instr_perf_count_id_o, perf_jump_o, perf_branch_o, perf_tbranch_o, perf_dside_wait_o, perf_wfi_wait_o, perf_div_wait_o, instr_id_done_o);
  wire \$0y ;
  wire \$101y ;
  wire [1:0] \$10y ;
  wire \$111y ;
  wire \$11y ;
  wire [2:0] \$12y ;
  wire \$135y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$13y ;
  wire \$140y ;
  wire \$141y ;
  wire \$142y ;
  wire \$143y ;
  wire \$144y ;
  wire \$145y ;
  wire \$146y ;
  wire \$147y ;
  wire \$148y ;
  wire \$149y ;
  wire [31:0] \$14y ;
  wire \$150y ;
  wire \$151y ;
  wire \$152y ;
  wire \$153y ;
  wire \$154y ;
  wire \$155y ;
  wire \$156y ;
  wire \$157y ;
  wire \$158y ;
  wire \$159y ;
  wire \$160y ;
  wire \$161y ;
  wire \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$165y ;
  wire \$166y ;
  wire \$167y ;
  wire \$168y ;
  wire \$169y ;
  wire [31:0] \$18y ;
  wire \$1y ;
  wire \$20y ;
  wire [31:0] \$21y ;
  wire \$23y ;
  wire \$24y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire [4:0] \$35 ;
  wire [4:0] \$36 ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$70y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire [31:0] \$76y ;
  wire [4:0] \$77y ;
  wire \$79y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$93y ;
  wire \$94y ;
  wire \$97y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  wire [31:0] \$alu_operand_a$16 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$branch_set_raw_d$102 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$branch_set_raw_d$117 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$branch_set_raw_d$126 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:464.7-470.10" */
  wire \$csr_pipe_flush$53 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:472.7-477.10" */
  wire \$csr_pipe_flush$64 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:471.14-478.8" */
  wire \$csr_pipe_flush$65 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:463.5-478.8" */
  wire \$csr_pipe_flush$66 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  wire \$id_fsm_d$100 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$id_fsm_d$109 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  wire \$id_fsm_d$116 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$id_fsm_d$124 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$id_fsm_d$133 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:660.14-662.8" */
  wire \$id_fsm_q$95 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:320.16-322.10" */
  wire [33:0] \$imd_val_q[33:0]$29 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:320.16-322.10" */
  wire [33:0] \$imd_val_q[67:34]$25 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  wire [31:0] \$imm_b$19 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$jump_set_raw$103 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$jump_set_raw$118 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$jump_set_raw$127 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$perf_branch_o$110 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$perf_branch_o$125 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$perf_branch_o$134 ;
  wire \$procmux$10485_Y ;
  wire \$procmux$10486_CMP ;
  wire \$procmux$10487_Y ;
  wire \$procmux$10488_CMP ;
  wire \$procmux$10489_Y ;
  wire \$procmux$10490_CMP ;
  wire \$procmux$10492_Y ;
  wire \$procmux$10493_CMP ;
  wire \$procmux$10495_Y ;
  wire \$procmux$10496_CMP ;
  wire \$procmux$10498_Y ;
  wire \$procmux$10499_CMP ;
  wire \$procmux$10503_Y ;
  wire \$procmux$10504_CMP ;
  wire \$procmux$10506_Y ;
  wire \$procmux$10507_CMP ;
  wire \$procmux$10508_Y ;
  wire \$procmux$10509_CMP ;
  wire \$procmux$10512_Y ;
  wire \$procmux$10513_CMP ;
  wire \$procmux$10514_Y ;
  wire \$procmux$10515_CMP ;
  wire \$procmux$10516_Y ;
  wire \$procmux$10517_CMP ;
  wire \$procmux$10520_Y ;
  wire \$procmux$10521_CMP ;
  wire \$procmux$10522_Y ;
  wire \$procmux$10523_CMP ;
  wire \$procmux$10524_Y ;
  wire \$procmux$10525_CMP ;
  wire \$procmux$10528_Y ;
  wire \$procmux$10529_CMP ;
  wire \$procmux$10530_Y ;
  wire \$procmux$10531_CMP ;
  wire \$procmux$10532_Y ;
  wire \$procmux$10533_CMP ;
  wire \$procmux$10536_Y ;
  wire \$procmux$10537_CMP ;
  wire \$procmux$10538_Y ;
  wire \$procmux$10539_CMP ;
  wire \$procmux$10540_Y ;
  wire \$procmux$10541_CMP ;
  wire \$procmux$10542_Y ;
  wire \$procmux$10543_CMP ;
  wire \$procmux$10544_Y ;
  wire \$procmux$10545_CMP ;
  wire \$procmux$10546_Y ;
  wire \$procmux$10547_CMP ;
  wire \$procmux$10549_Y ;
  wire \$procmux$10550_CMP ;
  wire \$procmux$10552_CMP ;
  wire \$procmux$10553_Y ;
  wire \$procmux$10554_CMP ;
  wire \$procmux$10556_Y ;
  wire \$procmux$10557_CMP ;
  wire \$procmux$10559_CMP ;
  wire \$procmux$10560_Y ;
  wire \$procmux$10561_CMP ;
  wire \$procmux$10563_Y ;
  wire \$procmux$10564_CMP ;
  wire \$procmux$10566_CMP ;
  wire \$procmux$10567_Y ;
  wire \$procmux$10568_CMP ;
  wire \$procmux$10570_Y ;
  wire \$procmux$10571_CMP ;
  wire \$procmux$10573_CMP ;
  wire \$procmux$10574_Y ;
  wire \$procmux$10575_CMP ;
  wire \$procmux$10577_Y ;
  wire \$procmux$10578_CMP ;
  wire \$procmux$10580_CMP ;
  wire \$procmux$10581_Y ;
  wire \$procmux$10582_CMP ;
  wire \$procmux$10588_Y ;
  wire \$procmux$10589_CMP ;
  wire \$procmux$10590_Y ;
  wire \$procmux$10591_CMP ;
  wire \$procmux$10592_Y ;
  wire \$procmux$10593_CMP ;
  wire \$procmux$10594_Y ;
  wire \$procmux$10595_CMP ;
  wire \$procmux$10601_Y ;
  wire \$procmux$10602_CMP ;
  wire \$procmux$10603_Y ;
  wire \$procmux$10604_CMP ;
  wire \$procmux$10605_Y ;
  wire \$procmux$10606_CMP ;
  wire \$procmux$10607_Y ;
  wire \$procmux$10608_CMP ;
  wire \$procmux$10614_Y ;
  wire \$procmux$10615_CMP ;
  wire \$procmux$10616_Y ;
  wire \$procmux$10617_CMP ;
  wire \$procmux$10618_Y ;
  wire \$procmux$10619_CMP ;
  wire \$procmux$10620_Y ;
  wire \$procmux$10621_CMP ;
  wire \$procmux$10624_Y ;
  wire \$procmux$10625_CMP ;
  wire \$procmux$10626_CMP ;
  wire \$procmux$10627_CMP ;
  wire \$procmux$10629_CMP ;
  wire \$procmux$10630_CMP ;
  wire \$procmux$10631_Y ;
  wire \$procmux$10632_CMP ;
  wire \$procmux$10633_Y ;
  wire \$procmux$10634_CMP ;
  wire \$procmux$10639_Y ;
  wire \$procmux$10640_CMP ;
  wire \$procmux$10641_Y ;
  wire \$procmux$10642_CMP ;
  wire \$procmux$10643_Y ;
  wire \$procmux$10644_CMP ;
  wire \$procmux$10647_Y ;
  wire \$procmux$10648_CMP ;
  wire \$procmux$10649_Y ;
  wire \$procmux$10650_CMP ;
  wire \$procmux$10651_Y ;
  wire \$procmux$10652_CMP ;
  wire \$procmux$10655_Y ;
  wire \$procmux$10656_CMP ;
  wire \$procmux$10658_CMP ;
  wire \$procmux$10659_Y ;
  wire \$procmux$10660_CMP ;
  wire \$procmux$10661_Y ;
  wire \$procmux$10662_CMP ;
  wire \$procmux$10666_Y ;
  wire \$procmux$10667_CMP ;
  wire \$procmux$10668_Y ;
  wire \$procmux$10669_CMP ;
  wire \$procmux$10670_Y ;
  wire \$procmux$10671_CMP ;
  wire \$procmux$10676_Y ;
  wire \$procmux$10677_CMP ;
  wire \$procmux$10678_Y ;
  wire \$procmux$10679_CMP ;
  wire \$procmux$10680_Y ;
  wire \$procmux$10681_CMP ;
  wire \$procmux$10688_Y ;
  wire \$procmux$10689_CMP ;
  wire \$procmux$10690_Y ;
  wire \$procmux$10691_CMP ;
  wire \$procmux$10692_Y ;
  wire \$procmux$10693_CMP ;
  wire \$procmux$10697_Y ;
  wire \$procmux$10698_CMP ;
  wire \$procmux$10699_Y ;
  wire \$procmux$10700_CMP ;
  wire \$procmux$10701_Y ;
  wire \$procmux$10702_CMP ;
  wire \$procmux$10707_Y ;
  wire \$procmux$10708_CMP ;
  wire \$procmux$10709_Y ;
  wire \$procmux$10710_CMP ;
  wire \$procmux$10711_Y ;
  wire \$procmux$10712_CMP ;
  wire \$procmux$10715_Y ;
  wire \$procmux$10716_CMP ;
  wire \$procmux$10717_Y ;
  wire \$procmux$10718_CMP ;
  wire \$procmux$10721_Y ;
  wire \$procmux$10722_CMP ;
  wire \$procmux$10723_Y ;
  wire \$procmux$10724_CMP ;
  wire \$procmux$10727_Y ;
  wire \$procmux$10728_CMP ;
  wire \$procmux$10729_Y ;
  wire \$procmux$10730_CMP ;
  wire \$procmux$10733_Y ;
  wire \$procmux$10734_CMP ;
  wire \$procmux$10735_Y ;
  wire \$procmux$10736_CMP ;
  wire \$procmux$10738_Y ;
  wire \$procmux$10739_CMP ;
  wire \$procmux$10741_Y ;
  wire \$procmux$10742_CMP ;
  wire \$procmux$10744_Y ;
  wire \$procmux$10745_CMP ;
  wire \$procmux$10747_Y ;
  wire \$procmux$10748_CMP ;
  wire \$procmux$10750_Y ;
  wire \$procmux$10751_CMP ;
  wire \$procmux$10753_Y ;
  wire \$procmux$10754_CMP ;
  wire \$procmux$10756_Y ;
  wire \$procmux$10757_CMP ;
  wire \$procmux$10759_Y ;
  wire \$procmux$10760_CMP ;
  wire \$procmux$10762_Y ;
  wire \$procmux$10763_CMP ;
  wire [31:0] \$procmux$10764_Y ;
  wire \$procmux$10765_CMP ;
  wire \$procmux$10766_CMP ;
  wire [33:0] \$procmux$10767_Y ;
  wire \$procmux$10768_CMP ;
  wire [33:0] \$procmux$10769_Y ;
  wire \$procmux$10770_CMP ;
  wire [31:0] \$procmux$10773_Y ;
  wire \$procmux$10774_CMP ;
  wire \$procmux$10775_CMP ;
  wire \$procmux$10776_CMP ;
  wire \$procmux$10777_CMP ;
  wire \$procmux$10778_CMP ;
  wire \$procmux$10779_CMP ;
  wire [31:0] \$procmux$10780_Y ;
  wire \$procmux$10781_CMP ;
  wire \$procmux$10782_CMP ;
  wire \$procmux$10783_CMP ;
  wire \$procmux$10784_CMP ;
  /* src = "rtl/cve2/cve2_id_stage.sv:337.5-341.12" */
  wire [31:0] \$rf_wdata_id_o$34 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$rf_we_raw$107 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:731.11-733.14" */
  wire \$rf_we_raw$112 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$rf_we_raw$122 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$rf_we_raw$131 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  wire \$rf_we_raw$99 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$stall_alu$108 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$stall_alu$123 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$stall_alu$132 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$stall_branch$105 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  wire \$stall_branch$114 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$stall_branch$120 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$stall_branch$129 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$stall_jump$106 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  wire \$stall_jump$115 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$stall_jump$121 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$stall_jump$130 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  wire \$stall_multdiv$104 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  wire \$stall_multdiv$113 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  wire \$stall_multdiv$119 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  wire \$stall_multdiv$128 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  wire \$stall_multdiv$98 ;
  /* src = "rtl/cve2/cve2_id_stage.sv:229.16" */
  wire alu_multicycle_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:227.16" */
  wire [1:0] alu_op_a_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:227.34" */
  wire [1:0] alu_op_a_mux_sel_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:228.16" */
  wire alu_op_b_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:228.34" */
  wire alu_op_b_mux_sel_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:254.16" */
  wire [31:0] alu_operand_a;
  /* src = "rtl/cve2/cve2_id_stage.sv:62.37" */
  output [31:0] alu_operand_a_ex_o;
  wire [31:0] alu_operand_a_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:255.16" */
  wire [31:0] alu_operand_b;
  /* src = "rtl/cve2/cve2_id_stage.sv:63.37" */
  output [31:0] alu_operand_b_ex_o;
  wire [31:0] alu_operand_b_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:226.16" */
  wire [6:0] alu_operator;
  /* src = "rtl/cve2/cve2_id_stage.sv:162.22" */
  wire [6:0] alu_operator_MAC;
  /* src = "rtl/cve2/cve2_id_stage.sv:61.37" */
  output [6:0] alu_operator_ex_o;
  wire [6:0] alu_operator_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:43.37" */
  input branch_decision_i;
  wire branch_decision_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:177.16" */
  wire branch_in_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:179.40" */
  wire branch_jump_set_done_d;
  /* src = "rtl/cve2/cve2_id_stage.sv:179.16" */
  wire branch_jump_set_done_q;
  /* src = "rtl/cve2/cve2_id_stage.sv:178.16" */
  wire branch_set;
  /* src = "rtl/cve2/cve2_id_stage.sv:178.28" */
  wire branch_set_raw;
  /* src = "rtl/cve2/cve2_id_stage.sv:178.44" */
  wire branch_set_raw_d;
  /* src = "rtl/cve2/cve2_id_stage.sv:612.9" */
  wire branch_set_raw_q;
  /* src = "rtl/cve2/cve2_id_stage.sv:24.37" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:188.16" */
  wire controller_run;
  /* src = "rtl/cve2/cve2_id_stage.sv:81.37" */
  output csr_access_o;
  wire csr_access_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:105.37" */
  input csr_mstatus_mie_i;
  wire csr_mstatus_mie_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:91.37" */
  input csr_mstatus_tw_i;
  wire csr_mstatus_tw_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:89.37" */
  output [31:0] csr_mtval_o;
  wire [31:0] csr_mtval_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:83.37" */
  output csr_op_en_o;
  wire csr_op_en_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:82.37" */
  output [1:0] csr_op_o;
  wire [1:0] csr_op_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:252.16" */
  wire csr_pipe_flush;
  /* src = "rtl/cve2/cve2_id_stage.sv:127.37" */
  input [31:0] csr_rdata_i;
  wire [31:0] csr_rdata_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:87.37" */
  output csr_restore_dret_id_o;
  wire csr_restore_dret_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:86.37" */
  output csr_restore_mret_id_o;
  wire csr_restore_mret_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:88.37" */
  output csr_save_cause_o;
  wire csr_save_cause_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:85.37" */
  output csr_save_id_o;
  wire csr_save_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:84.37" */
  output csr_save_if_o;
  wire csr_save_if_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:28.37" */
  output ctrl_busy_o;
  wire ctrl_busy_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:249.16" */
  wire data_req_allowed;
  /* src = "rtl/cve2/cve2_id_stage.sv:116.37" */
  output [2:0] debug_cause_o;
  wire [2:0] debug_cause_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:117.37" */
  output debug_csr_save_o;
  wire debug_csr_save_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:120.37" */
  input debug_ebreakm_i;
  wire debug_ebreakm_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:121.37" */
  input debug_ebreaku_i;
  wire debug_ebreaku_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:115.37" */
  output debug_mode_o;
  wire debug_mode_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:118.37" */
  input debug_req_i;
  wire debug_req_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:119.37" */
  input debug_single_step_i;
  wire debug_single_step_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:239.27" */
  wire div_en_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:72.37" */
  output div_en_ex_o;
  wire div_en_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:239.16" */
  wire div_en_id;
  /* src = "rtl/cve2/cve2_id_stage.sv:74.37" */
  output div_sel_ex_o;
  wire div_sel_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:173.16" */
  wire dret_insn_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:171.16" */
  wire ebrk_insn;
  /* src = "rtl/cve2/cve2_id_stage.sv:174.16" */
  wire ecall_insn_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:142.37" */
  output en_wb_o;
  wire en_wb_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:58.37" */
  input ex_valid_i;
  wire ex_valid_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:49.37" */
  output [6:0] exc_cause_o;
  wire [6:0] exc_cause_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:48.37" */
  output [1:0] exc_pc_mux_o;
  wire [1:0] exc_pc_mux_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:27.37" */
  input fetch_enable_i;
  wire fetch_enable_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:194.16" */
  wire flush_id;
  /* src = "rtl/cve2/cve2_id_stage.sv:655.22" */
  wire id_fsm_d;
  /* src = "rtl/cve2/cve2_id_stage.sv:655.12" */
  wire id_fsm_q;
  /* src = "rtl/cve2/cve2_id_stage.sv:40.37" */
  output id_in_ready_o;
  wire id_in_ready_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:51.37" */
  input illegal_c_insn_i;
  wire illegal_c_insn_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:92.37" */
  input illegal_csr_insn_i;
  wire illegal_csr_insn_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:170.16" */
  wire illegal_insn_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:29.37" */
  output illegal_insn_o;
  wire illegal_insn_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:67.37" */
  input [67:0] imd_val_d_ex_i;
  wire [67:0] imd_val_d_ex_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:232.16" */
  wire [67:0] imd_val_q;
  /* src = "rtl/cve2/cve2_id_stage.sv:68.37" */
  output [67:0] imd_val_q_ex_o;
  wire [67:0] imd_val_q_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:66.37" */
  input [1:0] imd_val_we_ex_i;
  wire [1:0] imd_val_we_ex_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:205.16" */
  wire [31:0] imm_a;
  /* src = "rtl/cve2/cve2_id_stage.sv:234.16" */
  wire imm_a_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:206.16" */
  wire [31:0] imm_b;
  /* src = "rtl/cve2/cve2_id_stage.sv:235.16" */
  wire [2:0] imm_b_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:235.31" */
  wire [2:0] imm_b_mux_sel_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:200.16" */
  wire [31:0] imm_b_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:198.16" */
  wire [31:0] imm_i_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:202.16" */
  wire [31:0] imm_j_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:199.16" */
  wire [31:0] imm_s_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:201.16" */
  wire [31:0] imm_u_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:187.16" */
  wire instr_done;
  /* src = "rtl/cve2/cve2_id_stage.sv:186.16" */
  wire instr_executing;
  /* src = "rtl/cve2/cve2_id_stage.sv:185.16" */
  wire instr_executing_spec;
  /* src = "rtl/cve2/cve2_id_stage.sv:52.37" */
  input instr_fetch_err_i;
  wire instr_fetch_err_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:53.37" */
  input instr_fetch_err_plus2_i;
  wire instr_fetch_err_plus2_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:184.16" */
  wire instr_first_cycle;
  /* src = "rtl/cve2/cve2_id_stage.sv:38.37" */
  output instr_first_cycle_id_o;
  wire instr_first_cycle_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:153.37" */
  output instr_id_done_o;
  wire instr_id_done_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:36.37" */
  input instr_is_compressed_i;
  wire instr_is_compressed_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:143.37" */
  output instr_perf_count_id_o;
  wire instr_perf_count_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:34.37" */
  input [31:0] instr_rdata_alu_i;
  wire [31:0] instr_rdata_alu_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:35.37" */
  input [15:0] instr_rdata_c_i;
  wire [15:0] instr_rdata_c_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:33.37" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:37.37" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:39.37" */
  output instr_valid_clear_o;
  wire instr_valid_clear_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:32.37" */
  input instr_valid_i;
  wire instr_valid_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:108.37" */
  input irq_nm_i;
  wire irq_nm_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:106.37" */
  input irq_pending_i;
  wire irq_pending_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:107.37" */
  input [18:0] irqs_i;
  wire [18:0] irqs_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:180.16" */
  wire jump_in_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:182.16" */
  wire jump_set;
  /* src = "rtl/cve2/cve2_id_stage.sv:181.16" */
  wire jump_set_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:182.26" */
  wire jump_set_raw;
  /* src = "rtl/cve2/cve2_id_stage.sv:101.37" */
  input lsu_addr_incr_req_i;
  wire lsu_addr_incr_req_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:102.37" */
  input [31:0] lsu_addr_last_i;
  wire [31:0] lsu_addr_last_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:111.37" */
  input lsu_load_err_i;
  wire lsu_load_err_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:248.16" */
  wire lsu_req;
  /* src = "rtl/cve2/cve2_id_stage.sv:248.25" */
  wire lsu_req_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:95.37" */
  output lsu_req_o;
  wire lsu_req_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:59.37" */
  input lsu_resp_valid_i;
  wire lsu_resp_valid_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:247.16" */
  wire lsu_sign_ext;
  /* src = "rtl/cve2/cve2_id_stage.sv:98.37" */
  output lsu_sign_ext_o;
  wire lsu_sign_ext_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:112.37" */
  input lsu_store_err_i;
  wire lsu_store_err_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:246.16" */
  wire [1:0] lsu_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:97.37" */
  output [1:0] lsu_type_o;
  wire [1:0] lsu_type_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:99.37" */
  output [31:0] lsu_wdata_o;
  wire [31:0] lsu_wdata_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:245.16" */
  wire lsu_we;
  /* src = "rtl/cve2/cve2_id_stage.sv:96.37" */
  output lsu_we_o;
  wire lsu_we_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:160.9" */
  wire mac_en;
  /* src = "rtl/cve2/cve2_id_stage.sv:161.9" */
  wire mac_en_2_cycles;
  /* src = "rtl/cve2/cve2_id_stage.sv:172.16" */
  wire mret_insn_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:238.28" */
  wire mult_en_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:71.37" */
  output mult_en_ex_o;
  wire mult_en_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:238.16" */
  wire mult_en_id;
  /* src = "rtl/cve2/cve2_id_stage.sv:73.37" */
  output mult_sel_ex_o;
  wire mult_sel_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:240.16" */
  wire multdiv_en_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:77.37" */
  output [31:0] multdiv_operand_a_ex_o;
  wire [31:0] multdiv_operand_a_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:78.37" */
  output [31:0] multdiv_operand_b_ex_o;
  wire [31:0] multdiv_operand_b_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:241.16" */
  wire [1:0] multdiv_operator;
  /* src = "rtl/cve2/cve2_id_stage.sv:75.37" */
  output [1:0] multdiv_operator_ex_o;
  wire [1:0] multdiv_operator_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:242.16" */
  wire [1:0] multdiv_signed_mode;
  /* src = "rtl/cve2/cve2_id_stage.sv:76.37" */
  output [1:0] multdiv_signed_mode_ex_o;
  wire [1:0] multdiv_signed_mode_ex_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:195.16" */
  wire multicycle_done;
  /* src = "rtl/cve2/cve2_id_stage.sv:109.37" */
  output nmi_mode_o;
  wire nmi_mode_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:55.37" */
  input [31:0] pc_id_i;
  wire [31:0] pc_id_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:47.37" */
  output [2:0] pc_mux_o;
  wire [2:0] pc_mux_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:46.37" */
  output pc_set_o;
  wire pc_set_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:147.37" */
  output perf_branch_o;
  wire perf_branch_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:152.37" */
  output perf_div_wait_o;
  wire perf_div_wait_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:149.37" */
  output perf_dside_wait_o;
  wire perf_dside_wait_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:146.37" */
  output perf_jump_o;
  wire perf_jump_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:148.37" */
  output perf_tbranch_o;
  wire perf_tbranch_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:151.37" */
  output perf_wfi_wait_o;
  wire perf_wfi_wait_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:90.37" */
  input [1:0] priv_mode_i;
  wire [1:0] priv_mode_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:126.37" */
  input [31:0] result_ex_i;
  wire [31:0] result_ex_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:165.9" */
  wire result_ex_i_q;
  /* src = "rtl/cve2/cve2_id_stage.sv:163.9" */
  wire rf_raddr_a_MUX;
  /* src = "rtl/cve2/cve2_id_stage.sv:130.37" */
  output [4:0] rf_raddr_a_o;
  wire [4:0] rf_raddr_a_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:132.37" */
  output [4:0] rf_raddr_b_o;
  wire [4:0] rf_raddr_b_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:222.16" */
  wire [31:0] rf_rdata_a_fwd;
  /* src = "rtl/cve2/cve2_id_stage.sv:131.37" */
  input [31:0] rf_rdata_a_i;
  wire [31:0] rf_rdata_a_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:223.16" */
  wire [31:0] rf_rdata_b_fwd;
  /* src = "rtl/cve2/cve2_id_stage.sv:133.37" */
  input [31:0] rf_rdata_b_i;
  wire [31:0] rf_rdata_b_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:212.16" */
  wire rf_ren_a;
  /* src = "rtl/cve2/cve2_id_stage.sv:213.16" */
  wire rf_ren_a_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:134.37" */
  output rf_ren_a_o;
  wire rf_ren_a_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:212.26" */
  wire rf_ren_b;
  /* src = "rtl/cve2/cve2_id_stage.sv:213.30" */
  wire rf_ren_b_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:135.37" */
  output rf_ren_b_o;
  wire rf_ren_b_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:164.9" */
  wire rf_waddr_id_MUX;
  /* src = "rtl/cve2/cve2_id_stage.sv:138.37" */
  output [4:0] rf_waddr_id_o;
  wire [4:0] rf_waddr_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:139.37" */
  output [31:0] rf_wdata_id_o;
  wire [31:0] rf_wdata_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:210.16" */
  wire rf_wdata_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:211.16" */
  wire rf_we_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:140.37" */
  output rf_we_id_o;
  wire rf_we_id_o;
  /* src = "rtl/cve2/cve2_id_stage.sv:211.27" */
  wire rf_we_raw;
  /* src = "rtl/cve2/cve2_id_stage.sv:25.37" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_id_stage.sv:230.16" */
  wire stall_alu;
  /* src = "rtl/cve2/cve2_id_stage.sv:191.16" */
  wire stall_branch;
  /* src = "rtl/cve2/cve2_id_stage.sv:193.16" */
  wire stall_id;
  /* src = "rtl/cve2/cve2_id_stage.sv:192.16" */
  wire stall_jump;
  /* src = "rtl/cve2/cve2_id_stage.sv:189.16" */
  wire stall_mem;
  /* src = "rtl/cve2/cve2_id_stage.sv:190.16" */
  wire stall_multdiv;
  /* src = "rtl/cve2/cve2_id_stage.sv:122.37" */
  input trigger_match_i;
  wire trigger_match_i;
  /* src = "rtl/cve2/cve2_id_stage.sv:284.15" */
  wire [1:0] unused_a_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:285.15" */
  wire [2:0] unused_b_mux_sel;
  /* src = "rtl/cve2/cve2_id_stage.sv:797.11" */
  wire unused_data_req_done_ex;
  /* src = "rtl/cve2/cve2_id_stage.sv:175.16" */
  wire wfi_insn_dec;
  /* src = "rtl/cve2/cve2_id_stage.sv:203.16" */
  wire [31:0] zimm_rs1_type;
  /* src = "rtl/cve2/cve2_id_stage.sv:216.37-216.55" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(instr_fetch_err_i),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:216.21-216.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(instr_valid_i),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:262.29-262.89" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$10  (
    .A(alu_op_a_mux_sel_dec),
    .B(2'h1),
    .S(lsu_addr_incr_req_i),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:706.34-707.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$101  (
    .A(1'h0),
    .B(1'h1),
    .S(branch_decision_i),
    .Y(\$101y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:263.29-263.89" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$11  (
    .A(alu_op_b_mux_sel_dec),
    .B(1'h1),
    .S(lsu_addr_incr_req_i),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:732.31-732.53" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(rf_we_dec),
    .B(ex_valid_i),
    .Y(\$111y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:264.29-264.86" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$12  (
    .A(imm_b_mux_sel_dec),
    .B(3'h6),
    .S(lsu_addr_incr_req_i),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:271.19-271.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(imm_a_mux_sel),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:756.21-756.46" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$135  (
    .A(stall_mem),
    .B(stall_multdiv),
    .Y(\$135y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:756.21-756.59" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(\$135y ),
    .B(stall_jump),
    .Y(\$136y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:756.21-756.74" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(\$136y ),
    .B(stall_branch),
    .Y(\$137y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:756.21-757.32" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(\$137y ),
    .B(stall_alu),
    .Y(\$138y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:765.23-765.32" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(stall_id),
    .Y(\$139y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:271.18-271.65" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$14  (
    .A(zimm_rs1_type),
    .B(32'd0),
    .S(imm_a_mux_sel),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:765.35-765.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$140  (
    .A(flush_id),
    .Y(\$140y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:765.23-765.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(\$139y ),
    .B(\$140y ),
    .Y(\$141y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:765.23-765.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(\$141y ),
    .B(instr_executing),
    .Y(\$142y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:769.52-769.75" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(id_fsm_q),
    .Y(\$143y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:769.35-769.76" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(instr_valid_i),
    .B(\$143y ),
    .Y(\$144y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:774.30-774.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$145  (
    .A(ex_valid_i),
    .B(lsu_resp_valid_i),
    .S(lsu_req_dec),
    .Y(\$145y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:780.56-780.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$146  (
    .A(lsu_resp_valid_i),
    .Y(\$146y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:780.56-780.93" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$147  (
    .A(\$146y ),
    .B(instr_first_cycle),
    .Y(\$147y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:780.41-780.94" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(lsu_req_dec),
    .B(\$147y ),
    .Y(\$148y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:780.24-780.95" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(instr_valid_i),
    .B(\$148y ),
    .Y(\$149y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:783.51-783.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$150  (
    .A(instr_fetch_err_i),
    .Y(\$150y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:783.35-783.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(instr_valid_i),
    .B(\$150y ),
    .Y(\$151y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:783.35-783.86" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(\$151y ),
    .B(controller_run),
    .Y(\$152y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:799.32-799.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(instr_executing),
    .B(lsu_req_dec),
    .Y(\$153y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:799.64-799.81" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$154  (
    .A(lsu_resp_valid_i),
    .Y(\$154y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:799.32-799.81" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$155  (
    .A(\$153y ),
    .B(\$154y ),
    .Y(\$155y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-805.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A(ebrk_insn),
    .Y(\$156y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.47-805.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A(ecall_insn_dec),
    .Y(\$157y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-805.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(\$156y ),
    .B(\$157y ),
    .Y(\$158y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.65-805.82" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$159  (
    .A(illegal_insn_dec),
    .Y(\$159y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-805.82" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$160  (
    .A(\$158y ),
    .B(\$159y ),
    .Y(\$160y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:806.25-806.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$161  (
    .A(debug_mode_o),
    .Y(\$161y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:806.9-806.38" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$162  (
    .A(dret_insn_dec),
    .B(\$161y ),
    .Y(\$162y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:806.7-806.39" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$163  (
    .A(\$162y ),
    .Y(\$163y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-806.39" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(\$160y ),
    .B(\$163y ),
    .Y(\$164y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:807.7-807.26" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$165  (
    .A(illegal_csr_insn_i),
    .Y(\$165y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-807.26" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$166  (
    .A(\$164y ),
    .B(\$165y ),
    .Y(\$166y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:807.29-807.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(instr_fetch_err_i),
    .Y(\$167y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:805.34-807.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$168  (
    .A(\$166y ),
    .B(\$167y ),
    .Y(\$168y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:813.28-813.54" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$169  (
    .A(stall_multdiv),
    .B(div_en_dec),
    .Y(\$169y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:295.32-295.69" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$18  (
    .A(32'd4),
    .B(32'd2),
    .S(instr_is_compressed_i),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:216.58-216.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(illegal_insn_o),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:310.26-310.81" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$21  (
    .A(rf_rdata_b_fwd),
    .B(imm_b),
    .S(\$20y ),
    .Y(\$21y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(rst_ni),
    .Y(\$23y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:216.21-216.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\$1y ),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:333.23-333.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(rf_we_raw),
    .B(instr_executing),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:333.53-333.72" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(illegal_csr_insn_i),
    .Y(\$31y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:333.23-333.72" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\$30y ),
    .B(\$31y ),
    .Y(\$32y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(rst_ni),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:216.21-216.88" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$3y ),
    .B(rf_ren_a_dec),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:463.33-463.57" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(csr_op_o),
    .B(2'h1),
    .Y(\$42y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:463.61-463.83" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(csr_op_o),
    .B(2'h2),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:463.33-463.83" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$42y ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:463.9-463.84" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(\$41y ),
    .B(\$44y ),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:464.11-464.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(instr_rdata_i[31:20]),
    .B(12'h300),
    .Y(\$46y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:465.11-465.54" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(instr_rdata_i[31:20]),
    .B(12'h304),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:464.11-465.54" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(\$46y ),
    .B(\$47y ),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:466.11-466.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(instr_rdata_i[31:20]),
    .B(12'h747),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:217.37-217.55" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(instr_fetch_err_i),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:464.11-466.58" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$48y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:468.11-468.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(instr_rdata_i[31:25]),
    .B(7'h1d),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:464.11-468.40" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\$50y ),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:471.41-471.64" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(csr_op_o),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:471.18-471.64" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(\$54y ),
    .B(\$55y ),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.11-472.55" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(instr_rdata_i[31:20]),
    .B(12'h7b0),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:473.11-473.54" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(instr_rdata_i[31:20]),
    .B(12'h7b1),
    .Y(\$58y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.11-473.54" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:217.21-217.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(instr_valid_i),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:474.11-474.60" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(instr_rdata_i[31:20]),
    .B(12'h7b2),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.11-474.60" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$59y ),
    .B(\$60y ),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:475.11-475.60" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(instr_rdata_i[31:20]),
    .B(12'h7b3),
    .Y(\$62y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.11-475.60" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(\$61y ),
    .B(\$62y ),
    .Y(\$63y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:485.44-485.81" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(illegal_insn_dec),
    .B(illegal_csr_insn_i),
    .Y(\$67y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:485.27-485.82" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(instr_valid_i),
    .B(\$67y ),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:568.29-568.53" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(mult_en_dec),
    .B(div_en_dec),
    .Y(\$69y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:217.58-217.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(illegal_insn_o),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:570.46-570.76" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A(data_req_allowed),
    .B(lsu_req_dec),
    .Y(\$70y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:570.28-570.84" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$71  (
    .A(1'h0),
    .B(\$70y ),
    .S(instr_executing),
    .Y(\$71y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:571.28-571.84" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$72  (
    .A(1'h0),
    .B(mult_en_dec),
    .S(instr_executing),
    .Y(\$72y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:572.28-572.84" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$73  (
    .A(1'h0),
    .B(div_en_dec),
    .S(instr_executing),
    .Y(\$73y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:583.36-583.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(csr_access_o),
    .B(instr_executing),
    .Y(\$74y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:583.36-583.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$75  (
    .A(\$74y ),
    .B(instr_id_done_o),
    .Y(\$75y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:587.31-587.78" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$76  (
    .A(alu_operand_b),
    .B({ 31'h00000000, result_ex_i_q }),
    .S(mac_en_2_cycles),
    .Y(\$76y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:588.25-588.75" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$77  (
    .A({ 4'h0, rf_raddr_a_MUX }),
    .B({ 4'h0, rf_waddr_id_MUX }),
    .S(mac_en_2_cycles),
    .Y(\$77y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(rst_ni),
    .Y(\$79y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:217.21-217.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:629.36-629.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(branch_set_raw),
    .B(jump_set_raw),
    .Y(\$81y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:629.36-629.90" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(\$81y ),
    .B(branch_jump_set_done_q),
    .Y(\$82y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:630.5-630.25" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(instr_valid_clear_o),
    .Y(\$83y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:629.35-630.25" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(\$82y ),
    .B(\$83y ),
    .Y(\$84y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(rst_ni),
    .Y(\$86y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:647.50-647.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(branch_jump_set_done_q),
    .Y(\$88y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:647.28-647.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(jump_set_raw),
    .B(\$88y ),
    .Y(\$89y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:217.21-217.88" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$8y ),
    .B(rf_ren_b_dec),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:648.50-648.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(branch_jump_set_done_q),
    .Y(\$90y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:648.28-648.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(branch_set_raw),
    .B(\$90y ),
    .Y(\$91y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$93  (
    .A(rst_ni),
    .Y(\$93y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:693.19-693.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(ex_valid_i),
    .Y(\$97y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:632.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$branch_jump_set_done_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(branch_jump_set_done_d),
    .Q(branch_jump_set_done_q)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:614.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$branch_set_raw_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(branch_set_raw_d),
    .Q(branch_set_raw_q)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:657.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$id_fsm_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$id_fsm_q$95 ),
    .Q(id_fsm_q)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:317.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd34)
  ) \$driver$imd_val_q[0]  (
    .AD(34'h000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$imd_val_q[67:34]$25 ),
    .Q(imd_val_q[67:34])
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:317.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd34)
  ) \$driver$imd_val_q[1]  (
    .AD(34'h000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$imd_val_q[33:0]$29 ),
    .Q(imd_val_q[33:0])
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:440.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$result_ex_i_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(result_ex_i[0]),
    .Q(result_ex_i_q)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:661.7-661.28|rtl/cve2/cve2_id_stage.sv:660.14-662.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10485  (
    .A(id_fsm_q),
    .B(\$id_fsm_d$133 ),
    .S(\$procmux$10486_CMP ),
    .Y(\$procmux$10485_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:476.9-476.31|rtl/cve2/cve2_id_stage.sv:472.7-477.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10487  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10488_CMP ),
    .Y(\$procmux$10487_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.7-477.10|rtl/cve2/cve2_id_stage.sv:471.14-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10489  (
    .A(1'hx),
    .B(\$procmux$10487_Y ),
    .S(\$procmux$10490_CMP ),
    .Y(\$procmux$10489_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:464.7-470.10|rtl/cve2/cve2_id_stage.sv:463.5-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10492  (
    .A(\$procmux$10489_Y ),
    .B(1'hx),
    .S(\$procmux$10493_CMP ),
    .Y(\$procmux$10492_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:472.7-477.10|rtl/cve2/cve2_id_stage.sv:471.14-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10495  (
    .A(1'h0),
    .B(\$csr_pipe_flush$64 ),
    .S(\$procmux$10496_CMP ),
    .Y(\$procmux$10495_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:464.7-470.10|rtl/cve2/cve2_id_stage.sv:463.5-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10498  (
    .A(\$procmux$10495_Y ),
    .B(1'hx),
    .S(\$procmux$10499_CMP ),
    .Y(\$procmux$10498_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:464.7-470.10|rtl/cve2/cve2_id_stage.sv:463.5-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10503  (
    .A(\$csr_pipe_flush$65 ),
    .B(\$csr_pipe_flush$53 ),
    .S(\$procmux$10504_CMP ),
    .Y(\$procmux$10503_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:469.9-469.31|rtl/cve2/cve2_id_stage.sv:464.7-470.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10506  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10507_CMP ),
    .Y(\$procmux$10506_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:464.7-470.10|rtl/cve2/cve2_id_stage.sv:463.5-478.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10508  (
    .A(1'hx),
    .B(\$procmux$10506_Y ),
    .S(\$procmux$10509_CMP ),
    .Y(\$procmux$10508_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:736.13-736.43|rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10512  (
    .A(id_fsm_q),
    .B(1'h0),
    .S(\$procmux$10513_CMP ),
    .Y(\$procmux$10512_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10514  (
    .A(1'hx),
    .B(\$procmux$10512_Y ),
    .S(\$procmux$10515_CMP ),
    .Y(\$procmux$10514_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10516  (
    .A(1'hx),
    .B(\$procmux$10514_Y ),
    .S(\$procmux$10517_CMP ),
    .Y(\$procmux$10516_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:736.13-736.43|rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10520  (
    .A(jump_in_dec),
    .B(1'h0),
    .S(\$procmux$10521_CMP ),
    .Y(\$procmux$10520_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10522  (
    .A(1'hx),
    .B(\$procmux$10520_Y ),
    .S(\$procmux$10523_CMP ),
    .Y(\$procmux$10522_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10524  (
    .A(1'hx),
    .B(\$procmux$10522_Y ),
    .S(\$procmux$10525_CMP ),
    .Y(\$procmux$10524_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:736.13-736.43|rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10528  (
    .A(branch_in_dec),
    .B(1'h0),
    .S(\$procmux$10529_CMP ),
    .Y(\$procmux$10528_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10530  (
    .A(1'hx),
    .B(\$procmux$10528_Y ),
    .S(\$procmux$10531_CMP ),
    .Y(\$procmux$10530_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10532  (
    .A(1'hx),
    .B(\$procmux$10530_Y ),
    .S(\$procmux$10533_CMP ),
    .Y(\$procmux$10532_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:736.13-736.43|rtl/cve2/cve2_id_stage.sv:735.11-741.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10536  (
    .A(\$69y ),
    .B(1'h0),
    .S(\$procmux$10537_CMP ),
    .Y(\$procmux$10536_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10538  (
    .A(1'hx),
    .B(\$procmux$10536_Y ),
    .S(\$procmux$10539_CMP ),
    .Y(\$procmux$10538_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10540  (
    .A(1'hx),
    .B(\$procmux$10538_Y ),
    .S(\$procmux$10541_CMP ),
    .Y(\$procmux$10540_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:732.13-732.54|rtl/cve2/cve2_id_stage.sv:731.11-733.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10542  (
    .A(rf_we_dec),
    .B(\$111y ),
    .S(\$procmux$10543_CMP ),
    .Y(\$procmux$10542_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10544  (
    .A(1'hx),
    .B(\$procmux$10542_Y ),
    .S(\$procmux$10545_CMP ),
    .Y(\$procmux$10544_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10546  (
    .A(1'hx),
    .B(\$procmux$10544_Y ),
    .S(\$procmux$10547_CMP ),
    .Y(\$procmux$10546_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10549  (
    .A(1'hx),
    .B({ \$id_fsm_d$109 , \$id_fsm_d$116  }),
    .S({ \$procmux$10552_CMP , \$procmux$10550_CMP  }),
    .Y(\$procmux$10549_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10552_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10552_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10553  (
    .A(1'hx),
    .B(\$procmux$10549_Y ),
    .S(\$procmux$10554_CMP ),
    .Y(\$procmux$10553_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10556  (
    .A(1'hx),
    .B({ \$rf_we_raw$107 , \$rf_we_raw$112  }),
    .S({ \$procmux$10559_CMP , \$procmux$10557_CMP  }),
    .Y(\$procmux$10556_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10559_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10559_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10560  (
    .A(1'hx),
    .B(\$procmux$10556_Y ),
    .S(\$procmux$10561_CMP ),
    .Y(\$procmux$10560_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10563  (
    .A(1'hx),
    .B({ \$stall_jump$106 , \$stall_jump$115  }),
    .S({ \$procmux$10566_CMP , \$procmux$10564_CMP  }),
    .Y(\$procmux$10563_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10566_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10566_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10567  (
    .A(1'hx),
    .B(\$procmux$10563_Y ),
    .S(\$procmux$10568_CMP ),
    .Y(\$procmux$10567_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10570  (
    .A(1'hx),
    .B({ \$stall_branch$105 , \$stall_branch$114  }),
    .S({ \$procmux$10573_CMP , \$procmux$10571_CMP  }),
    .Y(\$procmux$10570_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10573_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10573_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10574  (
    .A(1'hx),
    .B(\$procmux$10570_Y ),
    .S(\$procmux$10575_CMP ),
    .Y(\$procmux$10574_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:730.22-742.12|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10577  (
    .A(1'hx),
    .B({ \$stall_multdiv$104 , \$stall_multdiv$113  }),
    .S({ \$procmux$10580_CMP , \$procmux$10578_CMP  }),
    .Y(\$procmux$10577_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10580_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10580_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10581  (
    .A(1'hx),
    .B(\$procmux$10577_Y ),
    .S(\$procmux$10582_CMP ),
    .Y(\$procmux$10581_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:693.32-699.18|rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10588  (
    .A(1'h1),
    .B(id_fsm_q),
    .S(ex_valid_i),
    .Y(\$procmux$10588_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10590  (
    .A(1'hx),
    .B(\$procmux$10588_Y ),
    .S(\$procmux$10591_CMP ),
    .Y(\$procmux$10590_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10592  (
    .A(\$procmux$10590_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10592_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10593_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10593_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10594  (
    .A(1'hx),
    .B(\$procmux$10592_Y ),
    .S(\$procmux$10595_CMP ),
    .Y(\$procmux$10594_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:693.32-699.18|rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10601  (
    .A(1'h0),
    .B(rf_we_dec),
    .S(ex_valid_i),
    .Y(\$procmux$10601_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10603  (
    .A(1'hx),
    .B(\$procmux$10601_Y ),
    .S(\$procmux$10604_CMP ),
    .Y(\$procmux$10603_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10605  (
    .A(\$procmux$10603_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10605_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10606_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10606_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10607  (
    .A(1'hx),
    .B(\$procmux$10605_Y ),
    .S(\$procmux$10608_CMP ),
    .Y(\$procmux$10607_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:693.32-699.18|rtl/cve2/cve2_id_stage.sv:693.15-699.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10614  (
    .A(1'h1),
    .B(1'h0),
    .S(ex_valid_i),
    .Y(\$procmux$10614_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10616  (
    .A(1'hx),
    .B(\$procmux$10614_Y ),
    .S(\$procmux$10617_CMP ),
    .Y(\$procmux$10616_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10618  (
    .A(\$procmux$10616_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10618_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10619_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10619_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10620  (
    .A(1'hx),
    .B(\$procmux$10618_Y ),
    .S(\$procmux$10621_CMP ),
    .Y(\$procmux$10620_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:719.33-723.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$10624  (
    .A(1'h0),
    .B({ 1'h1, \$id_fsm_d$100 , \$101y , 2'h3 }),
    .S({ \$procmux$10630_CMP , \$procmux$10629_CMP , \$procmux$10627_CMP , \$procmux$10626_CMP , \$procmux$10625_CMP  }),
    .Y(\$procmux$10624_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10631  (
    .A(\$procmux$10624_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10631_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10632_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10632_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10633  (
    .A(1'hx),
    .B(\$procmux$10631_Y ),
    .S(\$procmux$10634_CMP ),
    .Y(\$procmux$10633_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:701.28-712.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10639  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10640_CMP ),
    .Y(\$procmux$10639_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10641  (
    .A(\$procmux$10639_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10641_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10642_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10642_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10643  (
    .A(1'hx),
    .B(\$procmux$10641_Y ),
    .S(\$procmux$10644_CMP ),
    .Y(\$procmux$10643_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:719.33-723.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10647  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10648_CMP ),
    .Y(\$procmux$10647_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10649  (
    .A(\$procmux$10647_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10649_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10650_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10650_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10651  (
    .A(1'hx),
    .B(\$procmux$10649_Y ),
    .S(\$procmux$10652_CMP ),
    .Y(\$procmux$10651_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:719.33-723.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10655  (
    .A(rf_we_dec),
    .B({ \$rf_we_raw$99 , 1'h0 }),
    .S({ \$procmux$10658_CMP , \$procmux$10656_CMP  }),
    .Y(\$procmux$10655_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10659  (
    .A(\$procmux$10655_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10659_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10660_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10660_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10661  (
    .A(1'hx),
    .B(\$procmux$10659_Y ),
    .S(\$procmux$10662_CMP ),
    .Y(\$procmux$10661_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:713.26-718.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10666  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10667_CMP ),
    .Y(\$procmux$10666_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10668  (
    .A(\$procmux$10666_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10668_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10669_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10669_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10670  (
    .A(1'hx),
    .B(\$procmux$10668_Y ),
    .S(\$procmux$10671_CMP ),
    .Y(\$procmux$10670_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:701.28-712.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10676  (
    .A(1'h0),
    .B(branch_decision_i),
    .S(\$procmux$10677_CMP ),
    .Y(\$procmux$10676_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10678  (
    .A(\$procmux$10676_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10678_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10679_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10679_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10680  (
    .A(1'hx),
    .B(\$procmux$10678_Y ),
    .S(\$procmux$10681_CMP ),
    .Y(\$procmux$10680_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:693.15-699.18|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10688  (
    .A(1'h0),
    .B(\$stall_multdiv$98 ),
    .S(\$procmux$10689_CMP ),
    .Y(\$procmux$10688_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10690  (
    .A(\$procmux$10688_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10690_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10691_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10691_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10692  (
    .A(1'hx),
    .B(\$procmux$10690_Y ),
    .S(\$procmux$10693_CMP ),
    .Y(\$procmux$10692_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:713.26-718.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10697  (
    .A(1'h0),
    .B(jump_set_dec),
    .S(\$procmux$10698_CMP ),
    .Y(\$procmux$10697_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10699  (
    .A(\$procmux$10697_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10699_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10700_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10700_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10701  (
    .A(1'hx),
    .B(\$procmux$10699_Y ),
    .S(\$procmux$10702_CMP ),
    .Y(\$procmux$10701_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:701.28-712.16|rtl/cve2/cve2_id_stage.sv:684.11-727.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10707  (
    .A(1'h0),
    .B(branch_decision_i),
    .S(\$procmux$10708_CMP ),
    .Y(\$procmux$10707_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10709  (
    .A(\$procmux$10707_Y ),
    .B(1'hx),
    .S(id_fsm_q),
    .Y(\$procmux$10709_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10710_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10710_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10711  (
    .A(1'hx),
    .B(\$procmux$10709_Y ),
    .S(\$procmux$10712_CMP ),
    .Y(\$procmux$10711_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10715  (
    .A(\$perf_branch_o$110 ),
    .B(1'h0),
    .S(id_fsm_q),
    .Y(\$procmux$10715_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10716_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10716_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10717  (
    .A(1'hx),
    .B(\$procmux$10715_Y ),
    .S(\$procmux$10718_CMP ),
    .Y(\$procmux$10717_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10721  (
    .A(\$stall_alu$108 ),
    .B(1'h0),
    .S(id_fsm_q),
    .Y(\$procmux$10721_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10722_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10722_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10723  (
    .A(1'hx),
    .B(\$procmux$10721_Y ),
    .S(\$procmux$10724_CMP ),
    .Y(\$procmux$10723_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10727  (
    .A(\$jump_set_raw$103 ),
    .B(1'h0),
    .S(id_fsm_q),
    .Y(\$procmux$10727_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10728_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10728_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10729  (
    .A(1'hx),
    .B(\$procmux$10727_Y ),
    .S(\$procmux$10730_CMP ),
    .Y(\$procmux$10729_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10733  (
    .A(\$branch_set_raw_d$102 ),
    .B(1'h0),
    .S(id_fsm_q),
    .Y(\$procmux$10733_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:684.11-727.18|rtl/cve2/cve2_id_stage.sv:682.7-747.14" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10734_CMP0  (
    .A(id_fsm_q),
    .Y(\$procmux$10734_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10735  (
    .A(1'hx),
    .B(\$procmux$10733_Y ),
    .S(\$procmux$10736_CMP ),
    .Y(\$procmux$10735_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10738  (
    .A(1'h0),
    .B(\$perf_branch_o$125 ),
    .S(\$procmux$10739_CMP ),
    .Y(\$procmux$10738_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10741  (
    .A(id_fsm_q),
    .B(\$id_fsm_d$124 ),
    .S(\$procmux$10742_CMP ),
    .Y(\$procmux$10741_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10744  (
    .A(1'h0),
    .B(\$stall_alu$123 ),
    .S(\$procmux$10745_CMP ),
    .Y(\$procmux$10744_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10747  (
    .A(rf_we_dec),
    .B(\$rf_we_raw$122 ),
    .S(\$procmux$10748_CMP ),
    .Y(\$procmux$10747_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10750  (
    .A(1'h0),
    .B(\$stall_jump$121 ),
    .S(\$procmux$10751_CMP ),
    .Y(\$procmux$10750_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10753  (
    .A(1'h0),
    .B(\$stall_branch$120 ),
    .S(\$procmux$10754_CMP ),
    .Y(\$procmux$10753_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10756  (
    .A(1'h0),
    .B(\$stall_multdiv$119 ),
    .S(\$procmux$10757_CMP ),
    .Y(\$procmux$10756_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10759  (
    .A(1'h0),
    .B(\$jump_set_raw$118 ),
    .S(\$procmux$10760_CMP ),
    .Y(\$procmux$10759_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:682.7-747.14|rtl/cve2/cve2_id_stage.sv:681.5-748.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10762  (
    .A(1'h0),
    .B(\$branch_set_raw_d$117 ),
    .S(\$procmux$10763_CMP ),
    .Y(\$procmux$10762_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:339.18-339.46|rtl/cve2/cve2_id_stage.sv:337.5-341.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd32)
  ) \$procmux$10764  (
    .A(32'hxxxxxxxx),
    .B({ result_ex_i, csr_rdata_i }),
    .S({ \$procmux$10766_CMP , \$procmux$10765_CMP  }),
    .Y(\$procmux$10764_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:338.18-338.46|rtl/cve2/cve2_id_stage.sv:337.5-341.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$10766_CMP0  (
    .A(rf_wdata_sel),
    .Y(\$procmux$10766_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:321.9-321.43|rtl/cve2/cve2_id_stage.sv:320.16-322.10" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$10767  (
    .A(imd_val_q[33:0]),
    .B(imd_val_d_ex_i[33:0]),
    .S(\$procmux$10768_CMP ),
    .Y(\$procmux$10767_Y )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:321.9-321.43|rtl/cve2/cve2_id_stage.sv:320.16-322.10" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$10769  (
    .A(imd_val_q[67:34]),
    .B(imd_val_d_ex_i[67:34]),
    .S(\$procmux$10770_CMP ),
    .Y(\$procmux$10769_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:295.24-295.70|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd32)
  ) \$procmux$10773  (
    .A(32'd4),
    .B({ imm_i_type, imm_s_type, imm_b_type, imm_u_type, imm_j_type, \$18y  }),
    .S({ \$procmux$10779_CMP , \$procmux$10778_CMP , \$procmux$10777_CMP , \$procmux$10776_CMP , \$procmux$10775_CMP , \$procmux$10774_CMP  }),
    .Y(\$procmux$10773_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:295.24-295.70|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10774_CMP0  (
    .A(imm_b_mux_sel),
    .B(3'h5),
    .Y(\$procmux$10774_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:294.24-294.43|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10775_CMP0  (
    .A(imm_b_mux_sel),
    .B(3'h4),
    .Y(\$procmux$10775_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:293.24-293.43|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10776_CMP0  (
    .A(imm_b_mux_sel),
    .B(3'h3),
    .Y(\$procmux$10776_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:292.24-292.43|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10777_CMP0  (
    .A(imm_b_mux_sel),
    .B(3'h2),
    .Y(\$procmux$10777_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:291.24-291.43|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10778_CMP0  (
    .A(imm_b_mux_sel),
    .B(3'h1),
    .Y(\$procmux$10778_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:290.24-290.43|rtl/cve2/cve2_id_stage.sv:289.5-298.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10779_CMP0  (
    .A(imm_b_mux_sel),
    .Y(\$procmux$10779_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:279.20-279.42|rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10780  (
    .A(32'hxxxxxxxx),
    .B({ rf_rdata_a_i, lsu_addr_last_i, pc_id_i, \$14y  }),
    .S({ \$procmux$10784_CMP , \$procmux$10783_CMP , \$procmux$10782_CMP , \$procmux$10781_CMP  }),
    .Y(\$procmux$10780_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:279.20-279.42|rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10781_CMP0  (
    .A(alu_op_a_mux_sel),
    .B(2'h3),
    .Y(\$procmux$10781_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:278.20-278.44|rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10782_CMP0  (
    .A(alu_op_a_mux_sel),
    .B(2'h2),
    .Y(\$procmux$10782_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:277.20-277.52|rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10783_CMP0  (
    .A(alu_op_a_mux_sel),
    .B(2'h1),
    .Y(\$procmux$10783_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_id_stage.sv:276.20-276.51|rtl/cve2/cve2_id_stage.sv:275.5-281.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10784_CMP0  (
    .A(alu_op_a_mux_sel),
    .Y(\$procmux$10784_CMP )
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:488.5" */
  \cve2_controller$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.controller_i  controller_i (
    .branch_set_i(branch_set),
    .clk_i(clk_i),
    .controller_run_o(controller_run),
    .csr_mstatus_mie_i(csr_mstatus_mie_i),
    .csr_mstatus_tw_i(csr_mstatus_tw_i),
    .csr_mtval_o(csr_mtval_o),
    .csr_pipe_flush_i(csr_pipe_flush),
    .csr_restore_dret_id_o(csr_restore_dret_id_o),
    .csr_restore_mret_id_o(csr_restore_mret_id_o),
    .csr_save_cause_o(csr_save_cause_o),
    .csr_save_id_o(csr_save_id_o),
    .csr_save_if_o(csr_save_if_o),
    .ctrl_busy_o(ctrl_busy_o),
    .debug_cause_o(debug_cause_o),
    .debug_csr_save_o(debug_csr_save_o),
    .debug_ebreakm_i(debug_ebreakm_i),
    .debug_ebreaku_i(debug_ebreaku_i),
    .debug_mode_o(debug_mode_o),
    .debug_req_i(debug_req_i),
    .debug_single_step_i(debug_single_step_i),
    .dret_insn_i(dret_insn_dec),
    .ebrk_insn_i(ebrk_insn),
    .ecall_insn_i(ecall_insn_dec),
    .exc_cause_o(exc_cause_o),
    .exc_pc_mux_o(exc_pc_mux_o),
    .fetch_enable_i(fetch_enable_i),
    .flush_id_o(flush_id),
    .id_in_ready_o(id_in_ready_o),
    .illegal_insn_i(illegal_insn_o),
    .instr_compressed_i(instr_rdata_c_i),
    .instr_fetch_err_i(instr_fetch_err_i),
    .instr_fetch_err_plus2_i(instr_fetch_err_plus2_i),
    .instr_i(instr_rdata_i),
    .instr_is_compressed_i(instr_is_compressed_i),
    .instr_req_o(instr_req_o),
    .instr_valid_clear_o(instr_valid_clear_o),
    .instr_valid_i(instr_valid_i),
    .irq_nm_i(irq_nm_i),
    .irq_pending_i(irq_pending_i),
    .irqs_i(irqs_i),
    .jump_set_i(jump_set),
    .load_err_i(lsu_load_err_i),
    .lsu_addr_last_i(lsu_addr_last_i),
    .mret_insn_i(mret_insn_dec),
    .nmi_mode_o(nmi_mode_o),
    .pc_id_i(pc_id_i),
    .pc_mux_o(pc_mux_o),
    .pc_set_o(pc_set_o),
    .perf_jump_o(perf_jump_o),
    .perf_tbranch_o(perf_tbranch_o),
    .priv_mode_i(priv_mode_i),
    .rst_ni(rst_ni),
    .stall_id_i(stall_id),
    .store_err_i(lsu_store_err_i),
    .trigger_match_i(trigger_match_i),
    .wfi_insn_i(wfi_insn_dec)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:352.5" */
  \cve2_decoder$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.decoder_i  decoder_i (
    .alu_multicycle_o(alu_multicycle_dec),
    .alu_op_a_mux_sel_o(alu_op_a_mux_sel_dec),
    .alu_op_b_mux_sel_o(alu_op_b_mux_sel_dec),
    .alu_operator_o(alu_operator),
    .branch_in_dec_o(branch_in_dec),
    .clk_i(clk_i),
    .csr_access_o(csr_access_o),
    .csr_op_o(csr_op_o),
    .data_req_o(lsu_req_dec),
    .data_sign_extension_o(lsu_sign_ext),
    .data_type_o(lsu_type),
    .data_we_o(lsu_we),
    .div_en_o(div_en_dec),
    .div_sel_o(div_sel_ex_o),
    .dret_insn_o(dret_insn_dec),
    .ebrk_insn_o(ebrk_insn),
    .ecall_insn_o(ecall_insn_dec),
    .illegal_c_insn_i(illegal_c_insn_i),
    .illegal_insn_o(illegal_insn_dec),
    .imm_a_mux_sel_o(imm_a_mux_sel),
    .imm_b_mux_sel_o(imm_b_mux_sel_dec),
    .imm_b_type_o(imm_b_type),
    .imm_i_type_o(imm_i_type),
    .imm_j_type_o(imm_j_type),
    .imm_s_type_o(imm_s_type),
    .imm_u_type_o(imm_u_type),
    .instr_first_cycle_i(instr_first_cycle),
    .instr_rdata_alu_i(instr_rdata_alu_i),
    .instr_rdata_i(instr_rdata_i),
    .jump_in_dec_o(jump_in_dec),
    .jump_set_o(jump_set_dec),
    .mac_en_o(mac_en),
    .mret_insn_o(mret_insn_dec),
    .mult_en_o(mult_en_dec),
    .mult_sel_o(mult_sel_ex_o),
    .multdiv_operator_o(multdiv_operator),
    .multdiv_signed_mode_o(multdiv_signed_mode),
    .rf_raddr_a_o(\$35 ),
    .rf_raddr_b_o(rf_raddr_b_o),
    .rf_ren_a_o(rf_ren_a_dec),
    .rf_ren_b_o(rf_ren_b_dec),
    .rf_waddr_o(\$36 ),
    .rf_wdata_sel_o(rf_wdata_sel),
    .rf_we_o(rf_we_dec),
    .rst_ni(rst_ni),
    .wfi_insn_o(wfi_insn_dec),
    .zimm_rs1_type_o(zimm_rs1_type)
  );
  /* src = "rtl/cve2/cve2_id_stage.sv:430.23" */
  \cve2_mac_controller$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.mac__controller_i  mac__controller_i (
    .alu_operator_i(alu_operator),
    .alu_operator_o(alu_operator_MAC),
    .clk_i(clk_i),
    .mac_en_2_cycles_o(mac_en_2_cycles),
    .mac_en_i(mac_en),
    .rst_ni(rst_ni)
  );
  assign rf_ren_a = \$4y ;
  assign rf_ren_b = \$9y ;
  assign rf_ren_a_o = rf_ren_a;
  assign rf_ren_b_o = rf_ren_b;
  assign alu_op_a_mux_sel = \$10y ;
  assign alu_op_b_mux_sel = \$11y ;
  assign imm_b_mux_sel = \$12y ;
  assign imm_a = \$14y ;
  assign alu_operand_a = \$alu_operand_a$16 ;
  assign imm_b = \$imm_b$19 ;
  assign alu_operand_b = \$21y ;
  assign imd_val_q_ex_o = imd_val_q;
  assign rf_we_id_o = \$32y ;
  assign rf_wdata_id_o = \$rf_wdata_id_o$34 ;
  assign rf_raddr_a_MUX = \$35 [0];
  assign rf_waddr_id_MUX = \$36 [0];
  assign csr_pipe_flush = \$csr_pipe_flush$66 ;
  assign illegal_insn_o = \$68y ;
  assign multdiv_en_dec = \$69y ;
  assign lsu_req = \$71y ;
  assign mult_en_id = \$72y ;
  assign div_en_id = \$73y ;
  assign lsu_req_o = lsu_req;
  assign lsu_we_o = lsu_we;
  assign lsu_type_o = lsu_type;
  assign lsu_sign_ext_o = lsu_sign_ext;
  assign lsu_wdata_o = rf_rdata_b_fwd;
  assign csr_op_en_o = \$75y ;
  assign alu_operand_b_ex_o = \$76y ;
  assign rf_raddr_a_o = \$77y ;
  assign alu_operator_ex_o = alu_operator_MAC;
  assign alu_operand_a_ex_o = alu_operand_a;
  assign mult_en_ex_o = mult_en_id;
  assign div_en_ex_o = div_en_id;
  assign multdiv_operator_ex_o = multdiv_operator;
  assign multdiv_signed_mode_ex_o = multdiv_signed_mode;
  assign multdiv_operand_a_ex_o = rf_rdata_a_fwd;
  assign multdiv_operand_b_ex_o = rf_rdata_b_fwd;
  assign branch_set_raw = branch_set_raw_q;
  assign branch_jump_set_done_d = \$84y ;
  assign jump_set = \$89y ;
  assign branch_set = \$91y ;
  assign branch_set_raw_d = \$branch_set_raw_d$126 ;
  assign jump_set_raw = \$jump_set_raw$127 ;
  assign stall_multdiv = \$stall_multdiv$128 ;
  assign stall_branch = \$stall_branch$129 ;
  assign stall_jump = \$stall_jump$130 ;
  assign rf_we_raw = \$rf_we_raw$131 ;
  assign stall_alu = \$stall_alu$132 ;
  assign id_fsm_d = \$id_fsm_d$133 ;
  assign perf_branch_o = \$perf_branch_o$134 ;
  assign stall_id = \$138y ;
  assign instr_done = \$142y ;
  assign instr_first_cycle = \$144y ;
  assign instr_first_cycle_id_o = instr_first_cycle;
  assign multicycle_done = \$145y ;
  assign data_req_allowed = instr_first_cycle;
  assign stall_mem = \$149y ;
  assign instr_executing_spec = \$152y ;
  assign instr_executing = instr_executing_spec;
  assign rf_rdata_a_fwd = rf_rdata_a_i;
  assign rf_rdata_b_fwd = rf_rdata_b_i;
  assign perf_dside_wait_o = \$155y ;
  assign instr_id_done_o = instr_done;
  assign instr_perf_count_id_o = \$168y ;
  assign en_wb_o = instr_done;
  assign perf_wfi_wait_o = wfi_insn_dec;
  assign perf_div_wait_o = \$169y ;
  assign \$procmux$10486_CMP  = instr_executing;
  assign \$id_fsm_q$95  = \$procmux$10485_Y ;
  assign \$procmux$10488_CMP  = \$63y ;
  assign \$procmux$10490_CMP  = \$56y ;
  assign \$procmux$10493_CMP  = \$45y ;
  assign \$csr_pipe_flush$64  = \$procmux$10492_Y ;
  assign \$procmux$10496_CMP  = \$56y ;
  assign \$procmux$10499_CMP  = \$45y ;
  assign \$csr_pipe_flush$65  = \$procmux$10498_Y ;
  assign \$procmux$10504_CMP  = \$45y ;
  assign \$csr_pipe_flush$66  = \$procmux$10503_Y ;
  assign \$procmux$10507_CMP  = \$52y ;
  assign \$procmux$10509_CMP  = \$45y ;
  assign \$csr_pipe_flush$53  = \$procmux$10508_Y ;
  assign \$procmux$10513_CMP  = multicycle_done;
  assign \$procmux$10515_CMP  = id_fsm_q;
  assign \$procmux$10517_CMP  = instr_executing_spec;
  assign \$id_fsm_d$116  = \$procmux$10516_Y ;
  assign \$procmux$10521_CMP  = multicycle_done;
  assign \$procmux$10523_CMP  = id_fsm_q;
  assign \$procmux$10525_CMP  = instr_executing_spec;
  assign \$stall_jump$115  = \$procmux$10524_Y ;
  assign \$procmux$10529_CMP  = multicycle_done;
  assign \$procmux$10531_CMP  = id_fsm_q;
  assign \$procmux$10533_CMP  = instr_executing_spec;
  assign \$stall_branch$114  = \$procmux$10532_Y ;
  assign \$procmux$10537_CMP  = multicycle_done;
  assign \$procmux$10539_CMP  = id_fsm_q;
  assign \$procmux$10541_CMP  = instr_executing_spec;
  assign \$stall_multdiv$113  = \$procmux$10540_Y ;
  assign \$procmux$10543_CMP  = multdiv_en_dec;
  assign \$procmux$10545_CMP  = id_fsm_q;
  assign \$procmux$10547_CMP  = instr_executing_spec;
  assign \$rf_we_raw$112  = \$procmux$10546_Y ;
  assign \$procmux$10550_CMP  = id_fsm_q;
  assign \$procmux$10554_CMP  = instr_executing_spec;
  assign \$id_fsm_d$124  = \$procmux$10553_Y ;
  assign \$procmux$10557_CMP  = id_fsm_q;
  assign \$procmux$10561_CMP  = instr_executing_spec;
  assign \$rf_we_raw$122  = \$procmux$10560_Y ;
  assign \$procmux$10564_CMP  = id_fsm_q;
  assign \$procmux$10568_CMP  = instr_executing_spec;
  assign \$stall_jump$121  = \$procmux$10567_Y ;
  assign \$procmux$10571_CMP  = id_fsm_q;
  assign \$procmux$10575_CMP  = instr_executing_spec;
  assign \$stall_branch$120  = \$procmux$10574_Y ;
  assign \$procmux$10578_CMP  = id_fsm_q;
  assign \$procmux$10582_CMP  = instr_executing_spec;
  assign \$stall_multdiv$119  = \$procmux$10581_Y ;
  assign \$procmux$10589_CMP  = \$97y ;
  assign \$procmux$10595_CMP  = instr_executing_spec;
  assign \$id_fsm_d$100  = \$procmux$10594_Y ;
  assign \$procmux$10602_CMP  = \$97y ;
  assign \$procmux$10608_CMP  = instr_executing_spec;
  assign \$rf_we_raw$99  = \$procmux$10607_Y ;
  assign \$procmux$10615_CMP  = \$97y ;
  assign \$procmux$10621_CMP  = instr_executing_spec;
  assign \$stall_multdiv$98  = \$procmux$10620_Y ;
  assign \$procmux$10634_CMP  = instr_executing_spec;
  assign \$id_fsm_d$109  = \$procmux$10633_Y ;
  assign \$procmux$10644_CMP  = instr_executing_spec;
  assign \$perf_branch_o$110  = \$procmux$10643_Y ;
  assign \$procmux$10652_CMP  = instr_executing_spec;
  assign \$stall_alu$108  = \$procmux$10651_Y ;
  assign \$procmux$10662_CMP  = instr_executing_spec;
  assign \$rf_we_raw$107  = \$procmux$10661_Y ;
  assign \$procmux$10671_CMP  = instr_executing_spec;
  assign \$stall_jump$106  = \$procmux$10670_Y ;
  assign \$procmux$10681_CMP  = instr_executing_spec;
  assign \$stall_branch$105  = \$procmux$10680_Y ;
  assign \$procmux$10693_CMP  = instr_executing_spec;
  assign \$stall_multdiv$104  = \$procmux$10692_Y ;
  assign \$procmux$10702_CMP  = instr_executing_spec;
  assign \$jump_set_raw$103  = \$procmux$10701_Y ;
  assign \$procmux$10712_CMP  = instr_executing_spec;
  assign \$branch_set_raw_d$102  = \$procmux$10711_Y ;
  assign \$procmux$10718_CMP  = instr_executing_spec;
  assign \$perf_branch_o$125  = \$procmux$10717_Y ;
  assign \$procmux$10724_CMP  = instr_executing_spec;
  assign \$stall_alu$123  = \$procmux$10723_Y ;
  assign \$procmux$10730_CMP  = instr_executing_spec;
  assign \$jump_set_raw$118  = \$procmux$10729_Y ;
  assign \$procmux$10736_CMP  = instr_executing_spec;
  assign \$branch_set_raw_d$117  = \$procmux$10735_Y ;
  assign \$procmux$10739_CMP  = instr_executing_spec;
  assign \$perf_branch_o$134  = \$procmux$10738_Y ;
  assign \$procmux$10742_CMP  = instr_executing_spec;
  assign \$id_fsm_d$133  = \$procmux$10741_Y ;
  assign \$procmux$10745_CMP  = instr_executing_spec;
  assign \$stall_alu$132  = \$procmux$10744_Y ;
  assign \$procmux$10748_CMP  = instr_executing_spec;
  assign \$rf_we_raw$131  = \$procmux$10747_Y ;
  assign \$procmux$10751_CMP  = instr_executing_spec;
  assign \$stall_jump$130  = \$procmux$10750_Y ;
  assign \$procmux$10754_CMP  = instr_executing_spec;
  assign \$stall_branch$129  = \$procmux$10753_Y ;
  assign \$procmux$10757_CMP  = instr_executing_spec;
  assign \$stall_multdiv$128  = \$procmux$10756_Y ;
  assign \$procmux$10760_CMP  = instr_executing_spec;
  assign \$jump_set_raw$127  = \$procmux$10759_Y ;
  assign \$procmux$10763_CMP  = instr_executing_spec;
  assign \$branch_set_raw_d$126  = \$procmux$10762_Y ;
  assign \$procmux$10765_CMP  = rf_wdata_sel;
  assign \$rf_wdata_id_o$34  = \$procmux$10764_Y ;
  assign \$procmux$10768_CMP  = imd_val_we_ex_i[1];
  assign \$imd_val_q[33:0]$29  = \$procmux$10767_Y ;
  assign \$procmux$10770_CMP  = imd_val_we_ex_i[0];
  assign \$imd_val_q[67:34]$25  = \$procmux$10769_Y ;
  assign \$imm_b$19  = \$procmux$10773_Y ;
  assign \$alu_operand_a$16  = \$procmux$10780_Y ;
  assign \$procmux$10617_CMP  = \$69y ;
  assign \$procmux$10689_CMP  = \$69y ;
  assign \$procmux$10667_CMP  = jump_in_dec;
  assign \$procmux$10677_CMP  = branch_in_dec;
  assign \$procmux$10648_CMP  = alu_multicycle_dec;
  assign \$54y  = csr_op_en_o;
  assign \$procmux$10698_CMP  = jump_in_dec;
  assign \$20y  = alu_op_b_mux_sel;
  assign \$24y  = rst_ni;
  assign \$28y  = rst_ni;
  assign \$procmux$10604_CMP  = \$69y ;
  assign \$procmux$10656_CMP  = alu_multicycle_dec;
  assign \$procmux$10658_CMP  = \$69y ;
  assign \$39y  = rst_ni;
  assign \$41y  = csr_op_en_o;
  assign \$87y  = rst_ni;
  assign \$94y  = rst_ni;
  assign \$80y  = rst_ni;
  assign \$procmux$10591_CMP  = \$69y ;
  assign \$procmux$10625_CMP  = alu_multicycle_dec;
  assign \$procmux$10626_CMP  = jump_in_dec;
  assign \$procmux$10627_CMP  = branch_in_dec;
  assign \$procmux$10629_CMP  = \$69y ;
  assign \$procmux$10630_CMP  = lsu_req_dec;
  assign \$procmux$10640_CMP  = branch_in_dec;
  assign \$procmux$10708_CMP  = branch_in_dec;
endmodule

/* src = "rtl/cve2/cve2_if_stage.sv:15.8" */
module \cve2_if_stage$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i (clk_i, rst_ni, boot_addr_i, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_addr_o, instr_rdata_i, instr_err_i, req_i, exc_cause, instr_valid_id_o, instr_new_id_o, instr_rdata_id_o, instr_rdata_alu_id_o, instr_rdata_c_id_o, instr_is_compressed_id_o, instr_fetch_err_o, instr_fetch_err_plus2_o, illegal_c_insn_id_o, pc_if_o
, pc_id_o, pmp_err_if_i, pmp_err_if_plus2_i, instr_valid_clear_i, pc_set_i, pc_mux_i, exc_pc_mux_i, branch_target_ex_i, csr_mepc_i, csr_depc_i, csr_mtvec_i, csr_mtvec_init_o, id_in_ready_i, if_busy_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire \$30y ;
  wire \$31y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  wire [31:0] \$exc_pc$1 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  wire [31:0] \$fetch_addr_n$3 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire \$illegal_c_insn_id_o$38 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire \$instr_fetch_err_o$36 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire \$instr_fetch_err_plus2_o$37 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire \$instr_is_compressed_id_o$35 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire [31:0] \$instr_rdata_alu_id_o$33 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire [15:0] \$instr_rdata_c_id_o$34 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire [31:0] \$instr_rdata_id_o$32 ;
  /* src = "rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  wire [31:0] \$pc_id_o$39 ;
  wire [31:0] \$procmux$10785_Y ;
  wire \$procmux$10786_CMP ;
  wire \$procmux$10787_Y ;
  wire \$procmux$10788_CMP ;
  wire \$procmux$10789_Y ;
  wire \$procmux$10790_CMP ;
  wire \$procmux$10791_Y ;
  wire \$procmux$10792_CMP ;
  wire \$procmux$10793_Y ;
  wire \$procmux$10794_CMP ;
  wire [15:0] \$procmux$10795_Y ;
  wire \$procmux$10796_CMP ;
  wire [31:0] \$procmux$10797_Y ;
  wire \$procmux$10798_CMP ;
  wire [31:0] \$procmux$10799_Y ;
  wire \$procmux$10800_CMP ;
  wire [31:0] \$procmux$10802_Y ;
  wire \$procmux$10803_CMP ;
  wire \$procmux$10804_CMP ;
  wire \$procmux$10805_CMP ;
  wire \$procmux$10806_CMP ;
  wire [31:0] \$procmux$10807_Y ;
  wire \$procmux$10808_CMP ;
  wire \$procmux$10809_CMP ;
  wire \$procmux$10810_CMP ;
  wire \$procmux$10811_CMP ;
  /* src = "rtl/cve2/cve2_if_stage.sv:22.40" */
  input [31:0] boot_addr_i;
  wire [31:0] boot_addr_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:83.22" */
  wire branch_req;
  /* src = "rtl/cve2/cve2_if_stage.sv:61.39" */
  input [31:0] branch_target_ex_i;
  wire [31:0] branch_target_ex_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:19.40" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:66.39" */
  input [31:0] csr_depc_i;
  wire [31:0] csr_depc_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:64.39" */
  input [31:0] csr_mepc_i;
  wire [31:0] csr_mepc_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:68.39" */
  input [31:0] csr_mtvec_i;
  wire [31:0] csr_mtvec_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:69.39" */
  output csr_mtvec_init_o;
  wire csr_mtvec_init_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:58.39" */
  input [6:0] exc_cause;
  wire [6:0] exc_cause;
  /* src = "rtl/cve2/cve2_if_stage.sv:102.22" */
  wire [31:0] exc_pc;
  /* src = "rtl/cve2/cve2_if_stage.sv:57.39" */
  input [1:0] exc_pc_mux_i;
  wire [1:0] exc_pc_mux_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:90.22" */
  wire [31:0] fetch_addr;
  /* src = "rtl/cve2/cve2_if_stage.sv:84.22" */
  wire [31:0] fetch_addr_n;
  /* src = "rtl/cve2/cve2_if_stage.sv:91.22" */
  wire fetch_err;
  /* src = "rtl/cve2/cve2_if_stage.sv:92.22" */
  wire fetch_err_plus2;
  /* src = "rtl/cve2/cve2_if_stage.sv:89.22" */
  wire [31:0] fetch_rdata;
  /* src = "rtl/cve2/cve2_if_stage.sv:88.22" */
  wire fetch_ready;
  /* src = "rtl/cve2/cve2_if_stage.sv:87.22" */
  wire fetch_valid;
  /* src = "rtl/cve2/cve2_if_stage.sv:72.39" */
  input id_in_ready_i;
  wire id_in_ready_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:75.39" */
  output if_busy_o;
  wire if_busy_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:107.22" */
  wire if_id_pipe_reg_we;
  /* src = "rtl/cve2/cve2_if_stage.sv:99.22" */
  wire if_instr_err;
  /* src = "rtl/cve2/cve2_if_stage.sv:100.22" */
  wire if_instr_err_plus2;
  /* src = "rtl/cve2/cve2_if_stage.sv:98.22" */
  wire if_instr_pmp_err;
  /* src = "rtl/cve2/cve2_if_stage.sv:95.22" */
  wire illegal_c_insn;
  /* src = "rtl/cve2/cve2_if_stage.sv:46.39" */
  output illegal_c_insn_id_o;
  wire illegal_c_insn_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:27.39" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:94.22" */
  wire [31:0] instr_decompressed;
  /* src = "rtl/cve2/cve2_if_stage.sv:31.39" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:44.39" */
  output instr_fetch_err_o;
  wire instr_fetch_err_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:45.39" */
  output instr_fetch_err_plus2_o;
  wire instr_fetch_err_plus2_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:28.39" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:96.22" */
  wire instr_is_compressed;
  /* src = "rtl/cve2/cve2_if_stage.sv:42.39" */
  output instr_is_compressed_id_o;
  wire instr_is_compressed_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:79.22" */
  wire instr_new_id_d;
  /* src = "rtl/cve2/cve2_if_stage.sv:35.39" */
  output instr_new_id_o;
  wire instr_new_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:79.38" */
  wire instr_new_id_q;
  /* src = "rtl/cve2/cve2_if_stage.sv:37.39" */
  output [31:0] instr_rdata_alu_id_o;
  wire [31:0] instr_rdata_alu_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:39.39" */
  output [15:0] instr_rdata_c_id_o;
  wire [15:0] instr_rdata_c_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:30.39" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:36.39" */
  output [31:0] instr_rdata_id_o;
  wire [31:0] instr_rdata_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:26.39" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:29.39" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:54.39" */
  input instr_valid_clear_i;
  wire instr_valid_clear_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:78.22" */
  wire instr_valid_id_d;
  /* src = "rtl/cve2/cve2_if_stage.sv:34.39" */
  output instr_valid_id_o;
  wire instr_valid_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:78.40" */
  wire instr_valid_id_q;
  /* src = "rtl/cve2/cve2_if_stage.sv:104.22" */
  wire [6:0] irq_id;
  /* src = "rtl/cve2/cve2_if_stage.sv:49.39" */
  output [31:0] pc_id_o;
  wire [31:0] pc_id_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:48.39" */
  output [31:0] pc_if_o;
  wire [31:0] pc_if_o;
  /* src = "rtl/cve2/cve2_if_stage.sv:56.39" */
  input [2:0] pc_mux_i;
  wire [2:0] pc_mux_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:109.22" */
  wire [2:0] pc_mux_internal;
  /* src = "rtl/cve2/cve2_if_stage.sv:55.39" */
  input pc_set_i;
  wire pc_set_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:50.39" */
  input pmp_err_if_i;
  wire pmp_err_if_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:51.39" */
  input pmp_err_if_plus2_i;
  wire pmp_err_if_plus2_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:82.22" */
  wire prefetch_busy;
  /* src = "rtl/cve2/cve2_if_stage.sv:23.40" */
  input req_i;
  wire req_i;
  /* src = "rtl/cve2/cve2_if_stage.sv:20.40" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_if_stage.sv:111.22" */
  wire [7:0] unused_boot_addr;
  /* src = "rtl/cve2/cve2_if_stage.sv:112.22" */
  wire [7:0] unused_csr_mtvec;
  /* src = "rtl/cve2/cve2_if_stage.sv:85.22" */
  wire unused_fetch_addr_n0;
  /* src = "rtl/cve2/cve2_if_stage.sv:105.22" */
  wire unused_irq_bit;
  /* src = "rtl/cve2/cve2_if_stage.sv:192.25-192.53" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(fetch_err),
    .B(if_instr_pmp_err),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:195.49-195.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(instr_is_compressed),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:195.33-195.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(fetch_addr[2]),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:195.33-195.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$12y ),
    .B(pmp_err_if_plus2_i),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:195.32-196.47" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\$13y ),
    .B(fetch_err_plus2),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:196.51-196.64" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(pmp_err_if_i),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:195.31-196.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:206.36-206.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(fetch_err),
    .Y(\$17y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:206.22-206.46" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(fetch_valid),
    .B(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:216.30-216.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(fetch_valid),
    .B(id_in_ready_i),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:216.60-216.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(pc_set_i),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:216.30-216.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:217.49-217.69" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(instr_valid_clear_i),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:217.30-217.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(instr_valid_id_q),
    .B(\$22y ),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:216.29-217.70" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$21y ),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:218.29-218.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(fetch_valid),
    .B(id_in_ready_i),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(rst_ni),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:148.30-148.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(pc_mux_i),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:148.29-148.61" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$4y ),
    .B(pc_set_i),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:189.46-189.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(instr_is_compressed),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:189.30-189.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(fetch_addr[2]),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:189.30-189.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$7y ),
    .B(pmp_err_if_plus2_i),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:188.29-189.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(pmp_err_if_i),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$illegal_c_insn_id_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$illegal_c_insn_id_o$38 ),
    .Q(illegal_c_insn_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$instr_fetch_err_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_fetch_err_o$36 ),
    .Q(instr_fetch_err_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$instr_fetch_err_plus2_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_fetch_err_plus2_o$37 ),
    .Q(instr_fetch_err_plus2_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$instr_is_compressed_id_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_is_compressed_id_o$35 ),
    .Q(instr_is_compressed_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:220.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$instr_new_id_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(instr_new_id_d),
    .Q(instr_new_id_q)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$instr_rdata_alu_id_o  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_rdata_alu_id_o$33 ),
    .Q(instr_rdata_alu_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd16)
  ) \$driver$instr_rdata_c_id_o  (
    .AD(16'h0000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_rdata_c_id_o$34 ),
    .Q(instr_rdata_c_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$instr_rdata_id_o  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$instr_rdata_id_o$32 ),
    .Q(instr_rdata_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:220.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$instr_valid_id_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(instr_valid_id_d),
    .Q(instr_valid_id_q)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:237.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$pc_id_o  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$pc_id_o$39 ),
    .Q(pc_id_o)
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10785  (
    .A(pc_id_o),
    .B(fetch_addr),
    .S(\$procmux$10786_CMP ),
    .Y(\$procmux$10785_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10787  (
    .A(illegal_c_insn_id_o),
    .B(illegal_c_insn),
    .S(\$procmux$10788_CMP ),
    .Y(\$procmux$10787_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10789  (
    .A(instr_fetch_err_plus2_o),
    .B(\$16y ),
    .S(\$procmux$10790_CMP ),
    .Y(\$procmux$10789_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10791  (
    .A(instr_fetch_err_o),
    .B(\$10y ),
    .S(\$procmux$10792_CMP ),
    .Y(\$procmux$10791_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10793  (
    .A(instr_is_compressed_id_o),
    .B(instr_is_compressed),
    .S(\$procmux$10794_CMP ),
    .Y(\$procmux$10793_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$10795  (
    .A(instr_rdata_c_id_o),
    .B(fetch_rdata[15:0]),
    .S(\$procmux$10796_CMP ),
    .Y(\$procmux$10795_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10797  (
    .A(instr_rdata_alu_id_o),
    .B(instr_decompressed),
    .S(\$procmux$10798_CMP ),
    .Y(\$procmux$10797_Y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:247.37-257.8|rtl/cve2/cve2_if_stage.sv:247.14-257.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10799  (
    .A(instr_rdata_id_o),
    .B(instr_decompressed),
    .S(\$procmux$10800_CMP ),
    .Y(\$procmux$10799_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:142.16-142.42|rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10802  (
    .A({ boot_addr_i[31:8], 8'h00 }),
    .B({ branch_target_ex_i, \$exc_pc$1 , csr_mepc_i, csr_depc_i }),
    .S({ \$procmux$10806_CMP , \$procmux$10805_CMP , \$procmux$10804_CMP , \$procmux$10803_CMP  }),
    .Y(\$procmux$10802_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:142.16-142.42|rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10803_CMP0  (
    .A(pc_mux_internal),
    .B(3'h4),
    .Y(\$procmux$10803_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:141.16-141.42|rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10804_CMP0  (
    .A(pc_mux_internal),
    .B(3'h3),
    .Y(\$procmux$10804_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:140.16-140.38|rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10805_CMP0  (
    .A(pc_mux_internal),
    .B(3'h2),
    .Y(\$procmux$10805_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:139.16-139.50|rtl/cve2/cve2_if_stage.sv:137.5-144.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10806_CMP0  (
    .A(pc_mux_internal),
    .B(3'h1),
    .Y(\$procmux$10806_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:127.23-127.48|rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10807  (
    .A(32'hxxxxxxxx),
    .B({ csr_mtvec_i[31:8], 8'h00, csr_mtvec_i[31:8], exc_cause[5:0], 66'h00000080000000810 }),
    .S({ \$procmux$10811_CMP , \$procmux$10810_CMP , \$procmux$10809_CMP , \$procmux$10808_CMP  }),
    .Y(\$procmux$10807_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:127.23-127.48|rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10808_CMP0  (
    .A(exc_pc_mux_i),
    .B(2'h3),
    .Y(\$procmux$10808_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:126.23-126.43|rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10809_CMP0  (
    .A(exc_pc_mux_i),
    .B(2'h2),
    .Y(\$procmux$10809_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:125.23-125.74|rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10810_CMP0  (
    .A(exc_pc_mux_i),
    .B(2'h1),
    .Y(\$procmux$10810_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_if_stage.sv:124.23-124.74|rtl/cve2/cve2_if_stage.sv:123.5-129.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10811_CMP0  (
    .A(exc_pc_mux_i),
    .Y(\$procmux$10811_CMP )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:203.27" */
  \cve2_compressed_decoder$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.compressed_decoder_i  compressed_decoder_i (
    .clk_i(clk_i),
    .illegal_instr_o(illegal_c_insn),
    .instr_i(fetch_rdata),
    .instr_o(instr_decompressed),
    .is_compressed_o(instr_is_compressed),
    .rst_ni(rst_ni),
    .valid_i(\$18y )
  );
  /* src = "rtl/cve2/cve2_if_stage.sv:152.5" */
  \cve2_prefetch_buffer$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.prefetch_buffer_i  prefetch_buffer_i (
    .addr_i({ fetch_addr_n[31:1], 1'h0 }),
    .addr_o(fetch_addr),
    .branch_i(branch_req),
    .busy_o(prefetch_busy),
    .clk_i(clk_i),
    .err_o(fetch_err),
    .err_plus2_o(fetch_err_plus2),
    .instr_addr_o(instr_addr_o),
    .instr_err_i(instr_err_i),
    .instr_gnt_i(instr_gnt_i),
    .instr_rdata_i(instr_rdata_i),
    .instr_req_o(instr_req_o),
    .instr_rvalid_i(instr_rvalid_i),
    .rdata_o(fetch_rdata),
    .ready_i(fetch_ready),
    .req_i(req_i),
    .rst_ni(rst_ni),
    .valid_o(fetch_valid)
  );
  assign unused_boot_addr = boot_addr_i[7:0];
  assign unused_csr_mtvec = csr_mtvec_i[7:0];
  assign irq_id = exc_cause;
  assign unused_irq_bit = irq_id[6];
  assign exc_pc = \$exc_pc$1 ;
  assign pc_mux_internal = pc_mux_i;
  assign fetch_addr_n = \$fetch_addr_n$3 ;
  assign csr_mtvec_init_o = \$5y ;
  assign unused_fetch_addr_n0 = fetch_addr_n[0];
  assign branch_req = pc_set_i;
  assign pc_if_o = fetch_addr;
  assign if_busy_o = prefetch_busy;
  assign if_instr_pmp_err = \$9y ;
  assign if_instr_err = \$10y ;
  assign if_instr_err_plus2 = \$16y ;
  assign instr_valid_id_d = \$24y ;
  assign instr_new_id_d = \$25y ;
  assign instr_valid_id_o = instr_valid_id_q;
  assign instr_new_id_o = instr_new_id_q;
  assign if_id_pipe_reg_we = instr_new_id_d;
  assign fetch_ready = id_in_ready_i;
  assign \$procmux$10786_CMP  = if_id_pipe_reg_we;
  assign \$pc_id_o$39  = \$procmux$10785_Y ;
  assign \$procmux$10788_CMP  = if_id_pipe_reg_we;
  assign \$illegal_c_insn_id_o$38  = \$procmux$10787_Y ;
  assign \$procmux$10790_CMP  = if_id_pipe_reg_we;
  assign \$instr_fetch_err_plus2_o$37  = \$procmux$10789_Y ;
  assign \$procmux$10792_CMP  = if_id_pipe_reg_we;
  assign \$instr_fetch_err_o$36  = \$procmux$10791_Y ;
  assign \$procmux$10794_CMP  = if_id_pipe_reg_we;
  assign \$instr_is_compressed_id_o$35  = \$procmux$10793_Y ;
  assign \$procmux$10796_CMP  = if_id_pipe_reg_we;
  assign \$instr_rdata_c_id_o$34  = \$procmux$10795_Y ;
  assign \$procmux$10798_CMP  = if_id_pipe_reg_we;
  assign \$instr_rdata_alu_id_o$33  = \$procmux$10797_Y ;
  assign \$procmux$10800_CMP  = if_id_pipe_reg_we;
  assign \$instr_rdata_id_o$32  = \$procmux$10799_Y ;
  assign \$fetch_addr_n$3  = \$procmux$10802_Y ;
  assign \$exc_pc$1  = \$procmux$10807_Y ;
  assign \$28y  = rst_ni;
  assign \$31y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_load_store_unit.sv:16.8" */
module \cve2_load_store_unit$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.load_store_unit_i (clk_i, rst_ni, data_req_o, data_gnt_i, data_rvalid_i, data_we_o, data_be_o, data_addr_o, data_wdata_o, data_rdata_i, data_err_i, busy_o, data_pmp_err_i, lsu_we_i, lsu_type_i, lsu_wdata_i, lsu_sign_ext_i, lsu_rdata_o, lsu_rdata_valid_o, lsu_req_i, adder_result_ex_i
, addr_incr_req_o, addr_last_o, lsu_resp_valid_o, load_err_o, store_err_o, perf_load_o, perf_store_o);
  wire \$103y ;
  wire \$104y ;
  wire \$122y ;
  wire \$123y ;
  wire \$124y ;
  wire \$125y ;
  wire \$126y ;
  wire \$127y ;
  wire \$128y ;
  wire \$129y ;
  wire \$130y ;
  wire \$131y ;
  wire \$132y ;
  wire \$133y ;
  wire \$134y ;
  wire \$135y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$13y ;
  wire \$140y ;
  wire \$14y ;
  wire \$17y ;
  wire \$18y ;
  wire \$1y ;
  wire [31:0] \$23y ;
  wire \$25y ;
  wire \$26y ;
  wire \$31y ;
  wire \$33y ;
  wire \$35y ;
  wire \$37y ;
  wire \$41y ;
  wire \$43y ;
  wire \$45y ;
  wire \$47y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$5y ;
  wire \$60y ;
  wire [2:0] \$61y ;
  wire [2:0] \$62y ;
  wire \$76y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire [2:0] \$84y ;
  wire \$85y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$97y ;
  wire \$98y ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$addr_incr_req_o$118 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:213.14-215.8" */
  wire [31:0] \$addr_last_q$27 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  wire \$addr_update$105 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$addr_update$110 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  wire \$addr_update$63 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$addr_update$67 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  wire \$addr_update$77 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire \$addr_update$91 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  wire \$addr_update$99 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  wire \$ctrl_update$100 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$ctrl_update$111 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  wire \$ctrl_update$64 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$ctrl_update$68 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  wire \$ctrl_update$78 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  wire [3:0] \$data_be$2 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  wire [3:0] \$data_be$3 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12" */
  wire [3:0] \$data_be$4 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  wire [3:0] \$data_be$6 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12" */
  wire [3:0] \$data_be$7 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  wire [3:0] \$data_be$8 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  wire [3:0] \$data_be$9 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  wire [31:0] \$data_rdata_ext$51 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$data_req_o$117 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$data_req_o$73 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  wire \$data_sign_ext_q$21 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  wire [1:0] \$data_type_q$20 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  wire [31:0] \$data_wdata$11 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  wire \$data_we_q$22 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  wire \$handle_misaligned_d$101 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$handle_misaligned_d$113 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  wire \$handle_misaligned_d$65 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$handle_misaligned_d$69 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  wire \$handle_misaligned_d$79 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:405.11-409.14" */
  wire \$handle_misaligned_d$89 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire \$handle_misaligned_d$93 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  wire [2:0] \$ls_fsm_ns$102 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  wire [2:0] \$ls_fsm_ns$109 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire [2:0] \$ls_fsm_ns$116 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  wire [2:0] \$ls_fsm_ns$66 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire [2:0] \$ls_fsm_ns$72 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  wire [2:0] \$ls_fsm_ns$80 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:405.11-409.14" */
  wire [2:0] \$ls_fsm_ns$90 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire [2:0] \$ls_fsm_ns$96 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  wire \$lsu_err_d$108 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$lsu_err_d$115 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$lsu_err_d$71 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire \$lsu_err_d$95 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$perf_load_o$119 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$perf_load_o$74 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$perf_store_o$120 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$perf_store_o$75 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  wire \$pmp_err_d$107 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$pmp_err_d$114 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  wire \$pmp_err_d$70 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire \$pmp_err_d$94 ;
  wire \$procmux$10000_CMP ;
  wire \$procmux$10001_Y ;
  wire \$procmux$10002_CMP ;
  wire [2:0] \$procmux$10008_Y ;
  wire \$procmux$10009_CMP ;
  wire [2:0] \$procmux$10010_Y ;
  wire \$procmux$10011_CMP ;
  wire \$procmux$10017_Y ;
  wire \$procmux$10018_CMP ;
  wire \$procmux$10019_Y ;
  wire \$procmux$10020_CMP ;
  wire \$procmux$10025_Y ;
  wire \$procmux$10026_CMP ;
  wire \$procmux$10027_Y ;
  wire \$procmux$10028_CMP ;
  wire \$procmux$10033_Y ;
  wire \$procmux$10034_CMP ;
  wire \$procmux$10035_Y ;
  wire \$procmux$10036_CMP ;
  wire \$procmux$10041_Y ;
  wire \$procmux$10042_CMP ;
  wire \$procmux$10043_Y ;
  wire \$procmux$10044_CMP ;
  wire \$procmux$10049_Y ;
  wire \$procmux$10050_CMP ;
  wire \$procmux$10051_Y ;
  wire \$procmux$10052_CMP ;
  wire [2:0] \$procmux$10057_Y ;
  wire \$procmux$10058_CMP ;
  wire [2:0] \$procmux$10059_Y ;
  wire \$procmux$10060_CMP ;
  wire \$procmux$10065_Y ;
  wire \$procmux$10066_CMP ;
  wire \$procmux$10067_Y ;
  wire \$procmux$10068_CMP ;
  wire \$procmux$10073_Y ;
  wire \$procmux$10074_CMP ;
  wire \$procmux$10075_Y ;
  wire \$procmux$10076_CMP ;
  wire \$procmux$10081_Y ;
  wire \$procmux$10082_CMP ;
  wire \$procmux$10083_Y ;
  wire \$procmux$10084_CMP ;
  wire [2:0] \$procmux$10087_Y ;
  wire \$procmux$10088_CMP ;
  wire \$procmux$10090_CMP ;
  wire \$procmux$10092_CMP ;
  wire \$procmux$10094_CMP ;
  wire \$procmux$10096_CMP ;
  wire [2:0] \$procmux$10103_Y ;
  wire \$procmux$10104_CMP ;
  wire [2:0] \$procmux$10105_Y ;
  wire \$procmux$10106_CMP ;
  wire [2:0] \$procmux$10107_Y ;
  wire \$procmux$10108_CMP ;
  wire \$procmux$10115_Y ;
  wire \$procmux$10116_CMP ;
  wire \$procmux$10117_Y ;
  wire \$procmux$10118_CMP ;
  wire \$procmux$10119_Y ;
  wire \$procmux$10120_CMP ;
  wire \$procmux$10127_Y ;
  wire \$procmux$10128_CMP ;
  wire \$procmux$10129_Y ;
  wire \$procmux$10130_CMP ;
  wire \$procmux$10131_Y ;
  wire \$procmux$10132_CMP ;
  wire \$procmux$10139_Y ;
  wire \$procmux$10140_CMP ;
  wire \$procmux$10141_Y ;
  wire \$procmux$10142_CMP ;
  wire \$procmux$10143_Y ;
  wire \$procmux$10144_CMP ;
  wire \$procmux$10151_Y ;
  wire \$procmux$10152_CMP ;
  wire \$procmux$10153_Y ;
  wire \$procmux$10154_CMP ;
  wire \$procmux$10161_Y ;
  wire \$procmux$10162_CMP ;
  wire \$procmux$10163_Y ;
  wire \$procmux$10164_CMP ;
  wire \$procmux$10171_Y ;
  wire \$procmux$10172_CMP ;
  wire \$procmux$10173_Y ;
  wire \$procmux$10174_CMP ;
  wire [2:0] \$procmux$10181_Y ;
  wire \$procmux$10182_CMP ;
  wire [2:0] \$procmux$10183_Y ;
  wire \$procmux$10184_CMP ;
  wire \$procmux$10191_Y ;
  wire \$procmux$10192_CMP ;
  wire \$procmux$10193_Y ;
  wire \$procmux$10194_CMP ;
  wire \$procmux$10201_Y ;
  wire \$procmux$10202_CMP ;
  wire \$procmux$10203_Y ;
  wire \$procmux$10204_CMP ;
  wire \$procmux$10211_Y ;
  wire \$procmux$10212_CMP ;
  wire \$procmux$10213_Y ;
  wire \$procmux$10214_CMP ;
  wire \$procmux$10221_Y ;
  wire \$procmux$10222_CMP ;
  wire \$procmux$10223_Y ;
  wire \$procmux$10224_CMP ;
  wire \$procmux$10231_Y ;
  wire \$procmux$10232_CMP ;
  wire \$procmux$10233_Y ;
  wire \$procmux$10234_CMP ;
  wire \$procmux$10241_Y ;
  wire \$procmux$10242_CMP ;
  wire \$procmux$10249_Y ;
  wire \$procmux$10250_CMP ;
  wire \$procmux$10253_Y ;
  wire \$procmux$10254_CMP ;
  wire \$procmux$10256_CMP ;
  wire \$procmux$10258_CMP ;
  wire \$procmux$10262_Y ;
  wire \$procmux$10263_CMP ;
  wire \$procmux$10265_CMP ;
  wire \$procmux$10267_CMP ;
  wire \$procmux$10269_CMP ;
  wire \$procmux$10272_Y ;
  wire \$procmux$10273_CMP ;
  wire \$procmux$10275_CMP ;
  wire \$procmux$10277_CMP ;
  wire \$procmux$10280_Y ;
  wire \$procmux$10281_CMP ;
  wire \$procmux$10283_CMP ;
  wire \$procmux$10285_CMP ;
  wire \$procmux$10289_Y ;
  wire \$procmux$10290_CMP ;
  wire \$procmux$10292_CMP ;
  wire \$procmux$10294_CMP ;
  wire \$procmux$10296_CMP ;
  wire \$procmux$10299_Y ;
  wire \$procmux$10300_CMP ;
  wire \$procmux$10302_CMP ;
  wire \$procmux$10306_Y ;
  wire \$procmux$10307_CMP ;
  wire \$procmux$10309_CMP ;
  wire \$procmux$10311_CMP ;
  wire \$procmux$10314_Y ;
  wire \$procmux$10315_CMP ;
  wire \$procmux$10317_CMP ;
  wire \$procmux$10319_CMP ;
  wire \$procmux$10321_CMP ;
  wire \$procmux$10323_CMP ;
  wire [31:0] \$procmux$10324_Y ;
  wire [1:0] \$procmux$10325_CMP ;
  wire \$procmux$10325_CTRL ;
  wire \$procmux$10326_CMP ;
  wire \$procmux$10327_CMP ;
  wire [31:0] \$procmux$10329_Y ;
  wire \$procmux$10330_CMP ;
  wire [31:0] \$procmux$10331_Y ;
  wire \$procmux$10332_CMP ;
  wire [31:0] \$procmux$10335_Y ;
  wire \$procmux$10336_CMP ;
  wire [31:0] \$procmux$10337_Y ;
  wire \$procmux$10338_CMP ;
  wire [31:0] \$procmux$10342_Y ;
  wire \$procmux$10343_CMP ;
  wire [31:0] \$procmux$10344_Y ;
  wire \$procmux$10345_CMP ;
  wire [31:0] \$procmux$10347_Y ;
  wire \$procmux$10348_CMP ;
  wire \$procmux$10350_CMP ;
  wire \$procmux$10352_CMP ;
  wire \$procmux$10354_CMP ;
  wire [31:0] \$procmux$10359_Y ;
  wire \$procmux$10360_CMP ;
  wire [31:0] \$procmux$10361_Y ;
  wire \$procmux$10362_CMP ;
  wire [31:0] \$procmux$10364_Y ;
  wire \$procmux$10365_CMP ;
  wire [31:0] \$procmux$10366_Y ;
  wire \$procmux$10367_CMP ;
  wire [31:0] \$procmux$10370_Y ;
  wire \$procmux$10371_CMP ;
  wire [31:0] \$procmux$10372_Y ;
  wire \$procmux$10373_CMP ;
  wire [31:0] \$procmux$10377_Y ;
  wire \$procmux$10378_CMP ;
  wire [31:0] \$procmux$10379_Y ;
  wire \$procmux$10380_CMP ;
  wire [31:0] \$procmux$10382_Y ;
  wire \$procmux$10383_CMP ;
  wire \$procmux$10385_CMP ;
  wire \$procmux$10387_CMP ;
  wire \$procmux$10389_CMP ;
  wire [31:0] \$procmux$10394_Y ;
  wire \$procmux$10395_CMP ;
  wire [31:0] \$procmux$10396_Y ;
  wire \$procmux$10397_CMP ;
  wire [31:0] \$procmux$10398_Y ;
  wire \$procmux$10399_CMP ;
  wire \$procmux$10400_CMP ;
  wire \$procmux$10401_CMP ;
  wire \$procmux$10402_CMP ;
  wire [31:0] \$procmux$10403_Y ;
  wire \$procmux$10404_CMP ;
  wire \$procmux$10405_Y ;
  wire \$procmux$10406_CMP ;
  wire \$procmux$10407_Y ;
  wire \$procmux$10408_CMP ;
  wire [1:0] \$procmux$10409_Y ;
  wire \$procmux$10410_CMP ;
  wire [1:0] \$procmux$10411_Y ;
  wire \$procmux$10412_CMP ;
  wire [23:0] \$procmux$10413_Y ;
  wire \$procmux$10414_CMP ;
  wire [31:0] \$procmux$10415_Y ;
  wire \$procmux$10416_CMP ;
  wire \$procmux$10417_CMP ;
  wire \$procmux$10418_CMP ;
  wire \$procmux$10419_CMP ;
  wire [3:0] \$procmux$10420_Y ;
  wire \$procmux$10421_CMP ;
  wire \$procmux$10422_CMP ;
  wire \$procmux$10423_CMP ;
  wire \$procmux$10424_CMP ;
  wire [3:0] \$procmux$10425_Y ;
  wire [1:0] \$procmux$10426_CMP ;
  wire \$procmux$10426_CTRL ;
  wire [3:0] \$procmux$10430_Y ;
  wire \$procmux$10431_CMP ;
  wire [3:0] \$procmux$10432_Y ;
  wire \$procmux$10433_CMP ;
  wire [3:0] \$procmux$10436_Y ;
  wire \$procmux$10437_CMP ;
  wire \$procmux$10438_CMP ;
  wire \$procmux$10439_CMP ;
  wire \$procmux$10440_CMP ;
  wire [3:0] \$procmux$10441_Y ;
  wire \$procmux$10442_CMP ;
  wire [3:0] \$procmux$10443_Y ;
  wire \$procmux$10444_CMP ;
  wire [3:0] \$procmux$10446_Y ;
  wire [1:0] \$procmux$10447_CMP ;
  wire \$procmux$10447_CTRL ;
  wire \$procmux$10449_CMP ;
  wire \$procmux$10451_CMP ;
  wire [3:0] \$procmux$10454_Y ;
  wire \$procmux$10455_CMP ;
  wire \$procmux$10456_CMP ;
  wire \$procmux$10457_CMP ;
  wire \$procmux$10458_CMP ;
  wire [3:0] \$procmux$10460_Y ;
  wire \$procmux$10461_CMP ;
  wire [3:0] \$procmux$10462_Y ;
  wire \$procmux$10463_CMP ;
  wire [3:0] \$procmux$10469_Y ;
  wire \$procmux$10470_CMP ;
  wire [3:0] \$procmux$10471_Y ;
  wire \$procmux$10472_CMP ;
  wire [3:0] \$procmux$10476_Y ;
  wire \$procmux$10477_CMP ;
  wire \$procmux$10478_CMP ;
  wire \$procmux$10479_CMP ;
  wire \$procmux$10480_CMP ;
  wire [3:0] \$procmux$10481_Y ;
  wire \$procmux$10482_CMP ;
  wire [3:0] \$procmux$10483_Y ;
  wire \$procmux$10484_CMP ;
  wire [2:0] \$procmux$9935_Y ;
  wire \$procmux$9936_CMP ;
  wire [2:0] \$procmux$9937_Y ;
  wire \$procmux$9938_CMP ;
  wire \$procmux$9940_Y ;
  wire \$procmux$9941_CMP ;
  wire \$procmux$9942_Y ;
  wire \$procmux$9943_CMP ;
  wire \$procmux$9945_Y ;
  wire \$procmux$9946_CMP ;
  wire \$procmux$9947_Y ;
  wire \$procmux$9948_CMP ;
  wire \$procmux$9950_Y ;
  wire \$procmux$9951_CMP ;
  wire \$procmux$9952_Y ;
  wire \$procmux$9953_CMP ;
  wire \$procmux$9955_Y ;
  wire \$procmux$9956_CMP ;
  wire \$procmux$9957_Y ;
  wire \$procmux$9958_CMP ;
  wire [2:0] \$procmux$9961_Y ;
  wire \$procmux$9962_CMP ;
  wire [2:0] \$procmux$9963_Y ;
  wire \$procmux$9964_CMP ;
  wire \$procmux$9967_Y ;
  wire \$procmux$9968_CMP ;
  wire \$procmux$9969_Y ;
  wire \$procmux$9970_CMP ;
  wire \$procmux$9973_Y ;
  wire \$procmux$9974_CMP ;
  wire \$procmux$9975_Y ;
  wire \$procmux$9976_CMP ;
  wire \$procmux$9979_Y ;
  wire \$procmux$9980_CMP ;
  wire \$procmux$9981_Y ;
  wire \$procmux$9982_CMP ;
  wire [2:0] \$procmux$9986_Y ;
  wire \$procmux$9987_CMP ;
  wire [2:0] \$procmux$9989_Y ;
  wire \$procmux$9990_CMP ;
  wire [2:0] \$procmux$9991_Y ;
  wire \$procmux$9992_CMP ;
  wire \$procmux$9996_Y ;
  wire \$procmux$9997_CMP ;
  wire \$procmux$9999_Y ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:276.9-280.12" */
  wire [31:0] \$rdata_b_ext$42 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:284.9-288.12" */
  wire [31:0] \$rdata_b_ext$44 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:292.9-296.12" */
  wire [31:0] \$rdata_b_ext$46 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.9-304.12" */
  wire [31:0] \$rdata_b_ext$48 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  wire [31:0] \$rdata_b_ext$49 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:237.9-241.12" */
  wire [31:0] \$rdata_h_ext$32 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:245.9-249.12" */
  wire [31:0] \$rdata_h_ext$34 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:253.9-257.12" */
  wire [31:0] \$rdata_h_ext$36 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.9-265.12" */
  wire [31:0] \$rdata_h_ext$38 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  wire [31:0] \$rdata_h_ext$39 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  wire [1:0] \$rdata_offset_q$19 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:184.14-186.8" */
  wire [23:0] \$rdata_q$15 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  wire \$rdata_update$106 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  wire \$rdata_update$112 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  wire \$rdata_update$92 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  wire [31:0] \$rdata_w_ext$29 ;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:44.24" */
  input [31:0] adder_result_ex_i;
  wire [31:0] adder_result_ex_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:46.24" */
  output addr_incr_req_o;
  wire addr_incr_req_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:66.30" */
  wire [31:0] addr_last_d;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:48.24" */
  output [31:0] addr_last_o;
  wire [31:0] addr_last_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:66.17" */
  wire [31:0] addr_last_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:68.17" */
  wire addr_update;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:58.24" */
  output busy_o;
  wire busy_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:18.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:69.17" */
  wire ctrl_update;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:64.17" */
  wire [31:0] data_addr;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:28.24" */
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:65.17" */
  wire [31:0] data_addr_w_aligned;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:79.17" */
  wire [3:0] data_be;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:30.24" */
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:25.24" */
  input data_err_i;
  wire data_err_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:23.24" */
  input data_gnt_i;
  wire data_gnt_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:77.17" */
  wire [1:0] data_offset;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:93.17" */
  wire data_or_pmp_err;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:26.24" */
  input data_pmp_err_i;
  wire data_pmp_err_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:82.17" */
  wire [31:0] data_rdata_ext;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:32.24" */
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:22.24" */
  output data_req_o;
  wire data_req_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:24.24" */
  input data_rvalid_i;
  wire data_rvalid_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:74.17" */
  wire data_sign_ext_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:73.17" */
  wire [1:0] data_type_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:80.17" */
  wire [31:0] data_wdata;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:31.24" */
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:29.24" */
  output data_we_o;
  wire data_we_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:75.17" */
  wire data_we_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:89.38" */
  wire handle_misaligned_d;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:89.17" */
  wire handle_misaligned_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:55.24" */
  output load_err_o;
  wire load_err_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:100.12" */
  wire [2:0] ls_fsm_cs;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:100.23" */
  wire [2:0] ls_fsm_ns;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:92.28" */
  wire lsu_err_d;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:92.17" */
  wire lsu_err_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:40.24" */
  output [31:0] lsu_rdata_o;
  wire [31:0] lsu_rdata_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:41.24" */
  output lsu_rdata_valid_o;
  wire lsu_rdata_valid_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:42.24" */
  input lsu_req_i;
  wire lsu_req_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:52.24" */
  output lsu_resp_valid_o;
  wire lsu_resp_valid_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:38.24" */
  input lsu_sign_ext_i;
  wire lsu_sign_ext_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:36.24" */
  input [1:0] lsu_type_i;
  wire [1:0] lsu_type_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:37.24" */
  input [31:0] lsu_wdata_i;
  wire [31:0] lsu_wdata_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:35.24" */
  input lsu_we_i;
  wire lsu_we_i;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:60.24" */
  output perf_load_o;
  wire perf_load_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:61.24" */
  output perf_store_o;
  wire perf_store_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:91.28" */
  wire pmp_err_d;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:91.17" */
  wire pmp_err_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:86.17" */
  wire [31:0] rdata_b_ext;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:85.17" */
  wire [31:0] rdata_h_ext;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:72.17" */
  wire [1:0] rdata_offset_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:71.17" */
  wire [23:0] rdata_q;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:70.17" */
  wire rdata_update;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:84.17" */
  wire [31:0] rdata_w_ext;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:19.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:88.17" */
  wire split_misaligned_access;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:56.24" */
  output store_err_o;
  wire store_err_o;
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.13-112.33" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(handle_misaligned_q),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:437.25-437.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(data_err_i),
    .Y(\$103y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:439.26-439.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(data_we_q),
    .Y(\$104y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(rst_ni),
    .Y(\$122y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:470.31-470.53" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(lsu_err_q),
    .B(data_err_i),
    .Y(\$124y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:470.31-470.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$125  (
    .A(\$124y ),
    .B(pmp_err_q),
    .Y(\$125y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:471.32-471.57" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(data_rvalid_i),
    .B(pmp_err_q),
    .Y(\$126y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:471.62-471.79" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$127  (
    .A(ls_fsm_cs),
    .Y(\$127y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:471.31-471.80" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(\$126y ),
    .B(\$127y ),
    .Y(\$128y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.32-472.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(ls_fsm_cs),
    .Y(\$129y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(rst_ni),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.31-472.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$130  (
    .A(\$129y ),
    .B(data_rvalid_i),
    .Y(\$130y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.69-472.85" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(data_or_pmp_err),
    .Y(\$131y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.31-472.85" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(\$130y ),
    .B(\$131y ),
    .Y(\$132y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.88-472.98" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$133  (
    .A(data_we_q),
    .Y(\$133y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:472.31-472.98" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(\$132y ),
    .B(\$133y ),
    .Y(\$134y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:490.44-490.54" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$135  (
    .A(data_we_q),
    .Y(\$135y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:490.26-490.54" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(data_or_pmp_err),
    .B(\$135y ),
    .Y(\$136y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:490.26-490.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(\$136y ),
    .B(lsu_resp_valid_o),
    .Y(\$137y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:491.26-491.54" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(data_or_pmp_err),
    .B(data_we_q),
    .Y(\$138y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:491.26-491.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(\$138y ),
    .B(lsu_resp_valid_o),
    .Y(\$139y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:493.20-493.37" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$140  (
    .A(ls_fsm_cs),
    .Y(\$140y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:208.24-208.73" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$23  (
    .A(data_addr),
    .B(data_addr_w_aligned),
    .S(addr_incr_req_o),
    .Y(\$23y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(rst_ni),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:237.13-237.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(data_sign_ext_q),
    .Y(\$31y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:245.13-245.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(data_sign_ext_q),
    .Y(\$33y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:253.13-253.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(data_sign_ext_q),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.13-261.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(data_sign_ext_q),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:276.13-276.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(data_sign_ext_q),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:284.13-284.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(data_sign_ext_q),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:292.13-292.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(data_sign_ext_q),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.13-300.29" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(data_sign_ext_q),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.13-132.33" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(handle_misaligned_q),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:327.9-327.28" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(lsu_type_i),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:327.34-327.54" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(data_offset),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:327.8-327.55" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:328.9-328.28" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(lsu_type_i),
    .B(2'h1),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:328.34-328.54" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:328.8-328.55" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(\$55y ),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:327.7-328.56" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$54y ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:355.26-355.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(lsu_we_i),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:362.35-362.83" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$61  (
    .A(3'h0),
    .B(3'h2),
    .S(split_misaligned_access),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:364.35-364.87" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$62  (
    .A(3'h3),
    .B(3'h1),
    .S(split_misaligned_access),
    .Y(\$62y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.13-375.36" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(data_gnt_i),
    .B(pmp_err_q),
    .Y(\$76y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.13-390.39" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(data_rvalid_i),
    .B(pmp_err_q),
    .Y(\$81y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:394.23-394.45" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(data_err_i),
    .B(pmp_err_q),
    .Y(\$82y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:396.26-396.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(data_we_q),
    .Y(\$83y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:398.23-398.51" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$84  (
    .A(3'h3),
    .B(3'h0),
    .S(data_gnt_i),
    .Y(\$84y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:400.40-400.62" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$85  (
    .A(data_err_i),
    .B(pmp_err_q),
    .Y(\$85y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:400.38-400.63" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(\$85y ),
    .Y(\$86y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:400.25-400.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(data_gnt_i),
    .B(\$86y ),
    .Y(\$87y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:402.33-402.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(data_gnt_i),
    .Y(\$88y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.13-417.36" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(data_gnt_i),
    .B(pmp_err_q),
    .Y(\$97y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:420.33-420.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(lsu_err_q),
    .Y(\$98y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:210.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$addr_last_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$addr_last_q$27 ),
    .Q(addr_last_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:190.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$data_sign_ext_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$data_sign_ext_q$21 ),
    .Q(data_sign_ext_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:190.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$data_type_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$data_type_q$20 ),
    .Q(data_type_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:190.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$data_we_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$data_we_q$22 ),
    .Q(data_we_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:452.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$handle_misaligned_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(handle_misaligned_d),
    .Q(handle_misaligned_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:452.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$ls_fsm_cs  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ls_fsm_ns),
    .Q(ls_fsm_cs)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:452.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$lsu_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(lsu_err_d),
    .Q(lsu_err_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:452.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$pmp_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(pmp_err_d),
    .Q(pmp_err_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:190.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$rdata_offset_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_offset_q$19 ),
    .Q(rdata_offset_q)
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:181.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd24)
  ) \$driver$rdata_q  (
    .AD(24'h000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rdata_q$15 ),
    .Q(rdata_q)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10001  (
    .A(1'hx),
    .B(\$procmux$9999_Y ),
    .S(\$procmux$10002_CMP ),
    .Y(\$procmux$10001_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10002_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10002_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10008  (
    .A(\$ls_fsm_ns$90 ),
    .B(\$84y ),
    .S(\$procmux$10009_CMP ),
    .Y(\$procmux$10008_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10010  (
    .A(3'hx),
    .B(\$procmux$10008_Y ),
    .S(\$procmux$10011_CMP ),
    .Y(\$procmux$10010_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10011_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10011_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10017  (
    .A(\$handle_misaligned_d$89 ),
    .B(\$88y ),
    .S(\$procmux$10018_CMP ),
    .Y(\$procmux$10017_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10019  (
    .A(1'hx),
    .B(\$procmux$10017_Y ),
    .S(\$procmux$10020_CMP ),
    .Y(\$procmux$10019_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10020_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10020_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10025  (
    .A(lsu_err_q),
    .B(\$82y ),
    .S(\$procmux$10026_CMP ),
    .Y(\$procmux$10025_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10027  (
    .A(1'hx),
    .B(\$procmux$10025_Y ),
    .S(\$procmux$10028_CMP ),
    .Y(\$procmux$10027_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10028_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10028_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10033  (
    .A(pmp_err_q),
    .B(data_pmp_err_i),
    .S(\$procmux$10034_CMP ),
    .Y(\$procmux$10033_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10035  (
    .A(1'hx),
    .B(\$procmux$10033_Y ),
    .S(\$procmux$10036_CMP ),
    .Y(\$procmux$10035_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10036_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10036_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10041  (
    .A(1'h0),
    .B(\$83y ),
    .S(\$procmux$10042_CMP ),
    .Y(\$procmux$10041_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10043  (
    .A(1'hx),
    .B(\$procmux$10041_Y ),
    .S(\$procmux$10044_CMP ),
    .Y(\$procmux$10043_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10044_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10044_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10049  (
    .A(1'h0),
    .B(\$87y ),
    .S(\$procmux$10050_CMP ),
    .Y(\$procmux$10049_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10051  (
    .A(1'hx),
    .B(\$procmux$10049_Y ),
    .S(\$procmux$10052_CMP ),
    .Y(\$procmux$10051_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10052_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10052_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.38-380.12|rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10057  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .S(\$procmux$10058_CMP ),
    .Y(\$procmux$10057_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10059  (
    .A(3'hx),
    .B(\$procmux$10057_Y ),
    .S(\$procmux$10060_CMP ),
    .Y(\$procmux$10059_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10060_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10060_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.38-380.12|rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10065  (
    .A(handle_misaligned_q),
    .B(1'h1),
    .S(\$procmux$10066_CMP ),
    .Y(\$procmux$10065_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10067  (
    .A(1'hx),
    .B(\$procmux$10065_Y ),
    .S(\$procmux$10068_CMP ),
    .Y(\$procmux$10067_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10068_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10068_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.38-380.12|rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10073  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10074_CMP ),
    .Y(\$procmux$10073_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10075  (
    .A(1'hx),
    .B(\$procmux$10073_Y ),
    .S(\$procmux$10076_CMP ),
    .Y(\$procmux$10075_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10076_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10076_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:375.38-380.12|rtl/cve2/cve2_load_store_unit.sv:375.9-380.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10081  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10082_CMP ),
    .Y(\$procmux$10081_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10083  (
    .A(1'hx),
    .B(\$procmux$10081_Y ),
    .S(\$procmux$10084_CMP ),
    .Y(\$procmux$10083_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10084_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10084_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$10087  (
    .A(3'h0),
    .B({ \$ls_fsm_ns$72 , \$ls_fsm_ns$80 , \$ls_fsm_ns$96 , \$ls_fsm_ns$102 , \$ls_fsm_ns$109  }),
    .S({ \$procmux$10096_CMP , \$procmux$10094_CMP , \$procmux$10092_CMP , \$procmux$10090_CMP , \$procmux$10088_CMP  }),
    .Y(\$procmux$10087_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10088_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10088_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10090_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10090_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10092_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10092_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10094_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10094_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10096_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10096_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.27-363.14|rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10103  (
    .A(\$62y ),
    .B(\$61y ),
    .S(\$procmux$10104_CMP ),
    .Y(\$procmux$10103_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10105  (
    .A(3'hx),
    .B(\$procmux$10103_Y ),
    .S(\$procmux$10106_CMP ),
    .Y(\$procmux$10105_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10107  (
    .A(3'hx),
    .B(\$procmux$10105_Y ),
    .S(\$procmux$10108_CMP ),
    .Y(\$procmux$10107_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10108_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10108_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.27-363.14|rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10115  (
    .A(handle_misaligned_q),
    .B(\$58y ),
    .S(\$procmux$10116_CMP ),
    .Y(\$procmux$10115_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10117  (
    .A(1'hx),
    .B(\$procmux$10115_Y ),
    .S(\$procmux$10118_CMP ),
    .Y(\$procmux$10117_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10119  (
    .A(1'hx),
    .B(\$procmux$10117_Y ),
    .S(\$procmux$10120_CMP ),
    .Y(\$procmux$10119_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10120_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10120_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.27-363.14|rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10127  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10128_CMP ),
    .Y(\$procmux$10127_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10129  (
    .A(1'hx),
    .B(\$procmux$10127_Y ),
    .S(\$procmux$10130_CMP ),
    .Y(\$procmux$10129_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10131  (
    .A(1'hx),
    .B(\$procmux$10129_Y ),
    .S(\$procmux$10132_CMP ),
    .Y(\$procmux$10131_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10132_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10132_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:358.27-363.14|rtl/cve2/cve2_load_store_unit.sv:358.11-365.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10139  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10140_CMP ),
    .Y(\$procmux$10139_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10141  (
    .A(1'hx),
    .B(\$procmux$10139_Y ),
    .S(\$procmux$10142_CMP ),
    .Y(\$procmux$10141_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10143  (
    .A(1'hx),
    .B(\$procmux$10141_Y ),
    .S(\$procmux$10144_CMP ),
    .Y(\$procmux$10143_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10144_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10144_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10151  (
    .A(1'h0),
    .B(lsu_we_i),
    .S(\$procmux$10152_CMP ),
    .Y(\$procmux$10151_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10153  (
    .A(1'hx),
    .B(\$procmux$10151_Y ),
    .S(\$procmux$10154_CMP ),
    .Y(\$procmux$10153_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10154_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10154_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10161  (
    .A(1'h0),
    .B(\$60y ),
    .S(\$procmux$10162_CMP ),
    .Y(\$procmux$10161_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10163  (
    .A(1'hx),
    .B(\$procmux$10161_Y ),
    .S(\$procmux$10164_CMP ),
    .Y(\$procmux$10163_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10164_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10164_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10171  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10172_CMP ),
    .Y(\$procmux$10171_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10173  (
    .A(1'hx),
    .B(\$procmux$10171_Y ),
    .S(\$procmux$10174_CMP ),
    .Y(\$procmux$10173_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10174_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10174_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10181  (
    .A(ls_fsm_cs),
    .B(\$ls_fsm_ns$66 ),
    .S(\$procmux$10182_CMP ),
    .Y(\$procmux$10181_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10183  (
    .A(3'hx),
    .B(\$procmux$10181_Y ),
    .S(\$procmux$10184_CMP ),
    .Y(\$procmux$10183_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10184_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10184_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10191  (
    .A(lsu_err_q),
    .B(1'h0),
    .S(\$procmux$10192_CMP ),
    .Y(\$procmux$10191_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10193  (
    .A(1'hx),
    .B(\$procmux$10191_Y ),
    .S(\$procmux$10194_CMP ),
    .Y(\$procmux$10193_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10194_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10194_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10201  (
    .A(1'h0),
    .B(data_pmp_err_i),
    .S(\$procmux$10202_CMP ),
    .Y(\$procmux$10201_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10203  (
    .A(1'hx),
    .B(\$procmux$10201_Y ),
    .S(\$procmux$10204_CMP ),
    .Y(\$procmux$10203_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10204_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10204_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10211  (
    .A(handle_misaligned_q),
    .B(\$handle_misaligned_d$65 ),
    .S(\$procmux$10212_CMP ),
    .Y(\$procmux$10211_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10213  (
    .A(1'hx),
    .B(\$procmux$10211_Y ),
    .S(\$procmux$10214_CMP ),
    .Y(\$procmux$10213_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10214_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10214_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10221  (
    .A(1'h0),
    .B(\$ctrl_update$64 ),
    .S(\$procmux$10222_CMP ),
    .Y(\$procmux$10221_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10223  (
    .A(1'hx),
    .B(\$procmux$10221_Y ),
    .S(\$procmux$10224_CMP ),
    .Y(\$procmux$10223_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10224_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10224_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:351.24-366.12|rtl/cve2/cve2_load_store_unit.sv:351.9-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10231  (
    .A(1'h0),
    .B(\$addr_update$63 ),
    .S(\$procmux$10232_CMP ),
    .Y(\$procmux$10231_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10233  (
    .A(1'hx),
    .B(\$procmux$10231_Y ),
    .S(\$procmux$10234_CMP ),
    .Y(\$procmux$10233_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10234_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10234_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10241  (
    .A(1'h0),
    .B(\$perf_store_o$75 ),
    .S(\$procmux$10242_CMP ),
    .Y(\$procmux$10241_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10242_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10242_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10249  (
    .A(1'h0),
    .B(\$perf_load_o$74 ),
    .S(\$procmux$10250_CMP ),
    .Y(\$procmux$10249_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10250_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10250_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$10253  (
    .A(1'h0),
    .B({ 1'h1, handle_misaligned_q, 1'h1 }),
    .S({ \$procmux$10258_CMP , \$procmux$10256_CMP , \$procmux$10254_CMP  }),
    .Y(\$procmux$10253_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10254_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10254_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10256_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10256_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10258_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10258_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$10262  (
    .A(1'h0),
    .B({ \$data_req_o$73 , 3'h7 }),
    .S({ \$procmux$10269_CMP , \$procmux$10267_CMP , \$procmux$10265_CMP , \$procmux$10263_CMP  }),
    .Y(\$procmux$10262_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10263_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10263_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10265_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10265_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10267_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10267_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10269_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10269_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$10272  (
    .A(lsu_err_q),
    .B({ \$lsu_err_d$71 , \$lsu_err_d$95 , \$lsu_err_d$108  }),
    .S({ \$procmux$10277_CMP , \$procmux$10275_CMP , \$procmux$10273_CMP  }),
    .Y(\$procmux$10272_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10273_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10273_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10275_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10275_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10277_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10277_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$10280  (
    .A(pmp_err_q),
    .B({ \$pmp_err_d$70 , \$pmp_err_d$94 , \$pmp_err_d$107  }),
    .S({ \$procmux$10285_CMP , \$procmux$10283_CMP , \$procmux$10281_CMP  }),
    .Y(\$procmux$10280_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10281_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10281_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10283_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10283_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10285_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10285_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$10289  (
    .A(handle_misaligned_q),
    .B({ \$handle_misaligned_d$69 , \$handle_misaligned_d$79 , \$handle_misaligned_d$93 , \$handle_misaligned_d$101  }),
    .S({ \$procmux$10296_CMP , \$procmux$10294_CMP , \$procmux$10292_CMP , \$procmux$10290_CMP  }),
    .Y(\$procmux$10289_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10290_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10290_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10292_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10292_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10294_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10294_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10296_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10296_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$10299  (
    .A(1'h0),
    .B({ \$rdata_update$92 , \$rdata_update$106  }),
    .S({ \$procmux$10302_CMP , \$procmux$10300_CMP  }),
    .Y(\$procmux$10299_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10300_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10300_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10302_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10302_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$10306  (
    .A(1'h0),
    .B({ \$ctrl_update$68 , \$ctrl_update$78 , \$ctrl_update$100  }),
    .S({ \$procmux$10311_CMP , \$procmux$10309_CMP , \$procmux$10307_CMP  }),
    .Y(\$procmux$10306_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10307_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10307_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10309_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10309_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10311_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10311_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$10314  (
    .A(1'h0),
    .B({ \$addr_update$67 , \$addr_update$77 , \$addr_update$91 , \$addr_update$99 , \$addr_update$105  }),
    .S({ \$procmux$10323_CMP , \$procmux$10321_CMP , \$procmux$10319_CMP , \$procmux$10317_CMP , \$procmux$10315_CMP  }),
    .Y(\$procmux$10314_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10315_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$10315_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10317_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$10317_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10319_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$10319_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:369.21-381.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10321_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h1),
    .Y(\$procmux$10321_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:349.13-367.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$10323_CMP0  (
    .A(ls_fsm_cs),
    .Y(\$procmux$10323_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:316.20-316.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$10324  (
    .A(32'hxxxxxxxx),
    .B({ \$rdata_w_ext$29 , \$rdata_h_ext$39 , \$rdata_b_ext$49  }),
    .S({ \$procmux$10327_CMP , \$procmux$10326_CMP , \$procmux$10325_CTRL  }),
    .Y(\$procmux$10324_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:316.20-316.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10325_ANY  (
    .A(\$procmux$10325_CMP ),
    .Y(\$procmux$10325_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:316.20-316.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10325_CMP0  (
    .A(data_type_q),
    .B(2'h2),
    .Y(\$procmux$10325_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:316.20-316.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10325_CMP1  (
    .A(data_type_q),
    .B(2'h3),
    .Y(\$procmux$10325_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:315.20-315.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10326_CMP0  (
    .A(data_type_q),
    .B(2'h1),
    .Y(\$procmux$10326_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:314.20-314.49|rtl/cve2/cve2_load_store_unit.sv:313.5-318.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10327_CMP0  (
    .A(data_type_q),
    .Y(\$procmux$10327_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:301.11-301.60|rtl/cve2/cve2_load_store_unit.sv:300.9-304.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10329  (
    .A({ 24'h000000, data_rdata_i[31:24] }),
    .B({ data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31:24] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10329_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.9-304.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10331  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10329_Y ),
    .S(\$procmux$10332_CMP ),
    .Y(\$procmux$10331_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.9-304.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10332_CMP0  (
    .A(rdata_offset_q),
    .B(2'h3),
    .Y(\$procmux$10332_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:293.11-293.60|rtl/cve2/cve2_load_store_unit.sv:292.9-296.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10335  (
    .A({ 24'h000000, data_rdata_i[23:16] }),
    .B({ data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23:16] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10335_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:292.9-296.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10337  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10335_Y ),
    .S(\$procmux$10338_CMP ),
    .Y(\$procmux$10337_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:292.9-296.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10338_CMP0  (
    .A(rdata_offset_q),
    .B(2'h2),
    .Y(\$procmux$10338_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:285.11-285.59|rtl/cve2/cve2_load_store_unit.sv:284.9-288.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10342  (
    .A({ 24'h000000, data_rdata_i[15:8] }),
    .B({ data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15:8] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10342_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:284.9-288.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10344  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10342_Y ),
    .S(\$procmux$10345_CMP ),
    .Y(\$procmux$10344_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:284.9-288.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10345_CMP0  (
    .A(rdata_offset_q),
    .B(2'h1),
    .Y(\$procmux$10345_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.9-304.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10347  (
    .A(32'hxxxxxxxx),
    .B({ \$rdata_b_ext$42 , \$rdata_b_ext$44 , \$rdata_b_ext$46 , \$rdata_b_ext$48  }),
    .S({ \$procmux$10354_CMP , \$procmux$10352_CMP , \$procmux$10350_CMP , \$procmux$10348_CMP  }),
    .Y(\$procmux$10347_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:300.9-304.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10348_CMP0  (
    .A(rdata_offset_q),
    .B(2'h3),
    .Y(\$procmux$10348_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:292.9-296.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10350_CMP0  (
    .A(rdata_offset_q),
    .B(2'h2),
    .Y(\$procmux$10350_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:284.9-288.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10352_CMP0  (
    .A(rdata_offset_q),
    .B(2'h1),
    .Y(\$procmux$10352_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:276.9-280.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10354_CMP0  (
    .A(rdata_offset_q),
    .Y(\$procmux$10354_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:277.11-277.58|rtl/cve2/cve2_load_store_unit.sv:276.9-280.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10359  (
    .A({ 24'h000000, data_rdata_i[7:0] }),
    .B({ data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7:0] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10359_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:276.9-280.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10361  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10359_Y ),
    .S(\$procmux$10362_CMP ),
    .Y(\$procmux$10361_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:276.9-280.12|rtl/cve2/cve2_load_store_unit.sv:274.5-308.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10362_CMP0  (
    .A(rdata_offset_q),
    .Y(\$procmux$10362_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:262.11-262.71|rtl/cve2/cve2_load_store_unit.sv:261.9-265.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10364  (
    .A({ 16'h0000, data_rdata_i[7:0], rdata_q[23:16] }),
    .B({ data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7], data_rdata_i[7:0], rdata_q[23:16] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10364_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.9-265.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10366  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10364_Y ),
    .S(\$procmux$10367_CMP ),
    .Y(\$procmux$10366_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.9-265.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10367_CMP0  (
    .A(rdata_offset_q),
    .B(2'h3),
    .Y(\$procmux$10367_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:254.11-254.57|rtl/cve2/cve2_load_store_unit.sv:253.9-257.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10370  (
    .A({ 16'h0000, data_rdata_i[31:16] }),
    .B({ data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31], data_rdata_i[31:16] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10370_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:253.9-257.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10372  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10370_Y ),
    .S(\$procmux$10373_CMP ),
    .Y(\$procmux$10372_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:253.9-257.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10373_CMP0  (
    .A(rdata_offset_q),
    .B(2'h2),
    .Y(\$procmux$10373_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:246.11-246.56|rtl/cve2/cve2_load_store_unit.sv:245.9-249.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10377  (
    .A({ 16'h0000, data_rdata_i[23:8] }),
    .B({ data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23], data_rdata_i[23:8] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10377_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:245.9-249.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10379  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10377_Y ),
    .S(\$procmux$10380_CMP ),
    .Y(\$procmux$10379_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:245.9-249.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10380_CMP0  (
    .A(rdata_offset_q),
    .B(2'h1),
    .Y(\$procmux$10380_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.9-265.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10382  (
    .A(32'hxxxxxxxx),
    .B({ \$rdata_h_ext$32 , \$rdata_h_ext$34 , \$rdata_h_ext$36 , \$rdata_h_ext$38  }),
    .S({ \$procmux$10389_CMP , \$procmux$10387_CMP , \$procmux$10385_CMP , \$procmux$10383_CMP  }),
    .Y(\$procmux$10382_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:261.9-265.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10383_CMP0  (
    .A(rdata_offset_q),
    .B(2'h3),
    .Y(\$procmux$10383_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:253.9-257.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10385_CMP0  (
    .A(rdata_offset_q),
    .B(2'h2),
    .Y(\$procmux$10385_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:245.9-249.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10387_CMP0  (
    .A(rdata_offset_q),
    .B(2'h1),
    .Y(\$procmux$10387_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:237.9-241.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10389_CMP0  (
    .A(rdata_offset_q),
    .Y(\$procmux$10389_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:238.11-238.56|rtl/cve2/cve2_load_store_unit.sv:237.9-241.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10394  (
    .A({ 16'h0000, data_rdata_i[15:0] }),
    .B({ data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15], data_rdata_i[15:0] }),
    .S(data_sign_ext_q),
    .Y(\$procmux$10394_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:237.9-241.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10396  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10394_Y ),
    .S(\$procmux$10397_CMP ),
    .Y(\$procmux$10396_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:237.9-241.12|rtl/cve2/cve2_load_store_unit.sv:235.5-269.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10397_CMP0  (
    .A(rdata_offset_q),
    .Y(\$procmux$10397_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:224.16-224.67|rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10398  (
    .A(32'hxxxxxxxx),
    .B({ data_rdata_i, data_rdata_i[7:0], rdata_q, data_rdata_i[15:0], rdata_q[23:8], data_rdata_i[23:0], rdata_q[23:16] }),
    .S({ \$procmux$10402_CMP , \$procmux$10401_CMP , \$procmux$10400_CMP , \$procmux$10399_CMP  }),
    .Y(\$procmux$10398_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:224.16-224.67|rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10399_CMP0  (
    .A(rdata_offset_q),
    .B(2'h3),
    .Y(\$procmux$10399_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:223.16-223.67|rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10400_CMP0  (
    .A(rdata_offset_q),
    .B(2'h2),
    .Y(\$procmux$10400_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:222.16-222.66|rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10401_CMP0  (
    .A(rdata_offset_q),
    .B(2'h1),
    .Y(\$procmux$10401_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:221.16-221.50|rtl/cve2/cve2_load_store_unit.sv:220.5-226.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10402_CMP0  (
    .A(rdata_offset_q),
    .Y(\$procmux$10402_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:214.7-214.34|rtl/cve2/cve2_load_store_unit.sv:213.14-215.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10403  (
    .A(addr_last_q),
    .B(\$23y ),
    .S(\$procmux$10404_CMP ),
    .Y(\$procmux$10403_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.31-201.8|rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10405  (
    .A(data_we_q),
    .B(lsu_we_i),
    .S(\$procmux$10406_CMP ),
    .Y(\$procmux$10405_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.31-201.8|rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10407  (
    .A(data_sign_ext_q),
    .B(lsu_sign_ext_i),
    .S(\$procmux$10408_CMP ),
    .Y(\$procmux$10407_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.31-201.8|rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10409  (
    .A(data_type_q),
    .B(lsu_type_i),
    .S(\$procmux$10410_CMP ),
    .Y(\$procmux$10409_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:196.31-201.8|rtl/cve2/cve2_load_store_unit.sv:196.14-201.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10411  (
    .A(rdata_offset_q),
    .B(adder_result_ex_i[1:0]),
    .S(\$procmux$10412_CMP ),
    .Y(\$procmux$10411_Y )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:185.7-185.37|rtl/cve2/cve2_load_store_unit.sv:184.14-186.8" */
  \$mux  #(
    .WIDTH(32'd24)
  ) \$procmux$10413  (
    .A(rdata_q),
    .B(data_rdata_i[31:8]),
    .S(\$procmux$10414_CMP ),
    .Y(\$procmux$10413_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:171.16-171.69|rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd32)
  ) \$procmux$10415  (
    .A(32'hxxxxxxxx),
    .B({ lsu_wdata_i, lsu_wdata_i[23:0], lsu_wdata_i[31:24], lsu_wdata_i[15:0], lsu_wdata_i[31:16], lsu_wdata_i[7:0], lsu_wdata_i[31:8] }),
    .S({ \$procmux$10419_CMP , \$procmux$10418_CMP , \$procmux$10417_CMP , \$procmux$10416_CMP  }),
    .Y(\$procmux$10415_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:171.16-171.69|rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10416_CMP0  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$procmux$10416_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:170.16-170.69|rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10417_CMP0  (
    .A(data_offset),
    .B(2'h2),
    .Y(\$procmux$10417_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:169.16-169.69|rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10418_CMP0  (
    .A(data_offset),
    .B(2'h1),
    .Y(\$procmux$10418_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:168.16-168.48|rtl/cve2/cve2_load_store_unit.sv:167.5-173.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10419_CMP0  (
    .A(data_offset),
    .Y(\$procmux$10419_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:151.20-151.38|rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd4)
  ) \$procmux$10420  (
    .A(4'hx),
    .B(16'h1248),
    .S({ \$procmux$10424_CMP , \$procmux$10423_CMP , \$procmux$10422_CMP , \$procmux$10421_CMP  }),
    .Y(\$procmux$10420_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:151.20-151.38|rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10421_CMP0  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$procmux$10421_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:150.20-150.38|rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10422_CMP0  (
    .A(data_offset),
    .B(2'h2),
    .Y(\$procmux$10422_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:149.20-149.38|rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10423_CMP0  (
    .A(data_offset),
    .B(2'h1),
    .Y(\$procmux$10423_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:148.20-148.38|rtl/cve2/cve2_load_store_unit.sv:147.9-153.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10424_CMP0  (
    .A(data_offset),
    .Y(\$procmux$10424_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10425  (
    .A(4'hx),
    .B(\$procmux$10420_Y ),
    .S(\$procmux$10426_CTRL ),
    .Y(\$procmux$10425_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10426_ANY  (
    .A(\$procmux$10426_CMP ),
    .Y(\$procmux$10426_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10426_CMP0  (
    .A(lsu_type_i),
    .B(2'h2),
    .Y(\$procmux$10426_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10426_CMP1  (
    .A(lsu_type_i),
    .B(2'h3),
    .Y(\$procmux$10426_CMP [1])
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:133.11-139.18|rtl/cve2/cve2_load_store_unit.sv:132.9-142.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10430  (
    .A(\$data_be$6 ),
    .B(4'h1),
    .S(handle_misaligned_q),
    .Y(\$procmux$10430_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10432  (
    .A(4'hx),
    .B(\$procmux$10430_Y ),
    .S(\$procmux$10433_CMP ),
    .Y(\$procmux$10432_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10433_CMP0  (
    .A(lsu_type_i),
    .B(2'h1),
    .Y(\$procmux$10433_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:137.22-137.40|rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd4)
  ) \$procmux$10436  (
    .A(4'hx),
    .B(16'h36c8),
    .S({ \$procmux$10440_CMP , \$procmux$10439_CMP , \$procmux$10438_CMP , \$procmux$10437_CMP  }),
    .Y(\$procmux$10436_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:137.22-137.40|rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10437_CMP0  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$procmux$10437_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:136.22-136.40|rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10438_CMP0  (
    .A(data_offset),
    .B(2'h2),
    .Y(\$procmux$10438_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:135.22-135.40|rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10439_CMP0  (
    .A(data_offset),
    .B(2'h1),
    .Y(\$procmux$10439_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:134.22-134.40|rtl/cve2/cve2_load_store_unit.sv:133.11-139.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10440_CMP0  (
    .A(data_offset),
    .Y(\$procmux$10440_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:133.11-139.18|rtl/cve2/cve2_load_store_unit.sv:132.9-142.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10441  (
    .A(\$procmux$10436_Y ),
    .B(4'hx),
    .S(handle_misaligned_q),
    .Y(\$procmux$10441_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10443  (
    .A(4'hx),
    .B(\$procmux$10441_Y ),
    .S(\$procmux$10444_CMP ),
    .Y(\$procmux$10443_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10444_CMP0  (
    .A(lsu_type_i),
    .B(2'h1),
    .Y(\$procmux$10444_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd4)
  ) \$procmux$10446  (
    .A(4'hx),
    .B({ \$data_be$4 , \$data_be$7 , \$data_be$8  }),
    .S({ \$procmux$10451_CMP , \$procmux$10449_CMP , \$procmux$10447_CTRL  }),
    .Y(\$procmux$10446_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10447_ANY  (
    .A(\$procmux$10447_CMP ),
    .Y(\$procmux$10447_CTRL )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10447_CMP0  (
    .A(lsu_type_i),
    .B(2'h2),
    .Y(\$procmux$10447_CMP [0])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:147.9-153.16|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10447_CMP1  (
    .A(lsu_type_i),
    .B(2'h3),
    .Y(\$procmux$10447_CMP [1])
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:132.9-142.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10449_CMP0  (
    .A(lsu_type_i),
    .B(2'h1),
    .Y(\$procmux$10449_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10451_CMP0  (
    .A(lsu_type_i),
    .Y(\$procmux$10451_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:125.22-125.40|rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd4)
  ) \$procmux$10454  (
    .A(4'hx),
    .B(16'h0137),
    .S({ \$procmux$10458_CMP , \$procmux$10457_CMP , \$procmux$10456_CMP , \$procmux$10455_CMP  }),
    .Y(\$procmux$10454_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:125.22-125.40|rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10455_CMP0  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$procmux$10455_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:124.22-124.40|rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10456_CMP0  (
    .A(data_offset),
    .B(2'h2),
    .Y(\$procmux$10456_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:123.22-123.40|rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10457_CMP0  (
    .A(data_offset),
    .B(2'h1),
    .Y(\$procmux$10457_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:122.22-122.40|rtl/cve2/cve2_load_store_unit.sv:121.11-127.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10458_CMP0  (
    .A(data_offset),
    .Y(\$procmux$10458_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:113.11-119.18|rtl/cve2/cve2_load_store_unit.sv:112.9-128.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10460  (
    .A(4'hx),
    .B(\$procmux$10454_Y ),
    .S(handle_misaligned_q),
    .Y(\$procmux$10460_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10462  (
    .A(4'hx),
    .B(\$procmux$10460_Y ),
    .S(\$procmux$10463_CMP ),
    .Y(\$procmux$10462_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10463_CMP0  (
    .A(lsu_type_i),
    .Y(\$procmux$10463_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:113.11-119.18|rtl/cve2/cve2_load_store_unit.sv:112.9-128.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10469  (
    .A(\$data_be$2 ),
    .B(\$data_be$3 ),
    .S(handle_misaligned_q),
    .Y(\$procmux$10469_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10471  (
    .A(4'hx),
    .B(\$procmux$10469_Y ),
    .S(\$procmux$10472_CMP ),
    .Y(\$procmux$10471_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10472_CMP0  (
    .A(lsu_type_i),
    .Y(\$procmux$10472_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:117.22-117.40|rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd4)
  ) \$procmux$10476  (
    .A(4'hx),
    .B(16'hfec8),
    .S({ \$procmux$10480_CMP , \$procmux$10479_CMP , \$procmux$10478_CMP , \$procmux$10477_CMP  }),
    .Y(\$procmux$10476_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:117.22-117.40|rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10477_CMP0  (
    .A(data_offset),
    .B(2'h3),
    .Y(\$procmux$10477_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:116.22-116.40|rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10478_CMP0  (
    .A(data_offset),
    .B(2'h2),
    .Y(\$procmux$10478_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:115.22-115.40|rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10479_CMP0  (
    .A(data_offset),
    .B(2'h1),
    .Y(\$procmux$10479_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:114.22-114.40|rtl/cve2/cve2_load_store_unit.sv:113.11-119.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10480_CMP0  (
    .A(data_offset),
    .Y(\$procmux$10480_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:113.11-119.18|rtl/cve2/cve2_load_store_unit.sv:112.9-128.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10481  (
    .A(\$procmux$10476_Y ),
    .B(4'hx),
    .S(handle_misaligned_q),
    .Y(\$procmux$10481_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$10483  (
    .A(4'hx),
    .B(\$procmux$10481_Y ),
    .S(\$procmux$10484_CMP ),
    .Y(\$procmux$10483_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:112.9-128.12|rtl/cve2/cve2_load_store_unit.sv:110.5-157.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$10484_CMP0  (
    .A(lsu_type_i),
    .Y(\$procmux$10484_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.28-442.12|rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9935  (
    .A(ls_fsm_cs),
    .B(3'h0),
    .S(\$procmux$9936_CMP ),
    .Y(\$procmux$9935_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9937  (
    .A(3'hx),
    .B(\$procmux$9935_Y ),
    .S(\$procmux$9938_CMP ),
    .Y(\$procmux$9937_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9938_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$9938_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.28-442.12|rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9940  (
    .A(lsu_err_q),
    .B(data_err_i),
    .S(\$procmux$9941_CMP ),
    .Y(\$procmux$9940_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9942  (
    .A(1'hx),
    .B(\$procmux$9940_Y ),
    .S(\$procmux$9943_CMP ),
    .Y(\$procmux$9942_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9943_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$9943_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.28-442.12|rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9945  (
    .A(pmp_err_q),
    .B(data_pmp_err_i),
    .S(\$procmux$9946_CMP ),
    .Y(\$procmux$9945_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9947  (
    .A(1'hx),
    .B(\$procmux$9945_Y ),
    .S(\$procmux$9948_CMP ),
    .Y(\$procmux$9947_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9948_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$9948_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.28-442.12|rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9950  (
    .A(1'h0),
    .B(\$104y ),
    .S(\$procmux$9951_CMP ),
    .Y(\$procmux$9950_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9952  (
    .A(1'hx),
    .B(\$procmux$9950_Y ),
    .S(\$procmux$9953_CMP ),
    .Y(\$procmux$9952_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9953_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$9953_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:431.28-442.12|rtl/cve2/cve2_load_store_unit.sv:431.9-442.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9955  (
    .A(1'h0),
    .B(\$103y ),
    .S(\$procmux$9956_CMP ),
    .Y(\$procmux$9955_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9957  (
    .A(1'hx),
    .B(\$procmux$9955_Y ),
    .S(\$procmux$9958_CMP ),
    .Y(\$procmux$9957_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:426.34-443.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9958_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .Y(\$procmux$9958_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.38-423.12|rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9961  (
    .A(ls_fsm_cs),
    .B(3'h0),
    .S(\$procmux$9962_CMP ),
    .Y(\$procmux$9961_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9963  (
    .A(3'hx),
    .B(\$procmux$9961_Y ),
    .S(\$procmux$9964_CMP ),
    .Y(\$procmux$9963_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9964_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$9964_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.38-423.12|rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9967  (
    .A(handle_misaligned_q),
    .B(1'h0),
    .S(\$procmux$9968_CMP ),
    .Y(\$procmux$9967_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9969  (
    .A(1'hx),
    .B(\$procmux$9967_Y ),
    .S(\$procmux$9970_CMP ),
    .Y(\$procmux$9969_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9970_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$9970_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.38-423.12|rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9973  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$9974_CMP ),
    .Y(\$procmux$9973_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9975  (
    .A(1'hx),
    .B(\$procmux$9973_Y ),
    .S(\$procmux$9976_CMP ),
    .Y(\$procmux$9975_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9976_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$9976_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:417.38-423.12|rtl/cve2/cve2_load_store_unit.sv:417.9-423.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9979  (
    .A(1'h0),
    .B(\$98y ),
    .S(\$procmux$9980_CMP ),
    .Y(\$procmux$9979_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9981  (
    .A(1'hx),
    .B(\$procmux$9979_Y ),
    .S(\$procmux$9982_CMP ),
    .Y(\$procmux$9981_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:413.17-424.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9982_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h3),
    .Y(\$procmux$9982_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:405.27-409.14|rtl/cve2/cve2_load_store_unit.sv:405.11-409.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9986  (
    .A(ls_fsm_cs),
    .B(3'h4),
    .S(\$procmux$9987_CMP ),
    .Y(\$procmux$9986_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9989  (
    .A(\$procmux$9986_Y ),
    .B(3'hx),
    .S(\$procmux$9990_CMP ),
    .Y(\$procmux$9989_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9991  (
    .A(3'hx),
    .B(\$procmux$9989_Y ),
    .S(\$procmux$9992_CMP ),
    .Y(\$procmux$9991_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:383.24-411.10|rtl/cve2/cve2_load_store_unit.sv:347.5-448.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$9992_CMP0  (
    .A(ls_fsm_cs),
    .B(3'h2),
    .Y(\$procmux$9992_CMP )
  );
  /* src = "rtl/cve2/cve2_load_store_unit.sv:405.27-409.14|rtl/cve2/cve2_load_store_unit.sv:405.11-409.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9996  (
    .A(handle_misaligned_q),
    .B(1'h0),
    .S(\$procmux$9997_CMP ),
    .Y(\$procmux$9996_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_load_store_unit.sv:390.41-403.12|rtl/cve2/cve2_load_store_unit.sv:390.9-410.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9999  (
    .A(\$procmux$9996_Y ),
    .B(1'hx),
    .S(\$procmux$10000_CMP ),
    .Y(\$procmux$9999_Y )
  );
  assign data_addr = adder_result_ex_i;
  assign data_offset = data_addr[1:0];
  assign data_be = \$data_be$9 ;
  assign data_wdata = \$data_wdata$11 ;
  assign addr_last_d = \$23y ;
  assign rdata_w_ext = \$rdata_w_ext$29 ;
  assign rdata_h_ext = \$rdata_h_ext$39 ;
  assign rdata_b_ext = \$rdata_b_ext$49 ;
  assign data_rdata_ext = \$data_rdata_ext$51 ;
  assign split_misaligned_access = \$58y ;
  assign addr_update = \$addr_update$110 ;
  assign ctrl_update = \$ctrl_update$111 ;
  assign rdata_update = \$rdata_update$112 ;
  assign handle_misaligned_d = \$handle_misaligned_d$113 ;
  assign pmp_err_d = \$pmp_err_d$114 ;
  assign lsu_err_d = \$lsu_err_d$115 ;
  assign ls_fsm_ns = \$ls_fsm_ns$116 ;
  assign data_req_o = \$data_req_o$117 ;
  assign addr_incr_req_o = \$addr_incr_req_o$118 ;
  assign perf_load_o = \$perf_load_o$119 ;
  assign perf_store_o = \$perf_store_o$120 ;
  assign data_or_pmp_err = \$125y ;
  assign lsu_resp_valid_o = \$128y ;
  assign lsu_rdata_valid_o = \$134y ;
  assign lsu_rdata_o = data_rdata_ext;
  assign data_addr_w_aligned = { data_addr[31:2], 2'h0 };
  assign data_addr_o = data_addr_w_aligned;
  assign data_wdata_o = data_wdata;
  assign data_we_o = lsu_we_i;
  assign data_be_o = data_be;
  assign addr_last_o = addr_last_q;
  assign load_err_o = \$137y ;
  assign store_err_o = \$139y ;
  assign busy_o = \$140y ;
  assign \$procmux$9936_CMP  = data_rvalid_i;
  assign \$ls_fsm_ns$109  = \$procmux$9937_Y ;
  assign \$procmux$9941_CMP  = data_rvalid_i;
  assign \$lsu_err_d$108  = \$procmux$9942_Y ;
  assign \$procmux$9946_CMP  = data_rvalid_i;
  assign \$pmp_err_d$107  = \$procmux$9947_Y ;
  assign \$procmux$9951_CMP  = data_rvalid_i;
  assign \$rdata_update$106  = \$procmux$9952_Y ;
  assign \$procmux$9956_CMP  = data_rvalid_i;
  assign \$addr_update$105  = \$procmux$9957_Y ;
  assign \$procmux$9962_CMP  = \$97y ;
  assign \$ls_fsm_ns$102  = \$procmux$9963_Y ;
  assign \$procmux$9968_CMP  = \$97y ;
  assign \$handle_misaligned_d$101  = \$procmux$9969_Y ;
  assign \$procmux$9974_CMP  = \$97y ;
  assign \$ctrl_update$100  = \$procmux$9975_Y ;
  assign \$procmux$9980_CMP  = \$97y ;
  assign \$addr_update$99  = \$procmux$9981_Y ;
  assign \$procmux$9987_CMP  = data_gnt_i;
  assign \$procmux$9990_CMP  = \$81y ;
  assign \$ls_fsm_ns$90  = \$procmux$9991_Y ;
  assign \$procmux$9997_CMP  = data_gnt_i;
  assign \$procmux$10000_CMP  = \$81y ;
  assign \$handle_misaligned_d$89  = \$procmux$10001_Y ;
  assign \$procmux$10009_CMP  = \$81y ;
  assign \$ls_fsm_ns$96  = \$procmux$10010_Y ;
  assign \$procmux$10018_CMP  = \$81y ;
  assign \$handle_misaligned_d$93  = \$procmux$10019_Y ;
  assign \$procmux$10026_CMP  = \$81y ;
  assign \$lsu_err_d$95  = \$procmux$10027_Y ;
  assign \$procmux$10034_CMP  = \$81y ;
  assign \$pmp_err_d$94  = \$procmux$10035_Y ;
  assign \$procmux$10042_CMP  = \$81y ;
  assign \$rdata_update$92  = \$procmux$10043_Y ;
  assign \$procmux$10050_CMP  = \$81y ;
  assign \$addr_update$91  = \$procmux$10051_Y ;
  assign \$procmux$10058_CMP  = \$76y ;
  assign \$ls_fsm_ns$80  = \$procmux$10059_Y ;
  assign \$procmux$10066_CMP  = \$76y ;
  assign \$handle_misaligned_d$79  = \$procmux$10067_Y ;
  assign \$procmux$10074_CMP  = \$76y ;
  assign \$ctrl_update$78  = \$procmux$10075_Y ;
  assign \$procmux$10082_CMP  = \$76y ;
  assign \$addr_update$77  = \$procmux$10083_Y ;
  assign \$ls_fsm_ns$116  = \$procmux$10087_Y ;
  assign \$procmux$10104_CMP  = data_gnt_i;
  assign \$procmux$10106_CMP  = lsu_req_i;
  assign \$ls_fsm_ns$66  = \$procmux$10107_Y ;
  assign \$procmux$10116_CMP  = data_gnt_i;
  assign \$procmux$10118_CMP  = lsu_req_i;
  assign \$handle_misaligned_d$65  = \$procmux$10119_Y ;
  assign \$procmux$10128_CMP  = data_gnt_i;
  assign \$procmux$10130_CMP  = lsu_req_i;
  assign \$ctrl_update$64  = \$procmux$10131_Y ;
  assign \$procmux$10140_CMP  = data_gnt_i;
  assign \$procmux$10142_CMP  = lsu_req_i;
  assign \$addr_update$63  = \$procmux$10143_Y ;
  assign \$procmux$10152_CMP  = lsu_req_i;
  assign \$perf_store_o$75  = \$procmux$10153_Y ;
  assign \$procmux$10162_CMP  = lsu_req_i;
  assign \$perf_load_o$74  = \$procmux$10163_Y ;
  assign \$procmux$10172_CMP  = lsu_req_i;
  assign \$data_req_o$73  = \$procmux$10173_Y ;
  assign \$procmux$10182_CMP  = lsu_req_i;
  assign \$ls_fsm_ns$72  = \$procmux$10183_Y ;
  assign \$procmux$10192_CMP  = lsu_req_i;
  assign \$lsu_err_d$71  = \$procmux$10193_Y ;
  assign \$procmux$10202_CMP  = lsu_req_i;
  assign \$pmp_err_d$70  = \$procmux$10203_Y ;
  assign \$procmux$10212_CMP  = lsu_req_i;
  assign \$handle_misaligned_d$69  = \$procmux$10213_Y ;
  assign \$procmux$10222_CMP  = lsu_req_i;
  assign \$ctrl_update$68  = \$procmux$10223_Y ;
  assign \$procmux$10232_CMP  = lsu_req_i;
  assign \$addr_update$67  = \$procmux$10233_Y ;
  assign \$perf_store_o$120  = \$procmux$10241_Y ;
  assign \$perf_load_o$119  = \$procmux$10249_Y ;
  assign \$addr_incr_req_o$118  = \$procmux$10253_Y ;
  assign \$data_req_o$117  = \$procmux$10262_Y ;
  assign \$lsu_err_d$115  = \$procmux$10272_Y ;
  assign \$pmp_err_d$114  = \$procmux$10280_Y ;
  assign \$handle_misaligned_d$113  = \$procmux$10289_Y ;
  assign \$rdata_update$112  = \$procmux$10299_Y ;
  assign \$ctrl_update$111  = \$procmux$10306_Y ;
  assign \$addr_update$110  = \$procmux$10314_Y ;
  assign \$data_rdata_ext$51  = \$procmux$10324_Y ;
  assign \$procmux$10330_CMP  = \$47y ;
  assign \$rdata_b_ext$48  = \$procmux$10331_Y ;
  assign \$procmux$10336_CMP  = \$45y ;
  assign \$rdata_b_ext$46  = \$procmux$10337_Y ;
  assign \$procmux$10343_CMP  = \$43y ;
  assign \$rdata_b_ext$44  = \$procmux$10344_Y ;
  assign \$rdata_b_ext$49  = \$procmux$10347_Y ;
  assign \$procmux$10360_CMP  = \$41y ;
  assign \$rdata_b_ext$42  = \$procmux$10361_Y ;
  assign \$procmux$10365_CMP  = \$37y ;
  assign \$rdata_h_ext$38  = \$procmux$10366_Y ;
  assign \$procmux$10371_CMP  = \$35y ;
  assign \$rdata_h_ext$36  = \$procmux$10372_Y ;
  assign \$procmux$10378_CMP  = \$33y ;
  assign \$rdata_h_ext$34  = \$procmux$10379_Y ;
  assign \$rdata_h_ext$39  = \$procmux$10382_Y ;
  assign \$procmux$10395_CMP  = \$31y ;
  assign \$rdata_h_ext$32  = \$procmux$10396_Y ;
  assign \$rdata_w_ext$29  = \$procmux$10398_Y ;
  assign \$procmux$10404_CMP  = addr_update;
  assign \$addr_last_q$27  = \$procmux$10403_Y ;
  assign \$procmux$10406_CMP  = ctrl_update;
  assign \$data_we_q$22  = \$procmux$10405_Y ;
  assign \$procmux$10408_CMP  = ctrl_update;
  assign \$data_sign_ext_q$21  = \$procmux$10407_Y ;
  assign \$procmux$10410_CMP  = ctrl_update;
  assign \$data_type_q$20  = \$procmux$10409_Y ;
  assign \$procmux$10412_CMP  = ctrl_update;
  assign \$rdata_offset_q$19  = \$procmux$10411_Y ;
  assign \$procmux$10414_CMP  = rdata_update;
  assign \$rdata_q$15  = \$procmux$10413_Y ;
  assign \$data_wdata$11  = \$procmux$10415_Y ;
  assign \$data_be$8  = \$procmux$10425_Y ;
  assign \$procmux$10431_CMP  = \$5y ;
  assign \$data_be$7  = \$procmux$10432_Y ;
  assign \$procmux$10442_CMP  = \$5y ;
  assign \$data_be$6  = \$procmux$10443_Y ;
  assign \$data_be$9  = \$procmux$10446_Y ;
  assign \$procmux$10461_CMP  = \$1y ;
  assign \$data_be$3  = \$procmux$10462_Y ;
  assign \$procmux$10470_CMP  = \$1y ;
  assign \$data_be$4  = \$procmux$10471_Y ;
  assign \$procmux$10482_CMP  = \$1y ;
  assign \$data_be$2  = \$procmux$10483_Y ;
  assign \$14y  = rst_ni;
  assign \$18y  = rst_ni;
  assign \$26y  = rst_ni;
  assign \$123y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_mac_controller.sv:29.8" */
module \cve2_mac_controller$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.id_stage_i.mac__controller_i (clk_i, rst_ni, alu_operator_i, alu_operator_o, mac_en_i, mac_en_2_cycles_o);
  wire \$10y ;
  wire \$1y ;
  wire \$2y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20" */
  wire [6:0] \$alu_operator_d$4 ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  wire [6:0] \$alu_operator_d$6 ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  wire \$mac_en_2_cycles_d$7 ;
  wire [6:0] \$procmux$3371_Y ;
  wire \$procmux$3372_CMP ;
  wire \$procmux$3373_CMP ;
  wire \$procmux$3375_CMP ;
  wire [1:0] \$procmux$3378_Y ;
  wire \$procmux$3379_CMP ;
  wire \$procmux$3381_CMP ;
  wire [6:0] \$procmux$3386_Y ;
  wire \$procmux$3387_CMP ;
  wire [6:0] \$procmux$3388_Y ;
  wire \$procmux$3389_CMP ;
  wire [1:0] \$procmux$3394_Y ;
  wire \$procmux$3395_CMP ;
  wire [1:0] \$procmux$3396_Y ;
  wire \$procmux$3397_CMP ;
  wire \$procmux$3399_Y ;
  wire \$procmux$3400_CMP ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20" */
  wire [1:0] \$state_d$3 ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  wire [1:0] \$state_d$5 ;
  /* src = "rtl/cve2/cve2_mac_controller.sv:47.24" */
  wire [6:0] alu_operator_d;
  /* src = "rtl/cve2/cve2_mac_controller.sv:35.37" */
  input [6:0] alu_operator_i;
  wire [6:0] alu_operator_i;
  /* src = "rtl/cve2/cve2_mac_controller.sv:39.37" */
  output [6:0] alu_operator_o;
  wire [6:0] alu_operator_o;
  /* src = "rtl/cve2/cve2_mac_controller.sv:47.40" */
  wire [6:0] alu_operator_q;
  /* src = "rtl/cve2/cve2_mac_controller.sv:31.34" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_mac_controller.sv:48.11" */
  wire mac_en_2_cycles_d;
  /* src = "rtl/cve2/cve2_mac_controller.sv:40.37" */
  output mac_en_2_cycles_o;
  wire mac_en_2_cycles_o;
  /* src = "rtl/cve2/cve2_mac_controller.sv:48.30" */
  wire mac_en_2_cycles_q;
  /* src = "rtl/cve2/cve2_mac_controller.sv:36.37" */
  input mac_en_i;
  wire mac_en_i;
  /* src = "rtl/cve2/cve2_mac_controller.sv:32.34" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_mac_controller.sv:44.26" */
  wire [1:0] state_d;
  /* src = "rtl/cve2/cve2_mac_controller.sv:44.17" */
  wire [1:0] state_q;
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.21-58.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(alu_operator_i),
    .B(7'h41),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.21-58.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$1y ),
    .B(mac_en_i),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(rst_ni),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_mac_controller.sv:85.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$alu_operator_q  (
    .AD(alu_operator_i),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(alu_operator_d),
    .Q(alu_operator_q)
  );
  /* src = "rtl/cve2/cve2_mac_controller.sv:85.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$mac_en_2_cycles_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(mac_en_2_cycles_d),
    .Q(mac_en_2_cycles_q)
  );
  /* src = "rtl/cve2/cve2_mac_controller.sv:85.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:70.18-75.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd7)
  ) \$procmux$3371  (
    .A(alu_operator_i),
    .B({ \$alu_operator_d$4 , 14'h0000 }),
    .S({ \$procmux$3375_CMP , \$procmux$3373_CMP , \$procmux$3372_CMP  }),
    .Y(\$procmux$3371_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:70.18-75.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3372_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$3372_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:64.18-69.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3373_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$3373_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3375_CMP0  (
    .A(state_q),
    .Y(\$procmux$3375_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:64.18-69.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$3378  (
    .A(2'h0),
    .B({ \$state_d$3 , 2'h2 }),
    .S({ \$procmux$3381_CMP , \$procmux$3379_CMP  }),
    .Y(\$procmux$3378_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:64.18-69.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3379_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$3379_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3381_CMP0  (
    .A(state_q),
    .Y(\$procmux$3381_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:59.21-59.35|rtl/cve2/cve2_mac_controller.sv:58.17-62.20" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3386  (
    .A(alu_operator_i),
    .B(alu_operator_q),
    .S(\$procmux$3387_CMP ),
    .Y(\$procmux$3386_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$3388  (
    .A(7'hxx),
    .B(\$procmux$3386_Y ),
    .S(\$procmux$3389_CMP ),
    .Y(\$procmux$3388_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3389_CMP0  (
    .A(state_q),
    .Y(\$procmux$3389_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:59.21-59.35|rtl/cve2/cve2_mac_controller.sv:58.17-62.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3394  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$3395_CMP ),
    .Y(\$procmux$3394_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$3396  (
    .A(2'hx),
    .B(\$procmux$3394_Y ),
    .S(\$procmux$3397_CMP ),
    .Y(\$procmux$3396_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:58.17-62.20|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3397_CMP0  (
    .A(state_q),
    .Y(\$procmux$3397_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:70.18-75.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$3399  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$3400_CMP ),
    .Y(\$procmux$3399_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/cve2/cve2_mac_controller.sv:70.18-75.16|rtl/cve2/cve2_mac_controller.sv:56.9-81.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$3400_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$3400_CMP )
  );
  assign state_d = \$state_d$5 ;
  assign alu_operator_d = \$alu_operator_d$6 ;
  assign mac_en_2_cycles_d = \$mac_en_2_cycles_d$7 ;
  assign alu_operator_o = alu_operator_q;
  assign mac_en_2_cycles_o = mac_en_2_cycles_q;
  assign \$alu_operator_d$6  = \$procmux$3371_Y ;
  assign \$state_d$5  = \$procmux$3378_Y ;
  assign \$procmux$3387_CMP  = \$2y ;
  assign \$alu_operator_d$4  = \$procmux$3388_Y ;
  assign \$procmux$3395_CMP  = \$2y ;
  assign \$state_d$3  = \$procmux$3396_Y ;
  assign \$mac_en_2_cycles_d$7  = \$procmux$3399_Y ;
  assign \$10y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_prefetch_buffer.sv:12.8" */
module \cve2_prefetch_buffer$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.prefetch_buffer_i (clk_i, rst_ni, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_addr_o, instr_rdata_i, instr_err_i, addr_o, req_i, addr_i, rdata_o, busy_o, branch_i, ready_i, valid_o, err_o, err_plus2_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire [31:0] \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire [31:0] \$28y ;
  wire [1:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire [31:0] \$33y ;
  wire [31:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire [1:0] \$51y ;
  wire [1:0] \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$56y ;
  wire \$57y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:171.14-173.8" */
  wire [31:0] \$fetch_addr_q$32 ;
  wire [31:0] \$procmux$5262_Y ;
  wire \$procmux$5263_CMP ;
  wire [31:0] \$procmux$5264_Y ;
  wire \$procmux$5265_CMP ;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:154.14-156.8" */
  wire [31:0] \$stored_addr_q$21 ;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:20.23" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:26.23" */
  output [31:0] addr_o;
  wire [31:0] addr_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:48.24" */
  wire [1:0] branch_discard_n;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:48.60" */
  wire [1:0] branch_discard_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:48.42" */
  wire [1:0] branch_discard_s;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:19.23" */
  input branch_i;
  wire branch_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:39.23" */
  output busy_o;
  wire busy_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:14.23" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:46.24" */
  wire discard_req_d;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:46.39" */
  wire discard_req_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:27.23" */
  output err_o;
  wire err_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:28.23" */
  output err_plus2_o;
  wire err_plus2_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:53.24" */
  wire [31:0] fetch_addr_d;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:54.24" */
  wire fetch_addr_en;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:53.38" */
  wire [31:0] fetch_addr_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:58.24" */
  wire [31:0] fifo_addr;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:61.24" */
  wire [1:0] fifo_busy;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:60.24" */
  wire fifo_clear;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:59.24" */
  wire fifo_ready;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:57.24" */
  wire fifo_valid;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:55.24" */
  wire [31:0] instr_addr;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:33.23" */
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:55.36" */
  wire [31:0] instr_addr_w_aligned;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:35.23" */
  input instr_err_i;
  wire instr_err_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:32.23" */
  input instr_gnt_i;
  wire instr_gnt_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:34.23" */
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:31.23" */
  output instr_req_o;
  wire instr_req_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:36.23" */
  input instr_rvalid_i;
  wire instr_rvalid_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:25.23" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:47.24" */
  wire [1:0] rdata_outstanding_n;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:47.66" */
  wire [1:0] rdata_outstanding_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:49.24" */
  wire [1:0] rdata_outstanding_rev;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:47.45" */
  wire [1:0] rdata_outstanding_s;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:23.23" */
  input ready_i;
  wire ready_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:17.23" */
  input req_i;
  wire req_i;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:15.23" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:51.24" */
  wire [31:0] stored_addr_d;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:52.24" */
  wire stored_addr_en;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:51.39" */
  wire [31:0] stored_addr_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:44.24" */
  wire valid_new_req;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:24.23" */
  output valid_o;
  wire valid_o;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:63.24" */
  wire valid_raw;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:44.39" */
  wire valid_req;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:45.24" */
  wire valid_req_d;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:45.37" */
  wire valid_req_q;
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:69.20-69.40" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(rdata_outstanding_q),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:69.19-69.55" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\$0y ),
    .B(instr_req_o),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:123.36-123.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(instr_gnt_i),
    .Y(\$10y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:123.24-123.48" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(valid_req),
    .B(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:126.41-126.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(branch_i),
    .B(discard_req_q),
    .Y(\$12y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:126.26-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(valid_req_q),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:145.43-145.55" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(valid_req_q),
    .Y(\$14y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:145.27-145.55" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(valid_new_req),
    .B(\$14y ),
    .Y(\$15y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:145.58-145.70" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(instr_gnt_i),
    .Y(\$16y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:145.27-145.70" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(rst_ni),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:88.26-88.59" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(fifo_busy),
    .B(rdata_outstanding_rev),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:161.54-161.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(valid_req_q),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:161.38-161.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(valid_new_req),
    .B(\$22y ),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:161.26-161.67" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(branch_i),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:163.26-164.75" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$25  (
    .A({ fetch_addr_q[31:2], 2'h0 }),
    .B(addr_i),
    .S(branch_i),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:166.54-166.66" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(valid_req_q),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:166.38-166.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(valid_new_req),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:163.25-166.74" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$28  (
    .A(\$25y ),
    .B({ 29'h00000000, \$27y , 2'h0 }),
    .Y(\$28y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:88.23-88.60" */
  \$reduce_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\$2y ),
    .Y(\$3y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(rst_ni),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:178.23-179.57" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$33  (
    .A(fetch_addr_q),
    .B(addr_i),
    .S(branch_i),
    .Y(\$33y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:177.23-179.57" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$34  (
    .A(\$33y ),
    .B(stored_addr_q),
    .S(valid_req_q),
    .Y(\$34y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:192.40-192.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(valid_req),
    .B(instr_gnt_i),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:192.39-193.61" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$35y ),
    .B(rdata_outstanding_q[0]),
    .Y(\$36y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:196.40-196.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(valid_req),
    .B(instr_gnt_i),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:196.40-196.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$37y ),
    .B(discard_req_d),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:197.40-197.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(branch_i),
    .B(rdata_outstanding_q[0]),
    .Y(\$39y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:88.23-88.60" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:196.39-197.74" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .B(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:196.39-198.58" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\$40y ),
    .B(branch_discard_q[0]),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:204.40-204.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(valid_req),
    .B(instr_gnt_i),
    .Y(\$42y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:204.40-205.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(\$42y ),
    .B(rdata_outstanding_q[0]),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:204.39-206.61" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$43y ),
    .B(rdata_outstanding_q[1]),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:207.40-207.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(valid_req),
    .B(instr_gnt_i),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:207.40-207.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$45y ),
    .B(discard_req_d),
    .Y(\$46y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:207.40-208.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$46y ),
    .B(rdata_outstanding_q[0]),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:209.40-209.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(branch_i),
    .B(rdata_outstanding_q[1]),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:207.39-209.74" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:117.35-117.56" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(fifo_ready),
    .B(branch_i),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:207.39-210.58" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(branch_discard_q[1]),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:215.32-216.68" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$51  (
    .A(rdata_outstanding_n),
    .B({ 1'h0, rdata_outstanding_n[1] }),
    .S(instr_rvalid_i),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:217.32-218.65" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$52  (
    .A(branch_discard_n),
    .B({ 1'h0, branch_discard_n[1] }),
    .S(instr_rvalid_i),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:221.40-221.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(branch_discard_q[0]),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:221.23-221.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(instr_rvalid_i),
    .B(\$53y ),
    .Y(\$54y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(rst_ni),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:117.26-117.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(req_i),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:118.26-118.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(rdata_outstanding_q[1]),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:117.26-118.58" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:120.22-120.49" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(valid_req_q),
    .B(valid_new_req),
    .Y(\$9y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:229.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$branch_discard_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(branch_discard_s),
    .Q(branch_discard_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:229.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$discard_req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(discard_req_d),
    .Q(discard_req_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:168.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$fetch_addr_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$fetch_addr_q$32 ),
    .Q(fetch_addr_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:229.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$rdata_outstanding_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rdata_outstanding_s),
    .Q(rdata_outstanding_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:151.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$stored_addr_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$stored_addr_q$21 ),
    .Q(stored_addr_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:229.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$valid_req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(valid_req_d),
    .Q(valid_req_q)
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:172.7-172.36|rtl/cve2/cve2_prefetch_buffer.sv:171.14-173.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5262  (
    .A(fetch_addr_q),
    .B(\$28y ),
    .S(\$procmux$5263_CMP ),
    .Y(\$procmux$5262_Y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:155.7-155.38|rtl/cve2/cve2_prefetch_buffer.sv:154.14-156.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$5264  (
    .A(stored_addr_q),
    .B(\$34y ),
    .S(\$procmux$5265_CMP ),
    .Y(\$procmux$5264_Y )
  );
  /* src = "rtl/cve2/cve2_prefetch_buffer.sv:92.5" */
  \cve2_fetch_fifo$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.if_stage_i.prefetch_buffer_i.fifo_i  fifo_i (
    .busy_o(fifo_busy),
    .clear_i(fifo_clear),
    .clk_i(clk_i),
    .in_addr_i(fifo_addr),
    .in_err_i(instr_err_i),
    .in_rdata_i(instr_rdata_i),
    .in_valid_i(fifo_valid),
    .out_addr_o(addr_o),
    .out_err_o(err_o),
    .out_err_plus2_o(err_plus2_o),
    .out_rdata_o(rdata_o),
    .out_ready_i(ready_i),
    .out_valid_o(valid_raw),
    .rst_ni(rst_ni)
  );
  assign busy_o = \$1y ;
  assign fifo_clear = branch_i;
  assign rdata_outstanding_rev[0] = rdata_outstanding_q[1];
  assign rdata_outstanding_rev[1] = rdata_outstanding_q[0];
  assign fifo_ready = \$4y ;
  assign valid_new_req = \$8y ;
  assign valid_req = \$9y ;
  assign valid_req_d = \$11y ;
  assign discard_req_d = \$13y ;
  assign stored_addr_en = \$17y ;
  assign stored_addr_d = instr_addr;
  assign fetch_addr_en = \$24y ;
  assign fetch_addr_d = \$28y ;
  assign instr_addr = \$34y ;
  assign instr_addr_w_aligned = { instr_addr[31:2], 2'h0 };
  assign rdata_outstanding_n[0] = \$36y ;
  assign branch_discard_n[0] = \$41y ;
  assign rdata_outstanding_n[1] = \$44y ;
  assign branch_discard_n[1] = \$50y ;
  assign rdata_outstanding_s = \$51y ;
  assign branch_discard_s = \$52y ;
  assign fifo_valid = \$54y ;
  assign fifo_addr = addr_i;
  assign instr_req_o = valid_req;
  assign instr_addr_o = instr_addr_w_aligned;
  assign valid_o = valid_raw;
  assign \$procmux$5263_CMP  = fetch_addr_en;
  assign \$fetch_addr_q$32  = \$procmux$5262_Y ;
  assign \$procmux$5265_CMP  = stored_addr_en;
  assign \$stored_addr_q$21  = \$procmux$5264_Y ;
  assign \$57y  = rst_ni;
  assign \$31y  = rst_ni;
  assign \$20y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_register_file_ff.sv:13.8" */
module \cve2_register_file_ff$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.register_file_i (clk_i, rst_ni, test_en_i, raddr_a_i, rdata_a_o, raddr_b_i, rdata_b_o, waddr_a_i, wdata_a_i, we_a_i);
  wire \$100y ;
  wire \$101y ;
  wire \$104y ;
  wire \$105y ;
  wire \$108y ;
  wire \$109y ;
  wire \$10y ;
  wire \$112y ;
  wire \$113y ;
  wire \$116y ;
  wire \$117y ;
  wire \$11y ;
  wire \$120y ;
  wire \$121y ;
  wire \$124y ;
  wire \$125y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$132y ;
  wire \$133y ;
  wire \$136y ;
  wire \$137y ;
  wire \$13y ;
  wire \$140y ;
  wire \$141y ;
  wire \$144y ;
  wire \$145y ;
  wire \$148y ;
  wire \$149y ;
  wire \$14y ;
  wire \$152y ;
  wire \$153y ;
  wire \$156y ;
  wire \$157y ;
  wire \$15y ;
  wire \$160y ;
  wire \$161y ;
  wire \$164y ;
  wire \$165y ;
  wire \$168y ;
  wire \$169y ;
  wire \$16y ;
  wire \$172y ;
  wire \$173y ;
  wire \$176y ;
  wire \$177y ;
  wire \$17y ;
  wire \$180y ;
  wire \$181y ;
  wire \$184y ;
  wire \$185y ;
  wire \$187y ;
  wire [31:0] \$188y ;
  wire [31:0] \$189y ;
  wire \$18y ;
  wire \$190y ;
  wire [31:0] \$191y ;
  wire [31:0] \$192y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$64y ;
  wire \$65y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$72y ;
  wire \$73y ;
  wire \$76y ;
  wire \$77y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$84y ;
  wire \$85y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$92y ;
  wire \$93y ;
  wire \$96y ;
  wire \$97y ;
  wire \$9y ;
  wire [31:0] \$procmux$9872_Y ;
  wire \$procmux$9873_CMP ;
  wire [31:0] \$procmux$9874_Y ;
  wire \$procmux$9875_CMP ;
  wire [31:0] \$procmux$9876_Y ;
  wire \$procmux$9877_CMP ;
  wire [31:0] \$procmux$9878_Y ;
  wire \$procmux$9879_CMP ;
  wire [31:0] \$procmux$9880_Y ;
  wire \$procmux$9881_CMP ;
  wire [31:0] \$procmux$9882_Y ;
  wire \$procmux$9883_CMP ;
  wire [31:0] \$procmux$9884_Y ;
  wire \$procmux$9885_CMP ;
  wire [31:0] \$procmux$9886_Y ;
  wire \$procmux$9887_CMP ;
  wire [31:0] \$procmux$9888_Y ;
  wire \$procmux$9889_CMP ;
  wire [31:0] \$procmux$9890_Y ;
  wire \$procmux$9891_CMP ;
  wire [31:0] \$procmux$9892_Y ;
  wire \$procmux$9893_CMP ;
  wire [31:0] \$procmux$9894_Y ;
  wire \$procmux$9895_CMP ;
  wire [31:0] \$procmux$9896_Y ;
  wire \$procmux$9897_CMP ;
  wire [31:0] \$procmux$9898_Y ;
  wire \$procmux$9899_CMP ;
  wire [31:0] \$procmux$9900_Y ;
  wire \$procmux$9901_CMP ;
  wire [31:0] \$procmux$9902_Y ;
  wire \$procmux$9903_CMP ;
  wire [31:0] \$procmux$9904_Y ;
  wire \$procmux$9905_CMP ;
  wire [31:0] \$procmux$9906_Y ;
  wire \$procmux$9907_CMP ;
  wire [31:0] \$procmux$9908_Y ;
  wire \$procmux$9909_CMP ;
  wire [31:0] \$procmux$9910_Y ;
  wire \$procmux$9911_CMP ;
  wire [31:0] \$procmux$9912_Y ;
  wire \$procmux$9913_CMP ;
  wire [31:0] \$procmux$9914_Y ;
  wire \$procmux$9915_CMP ;
  wire [31:0] \$procmux$9916_Y ;
  wire \$procmux$9917_CMP ;
  wire [31:0] \$procmux$9918_Y ;
  wire \$procmux$9919_CMP ;
  wire [31:0] \$procmux$9920_Y ;
  wire \$procmux$9921_CMP ;
  wire [31:0] \$procmux$9922_Y ;
  wire \$procmux$9923_CMP ;
  wire [31:0] \$procmux$9924_Y ;
  wire \$procmux$9925_CMP ;
  wire [31:0] \$procmux$9926_Y ;
  wire \$procmux$9927_CMP ;
  wire [31:0] \$procmux$9928_Y ;
  wire \$procmux$9929_CMP ;
  wire [31:0] \$procmux$9930_Y ;
  wire \$procmux$9931_CMP ;
  wire [31:0] \$procmux$9932_Y ;
  wire \$procmux$9933_CMP ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[127:96]$78 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[159:128]$82 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[191:160]$86 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[223:192]$90 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[255:224]$94 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[287:256]$98 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[319:288]$102 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[31:0]$66 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[351:320]$106 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[383:352]$110 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[415:384]$114 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[447:416]$118 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[479:448]$122 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[511:480]$126 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[543:512]$130 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[575:544]$134 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[607:576]$138 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[639:608]$142 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[63:32]$70 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[671:640]$146 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[703:672]$150 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[735:704]$154 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[767:736]$158 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[799:768]$162 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[831:800]$166 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[863:832]$170 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[895:864]$174 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[927:896]$178 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[959:928]$182 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[95:64]$74 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  wire [31:0] \$rf_reg_q[991:960]$186 ;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:19.32" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:25.32" */
  input [4:0] raddr_a_i;
  wire [4:0] raddr_a_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:29.32" */
  input [4:0] raddr_b_i;
  wire [4:0] raddr_b_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:26.32" */
  output [31:0] rdata_a_o;
  wire [31:0] rdata_a_o;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:30.32" */
  output [31:0] rdata_b_o;
  wire [31:0] rdata_b_o;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:42.40" */
  wire [1023:0] rf_reg;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:43.40" */
  wire [991:0] rf_reg_q;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:20.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:22.32" */
  input test_en_i;
  wire test_en_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:72.9" */
  wire unused_test_en;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:33.32" */
  input [4:0] waddr_a_i;
  wire [4:0] waddr_a_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:34.32" */
  input [31:0] wdata_a_i;
  wire [31:0] wdata_a_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:44.40" */
  wire [30:0] we_a_dec;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:35.32" */
  input we_a_i;
  wire we_a_i;
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(waddr_a_i),
    .B(5'h01),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$10  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$100  (
    .A(rst_ni),
    .Y(\$100y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(rst_ni),
    .Y(\$104y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$108  (
    .A(rst_ni),
    .Y(\$108y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(waddr_a_i),
    .B(5'h06),
    .Y(\$11y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$112  (
    .A(rst_ni),
    .Y(\$112y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$116  (
    .A(rst_ni),
    .Y(\$116y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$11y ),
    .Y(\$12y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$120  (
    .A(rst_ni),
    .Y(\$120y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(rst_ni),
    .Y(\$124y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(rst_ni),
    .Y(\$128y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(waddr_a_i),
    .B(5'h07),
    .Y(\$13y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(rst_ni),
    .Y(\$132y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(rst_ni),
    .Y(\$136y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$13y ),
    .Y(\$14y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$140  (
    .A(rst_ni),
    .Y(\$140y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(rst_ni),
    .Y(\$144y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(rst_ni),
    .Y(\$148y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(waddr_a_i),
    .B(5'h08),
    .Y(\$15y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(rst_ni),
    .Y(\$152y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A(rst_ni),
    .Y(\$156y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$15y ),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$160  (
    .A(rst_ni),
    .Y(\$160y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(rst_ni),
    .Y(\$164y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$168  (
    .A(rst_ni),
    .Y(\$168y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(waddr_a_i),
    .B(5'h09),
    .Y(\$17y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$172  (
    .A(rst_ni),
    .Y(\$172y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$176  (
    .A(rst_ni),
    .Y(\$176y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$17y ),
    .Y(\$18y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$180  (
    .A(rst_ni),
    .Y(\$180y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$184  (
    .A(rst_ni),
    .Y(\$184y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:68.22-68.39" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$187  (
    .A({ 1'h0, raddr_a_i }),
    .B(7'h20),
    .Y(\$187y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:68.22-68.39" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd32)
  ) \$188  (
    .A(rf_reg),
    .S(raddr_a_i),
    .Y(\$188y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:68.22-68.39" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$189  (
    .A(32'hxxxxxxxx),
    .B(\$188y ),
    .S(\$187y ),
    .Y(\$189y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(waddr_a_i),
    .B(5'h0a),
    .Y(\$19y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:69.22-69.39" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$190  (
    .A({ 1'h0, raddr_b_i }),
    .B(7'h20),
    .Y(\$190y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:69.22-69.39" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd32)
  ) \$191  (
    .A(rf_reg),
    .S(raddr_b_i),
    .Y(\$191y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:69.22-69.39" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$192  (
    .A(32'hxxxxxxxx),
    .B(\$191y ),
    .S(\$190y ),
    .Y(\$192y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$2  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$1y ),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(waddr_a_i),
    .B(5'h0b),
    .Y(\$21y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(waddr_a_i),
    .B(5'h0c),
    .Y(\$23y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$24  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(waddr_a_i),
    .B(5'h0d),
    .Y(\$25y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$26  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$25y ),
    .Y(\$26y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(waddr_a_i),
    .B(5'h0e),
    .Y(\$27y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$28  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$27y ),
    .Y(\$28y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(waddr_a_i),
    .B(5'h0f),
    .Y(\$29y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(waddr_a_i),
    .B(5'h02),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$30  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$29y ),
    .Y(\$30y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(waddr_a_i),
    .B(5'h10),
    .Y(\$31y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$32  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$31y ),
    .Y(\$32y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(waddr_a_i),
    .B(5'h11),
    .Y(\$33y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$34  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(waddr_a_i),
    .B(5'h12),
    .Y(\$35y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$36  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(waddr_a_i),
    .B(5'h13),
    .Y(\$37y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(waddr_a_i),
    .B(5'h14),
    .Y(\$39y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$4  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$40  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(waddr_a_i),
    .B(5'h15),
    .Y(\$41y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$42  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(waddr_a_i),
    .B(5'h16),
    .Y(\$43y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$44  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(waddr_a_i),
    .B(5'h17),
    .Y(\$45y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$46  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$45y ),
    .Y(\$46y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(waddr_a_i),
    .B(5'h18),
    .Y(\$47y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$48  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$47y ),
    .Y(\$48y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(waddr_a_i),
    .B(5'h19),
    .Y(\$49y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(waddr_a_i),
    .B(5'h03),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$50  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(waddr_a_i),
    .B(5'h1a),
    .Y(\$51y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$52  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(waddr_a_i),
    .B(5'h1b),
    .Y(\$53y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$54  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(waddr_a_i),
    .B(5'h1c),
    .Y(\$55y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$56  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$55y ),
    .Y(\$56y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(waddr_a_i),
    .B(5'h1d),
    .Y(\$57y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$58  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(waddr_a_i),
    .B(5'h1e),
    .Y(\$59y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$6  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$60  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$59y ),
    .Y(\$60y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(waddr_a_i),
    .B(5'h1f),
    .Y(\$61y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$62  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$61y ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(rst_ni),
    .Y(\$64y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(rst_ni),
    .Y(\$68y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(waddr_a_i),
    .B(5'h04),
    .Y(\$7y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(rst_ni),
    .Y(\$72y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(rst_ni),
    .Y(\$76y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.21-48.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$8  (
    .A(1'h0),
    .B(we_a_i),
    .S(\$7y ),
    .Y(\$8y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(rst_ni),
    .Y(\$80y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(rst_ni),
    .Y(\$84y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(rst_ni),
    .Y(\$88y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:48.22-48.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(waddr_a_i),
    .B(5'h05),
    .Y(\$9y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(rst_ni),
    .Y(\$92y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(rst_ni),
    .Y(\$96y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[10]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[319:288]$102 ),
    .Q(rf_reg_q[319:288])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[11]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[351:320]$106 ),
    .Q(rf_reg_q[351:320])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[12]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[383:352]$110 ),
    .Q(rf_reg_q[383:352])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[13]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[415:384]$114 ),
    .Q(rf_reg_q[415:384])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[14]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[447:416]$118 ),
    .Q(rf_reg_q[447:416])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[15]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[479:448]$122 ),
    .Q(rf_reg_q[479:448])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[16]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[511:480]$126 ),
    .Q(rf_reg_q[511:480])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[17]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[543:512]$130 ),
    .Q(rf_reg_q[543:512])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[18]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[575:544]$134 ),
    .Q(rf_reg_q[575:544])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[19]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[607:576]$138 ),
    .Q(rf_reg_q[607:576])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[1]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[31:0]$66 ),
    .Q(rf_reg_q[31:0])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[20]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[639:608]$142 ),
    .Q(rf_reg_q[639:608])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[21]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[671:640]$146 ),
    .Q(rf_reg_q[671:640])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[22]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[703:672]$150 ),
    .Q(rf_reg_q[703:672])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[23]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[735:704]$154 ),
    .Q(rf_reg_q[735:704])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[24]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[767:736]$158 ),
    .Q(rf_reg_q[767:736])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[25]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[799:768]$162 ),
    .Q(rf_reg_q[799:768])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[26]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[831:800]$166 ),
    .Q(rf_reg_q[831:800])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[27]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[863:832]$170 ),
    .Q(rf_reg_q[863:832])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[28]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[895:864]$174 ),
    .Q(rf_reg_q[895:864])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[29]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[927:896]$178 ),
    .Q(rf_reg_q[927:896])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[2]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[63:32]$70 ),
    .Q(rf_reg_q[63:32])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[30]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[959:928]$182 ),
    .Q(rf_reg_q[959:928])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[31]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[991:960]$186 ),
    .Q(rf_reg_q[991:960])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[3]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[95:64]$74 ),
    .Q(rf_reg_q[95:64])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[4]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[127:96]$78 ),
    .Q(rf_reg_q[127:96])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[5]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[159:128]$82 ),
    .Q(rf_reg_q[159:128])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[6]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[191:160]$86 ),
    .Q(rf_reg_q[191:160])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[7]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[223:192]$90 ),
    .Q(rf_reg_q[223:192])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[8]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[255:224]$94 ),
    .Q(rf_reg_q[255:224])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:54.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$rf_reg_q[9]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$rf_reg_q[287:256]$98 ),
    .Q(rf_reg_q[287:256])
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9872  (
    .A(rf_reg_q[959:928]),
    .B(wdata_a_i),
    .S(\$procmux$9873_CMP ),
    .Y(\$procmux$9872_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9874  (
    .A(rf_reg_q[927:896]),
    .B(wdata_a_i),
    .S(\$procmux$9875_CMP ),
    .Y(\$procmux$9874_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9876  (
    .A(rf_reg_q[895:864]),
    .B(wdata_a_i),
    .S(\$procmux$9877_CMP ),
    .Y(\$procmux$9876_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9878  (
    .A(rf_reg_q[863:832]),
    .B(wdata_a_i),
    .S(\$procmux$9879_CMP ),
    .Y(\$procmux$9878_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9880  (
    .A(rf_reg_q[831:800]),
    .B(wdata_a_i),
    .S(\$procmux$9881_CMP ),
    .Y(\$procmux$9880_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9882  (
    .A(rf_reg_q[799:768]),
    .B(wdata_a_i),
    .S(\$procmux$9883_CMP ),
    .Y(\$procmux$9882_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9884  (
    .A(rf_reg_q[767:736]),
    .B(wdata_a_i),
    .S(\$procmux$9885_CMP ),
    .Y(\$procmux$9884_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9886  (
    .A(rf_reg_q[735:704]),
    .B(wdata_a_i),
    .S(\$procmux$9887_CMP ),
    .Y(\$procmux$9886_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9888  (
    .A(rf_reg_q[703:672]),
    .B(wdata_a_i),
    .S(\$procmux$9889_CMP ),
    .Y(\$procmux$9888_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9890  (
    .A(rf_reg_q[671:640]),
    .B(wdata_a_i),
    .S(\$procmux$9891_CMP ),
    .Y(\$procmux$9890_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9892  (
    .A(rf_reg_q[639:608]),
    .B(wdata_a_i),
    .S(\$procmux$9893_CMP ),
    .Y(\$procmux$9892_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9894  (
    .A(rf_reg_q[607:576]),
    .B(wdata_a_i),
    .S(\$procmux$9895_CMP ),
    .Y(\$procmux$9894_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9896  (
    .A(rf_reg_q[575:544]),
    .B(wdata_a_i),
    .S(\$procmux$9897_CMP ),
    .Y(\$procmux$9896_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9898  (
    .A(rf_reg_q[543:512]),
    .B(wdata_a_i),
    .S(\$procmux$9899_CMP ),
    .Y(\$procmux$9898_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9900  (
    .A(rf_reg_q[511:480]),
    .B(wdata_a_i),
    .S(\$procmux$9901_CMP ),
    .Y(\$procmux$9900_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9902  (
    .A(rf_reg_q[479:448]),
    .B(wdata_a_i),
    .S(\$procmux$9903_CMP ),
    .Y(\$procmux$9902_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9904  (
    .A(rf_reg_q[447:416]),
    .B(wdata_a_i),
    .S(\$procmux$9905_CMP ),
    .Y(\$procmux$9904_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9906  (
    .A(rf_reg_q[415:384]),
    .B(wdata_a_i),
    .S(\$procmux$9907_CMP ),
    .Y(\$procmux$9906_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9908  (
    .A(rf_reg_q[383:352]),
    .B(wdata_a_i),
    .S(\$procmux$9909_CMP ),
    .Y(\$procmux$9908_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9910  (
    .A(rf_reg_q[351:320]),
    .B(wdata_a_i),
    .S(\$procmux$9911_CMP ),
    .Y(\$procmux$9910_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9912  (
    .A(rf_reg_q[319:288]),
    .B(wdata_a_i),
    .S(\$procmux$9913_CMP ),
    .Y(\$procmux$9912_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9914  (
    .A(rf_reg_q[287:256]),
    .B(wdata_a_i),
    .S(\$procmux$9915_CMP ),
    .Y(\$procmux$9914_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9916  (
    .A(rf_reg_q[255:224]),
    .B(wdata_a_i),
    .S(\$procmux$9917_CMP ),
    .Y(\$procmux$9916_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9918  (
    .A(rf_reg_q[223:192]),
    .B(wdata_a_i),
    .S(\$procmux$9919_CMP ),
    .Y(\$procmux$9918_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9920  (
    .A(rf_reg_q[191:160]),
    .B(wdata_a_i),
    .S(\$procmux$9921_CMP ),
    .Y(\$procmux$9920_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9922  (
    .A(rf_reg_q[159:128]),
    .B(wdata_a_i),
    .S(\$procmux$9923_CMP ),
    .Y(\$procmux$9922_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9924  (
    .A(rf_reg_q[127:96]),
    .B(wdata_a_i),
    .S(\$procmux$9925_CMP ),
    .Y(\$procmux$9924_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9926  (
    .A(rf_reg_q[95:64]),
    .B(wdata_a_i),
    .S(\$procmux$9927_CMP ),
    .Y(\$procmux$9926_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9928  (
    .A(rf_reg_q[63:32]),
    .B(wdata_a_i),
    .S(\$procmux$9929_CMP ),
    .Y(\$procmux$9928_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9930  (
    .A(rf_reg_q[31:0]),
    .B(wdata_a_i),
    .S(\$procmux$9931_CMP ),
    .Y(\$procmux$9930_Y )
  );
  /* src = "rtl/cve2/cve2_register_file_ff.sv:58.9-58.34|rtl/cve2/cve2_register_file_ff.sv:57.16-59.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9932  (
    .A(rf_reg_q[991:960]),
    .B(wdata_a_i),
    .S(\$procmux$9933_CMP ),
    .Y(\$procmux$9932_Y )
  );
  assign we_a_dec = { \$62y , \$60y , \$58y , \$56y , \$54y , \$52y , \$50y , \$48y , \$46y , \$44y , \$42y , \$40y , \$38y , \$36y , \$34y , \$32y , \$30y , \$28y , \$26y , \$24y , \$22y , \$20y , \$18y , \$16y , \$14y , \$12y , \$10y , \$8y , \$6y , \$4y , \$2y  };
  assign rf_reg[31:0] = 32'd0;
  assign rf_reg[1023:32] = rf_reg_q;
  assign rdata_a_o = \$189y ;
  assign rdata_b_o = \$192y ;
  assign unused_test_en = test_en_i;
  assign \$procmux$9873_CMP  = we_a_dec[29];
  assign \$rf_reg_q[959:928]$182  = \$procmux$9872_Y ;
  assign \$procmux$9875_CMP  = we_a_dec[28];
  assign \$rf_reg_q[927:896]$178  = \$procmux$9874_Y ;
  assign \$procmux$9877_CMP  = we_a_dec[27];
  assign \$rf_reg_q[895:864]$174  = \$procmux$9876_Y ;
  assign \$procmux$9879_CMP  = we_a_dec[26];
  assign \$rf_reg_q[863:832]$170  = \$procmux$9878_Y ;
  assign \$procmux$9881_CMP  = we_a_dec[25];
  assign \$rf_reg_q[831:800]$166  = \$procmux$9880_Y ;
  assign \$procmux$9883_CMP  = we_a_dec[24];
  assign \$rf_reg_q[799:768]$162  = \$procmux$9882_Y ;
  assign \$procmux$9885_CMP  = we_a_dec[23];
  assign \$rf_reg_q[767:736]$158  = \$procmux$9884_Y ;
  assign \$procmux$9887_CMP  = we_a_dec[22];
  assign \$rf_reg_q[735:704]$154  = \$procmux$9886_Y ;
  assign \$procmux$9889_CMP  = we_a_dec[21];
  assign \$rf_reg_q[703:672]$150  = \$procmux$9888_Y ;
  assign \$procmux$9891_CMP  = we_a_dec[20];
  assign \$rf_reg_q[671:640]$146  = \$procmux$9890_Y ;
  assign \$procmux$9893_CMP  = we_a_dec[19];
  assign \$rf_reg_q[639:608]$142  = \$procmux$9892_Y ;
  assign \$procmux$9895_CMP  = we_a_dec[18];
  assign \$rf_reg_q[607:576]$138  = \$procmux$9894_Y ;
  assign \$procmux$9897_CMP  = we_a_dec[17];
  assign \$rf_reg_q[575:544]$134  = \$procmux$9896_Y ;
  assign \$procmux$9899_CMP  = we_a_dec[16];
  assign \$rf_reg_q[543:512]$130  = \$procmux$9898_Y ;
  assign \$procmux$9901_CMP  = we_a_dec[15];
  assign \$rf_reg_q[511:480]$126  = \$procmux$9900_Y ;
  assign \$procmux$9903_CMP  = we_a_dec[14];
  assign \$rf_reg_q[479:448]$122  = \$procmux$9902_Y ;
  assign \$procmux$9905_CMP  = we_a_dec[13];
  assign \$rf_reg_q[447:416]$118  = \$procmux$9904_Y ;
  assign \$procmux$9907_CMP  = we_a_dec[12];
  assign \$rf_reg_q[415:384]$114  = \$procmux$9906_Y ;
  assign \$procmux$9909_CMP  = we_a_dec[11];
  assign \$rf_reg_q[383:352]$110  = \$procmux$9908_Y ;
  assign \$procmux$9911_CMP  = we_a_dec[10];
  assign \$rf_reg_q[351:320]$106  = \$procmux$9910_Y ;
  assign \$procmux$9913_CMP  = we_a_dec[9];
  assign \$rf_reg_q[319:288]$102  = \$procmux$9912_Y ;
  assign \$procmux$9915_CMP  = we_a_dec[8];
  assign \$rf_reg_q[287:256]$98  = \$procmux$9914_Y ;
  assign \$procmux$9917_CMP  = we_a_dec[7];
  assign \$rf_reg_q[255:224]$94  = \$procmux$9916_Y ;
  assign \$procmux$9919_CMP  = we_a_dec[6];
  assign \$rf_reg_q[223:192]$90  = \$procmux$9918_Y ;
  assign \$procmux$9921_CMP  = we_a_dec[5];
  assign \$rf_reg_q[191:160]$86  = \$procmux$9920_Y ;
  assign \$procmux$9923_CMP  = we_a_dec[4];
  assign \$rf_reg_q[159:128]$82  = \$procmux$9922_Y ;
  assign \$procmux$9925_CMP  = we_a_dec[3];
  assign \$rf_reg_q[127:96]$78  = \$procmux$9924_Y ;
  assign \$procmux$9927_CMP  = we_a_dec[2];
  assign \$rf_reg_q[95:64]$74  = \$procmux$9926_Y ;
  assign \$procmux$9929_CMP  = we_a_dec[1];
  assign \$rf_reg_q[63:32]$70  = \$procmux$9928_Y ;
  assign \$procmux$9931_CMP  = we_a_dec[0];
  assign \$rf_reg_q[31:0]$66  = \$procmux$9930_Y ;
  assign \$procmux$9933_CMP  = we_a_dec[30];
  assign \$rf_reg_q[991:960]$186  = \$procmux$9932_Y ;
  assign \$73y  = rst_ni;
  assign \$85y  = rst_ni;
  assign \$69y  = rst_ni;
  assign \$77y  = rst_ni;
  assign \$81y  = rst_ni;
  assign \$89y  = rst_ni;
  assign \$93y  = rst_ni;
  assign \$97y  = rst_ni;
  assign \$101y  = rst_ni;
  assign \$109y  = rst_ni;
  assign \$113y  = rst_ni;
  assign \$117y  = rst_ni;
  assign \$121y  = rst_ni;
  assign \$129y  = rst_ni;
  assign \$133y  = rst_ni;
  assign \$137y  = rst_ni;
  assign \$141y  = rst_ni;
  assign \$149y  = rst_ni;
  assign \$153y  = rst_ni;
  assign \$157y  = rst_ni;
  assign \$161y  = rst_ni;
  assign \$165y  = rst_ni;
  assign \$65y  = rst_ni;
  assign \$105y  = rst_ni;
  assign \$125y  = rst_ni;
  assign \$145y  = rst_ni;
  assign \$169y  = rst_ni;
  assign \$173y  = rst_ni;
  assign \$177y  = rst_ni;
  assign \$181y  = rst_ni;
  assign \$185y  = rst_ni;
endmodule

/* src = "rtl/cve2/cve2_wb.sv:14.8" */
module \cve2_wb$croc_chip.i_croc_soc.i_croc.i_core_wrap.i_ibex.wb_i (clk_i, rst_ni, lsu_resp_valid_i, en_wb_i, instr_is_compressed_id_i, instr_perf_count_id_i, perf_instr_ret_wb_o, perf_instr_ret_compressed_wb_o, rf_waddr_id_i, rf_wdata_id_i, rf_we_id_i, rf_wdata_lsu_i, rf_we_lsu_i, rf_waddr_wb_o, rf_wdata_wb_o, rf_we_wb_o, lsu_resp_err_i);
  wire \$0y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire [31:0] \$5y ;
  wire [31:0] \$6y ;
  wire [31:0] \$7y ;
  wire \$8y ;
  /* src = "rtl/cve2/cve2_wb.sv:16.36" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/cve2/cve2_wb.sv:18.36" */
  input en_wb_i;
  wire en_wb_i;
  /* src = "rtl/cve2/cve2_wb.sv:20.36" */
  input instr_is_compressed_id_i;
  wire instr_is_compressed_id_i;
  /* src = "rtl/cve2/cve2_wb.sv:21.36" */
  input instr_perf_count_id_i;
  wire instr_perf_count_id_i;
  /* src = "rtl/cve2/cve2_wb.sv:38.36" */
  input lsu_resp_err_i;
  wire lsu_resp_err_i;
  /* src = "rtl/cve2/cve2_wb.sv:37.36" */
  input lsu_resp_valid_i;
  wire lsu_resp_valid_i;
  /* src = "rtl/cve2/cve2_wb.sv:24.36" */
  output perf_instr_ret_compressed_wb_o;
  wire perf_instr_ret_compressed_wb_o;
  /* src = "rtl/cve2/cve2_wb.sv:23.36" */
  output perf_instr_ret_wb_o;
  wire perf_instr_ret_wb_o;
  /* src = "rtl/cve2/cve2_wb.sv:26.36" */
  input [4:0] rf_waddr_id_i;
  wire [4:0] rf_waddr_id_i;
  /* src = "rtl/cve2/cve2_wb.sv:33.36" */
  output [4:0] rf_waddr_wb_o;
  wire [4:0] rf_waddr_wb_o;
  /* src = "rtl/cve2/cve2_wb.sv:27.36" */
  input [31:0] rf_wdata_id_i;
  wire [31:0] rf_wdata_id_i;
  /* src = "rtl/cve2/cve2_wb.sv:30.36" */
  input [31:0] rf_wdata_lsu_i;
  wire [31:0] rf_wdata_lsu_i;
  /* src = "rtl/cve2/cve2_wb.sv:45.16" */
  wire [63:0] rf_wdata_wb_mux;
  /* src = "rtl/cve2/cve2_wb.sv:46.16" */
  wire [1:0] rf_wdata_wb_mux_we;
  /* src = "rtl/cve2/cve2_wb.sv:34.36" */
  output [31:0] rf_wdata_wb_o;
  wire [31:0] rf_wdata_wb_o;
  /* src = "rtl/cve2/cve2_wb.sv:28.36" */
  input rf_we_id_i;
  wire rf_we_id_i;
  /* src = "rtl/cve2/cve2_wb.sv:31.36" */
  input rf_we_lsu_i;
  wire rf_we_lsu_i;
  /* src = "rtl/cve2/cve2_wb.sv:35.36" */
  output rf_we_wb_o;
  wire rf_we_wb_o;
  /* src = "rtl/cve2/cve2_wb.sv:17.36" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/cve2/cve2_wb.sv:54.50-54.81" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(instr_perf_count_id_i),
    .B(en_wb_i),
    .Y(\$0y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:55.52-55.85" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(lsu_resp_valid_i),
    .B(lsu_resp_err_i),
    .Y(\$1y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:55.50-55.86" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$1y ),
    .Y(\$2y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:54.50-55.86" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\$0y ),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:56.50-56.96" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(perf_instr_ret_wb_o),
    .B(instr_is_compressed_id_i),
    .Y(\$4y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:63.27-63.75" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$5  (
    .A({ rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0], rf_wdata_wb_mux_we[0] }),
    .B(rf_wdata_wb_mux[63:32]),
    .Y(\$5y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:64.27-64.75" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1], rf_wdata_wb_mux_we[1] }),
    .B(rf_wdata_wb_mux[31:0]),
    .Y(\$6y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:63.26-64.76" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$7  (
    .A(\$5y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/cve2/cve2_wb.sv:65.26-65.45" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rf_wdata_wb_mux_we),
    .Y(\$8y )
  );
  assign rf_waddr_wb_o = rf_waddr_id_i;
  assign rf_wdata_wb_mux[63:32] = rf_wdata_id_i;
  assign rf_wdata_wb_mux_we[0] = rf_we_id_i;
  assign perf_instr_ret_wb_o = \$3y ;
  assign perf_instr_ret_compressed_wb_o = \$4y ;
  assign rf_wdata_wb_mux[31:0] = rf_wdata_lsu_i;
  assign rf_wdata_wb_mux_we[1] = rf_we_lsu_i;
  assign rf_wdata_wb_o = \$7y ;
  assign rf_we_wb_o = \$8y ;
endmodule

/* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:17.8" */
module \debug_rom$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_mem.gen_rom_snd_scratch.i_debug_rom (clk_i, rst_ni, req_i, addr_i, rdata_o);
  wire [4:0] \$0y ;
  wire \$2y ;
  wire \$3y ;
  wire \$5y ;
  wire \$6y ;
  wire [63:0] \$7y ;
  wire [63:0] \$8y ;
  wire [63:0] \$procmux$1894_Y ;
  wire \$procmux$1895_CMP ;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:67.5-69.8" */
  wire [63:0] \$rdata_o$9 ;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:51.31" */
  wire [4:0] addr_d;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:21.24" */
  input [63:0] addr_i;
  wire [63:0] addr_i;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:51.39" */
  wire [4:0] addr_q;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:18.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:27.29" */
  wire [1279:0] mem;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:22.24" */
  output [63:0] rdata_o;
  wire [63:0] rdata_o;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:20.24" */
  input req_i;
  wire req_i;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:19.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:53.19-53.65" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$0  (
    .A(addr_q),
    .B(addr_i[7:3]),
    .S(req_i),
    .Y(\$0y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(rst_ni),
    .Y(\$2y )
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:67.9-67.43" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(addr_q),
    .B(5'h14),
    .Y(\$5y )
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:68.17-68.28" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, addr_q }),
    .B(7'h20),
    .Y(\$6y )
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:68.17-68.28" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd64)
  ) \$7  (
    .A(2048'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx7b2000737b2024737b30257310852823f1402473a79ff06f7b2024737b30257310052423001000737b2024737b30257310052c2300c5151300c5551300000517fd5ff06ffa0418e3002474134004440300a40433f140247302041c63001474134004440300a4043310852023f140247300c5151300c55513000005177b3510737b2410730ff0000f000000130500006f000000130840006f000000130180006f),
    .S(addr_q),
    .Y(\$7y )
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:68.17-68.28" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$8  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:55.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$addr_q  (
    .AD(5'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(addr_d),
    .Q(addr_q)
  );
  /* src = "rtl/riscv-dbg/debug_rom/debug_rom.sv:68.7-68.29|rtl/riscv-dbg/debug_rom/debug_rom.sv:67.5-69.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$1894  (
    .A(64'h0000000000000000),
    .B(\$8y ),
    .S(\$procmux$1895_CMP ),
    .Y(\$procmux$1894_Y )
  );
  assign mem = 1280'h7b2000737b2024737b30257310852823f1402473a79ff06f7b2024737b30257310052423001000737b2024737b30257310052c2300c5151300c5551300000517fd5ff06ffa0418e3002474134004440300a40433f140247302041c63001474134004440300a4043310852023f140247300c5151300c55513000005177b3510737b2410730ff0000f000000130500006f000000130840006f000000130180006f;
  assign addr_d = \$0y ;
  assign rdata_o = \$rdata_o$9 ;
  assign \$procmux$1895_CMP  = \$5y ;
  assign \$rdata_o$9  = \$procmux$1894_Y ;
  assign \$3y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$6405_Y ;
  wire \$procmux$6406_CMP ;
  wire [1:0] \$procmux$6407_Y ;
  wire \$procmux$6408_CMP ;
  wire [1:0] \$procmux$6410_Y ;
  wire \$procmux$6411_CMP ;
  wire [1:0] \$procmux$6413_Y ;
  wire \$procmux$6414_CMP ;
  wire [1:0] \$procmux$6416_Y ;
  wire \$procmux$6417_CMP ;
  wire [1:0] \$procmux$6419_Y ;
  wire \$procmux$6420_CMP ;
  wire [1:0] \$procmux$6422_Y ;
  wire \$procmux$6423_CMP ;
  wire [1:0] \$procmux$6426_Y ;
  wire \$procmux$6427_CMP ;
  wire [1:0] \$procmux$6429_Y ;
  wire \$procmux$6430_CMP ;
  wire [1:0] \$procmux$6433_Y ;
  wire \$procmux$6434_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6405  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$6406_CMP ),
    .Y(\$procmux$6405_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6407  (
    .A(2'hx),
    .B(\$procmux$6405_Y ),
    .S(\$procmux$6408_CMP ),
    .Y(\$procmux$6407_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6410  (
    .A(\$procmux$6407_Y ),
    .B(2'hx),
    .S(\$procmux$6411_CMP ),
    .Y(\$procmux$6410_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6413  (
    .A(\$procmux$6410_Y ),
    .B(2'hx),
    .S(\$procmux$6414_CMP ),
    .Y(\$procmux$6413_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6416  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$6417_CMP ),
    .Y(\$procmux$6416_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6419  (
    .A(\$procmux$6416_Y ),
    .B(2'hx),
    .S(\$procmux$6420_CMP ),
    .Y(\$procmux$6419_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6422  (
    .A(\$procmux$6419_Y ),
    .B(2'hx),
    .S(\$procmux$6423_CMP ),
    .Y(\$procmux$6422_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6426  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$6427_CMP ),
    .Y(\$procmux$6426_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6429  (
    .A(\$procmux$6426_Y ),
    .B(2'hx),
    .S(\$procmux$6430_CMP ),
    .Y(\$procmux$6429_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6433  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$6434_CMP ),
    .Y(\$procmux$6433_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$6406_CMP  = down_i;
  assign \$procmux$6408_CMP  = en_i;
  assign \$procmux$6411_CMP  = load_i;
  assign \$procmux$6414_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$6413_Y ;
  assign \$procmux$6417_CMP  = en_i;
  assign \$procmux$6420_CMP  = load_i;
  assign \$procmux$6423_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$6422_Y ;
  assign \$procmux$6427_CMP  = load_i;
  assign \$procmux$6430_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$6429_Y ;
  assign \$procmux$6434_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$6433_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$6330_Y ;
  wire \$procmux$6331_CMP ;
  wire [1:0] \$procmux$6332_Y ;
  wire \$procmux$6333_CMP ;
  wire [1:0] \$procmux$6335_Y ;
  wire \$procmux$6336_CMP ;
  wire [1:0] \$procmux$6338_Y ;
  wire \$procmux$6339_CMP ;
  wire [1:0] \$procmux$6341_Y ;
  wire \$procmux$6342_CMP ;
  wire [1:0] \$procmux$6344_Y ;
  wire \$procmux$6345_CMP ;
  wire [1:0] \$procmux$6347_Y ;
  wire \$procmux$6348_CMP ;
  wire [1:0] \$procmux$6351_Y ;
  wire \$procmux$6352_CMP ;
  wire [1:0] \$procmux$6354_Y ;
  wire \$procmux$6355_CMP ;
  wire [1:0] \$procmux$6358_Y ;
  wire \$procmux$6359_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6330  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$6331_CMP ),
    .Y(\$procmux$6330_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6332  (
    .A(2'hx),
    .B(\$procmux$6330_Y ),
    .S(\$procmux$6333_CMP ),
    .Y(\$procmux$6332_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6335  (
    .A(\$procmux$6332_Y ),
    .B(2'hx),
    .S(\$procmux$6336_CMP ),
    .Y(\$procmux$6335_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6338  (
    .A(\$procmux$6335_Y ),
    .B(2'hx),
    .S(\$procmux$6339_CMP ),
    .Y(\$procmux$6338_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6341  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$6342_CMP ),
    .Y(\$procmux$6341_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6344  (
    .A(\$procmux$6341_Y ),
    .B(2'hx),
    .S(\$procmux$6345_CMP ),
    .Y(\$procmux$6344_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6347  (
    .A(\$procmux$6344_Y ),
    .B(2'hx),
    .S(\$procmux$6348_CMP ),
    .Y(\$procmux$6347_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6351  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$6352_CMP ),
    .Y(\$procmux$6351_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6354  (
    .A(\$procmux$6351_Y ),
    .B(2'hx),
    .S(\$procmux$6355_CMP ),
    .Y(\$procmux$6354_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6358  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$6359_CMP ),
    .Y(\$procmux$6358_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$6331_CMP  = down_i;
  assign \$procmux$6333_CMP  = en_i;
  assign \$procmux$6336_CMP  = load_i;
  assign \$procmux$6339_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$6338_Y ;
  assign \$procmux$6342_CMP  = en_i;
  assign \$procmux$6345_CMP  = load_i;
  assign \$procmux$6348_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$6347_Y ;
  assign \$procmux$6352_CMP  = load_i;
  assign \$procmux$6355_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$6354_Y ;
  assign \$procmux$6359_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$6358_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$6255_Y ;
  wire \$procmux$6256_CMP ;
  wire [1:0] \$procmux$6257_Y ;
  wire \$procmux$6258_CMP ;
  wire [1:0] \$procmux$6260_Y ;
  wire \$procmux$6261_CMP ;
  wire [1:0] \$procmux$6263_Y ;
  wire \$procmux$6264_CMP ;
  wire [1:0] \$procmux$6266_Y ;
  wire \$procmux$6267_CMP ;
  wire [1:0] \$procmux$6269_Y ;
  wire \$procmux$6270_CMP ;
  wire [1:0] \$procmux$6272_Y ;
  wire \$procmux$6273_CMP ;
  wire [1:0] \$procmux$6276_Y ;
  wire \$procmux$6277_CMP ;
  wire [1:0] \$procmux$6279_Y ;
  wire \$procmux$6280_CMP ;
  wire [1:0] \$procmux$6283_Y ;
  wire \$procmux$6284_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6255  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$6256_CMP ),
    .Y(\$procmux$6255_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6257  (
    .A(2'hx),
    .B(\$procmux$6255_Y ),
    .S(\$procmux$6258_CMP ),
    .Y(\$procmux$6257_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6260  (
    .A(\$procmux$6257_Y ),
    .B(2'hx),
    .S(\$procmux$6261_CMP ),
    .Y(\$procmux$6260_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6263  (
    .A(\$procmux$6260_Y ),
    .B(2'hx),
    .S(\$procmux$6264_CMP ),
    .Y(\$procmux$6263_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6266  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$6267_CMP ),
    .Y(\$procmux$6266_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6269  (
    .A(\$procmux$6266_Y ),
    .B(2'hx),
    .S(\$procmux$6270_CMP ),
    .Y(\$procmux$6269_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6272  (
    .A(\$procmux$6269_Y ),
    .B(2'hx),
    .S(\$procmux$6273_CMP ),
    .Y(\$procmux$6272_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6276  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$6277_CMP ),
    .Y(\$procmux$6276_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6279  (
    .A(\$procmux$6276_Y ),
    .B(2'hx),
    .S(\$procmux$6280_CMP ),
    .Y(\$procmux$6279_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6283  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$6284_CMP ),
    .Y(\$procmux$6283_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$6256_CMP  = down_i;
  assign \$procmux$6258_CMP  = en_i;
  assign \$procmux$6261_CMP  = load_i;
  assign \$procmux$6264_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$6263_Y ;
  assign \$procmux$6267_CMP  = en_i;
  assign \$procmux$6270_CMP  = load_i;
  assign \$procmux$6273_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$6272_Y ;
  assign \$procmux$6277_CMP  = load_i;
  assign \$procmux$6280_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$6279_Y ;
  assign \$procmux$6284_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$6283_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$6180_Y ;
  wire \$procmux$6181_CMP ;
  wire [1:0] \$procmux$6182_Y ;
  wire \$procmux$6183_CMP ;
  wire [1:0] \$procmux$6185_Y ;
  wire \$procmux$6186_CMP ;
  wire [1:0] \$procmux$6188_Y ;
  wire \$procmux$6189_CMP ;
  wire [1:0] \$procmux$6191_Y ;
  wire \$procmux$6192_CMP ;
  wire [1:0] \$procmux$6194_Y ;
  wire \$procmux$6195_CMP ;
  wire [1:0] \$procmux$6197_Y ;
  wire \$procmux$6198_CMP ;
  wire [1:0] \$procmux$6201_Y ;
  wire \$procmux$6202_CMP ;
  wire [1:0] \$procmux$6204_Y ;
  wire \$procmux$6205_CMP ;
  wire [1:0] \$procmux$6208_Y ;
  wire \$procmux$6209_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6180  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$6181_CMP ),
    .Y(\$procmux$6180_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6182  (
    .A(2'hx),
    .B(\$procmux$6180_Y ),
    .S(\$procmux$6183_CMP ),
    .Y(\$procmux$6182_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6185  (
    .A(\$procmux$6182_Y ),
    .B(2'hx),
    .S(\$procmux$6186_CMP ),
    .Y(\$procmux$6185_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6188  (
    .A(\$procmux$6185_Y ),
    .B(2'hx),
    .S(\$procmux$6189_CMP ),
    .Y(\$procmux$6188_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6191  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$6192_CMP ),
    .Y(\$procmux$6191_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6194  (
    .A(\$procmux$6191_Y ),
    .B(2'hx),
    .S(\$procmux$6195_CMP ),
    .Y(\$procmux$6194_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6197  (
    .A(\$procmux$6194_Y ),
    .B(2'hx),
    .S(\$procmux$6198_CMP ),
    .Y(\$procmux$6197_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6201  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$6202_CMP ),
    .Y(\$procmux$6201_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6204  (
    .A(\$procmux$6201_Y ),
    .B(2'hx),
    .S(\$procmux$6205_CMP ),
    .Y(\$procmux$6204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6208  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$6209_CMP ),
    .Y(\$procmux$6208_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$6181_CMP  = down_i;
  assign \$procmux$6183_CMP  = en_i;
  assign \$procmux$6186_CMP  = load_i;
  assign \$procmux$6189_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$6188_Y ;
  assign \$procmux$6192_CMP  = en_i;
  assign \$procmux$6195_CMP  = load_i;
  assign \$procmux$6198_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$6197_Y ;
  assign \$procmux$6202_CMP  = load_i;
  assign \$procmux$6205_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$6204_Y ;
  assign \$procmux$6209_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$6208_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_croc.i_obi_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$11524_Y ;
  wire \$procmux$11525_CMP ;
  wire [1:0] \$procmux$11526_Y ;
  wire \$procmux$11527_CMP ;
  wire [1:0] \$procmux$11529_Y ;
  wire \$procmux$11530_CMP ;
  wire [1:0] \$procmux$11532_Y ;
  wire \$procmux$11533_CMP ;
  wire [1:0] \$procmux$11535_Y ;
  wire \$procmux$11536_CMP ;
  wire [1:0] \$procmux$11538_Y ;
  wire \$procmux$11539_CMP ;
  wire [1:0] \$procmux$11541_Y ;
  wire \$procmux$11542_CMP ;
  wire [1:0] \$procmux$11545_Y ;
  wire \$procmux$11546_CMP ;
  wire [1:0] \$procmux$11548_Y ;
  wire \$procmux$11549_CMP ;
  wire [1:0] \$procmux$11552_Y ;
  wire \$procmux$11553_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11524  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$11525_CMP ),
    .Y(\$procmux$11524_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11526  (
    .A(2'hx),
    .B(\$procmux$11524_Y ),
    .S(\$procmux$11527_CMP ),
    .Y(\$procmux$11526_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11529  (
    .A(\$procmux$11526_Y ),
    .B(2'hx),
    .S(\$procmux$11530_CMP ),
    .Y(\$procmux$11529_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11532  (
    .A(\$procmux$11529_Y ),
    .B(2'hx),
    .S(\$procmux$11533_CMP ),
    .Y(\$procmux$11532_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11535  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$11536_CMP ),
    .Y(\$procmux$11535_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11538  (
    .A(\$procmux$11535_Y ),
    .B(2'hx),
    .S(\$procmux$11539_CMP ),
    .Y(\$procmux$11538_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11541  (
    .A(\$procmux$11538_Y ),
    .B(2'hx),
    .S(\$procmux$11542_CMP ),
    .Y(\$procmux$11541_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11545  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$11546_CMP ),
    .Y(\$procmux$11545_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11548  (
    .A(\$procmux$11545_Y ),
    .B(2'hx),
    .S(\$procmux$11549_CMP ),
    .Y(\$procmux$11548_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11552  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$11553_CMP ),
    .Y(\$procmux$11552_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$11525_CMP  = down_i;
  assign \$procmux$11527_CMP  = en_i;
  assign \$procmux$11530_CMP  = load_i;
  assign \$procmux$11533_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$11532_Y ;
  assign \$procmux$11536_CMP  = en_i;
  assign \$procmux$11539_CMP  = load_i;
  assign \$procmux$11542_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$11541_Y ;
  assign \$procmux$11546_CMP  = load_i;
  assign \$procmux$11549_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$11548_Y ;
  assign \$procmux$11553_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$11552_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/common_cells/delta_counter.sv:13.8" */
module \delta_counter$croc_chip.i_croc_soc.i_user.i_obi_demux.i_counter (clk_i, rst_ni, clear_i, en_i, load_i, down_i, delta_i, d_i, q_o, overflow_o);
  wire [1:0] \$1y ;
  wire [1:0] \$2y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16" */
  wire [1:0] \$counter_d$3 ;
  /* src = "rtl/common_cells/delta_counter.sv:67.18-73.12" */
  wire [1:0] \$counter_d$4 ;
  /* src = "rtl/common_cells/delta_counter.sv:65.18-73.12" */
  wire [1:0] \$counter_d$5 ;
  /* src = "rtl/common_cells/delta_counter.sv:63.9-73.12" */
  wire [1:0] \$counter_d$6 ;
  wire [1:0] \$procmux$10857_Y ;
  wire \$procmux$10858_CMP ;
  wire [1:0] \$procmux$10859_Y ;
  wire \$procmux$10860_CMP ;
  wire [1:0] \$procmux$10862_Y ;
  wire \$procmux$10863_CMP ;
  wire [1:0] \$procmux$10865_Y ;
  wire \$procmux$10866_CMP ;
  wire [1:0] \$procmux$10868_Y ;
  wire \$procmux$10869_CMP ;
  wire [1:0] \$procmux$10871_Y ;
  wire \$procmux$10872_CMP ;
  wire [1:0] \$procmux$10874_Y ;
  wire \$procmux$10875_CMP ;
  wire [1:0] \$procmux$10878_Y ;
  wire \$procmux$10879_CMP ;
  wire [1:0] \$procmux$10881_Y ;
  wire \$procmux$10882_CMP ;
  wire [1:0] \$procmux$10885_Y ;
  wire \$procmux$10886_CMP ;
  /* src = "rtl/common_cells/delta_counter.sv:19.30" */
  input clear_i;
  wire clear_i;
  /* src = "rtl/common_cells/delta_counter.sv:17.30" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/delta_counter.sv:28.32" */
  wire [1:0] counter_d;
  /* src = "rtl/common_cells/delta_counter.sv:28.21" */
  wire [1:0] counter_q;
  /* src = "rtl/common_cells/delta_counter.sv:24.30" */
  input d_i;
  wire d_i;
  /* src = "rtl/common_cells/delta_counter.sv:23.30" */
  input delta_i;
  wire delta_i;
  /* src = "rtl/common_cells/delta_counter.sv:22.30" */
  input down_i;
  wire down_i;
  /* src = "rtl/common_cells/delta_counter.sv:20.30" */
  input en_i;
  wire en_i;
  /* src = "rtl/common_cells/delta_counter.sv:21.30" */
  input load_i;
  wire load_i;
  /* src = "rtl/common_cells/delta_counter.sv:26.30" */
  output overflow_o;
  wire overflow_o;
  /* src = "rtl/common_cells/delta_counter.sv:25.30" */
  output q_o;
  wire q_o;
  /* src = "rtl/common_cells/delta_counter.sv:18.30" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/delta_counter.sv:69.29-69.48" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$1  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:71.29-71.48" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$2  (
    .A(counter_q),
    .B({ 1'h0, delta_i }),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:76.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$counter_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(counter_d),
    .Q(counter_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:69.17-69.49|rtl/common_cells/delta_counter.sv:68.13-72.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10857  (
    .A(\$2y ),
    .B(\$1y ),
    .S(\$procmux$10858_CMP ),
    .Y(\$procmux$10857_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10859  (
    .A(2'hx),
    .B(\$procmux$10857_Y ),
    .S(\$procmux$10860_CMP ),
    .Y(\$procmux$10859_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10862  (
    .A(\$procmux$10859_Y ),
    .B(2'hx),
    .S(\$procmux$10863_CMP ),
    .Y(\$procmux$10862_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10865  (
    .A(\$procmux$10862_Y ),
    .B(2'hx),
    .S(\$procmux$10866_CMP ),
    .Y(\$procmux$10865_Y )
  );
  /* src = "rtl/common_cells/delta_counter.sv:68.13-72.16|rtl/common_cells/delta_counter.sv:67.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10868  (
    .A(counter_q),
    .B(\$counter_d$3 ),
    .S(\$procmux$10869_CMP ),
    .Y(\$procmux$10868_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10871  (
    .A(\$procmux$10868_Y ),
    .B(2'hx),
    .S(\$procmux$10872_CMP ),
    .Y(\$procmux$10871_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10874  (
    .A(\$procmux$10871_Y ),
    .B(2'hx),
    .S(\$procmux$10875_CMP ),
    .Y(\$procmux$10874_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:66.13-66.37|rtl/common_cells/delta_counter.sv:65.18-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10878  (
    .A(\$counter_d$4 ),
    .B({ 1'h0, d_i }),
    .S(\$procmux$10879_CMP ),
    .Y(\$procmux$10878_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10881  (
    .A(\$procmux$10878_Y ),
    .B(2'hx),
    .S(\$procmux$10882_CMP ),
    .Y(\$procmux$10881_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/delta_counter.sv:64.13-64.28|rtl/common_cells/delta_counter.sv:63.9-73.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10885  (
    .A(\$counter_d$5 ),
    .B(2'h0),
    .S(\$procmux$10886_CMP ),
    .Y(\$procmux$10885_Y )
  );
  assign overflow_o = counter_q[1];
  assign q_o = counter_q[0];
  assign counter_d = \$counter_d$6 ;
  assign \$procmux$10858_CMP  = down_i;
  assign \$procmux$10860_CMP  = en_i;
  assign \$procmux$10863_CMP  = load_i;
  assign \$procmux$10866_CMP  = clear_i;
  assign \$counter_d$3  = \$procmux$10865_Y ;
  assign \$procmux$10869_CMP  = en_i;
  assign \$procmux$10872_CMP  = load_i;
  assign \$procmux$10875_CMP  = clear_i;
  assign \$counter_d$4  = \$procmux$10874_Y ;
  assign \$procmux$10879_CMP  = load_i;
  assign \$procmux$10882_CMP  = clear_i;
  assign \$counter_d$5  = \$procmux$10881_Y ;
  assign \$procmux$10886_CMP  = clear_i;
  assign \$counter_d$6  = \$procmux$10885_Y ;
  assign \$9y  = rst_ni;
endmodule

/* src = "rtl/riscv-dbg/dm_csrs.sv:18.8" */
module \dm_csrs$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_csrs (clk_i, rst_ni, testmode_i, unavailable_i, hartinfo_i, dmi_rst_ni, dmi_req_valid_i, dmi_req_ready_o, dmi_req_i, dmi_resp_valid_o, dmi_resp_ready_i, dmi_resp_o, ndmreset_o, dmactive_o, next_dm_addr_i, ndmreset_ack_i, data_i, data_o, halted_i, resumeack_i, hartsel_o
, haltreq_o, resumereq_o, clear_resumeack_o, cmd_valid_o, cmd_o, cmderror_valid_i, cmderror_i, cmdbusy_i, progbuf_o, data_valid_i, sbaddress_o, sbaddress_i, sbaddress_write_valid_o, sbreadonaddr_o, sbautoincrement_o, sbaccess_o, sbreadondata_o, sbdata_o, sbdata_read_valid_o, sbdata_write_valid_o, sbdata_i
, sbdata_valid_i, sbbusy_i, sberror_valid_i, sberror_i);
  wire \$100y ;
  wire [31:0] \$101y ;
  wire [31:0] \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$105y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$109y ;
  wire \$110y ;
  wire [31:0] \$111y ;
  wire [31:0] \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$115y ;
  wire \$116y ;
  wire \$117y ;
  wire \$122y ;
  wire \$123y ;
  wire \$124y ;
  wire \$125y ;
  wire \$126y ;
  wire \$127y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$130y ;
  wire \$131y ;
  wire \$135y ;
  wire \$136y ;
  wire \$13y ;
  wire \$149y ;
  wire \$14y ;
  wire \$150y ;
  wire \$151y ;
  wire \$152y ;
  wire \$153y ;
  wire \$154y ;
  wire \$155y ;
  wire \$156y ;
  wire \$157y ;
  wire \$158y ;
  wire [31:0] \$159y ;
  wire [31:0] \$15y ;
  wire [63:0] \$160y ;
  wire [63:0] \$161y ;
  wire [63:0] \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$165y ;
  wire \$166y ;
  wire \$176y ;
  wire \$177y ;
  wire \$178y ;
  wire \$179y ;
  wire \$180y ;
  wire [1:0] \$181y ;
  wire [1:0] \$182y ;
  wire [1:0] \$183y ;
  wire \$185y ;
  wire \$186y ;
  wire \$187y ;
  wire \$188y ;
  wire [2:0] \$189y ;
  wire \$18y ;
  wire [2:0] \$190y ;
  wire \$191y ;
  wire \$195y ;
  wire \$196y ;
  wire \$197y ;
  wire \$19y ;
  wire \$1y ;
  wire \$203y ;
  wire \$204y ;
  wire \$205y ;
  wire \$206y ;
  wire \$20y ;
  wire \$211y ;
  wire \$212y ;
  wire \$213y ;
  wire \$214y ;
  wire \$215y ;
  wire \$216y ;
  wire \$217y ;
  wire [31:0] \$218y ;
  wire [255:0] \$219y ;
  wire \$21y ;
  wire [255:0] \$220y ;
  wire [255:0] \$221y ;
  wire \$222y ;
  wire \$223y ;
  wire \$224y ;
  wire \$225y ;
  wire \$231y ;
  wire \$232y ;
  wire \$233y ;
  wire \$234y ;
  wire [2:0] \$235y ;
  wire \$239y ;
  wire [7:0] \$23y ;
  wire \$240y ;
  wire \$241y ;
  wire \$246y ;
  wire \$247y ;
  wire \$251y ;
  wire \$252y ;
  wire \$253y ;
  wire \$258y ;
  wire \$259y ;
  wire \$25y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$300y ;
  wire \$301y ;
  wire \$303y ;
  wire [31:0] \$305y ;
  wire \$307y ;
  wire \$308y ;
  wire \$309y ;
  wire \$30y ;
  wire \$310y ;
  wire \$311y ;
  wire \$312y ;
  wire \$313y ;
  wire \$314y ;
  wire \$315y ;
  wire \$316y ;
  wire \$317y ;
  wire \$31y ;
  wire \$320y ;
  wire \$321y ;
  wire \$322y ;
  wire \$324y ;
  wire \$325y ;
  wire \$326y ;
  wire \$327y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire [31:0] \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$70y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$85y ;
  wire [31:0] \$86y ;
  wire [31:0] \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$92y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire [31:0] \$9y ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$a_abstractcs$276 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$a_abstractcs$292 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  wire [31:0] \$abstractauto_d$209 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$abstractauto_d$267 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$abstractauto_d$283 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [31:0] \$abstractauto_q$332 ;
  wire [1:0] \$auto$rtlil.cc:2957:Not$13188 ;
  wire [1:0] \$auto$rtlil.cc:3004:And$13189 ;
  wire \$auto$rtlil.cc:3004:And$13191 ;
  wire \$auto$rtlil.cc:3004:And$13193 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:550.5-552.8" */
  wire \$clear_resumeack_o$302 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  wire \$cmd_valid_d$120 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  wire \$cmd_valid_d$140 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  wire \$cmd_valid_d$145 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  wire \$cmd_valid_d$169 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14" */
  wire \$cmd_valid_d$173 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  wire \$cmd_valid_d$201 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  wire \$cmd_valid_d$228 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire \$cmd_valid_d$266 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire \$cmd_valid_d$282 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  wire \$cmd_valid_d$95 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire \$cmd_valid_q$331 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:328.13-330.16" */
  wire [2:0] \$cmderr_d$118 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  wire [2:0] \$cmderr_d$119 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  wire [2:0] \$cmderr_d$139 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  wire [2:0] \$cmderr_d$144 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:382.15-384.18" */
  wire [2:0] \$cmderr_d$167 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  wire [2:0] \$cmderr_d$168 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14" */
  wire [2:0] \$cmderr_d$172 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:409.13-411.16" */
  wire [2:0] \$cmderr_d$192 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:405.11-412.14" */
  wire [2:0] \$cmderr_d$193 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:423.13-425.16" */
  wire [2:0] \$cmderr_d$198 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  wire [2:0] \$cmderr_d$199 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:437.13-439.16" */
  wire [2:0] \$cmderr_d$207 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  wire [2:0] \$cmderr_d$208 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:454.13-456.16" */
  wire [2:0] \$cmderr_d$226 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  wire [2:0] \$cmderr_d$227 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [2:0] \$cmderr_d$264 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [2:0] \$cmderr_d$280 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:514.5-516.8" */
  wire [2:0] \$cmderr_d$295 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:306.13-308.16" */
  wire [2:0] \$cmderr_d$93 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  wire [2:0] \$cmderr_d$94 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [2:0] \$cmderr_q$329 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  wire [31:0] \$command_d$200 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$command_d$265 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$command_d$281 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [31:0] \$command_q$330 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  wire [63:0] \$data_d$170 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14" */
  wire [63:0] \$data_d$174 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [63:0] \$data_d$272 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [63:0] \$data_d$288 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:519.5-521.8" */
  wire [63:0] \$data_d$296 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [63:0] \$data_q$337 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$dmcontrol_d$263 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$dmcontrol_d$279 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:553.5-555.8" */
  wire \$dmcontrol_d[30]$304 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [31:0] \$dmcontrol_q$328 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:576.5-579.8" */
  wire \$haltreq_o$318 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:116.5-118.8" */
  wire [31:0] \$haltsum0$4 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:133.5-135.8" */
  wire [31:0] \$haltsum1$10 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:150.5-152.8" */
  wire [31:0] \$haltsum2$16 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:391.11-393.14" */
  wire [1:0] \$havereset_d_aligned$184 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [1:0] \$havereset_d_aligned$274 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [1:0] \$havereset_d_aligned$290 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:524.5-526.8" */
  wire \$havereset_d_aligned[0]$297 ;
  wire \$procmux$7649_Y ;
  wire \$procmux$7650_CMP ;
  wire \$procmux$7652_Y ;
  wire \$procmux$7653_CMP ;
  wire [63:0] \$procmux$7655_Y ;
  wire \$procmux$7656_CMP ;
  wire [2:0] \$procmux$7658_Y ;
  wire \$procmux$7659_CMP ;
  wire \$procmux$7661_Y ;
  wire \$procmux$7662_CMP ;
  wire [63:0] \$procmux$7664_Y ;
  wire \$procmux$7665_CMP ;
  wire [2:0] \$procmux$7667_Y ;
  wire \$procmux$7668_CMP ;
  wire [1:0] \$procmux$7671_Y ;
  wire \$procmux$7672_CMP ;
  wire [1:0] \$procmux$7673_Y ;
  wire \$procmux$7674_CMP ;
  wire [1:0] \$procmux$7675_Y ;
  wire \$procmux$7676_CMP ;
  wire [31:0] \$procmux$7679_Y ;
  wire \$procmux$7680_CMP ;
  wire [31:0] \$procmux$7681_Y ;
  wire \$procmux$7682_CMP ;
  wire [31:0] \$procmux$7683_Y ;
  wire \$procmux$7684_CMP ;
  wire \$procmux$7687_Y ;
  wire \$procmux$7688_CMP ;
  wire \$procmux$7689_Y ;
  wire \$procmux$7690_CMP ;
  wire \$procmux$7691_Y ;
  wire \$procmux$7692_CMP ;
  wire [31:0] \$procmux$7695_Y ;
  wire \$procmux$7696_CMP ;
  wire [31:0] \$procmux$7697_Y ;
  wire \$procmux$7698_CMP ;
  wire [31:0] \$procmux$7702_Y ;
  wire \$procmux$7703_CMP ;
  wire [31:0] \$procmux$7704_Y ;
  wire \$procmux$7705_CMP ;
  wire [1:0] \$procmux$7709_Y ;
  wire \$procmux$7710_CMP ;
  wire [1:0] \$procmux$7711_Y ;
  wire \$procmux$7712_CMP ;
  wire [1:0] \$procmux$7713_Y ;
  wire \$procmux$7714_CMP ;
  wire [31:0] \$procmux$7718_Y ;
  wire \$procmux$7719_CMP ;
  wire [31:0] \$procmux$7720_Y ;
  wire \$procmux$7721_CMP ;
  wire [31:0] \$procmux$7722_Y ;
  wire \$procmux$7723_CMP ;
  wire \$procmux$7727_Y ;
  wire \$procmux$7728_CMP ;
  wire \$procmux$7729_Y ;
  wire \$procmux$7730_CMP ;
  wire \$procmux$7731_Y ;
  wire \$procmux$7732_CMP ;
  wire [1:0] \$procmux$7737_Y ;
  wire \$procmux$7738_CMP ;
  wire [1:0] \$procmux$7739_Y ;
  wire \$procmux$7740_CMP ;
  wire [1:0] \$procmux$7741_Y ;
  wire \$procmux$7742_CMP ;
  wire [31:0] \$procmux$7747_Y ;
  wire \$procmux$7748_CMP ;
  wire [31:0] \$procmux$7749_Y ;
  wire \$procmux$7750_CMP ;
  wire [31:0] \$procmux$7751_Y ;
  wire \$procmux$7752_CMP ;
  wire \$procmux$7757_Y ;
  wire \$procmux$7758_CMP ;
  wire \$procmux$7759_Y ;
  wire \$procmux$7760_CMP ;
  wire \$procmux$7761_Y ;
  wire \$procmux$7762_CMP ;
  wire [31:0] \$procmux$7767_Y ;
  wire \$procmux$7768_CMP ;
  wire [31:0] \$procmux$7769_Y ;
  wire \$procmux$7770_CMP ;
  wire [31:0] \$procmux$7776_Y ;
  wire \$procmux$7777_CMP ;
  wire [31:0] \$procmux$7778_Y ;
  wire \$procmux$7779_CMP ;
  wire \$procmux$7782_Y ;
  wire \$procmux$7783_CMP ;
  wire \$procmux$7785_CMP ;
  wire \$procmux$7787_CMP ;
  wire \$procmux$7789_CMP ;
  wire \$procmux$7791_CMP ;
  wire \$procmux$7792_Y ;
  wire \$procmux$7793_CMP ;
  wire [21:0] \$procmux$7800_Y ;
  wire \$procmux$7801_CMP ;
  wire [21:0] \$procmux$7802_Y ;
  wire \$procmux$7803_CMP ;
  wire [1:0] \$procmux$7809_Y ;
  wire \$procmux$7810_CMP ;
  wire [1:0] \$procmux$7811_Y ;
  wire \$procmux$7812_CMP ;
  wire [1:0] \$procmux$7813_Y ;
  wire \$procmux$7814_CMP ;
  wire [31:0] \$procmux$7820_Y ;
  wire \$procmux$7821_CMP ;
  wire [31:0] \$procmux$7822_Y ;
  wire \$procmux$7823_CMP ;
  wire [31:0] \$procmux$7824_Y ;
  wire \$procmux$7825_CMP ;
  wire \$procmux$7831_Y ;
  wire \$procmux$7832_CMP ;
  wire \$procmux$7833_Y ;
  wire \$procmux$7834_CMP ;
  wire \$procmux$7835_Y ;
  wire \$procmux$7836_CMP ;
  wire [8:0] \$procmux$7843_Y ;
  wire \$procmux$7844_CMP ;
  wire [8:0] \$procmux$7845_Y ;
  wire \$procmux$7846_CMP ;
  wire [8:0] \$procmux$7847_Y ;
  wire \$procmux$7848_CMP ;
  wire [21:0] \$procmux$7855_Y ;
  wire \$procmux$7856_CMP ;
  wire [21:0] \$procmux$7857_Y ;
  wire \$procmux$7858_CMP ;
  wire [21:0] \$procmux$7859_Y ;
  wire \$procmux$7860_CMP ;
  wire [31:0] \$procmux$7867_Y ;
  wire \$procmux$7868_CMP ;
  wire [31:0] \$procmux$7869_Y ;
  wire \$procmux$7870_CMP ;
  wire [31:0] \$procmux$7871_Y ;
  wire \$procmux$7872_CMP ;
  wire [1:0] \$procmux$7879_Y ;
  wire \$procmux$7880_CMP ;
  wire [1:0] \$procmux$7881_Y ;
  wire \$procmux$7882_CMP ;
  wire [1:0] \$procmux$7883_Y ;
  wire \$procmux$7884_CMP ;
  wire \$procmux$7891_Y ;
  wire \$procmux$7892_CMP ;
  wire \$procmux$7893_Y ;
  wire \$procmux$7894_CMP ;
  wire \$procmux$7895_Y ;
  wire \$procmux$7896_CMP ;
  wire [2:0] \$procmux$7903_Y ;
  wire \$procmux$7904_CMP ;
  wire [2:0] \$procmux$7906_Y ;
  wire \$procmux$7907_CMP ;
  wire [2:0] \$procmux$7908_Y ;
  wire \$procmux$7909_CMP ;
  wire [2:0] \$procmux$7910_Y ;
  wire \$procmux$7911_CMP ;
  wire [1:0] \$procmux$7920_Y ;
  wire \$procmux$7921_CMP ;
  wire [1:0] \$procmux$7922_Y ;
  wire \$procmux$7923_CMP ;
  wire [1:0] \$procmux$7924_Y ;
  wire \$procmux$7925_CMP ;
  wire [255:0] \$procmux$7933_Y ;
  wire \$procmux$7934_CMP ;
  wire [255:0] \$procmux$7935_Y ;
  wire \$procmux$7936_CMP ;
  wire [255:0] \$procmux$7937_Y ;
  wire \$procmux$7938_CMP ;
  wire \$procmux$7946_Y ;
  wire \$procmux$7947_CMP ;
  wire \$procmux$7948_Y ;
  wire \$procmux$7949_CMP ;
  wire \$procmux$7950_Y ;
  wire \$procmux$7951_CMP ;
  wire [2:0] \$procmux$7960_Y ;
  wire \$procmux$7961_CMP ;
  wire [2:0] \$procmux$7962_Y ;
  wire \$procmux$7963_CMP ;
  wire [2:0] \$procmux$7964_Y ;
  wire \$procmux$7965_CMP ;
  wire [2:0] \$procmux$7973_Y ;
  wire \$procmux$7974_CMP ;
  wire [2:0] \$procmux$7976_Y ;
  wire \$procmux$7977_CMP ;
  wire [2:0] \$procmux$7978_Y ;
  wire \$procmux$7979_CMP ;
  wire [2:0] \$procmux$7980_Y ;
  wire \$procmux$7981_CMP ;
  wire [1:0] \$procmux$7991_Y ;
  wire \$procmux$7992_CMP ;
  wire [1:0] \$procmux$7993_Y ;
  wire \$procmux$7994_CMP ;
  wire [1:0] \$procmux$7995_Y ;
  wire \$procmux$7996_CMP ;
  wire [31:0] \$procmux$8005_Y ;
  wire \$procmux$8006_CMP ;
  wire [31:0] \$procmux$8007_Y ;
  wire \$procmux$8008_CMP ;
  wire [31:0] \$procmux$8009_Y ;
  wire \$procmux$8010_CMP ;
  wire [2:0] \$procmux$8020_Y ;
  wire \$procmux$8021_CMP ;
  wire [2:0] \$procmux$8022_Y ;
  wire \$procmux$8023_CMP ;
  wire [2:0] \$procmux$8024_Y ;
  wire \$procmux$8025_CMP ;
  wire [2:0] \$procmux$8035_Y ;
  wire \$procmux$8036_CMP ;
  wire [2:0] \$procmux$8038_Y ;
  wire \$procmux$8039_CMP ;
  wire [2:0] \$procmux$8040_Y ;
  wire \$procmux$8041_CMP ;
  wire [2:0] \$procmux$8042_Y ;
  wire \$procmux$8043_CMP ;
  wire [1:0] \$procmux$8055_Y ;
  wire \$procmux$8056_CMP ;
  wire [1:0] \$procmux$8057_Y ;
  wire \$procmux$8058_CMP ;
  wire [1:0] \$procmux$8059_Y ;
  wire \$procmux$8060_CMP ;
  wire \$procmux$8071_Y ;
  wire \$procmux$8072_CMP ;
  wire \$procmux$8073_Y ;
  wire \$procmux$8074_CMP ;
  wire \$procmux$8075_Y ;
  wire \$procmux$8076_CMP ;
  wire [31:0] \$procmux$8087_Y ;
  wire \$procmux$8088_CMP ;
  wire [31:0] \$procmux$8089_Y ;
  wire \$procmux$8090_CMP ;
  wire [31:0] \$procmux$8091_Y ;
  wire \$procmux$8092_CMP ;
  wire [2:0] \$procmux$8104_Y ;
  wire \$procmux$8105_CMP ;
  wire [2:0] \$procmux$8106_Y ;
  wire \$procmux$8107_CMP ;
  wire [2:0] \$procmux$8108_Y ;
  wire \$procmux$8109_CMP ;
  wire [2:0] \$procmux$8120_Y ;
  wire \$procmux$8121_CMP ;
  wire [2:0] \$procmux$8123_Y ;
  wire \$procmux$8124_CMP ;
  wire [2:0] \$procmux$8125_Y ;
  wire \$procmux$8126_CMP ;
  wire [2:0] \$procmux$8127_Y ;
  wire \$procmux$8128_CMP ;
  wire [2:0] \$procmux$8141_Y ;
  wire \$procmux$8142_CMP ;
  wire [2:0] \$procmux$8143_Y ;
  wire \$procmux$8144_CMP ;
  wire [2:0] \$procmux$8145_Y ;
  wire \$procmux$8146_CMP ;
  wire [1:0] \$procmux$8159_Y ;
  wire \$procmux$8160_CMP ;
  wire [1:0] \$procmux$8161_Y ;
  wire \$procmux$8162_CMP ;
  wire [1:0] \$procmux$8163_Y ;
  wire \$procmux$8164_CMP ;
  wire [1:0] \$procmux$8178_Y ;
  wire \$procmux$8179_CMP ;
  wire [1:0] \$procmux$8180_Y ;
  wire \$procmux$8181_CMP ;
  wire [1:0] \$procmux$8182_Y ;
  wire \$procmux$8183_CMP ;
  wire [1:0] \$procmux$8199_Y ;
  wire \$procmux$8200_CMP ;
  wire [1:0] \$procmux$8201_Y ;
  wire \$procmux$8202_CMP ;
  wire [63:0] \$procmux$8218_Y ;
  wire \$procmux$8219_CMP ;
  wire [63:0] \$procmux$8220_Y ;
  wire \$procmux$8221_CMP ;
  wire \$procmux$8237_Y ;
  wire \$procmux$8238_CMP ;
  wire \$procmux$8239_Y ;
  wire \$procmux$8240_CMP ;
  wire [2:0] \$procmux$8256_Y ;
  wire \$procmux$8257_CMP ;
  wire [2:0] \$procmux$8258_Y ;
  wire \$procmux$8259_CMP ;
  wire [2:0] \$procmux$8274_Y ;
  wire \$procmux$8275_CMP ;
  wire [2:0] \$procmux$8277_Y ;
  wire \$procmux$8278_CMP ;
  wire [2:0] \$procmux$8279_Y ;
  wire \$procmux$8280_CMP ;
  wire [2:0] \$procmux$8281_Y ;
  wire \$procmux$8282_CMP ;
  wire [1:0] \$procmux$8299_Y ;
  wire \$procmux$8300_CMP ;
  wire [1:0] \$procmux$8301_Y ;
  wire \$procmux$8302_CMP ;
  wire [1:0] \$procmux$8303_Y ;
  wire \$procmux$8304_CMP ;
  wire [63:0] \$procmux$8320_Y ;
  wire \$procmux$8321_CMP ;
  wire [63:0] \$procmux$8322_Y ;
  wire \$procmux$8323_CMP ;
  wire [63:0] \$procmux$8324_Y ;
  wire \$procmux$8325_CMP ;
  wire \$procmux$8341_Y ;
  wire \$procmux$8342_CMP ;
  wire \$procmux$8343_Y ;
  wire \$procmux$8344_CMP ;
  wire \$procmux$8345_Y ;
  wire \$procmux$8346_CMP ;
  wire [2:0] \$procmux$8363_Y ;
  wire \$procmux$8364_CMP ;
  wire [2:0] \$procmux$8365_Y ;
  wire \$procmux$8366_CMP ;
  wire [2:0] \$procmux$8367_Y ;
  wire \$procmux$8368_CMP ;
  wire \$procmux$8372_Y ;
  wire \$procmux$8373_CMP ;
  wire \$procmux$8374_Y ;
  wire \$procmux$8375_CMP ;
  wire \$procmux$8381_Y ;
  wire \$procmux$8382_CMP ;
  wire \$procmux$8383_Y ;
  wire \$procmux$8384_CMP ;
  wire [31:0] \$procmux$8396_Y ;
  wire \$procmux$8397_CMP ;
  wire [31:0] \$procmux$8398_Y ;
  wire \$procmux$8399_CMP ;
  wire [31:0] \$procmux$8406_Y ;
  wire \$procmux$8407_CMP ;
  wire [31:0] \$procmux$8408_Y ;
  wire \$procmux$8409_CMP ;
  wire [1:0] \$procmux$8424_Y ;
  wire \$procmux$8425_CMP ;
  wire [1:0] \$procmux$8426_Y ;
  wire \$procmux$8427_CMP ;
  wire [1:0] \$procmux$8430_Y ;
  wire \$procmux$8431_CMP ;
  wire \$procmux$8433_CMP ;
  wire \$procmux$8435_CMP ;
  wire \$procmux$8437_CMP ;
  wire \$procmux$8439_CMP ;
  wire \$procmux$8441_CMP ;
  wire \$procmux$8443_CMP ;
  wire \$procmux$8445_CMP ;
  wire \$procmux$8447_CMP ;
  wire \$procmux$8449_CMP ;
  wire [1:0] \$procmux$8450_Y ;
  wire \$procmux$8451_CMP ;
  wire [63:0] \$procmux$8467_Y ;
  wire \$procmux$8468_CMP ;
  wire [63:0] \$procmux$8469_Y ;
  wire \$procmux$8470_CMP ;
  wire [255:0] \$procmux$8478_Y ;
  wire \$procmux$8479_CMP ;
  wire [255:0] \$procmux$8480_Y ;
  wire \$procmux$8481_CMP ;
  wire \$procmux$8485_Y ;
  wire \$procmux$8486_CMP ;
  wire \$procmux$8487_Y ;
  wire \$procmux$8488_CMP ;
  wire \$procmux$8489_Y ;
  wire \$procmux$8490_CMP ;
  wire [8:0] \$procmux$8497_Y ;
  wire \$procmux$8498_CMP ;
  wire [8:0] \$procmux$8499_Y ;
  wire \$procmux$8500_CMP ;
  wire \$procmux$8506_Y ;
  wire \$procmux$8507_CMP ;
  wire \$procmux$8508_Y ;
  wire \$procmux$8509_CMP ;
  wire \$procmux$8510_Y ;
  wire \$procmux$8511_CMP ;
  wire [31:0] \$procmux$8520_Y ;
  wire \$procmux$8521_CMP ;
  wire [31:0] \$procmux$8522_Y ;
  wire \$procmux$8523_CMP ;
  wire \$procmux$8531_Y ;
  wire \$procmux$8532_CMP ;
  wire \$procmux$8534_CMP ;
  wire \$procmux$8536_CMP ;
  wire \$procmux$8537_Y ;
  wire \$procmux$8538_CMP ;
  wire [31:0] \$procmux$8549_Y ;
  wire \$procmux$8550_CMP ;
  wire [31:0] \$procmux$8551_Y ;
  wire \$procmux$8552_CMP ;
  wire [2:0] \$procmux$8560_Y ;
  wire \$procmux$8561_CMP ;
  wire \$procmux$8563_CMP ;
  wire \$procmux$8565_CMP ;
  wire \$procmux$8567_CMP ;
  wire \$procmux$8569_CMP ;
  wire [2:0] \$procmux$8570_Y ;
  wire \$procmux$8571_CMP ;
  wire [31:0] \$procmux$8586_Y ;
  wire \$procmux$8587_CMP ;
  wire [31:0] \$procmux$8588_Y ;
  wire \$procmux$8589_CMP ;
  wire \$procmux$8592_Y ;
  wire \$procmux$8593_CMP ;
  wire \$procmux$8596_Y ;
  wire \$procmux$8597_CMP ;
  wire [31:0] \$procmux$8600_Y ;
  wire \$procmux$8601_CMP ;
  wire [31:0] \$procmux$8604_Y ;
  wire \$procmux$8605_CMP ;
  wire [1:0] \$procmux$8608_Y ;
  wire \$procmux$8609_CMP ;
  wire [1:0] \$procmux$8612_Y ;
  wire \$procmux$8613_CMP ;
  wire [63:0] \$procmux$8616_Y ;
  wire \$procmux$8617_CMP ;
  wire [255:0] \$procmux$8620_Y ;
  wire \$procmux$8621_CMP ;
  wire [63:0] \$procmux$8624_Y ;
  wire \$procmux$8625_CMP ;
  wire [63:0] \$procmux$8628_Y ;
  wire \$procmux$8629_CMP ;
  wire [31:0] \$procmux$8632_Y ;
  wire \$procmux$8633_CMP ;
  wire [31:0] \$procmux$8636_Y ;
  wire \$procmux$8637_CMP ;
  wire \$procmux$8640_Y ;
  wire \$procmux$8641_CMP ;
  wire [31:0] \$procmux$8644_Y ;
  wire \$procmux$8645_CMP ;
  wire [2:0] \$procmux$8648_Y ;
  wire \$procmux$8649_CMP ;
  wire [31:0] \$procmux$8652_Y ;
  wire \$procmux$8653_CMP ;
  wire [31:0] \$procmux$8656_Y ;
  wire \$procmux$8657_CMP ;
  wire \$procmux$8659_CMP ;
  wire \$procmux$8660_CMP ;
  wire \$procmux$8661_CMP ;
  wire \$procmux$8662_CMP ;
  wire \$procmux$8663_CMP ;
  wire \$procmux$8664_CMP ;
  wire \$procmux$8665_CMP ;
  wire \$procmux$8666_CMP ;
  wire \$procmux$8668_CMP ;
  wire \$procmux$8669_CMP ;
  wire \$procmux$8670_CMP ;
  wire \$procmux$8671_CMP ;
  wire \$procmux$8672_CMP ;
  wire \$procmux$8673_CMP ;
  wire \$procmux$8674_CMP ;
  wire \$procmux$8676_CMP ;
  wire [31:0] \$procmux$8677_Y ;
  wire \$procmux$8678_CMP ;
  wire [1:0] \$procmux$8681_Y ;
  wire \$procmux$8682_CMP ;
  wire [1:0] \$procmux$8683_Y ;
  wire \$procmux$8684_CMP ;
  wire [1:0] \$procmux$8685_Y ;
  wire \$procmux$8686_CMP ;
  wire \$procmux$8689_Y ;
  wire \$procmux$8690_CMP ;
  wire \$procmux$8691_Y ;
  wire \$procmux$8692_CMP ;
  wire \$procmux$8693_Y ;
  wire \$procmux$8694_CMP ;
  wire [1:0] \$procmux$8697_Y ;
  wire \$procmux$8698_CMP ;
  wire \$procmux$8700_CMP ;
  wire \$procmux$8702_CMP ;
  wire \$procmux$8704_CMP ;
  wire [1:0] \$procmux$8705_Y ;
  wire \$procmux$8706_CMP ;
  wire [1:0] \$procmux$8710_Y ;
  wire \$procmux$8711_CMP ;
  wire [1:0] \$procmux$8712_Y ;
  wire \$procmux$8713_CMP ;
  wire [1:0] \$procmux$8714_Y ;
  wire \$procmux$8715_CMP ;
  wire \$procmux$8719_Y ;
  wire \$procmux$8720_CMP ;
  wire \$procmux$8721_Y ;
  wire \$procmux$8722_CMP ;
  wire \$procmux$8723_Y ;
  wire \$procmux$8724_CMP ;
  wire \$procmux$8728_Y ;
  wire \$procmux$8729_CMP ;
  wire \$procmux$8730_Y ;
  wire \$procmux$8731_CMP ;
  wire \$procmux$8732_Y ;
  wire \$procmux$8733_CMP ;
  wire [31:0] \$procmux$8736_Y ;
  wire \$procmux$8737_CMP ;
  wire [31:0] \$procmux$8738_Y ;
  wire \$procmux$8739_CMP ;
  wire [31:0] \$procmux$8740_Y ;
  wire \$procmux$8741_CMP ;
  wire [1:0] \$procmux$8754_Y ;
  wire \$procmux$8755_CMP ;
  wire [1:0] \$procmux$8756_Y ;
  wire \$procmux$8757_CMP ;
  wire [1:0] \$procmux$8758_Y ;
  wire \$procmux$8759_CMP ;
  wire \$procmux$8771_Y ;
  wire \$procmux$8772_CMP ;
  wire \$procmux$8773_Y ;
  wire \$procmux$8774_CMP ;
  wire \$procmux$8775_Y ;
  wire \$procmux$8776_CMP ;
  wire [2:0] \$procmux$8789_Y ;
  wire \$procmux$8790_CMP ;
  wire [2:0] \$procmux$8791_Y ;
  wire \$procmux$8792_CMP ;
  wire [2:0] \$procmux$8793_Y ;
  wire \$procmux$8794_CMP ;
  wire [31:0] \$procmux$8798_Y ;
  wire \$procmux$8799_CMP ;
  wire [31:0] \$procmux$8800_Y ;
  wire \$procmux$8801_CMP ;
  wire [31:0] \$procmux$8802_Y ;
  wire \$procmux$8803_CMP ;
  wire [2:0] \$procmux$8814_Y ;
  wire \$procmux$8815_CMP ;
  wire [2:0] \$procmux$8817_Y ;
  wire \$procmux$8818_CMP ;
  wire [2:0] \$procmux$8819_Y ;
  wire \$procmux$8820_CMP ;
  wire [2:0] \$procmux$8821_Y ;
  wire \$procmux$8822_CMP ;
  wire [1:0] \$procmux$8843_Y ;
  wire \$procmux$8844_CMP ;
  wire [1:0] \$procmux$8845_Y ;
  wire \$procmux$8846_CMP ;
  wire [1:0] \$procmux$8847_Y ;
  wire \$procmux$8848_CMP ;
  wire \$procmux$8868_Y ;
  wire \$procmux$8869_CMP ;
  wire \$procmux$8870_Y ;
  wire \$procmux$8871_CMP ;
  wire \$procmux$8872_Y ;
  wire \$procmux$8873_CMP ;
  wire [2:0] \$procmux$8894_Y ;
  wire \$procmux$8895_CMP ;
  wire [2:0] \$procmux$8896_Y ;
  wire \$procmux$8897_CMP ;
  wire [2:0] \$procmux$8898_Y ;
  wire \$procmux$8899_CMP ;
  wire \$procmux$8903_Y ;
  wire \$procmux$8904_CMP ;
  wire \$procmux$8905_Y ;
  wire \$procmux$8906_CMP ;
  wire [2:0] \$procmux$8925_Y ;
  wire \$procmux$8926_CMP ;
  wire [2:0] \$procmux$8928_Y ;
  wire \$procmux$8929_CMP ;
  wire [2:0] \$procmux$8930_Y ;
  wire \$procmux$8931_CMP ;
  wire [2:0] \$procmux$8932_Y ;
  wire \$procmux$8933_CMP ;
  wire \$procmux$8936_Y ;
  wire \$procmux$8937_CMP ;
  wire \$procmux$8939_CMP ;
  wire \$procmux$8940_Y ;
  wire \$procmux$8941_CMP ;
  wire \$procmux$8953_Y ;
  wire \$procmux$8954_CMP ;
  wire \$procmux$8956_CMP ;
  wire \$procmux$8957_Y ;
  wire \$procmux$8958_CMP ;
  wire [2:0] \$procmux$8970_Y ;
  wire \$procmux$8971_CMP ;
  wire \$procmux$8973_CMP ;
  wire [2:0] \$procmux$8974_Y ;
  wire \$procmux$8975_CMP ;
  wire \$procmux$8977_Y ;
  wire \$procmux$8978_CMP ;
  wire [33:0] \$procmux$8980_Y ;
  wire \$procmux$8981_CMP ;
  wire \$procmux$8983_Y ;
  wire \$procmux$8984_CMP ;
  wire \$procmux$8986_Y ;
  wire \$procmux$8987_CMP ;
  wire [2:0] \$procmux$8989_Y ;
  wire \$procmux$8990_CMP ;
  wire [63:0] \$procmux$8992_Y ;
  wire \$procmux$8993_CMP ;
  wire [255:0] \$procmux$8995_Y ;
  wire \$procmux$8996_CMP ;
  wire [63:0] \$procmux$8998_Y ;
  wire \$procmux$8999_CMP ;
  wire [63:0] \$procmux$9001_Y ;
  wire \$procmux$9002_CMP ;
  wire [31:0] \$procmux$9004_Y ;
  wire \$procmux$9005_CMP ;
  wire [31:0] \$procmux$9007_Y ;
  wire \$procmux$9008_CMP ;
  wire \$procmux$9010_Y ;
  wire \$procmux$9011_CMP ;
  wire [31:0] \$procmux$9013_Y ;
  wire \$procmux$9014_CMP ;
  wire [2:0] \$procmux$9016_Y ;
  wire \$procmux$9017_CMP ;
  wire [31:0] \$procmux$9019_Y ;
  wire \$procmux$9020_CMP ;
  wire \$procmux$9021_Y ;
  wire \$procmux$9022_CMP ;
  wire \$procmux$9023_Y ;
  wire \$procmux$9024_CMP ;
  wire [31:0] \$procmux$9025_Y ;
  wire \$procmux$9026_CMP ;
  wire [31:0] \$procmux$9027_Y ;
  wire \$procmux$9028_CMP ;
  wire [31:0] \$procmux$9029_Y ;
  wire \$procmux$9030_CMP ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  wire [255:0] \$progbuf_d$229 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [255:0] \$progbuf_d$271 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [255:0] \$progbuf_d$287 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [255:0] \$progbuf_q$336 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  wire [33:0] \$resp_queue_inp$133 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14" */
  wire [33:0] \$resp_queue_inp$138 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  wire [33:0] \$resp_queue_inp$142 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  wire [33:0] \$resp_queue_inp$147 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  wire [1:0] \$resp_queue_inp[1:0]$121 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  wire [1:0] \$resp_queue_inp[1:0]$171 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14" */
  wire [1:0] \$resp_queue_inp[1:0]$175 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:405.11-412.14" */
  wire [1:0] \$resp_queue_inp[1:0]$194 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  wire [1:0] \$resp_queue_inp[1:0]$202 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  wire [1:0] \$resp_queue_inp[1:0]$210 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  wire [1:0] \$resp_queue_inp[1:0]$230 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  wire [1:0] \$resp_queue_inp[1:0]$237 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  wire [1:0] \$resp_queue_inp[1:0]$244 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  wire [1:0] \$resp_queue_inp[1:0]$250 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  wire [1:0] \$resp_queue_inp[1:0]$256 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  wire [1:0] \$resp_queue_inp[1:0]$262 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [1:0] \$resp_queue_inp[1:0]$273 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [1:0] \$resp_queue_inp[1:0]$289 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  wire [1:0] \$resp_queue_inp[1:0]$96 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:576.5-579.8" */
  wire \$resumereq_o$319 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [63:0] \$sbaddr_d$269 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [63:0] \$sbaddr_d$285 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  wire [31:0] \$sbaddr_d[31:0]$243 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  wire [31:0] \$sbaddr_d[63:32]$249 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [63:0] \$sbaddr_q$334 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  wire \$sbaddress_write_valid_o$245 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire \$sbaddress_write_valid_o$277 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire \$sbaddress_write_valid_o$293 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  wire [31:0] \$sbcs$238 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$sbcs$275 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$sbcs$291 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  wire [31:0] \$sbcs_d$236 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [31:0] \$sbcs_d$268 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [31:0] \$sbcs_d$284 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:531.5-533.8" */
  wire [2:0] \$sbcs_d[14:12]$298 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  wire \$sbcs_d[22]$132 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14" */
  wire \$sbcs_d[22]$137 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  wire \$sbcs_d[22]$141 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  wire \$sbcs_d[22]$146 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  wire \$sbcs_d[22]$242 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  wire \$sbcs_d[22]$248 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  wire \$sbcs_d[22]$254 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  wire \$sbcs_d[22]$260 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [31:0] \$sbcs_q$333 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire [63:0] \$sbdata_d$270 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire [63:0] \$sbdata_d$286 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:535.5-537.8" */
  wire [63:0] \$sbdata_d$299 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  wire [31:0] \$sbdata_d[31:0]$255 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  wire [31:0] \$sbdata_d[63:32]$261 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  wire [63:0] \$sbdata_q$335 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  wire \$sbdata_read_valid_o$134 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  wire \$sbdata_read_valid_o$143 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  wire \$sbdata_read_valid_o$148 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  wire \$sbdata_write_valid_o$257 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  wire \$sbdata_write_valid_o$278 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  wire \$sbdata_write_valid_o$294 ;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:218.20" */
  wire [31:0] a_abstractcs;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:171.23" */
  wire [31:0] abstractauto_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:171.39" */
  wire [31:0] abstractauto_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:167.23" */
  wire [31:0] abstractcs;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:219.15" */
  wire [3:0] autoexecdata_idx;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:50.45" */
  output clear_resumeack_o;
  wire clear_resumeack_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:23.45" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:53.45" */
  output [31:0] cmd_o;
  wire [31:0] cmd_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:170.23" */
  wire cmd_valid_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:52.45" */
  output cmd_valid_o;
  wire cmd_valid_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:170.36" */
  wire cmd_valid_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:56.45" */
  input cmdbusy_i;
  wire cmdbusy_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:168.23" */
  wire [2:0] cmderr_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:168.33" */
  wire [2:0] cmderr_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:55.45" */
  input [2:0] cmderror_i;
  wire [2:0] cmderror_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:54.45" */
  input cmderror_valid_i;
  wire cmderror_valid_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:169.23" */
  wire [31:0] command_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:169.34" */
  wire [31:0] command_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:179.35" */
  wire [63:0] data_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:61.45" */
  input [63:0] data_i;
  wire [63:0] data_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:59.45" */
  output [63:0] data_o;
  wire [63:0] data_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:179.43" */
  wire [63:0] data_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:62.45" */
  input data_valid_i;
  wire data_valid_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:216.16" */
  wire [7:0] dm_csr_addr;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:39.45" */
  output dmactive_o;
  wire dmactive_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:166.23" */
  wire [31:0] dmcontrol_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:166.36" */
  wire [31:0] dmcontrol_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:31.45" */
  input [40:0] dmi_req_i;
  wire [40:0] dmi_req_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:30.45" */
  output dmi_req_ready_o;
  wire dmi_req_ready_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:29.45" */
  input dmi_req_valid_i;
  wire dmi_req_valid_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:35.45" */
  output [33:0] dmi_resp_o;
  wire [33:0] dmi_resp_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:34.45" */
  input dmi_resp_ready_i;
  wire dmi_resp_ready_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:33.45" */
  output dmi_resp_valid_o;
  wire dmi_resp_valid_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:27.45" */
  input dmi_rst_ni;
  wire dmi_rst_ni;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:165.23" */
  wire [31:0] dmstatus;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:88.16" */
  wire [1:0] dtm_op;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:100.47" */
  wire [31:0] halted;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:201.30" */
  wire [1:0] halted_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:104.40" */
  wire [31:0] halted_flat1;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:105.40" */
  wire [31:0] halted_flat2;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:106.16" */
  wire [31:0] halted_flat3;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:43.45" */
  input halted_i;
  wire halted_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:101.36" */
  wire [31:0] halted_reshaped0;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:102.37" */
  wire [31:0] halted_reshaped1;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:103.37" */
  wire [31:0] halted_reshaped2;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:48.45" */
  output haltreq_o;
  wire haltreq_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:99.16" */
  wire [31:0] haltsum0;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:99.26" */
  wire [31:0] haltsum1;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:99.36" */
  wire [31:0] haltsum2;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:99.46" */
  wire [31:0] haltsum3;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:209.39" */
  wire [63:0] hartinfo_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:42.45" */
  input [31:0] hartinfo_i;
  wire [31:0] hartinfo_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:109.16" */
  wire [14:0] hartsel_idx0;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:122.15" */
  wire [9:0] hartsel_idx1;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:139.15" */
  wire [4:0] hartsel_idx2;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:47.45" */
  output [19:0] hartsel_o;
  wire [19:0] hartsel_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:176.23" */
  wire havereset_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:199.30" */
  wire [1:0] havereset_d_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:176.36" */
  wire havereset_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:199.51" */
  wire [1:0] havereset_q_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:38.45" */
  input ndmreset_ack_i;
  wire ndmreset_ack_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:37.45" */
  output ndmreset_o;
  wire ndmreset_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:25.45" */
  input [31:0] next_dm_addr_i;
  wire [31:0] next_dm_addr_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:178.37" */
  wire [255:0] progbuf_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:58.45" */
  output [255:0] progbuf_o;
  wire [255:0] progbuf_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:178.48" */
  wire [255:0] progbuf_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:92.16" */
  wire resp_queue_empty;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:91.16" */
  wire resp_queue_full;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:183.18" */
  wire [33:0] resp_queue_inp;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:94.16" */
  wire resp_queue_pop;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:93.16" */
  wire resp_queue_push;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:200.30" */
  wire [1:0] resumeack_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:45.45" */
  input resumeack_i;
  wire resumeack_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:49.45" */
  output resumereq_o;
  wire resumereq_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:24.45" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:70.45" */
  output [2:0] sbaccess_o;
  wire [2:0] sbaccess_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:173.23" */
  wire [63:0] sbaddr_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:173.33" */
  wire [63:0] sbaddr_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:65.45" */
  input [31:0] sbaddress_i;
  wire [31:0] sbaddress_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:64.45" */
  output [31:0] sbaddress_o;
  wire [31:0] sbaddress_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:66.45" */
  output sbaddress_write_valid_o;
  wire sbaddress_write_valid_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:69.45" */
  output sbautoincrement_o;
  wire sbautoincrement_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:80.45" */
  input sbbusy_i;
  wire sbbusy_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:217.14" */
  wire [31:0] sbcs;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:172.23" */
  wire [31:0] sbcs_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:172.31" */
  wire [31:0] sbcs_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:174.23" */
  wire [63:0] sbdata_d;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:77.45" */
  input [31:0] sbdata_i;
  wire [31:0] sbdata_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:73.45" */
  output [31:0] sbdata_o;
  wire [31:0] sbdata_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:174.33" */
  wire [63:0] sbdata_q;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:74.45" */
  output sbdata_read_valid_o;
  wire sbdata_read_valid_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:78.45" */
  input sbdata_valid_i;
  wire sbdata_valid_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:75.45" */
  output sbdata_write_valid_o;
  wire sbdata_write_valid_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:82.45" */
  input [2:0] sberror_i;
  wire [2:0] sberror_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:81.45" */
  input sberror_valid_i;
  wire sberror_valid_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:68.45" */
  output sbreadonaddr_o;
  wire sbreadonaddr_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:72.45" */
  output sbreadondata_o;
  wire sbreadondata_o;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:181.26" */
  wire selected_hart;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:26.45" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:200.49" */
  wire [1:0] unavailable_aligned;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:44.45" */
  input unavailable_i;
  wire unavailable_i;
  /* src = "rtl/riscv-dbg/dm_csrs.sv:116.9-116.47" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd15),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd15),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(hartsel_o[19:5]),
    .B(15'h0001),
    .Y(\$1y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:313.49-313.80" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$100  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$100y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:313.49-313.80" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$101  (
    .A(hartinfo_aligned),
    .S(selected_hart),
    .Y(\$101y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:313.49-313.80" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$102  (
    .A(32'hxxxxxxxx),
    .B(\$101y ),
    .S(\$100y ),
    .Y(\$102y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(dm_csr_addr),
    .B(8'h16),
    .Y(\$103y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(dm_csr_addr),
    .B(8'h18),
    .Y(\$104y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$105  (
    .A(dm_csr_addr),
    .B(8'h17),
    .Y(\$105y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(dm_csr_addr),
    .B(8'h1d),
    .Y(\$106y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(dm_csr_addr),
    .B(8'h20),
    .Y(\$107y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$108  (
    .A(dm_csr_addr),
    .B(8'h27),
    .Y(\$108y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$109  (
    .A(\$107y ),
    .B(\$108y ),
    .Y(\$109y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:319.33-319.87" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$110  (
    .A({ 1'h0, dmi_req_i[36:34] }),
    .B(5'h08),
    .Y(\$110y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:319.33-319.87" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$111  (
    .A(progbuf_q),
    .S(dmi_req_i[36:34]),
    .Y(\$111y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:319.33-319.87" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$112  (
    .A(32'hxxxxxxxx),
    .B(\$111y ),
    .S(\$110y ),
    .Y(\$112y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:320.15-320.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(cmdbusy_i),
    .Y(\$113y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.27-323.86" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$114  (
    .A({ 2'h1, dmi_req_i[37:34] }),
    .B(7'h20),
    .Y(\$114y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.27-323.86" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$115  (
    .A({ abstractauto_q[31:16], 16'hxxxx }),
    .S({ 1'h1, dmi_req_i[37:34] }),
    .Y(\$115y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.27-323.86" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$116  (
    .A(1'hx),
    .B(\$115y ),
    .S(\$114y ),
    .Y(\$116y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:328.17-328.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$117  (
    .A(cmderr_q),
    .Y(\$117y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(dm_csr_addr),
    .B(8'h40),
    .Y(\$122y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$123  (
    .A(dm_csr_addr),
    .B(8'h13),
    .Y(\$123y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(dm_csr_addr),
    .B(8'h34),
    .Y(\$124y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$125  (
    .A(dm_csr_addr),
    .B(8'h35),
    .Y(\$125y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(dm_csr_addr),
    .B(8'h38),
    .Y(\$126y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$127  (
    .A(dm_csr_addr),
    .B(8'h39),
    .Y(\$127y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(dm_csr_addr),
    .B(8'h3a),
    .Y(\$128y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(dm_csr_addr),
    .B(8'h3c),
    .Y(\$129y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:150.9-150.49" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(hartsel_o[19:15]),
    .B(5'h01),
    .Y(\$13y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.15-348.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$130  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$130y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:352.36-352.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(sbcs_q[14:12]),
    .Y(\$131y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$135  (
    .A(dm_csr_addr),
    .B(8'h3d),
    .Y(\$135y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.15-358.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$136y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:151.26-151.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, hartsel_o[19:15] }),
    .B(2'h1),
    .Y(\$14y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.9-370.43" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(dmi_req_ready_o),
    .B(dmi_req_valid_i),
    .Y(\$149y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:151.26-151.56" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$15  (
    .A(32'hxxxxxxxx),
    .B({ 31'h00000000, \$12y  }),
    .S(\$14y ),
    .Y(\$15y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.47-370.70" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$150  (
    .A(dtm_op),
    .B(2'h2),
    .Y(\$150y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:370.9-370.70" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(\$149y ),
    .B(\$150y ),
    .Y(\$151y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(dm_csr_addr),
    .B(8'h04),
    .Y(\$152y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(dm_csr_addr),
    .B(8'h05),
    .Y(\$153y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$154  (
    .A(\$152y ),
    .B(\$153y ),
    .Y(\$154y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.17-375.27" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$155  (
    .A(cmdbusy_i),
    .Y(\$155y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A({ 1'h0, dmi_req_i[34] }),
    .B(1'h0),
    .Y(\$156y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A({ 1'h0, dmi_req_i[34] }),
    .B(3'h2),
    .Y(\$157y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(\$156y ),
    .B(\$157y ),
    .Y(\$158y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$159  (
    .A(32'd0),
    .B(32'd4294967295),
    .S(\$158y ),
    .Y(\$159y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$160  (
    .A(\$159y ),
    .S(dmi_req_i[34]),
    .Y(\$160y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$161  (
    .A(\$159y ),
    .S(dmi_req_i[34]),
    .Y(\$161y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:376.15-376.81" */
  \$bwmux  #(
    .WIDTH(32'd64)
  ) \$162  (
    .A(data_q),
    .B({ dmi_req_i[31:0], dmi_req_i[31:0] }),
    .S(\$161y ),
    .Y(\$162y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:378.29-378.74" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$163  (
    .A({ 1'h0, autoexecdata_idx }),
    .B(6'h10),
    .Y(\$163y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:378.29-378.74" */
  \$bmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$164  (
    .A({ 4'hx, abstractauto_q[11:0] }),
    .S(autoexecdata_idx),
    .Y(\$164y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:378.29-378.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$165  (
    .A(1'hx),
    .B(\$164y ),
    .S(\$163y ),
    .Y(\$165y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:382.19-382.45" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$166  (
    .A(cmderr_q),
    .Y(\$166y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$176  (
    .A(dm_csr_addr),
    .B(8'h10),
    .Y(\$176y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$177  (
    .A({ 1'h0, selected_hart }),
    .B(1'h0),
    .Y(\$177y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$178  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$178y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$179  (
    .A(\$177y ),
    .B(\$178y ),
    .Y(\$179y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$180  (
    .A(1'h0),
    .B(1'h1),
    .S(\$179y ),
    .Y(\$180y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$181  (
    .A(\$180y ),
    .S(selected_hart),
    .Y(\$181y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.54" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$182  (
    .A(\$180y ),
    .S(selected_hart),
    .Y(\$182y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$185  (
    .A(dm_csr_addr),
    .B(8'h11),
    .Y(\$185y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$186  (
    .A(dm_csr_addr),
    .B(8'h12),
    .Y(\$186y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$187  (
    .A(dm_csr_addr),
    .B(8'h16),
    .Y(\$187y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:405.15-405.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$188  (
    .A(cmdbusy_i),
    .Y(\$188y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:406.38-406.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd3)
  ) \$189  (
    .A(dmi_req_i[10:8]),
    .Y(\$189y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:185.33-185.50" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(resp_queue_empty),
    .Y(\$19y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:406.38-406.69" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd3)
  ) \$190  (
    .A(\$189y ),
    .B(cmderr_q),
    .Y(\$190y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:409.17-409.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$191  (
    .A(cmderr_q),
    .Y(\$191y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$195  (
    .A(dm_csr_addr),
    .B(8'h17),
    .Y(\$195y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.15-416.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$196  (
    .A(cmdbusy_i),
    .Y(\$196y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:423.17-423.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$197  (
    .A(cmderr_q),
    .Y(\$197y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:117.18-117.48" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd16),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A({ 1'h0, hartsel_o[19:5] }),
    .B(2'h1),
    .Y(\$2y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:186.33-186.49" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(resp_queue_full),
    .Y(\$20y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$203  (
    .A(dm_csr_addr),
    .B(8'h1d),
    .Y(\$203y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$204  (
    .A(dm_csr_addr),
    .B(8'h18),
    .Y(\$204y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.15-431.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$205  (
    .A(cmdbusy_i),
    .Y(\$205y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:437.17-437.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$206  (
    .A(cmderr_q),
    .Y(\$206y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:187.33-187.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(dmi_req_valid_i),
    .B(dmi_req_ready_o),
    .Y(\$21y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$211  (
    .A(dm_csr_addr),
    .B(8'h20),
    .Y(\$211y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$212  (
    .A(dm_csr_addr),
    .B(8'h27),
    .Y(\$212y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$213  (
    .A(\$211y ),
    .B(\$212y ),
    .Y(\$213y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.15-444.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$214  (
    .A(cmdbusy_i),
    .Y(\$214y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$215  (
    .A({ 1'h0, dmi_req_i[36:34] }),
    .B(1'h0),
    .Y(\$215y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$216  (
    .A({ 1'h0, dmi_req_i[36:34] }),
    .B(5'h08),
    .Y(\$216y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$217  (
    .A(\$215y ),
    .B(\$216y ),
    .Y(\$217y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$218  (
    .A(32'd0),
    .B(32'd4294967295),
    .S(\$217y ),
    .Y(\$218y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$219  (
    .A(\$218y ),
    .S(dmi_req_i[36:34]),
    .Y(\$219y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$220  (
    .A(\$218y ),
    .S(dmi_req_i[36:34]),
    .Y(\$220y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:445.13-445.84" */
  \$bwmux  #(
    .WIDTH(32'd256)
  ) \$221  (
    .A(progbuf_q),
    .B({ dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0], dmi_req_i[31:0] }),
    .S(\$220y ),
    .Y(\$221y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:450.27-450.86" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$222  (
    .A({ 2'h1, dmi_req_i[37:34] }),
    .B(7'h20),
    .Y(\$222y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:450.27-450.86" */
  \$bmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$223  (
    .A({ abstractauto_q[31:16], 16'hxxxx }),
    .S({ 1'h1, dmi_req_i[37:34] }),
    .Y(\$223y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:450.27-450.86" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$224  (
    .A(1'hx),
    .B(\$223y ),
    .S(\$222y ),
    .Y(\$224y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:454.17-454.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$225  (
    .A(cmderr_q),
    .Y(\$225y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:225.32-225.59" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd8)
  ) \$23  (
    .A(dm_csr_addr),
    .B(8'h04),
    .Y(\$23y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$231  (
    .A(dm_csr_addr),
    .B(8'h38),
    .Y(\$231y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:468.56-468.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$232  (
    .A(dmi_req_i[22]),
    .Y(\$232y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:468.34-468.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$233  (
    .A(sbcs_q[22]),
    .B(\$232y ),
    .Y(\$233y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:469.35-469.48" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$234  (
    .A(dmi_req_i[14:12]),
    .Y(\$234y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:469.34-469.73" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$235  (
    .A(sbcs_q[14:12]),
    .B(3'h0),
    .S(\$234y ),
    .Y(\$235y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$239  (
    .A(dm_csr_addr),
    .B(8'h39),
    .Y(\$239y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.15-474.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$240  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$240y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:479.40-479.60" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$241  (
    .A(sbcs_q[14:12]),
    .Y(\$241y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$246  (
    .A(dm_csr_addr),
    .B(8'h3a),
    .Y(\$246y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.15-484.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$247  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$247y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:239.29-239.63" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$25y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$251  (
    .A(dm_csr_addr),
    .B(8'h3c),
    .Y(\$251y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.15-493.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$252  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$252y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:498.37-498.57" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$253  (
    .A(sbcs_q[14:12]),
    .Y(\$253y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$258  (
    .A(dm_csr_addr),
    .B(8'h3d),
    .Y(\$258y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.15-503.45" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$259  (
    .A(sbbusy_i),
    .B(sbcs_q[22]),
    .Y(\$259y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:239.29-239.63" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$26  (
    .A(havereset_q_aligned),
    .S(selected_hart),
    .Y(\$26y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:239.29-239.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$27  (
    .A(1'hx),
    .B(\$26y ),
    .S(\$25y ),
    .Y(\$27y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:240.29-240.63" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$28y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:240.29-240.63" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$29  (
    .A(havereset_q_aligned),
    .S(selected_hart),
    .Y(\$29y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:117.18-117.48" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$3  (
    .A(32'hxxxxxxxx),
    .B({ 31'h00000000, halted_i }),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:240.29-240.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$30  (
    .A(1'hx),
    .B(\$29y ),
    .S(\$28y ),
    .Y(\$30y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:550.9-550.31" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$300  (
    .A(dmcontrol_q[30]),
    .Y(\$300y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:550.9-550.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$301  (
    .A(\$300y ),
    .B(\$dmcontrol_d$279 [30]),
    .Y(\$301y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:553.9-553.45" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$303  (
    .A(dmcontrol_q[30]),
    .B(resumeack_i),
    .Y(\$303y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:576.9-576.48" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$307  (
    .A(hartsel_o[0]),
    .B(1'h0),
    .Y(\$307y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:577.7-577.55" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$308  (
    .A({ 1'h0, hartsel_o[0] }),
    .B(1'h0),
    .Y(\$308y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:577.7-577.55" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$309  (
    .A({ 1'h0, hartsel_o[0] }),
    .B(2'h1),
    .Y(\$309y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:242.29-242.61" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$31y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:577.7-577.55" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$310  (
    .A(\$308y ),
    .B(\$309y ),
    .Y(\$310y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:577.7-577.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$311  (
    .A(1'h0),
    .B(1'h1),
    .S(\$310y ),
    .Y(\$311y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:578.7-578.57" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$313  (
    .A({ 1'h0, hartsel_o[0] }),
    .B(1'h0),
    .Y(\$313y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:578.7-578.57" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$314  (
    .A({ 1'h0, hartsel_o[0] }),
    .B(2'h1),
    .Y(\$314y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:578.7-578.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$315  (
    .A(\$313y ),
    .B(\$314y ),
    .Y(\$315y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:578.7-578.57" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$316  (
    .A(1'h0),
    .B(1'h1),
    .S(\$315y ),
    .Y(\$316y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:242.29-242.61" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$32  (
    .A(resumeack_aligned),
    .S(selected_hart),
    .Y(\$32y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:588.46-588.63" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$320  (
    .A(resp_queue_empty),
    .Y(\$320y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:588.27-588.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$321  (
    .A(dmi_resp_ready_i),
    .B(\$320y ),
    .Y(\$321y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:599.25-599.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$322  (
    .A(dmi_rst_ni),
    .Y(\$322y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$324  (
    .A(rst_ni),
    .Y(\$324y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.11-629.32" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$327  (
    .A(dmcontrol_q[0]),
    .Y(\$327y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:242.29-242.61" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$33  (
    .A(1'hx),
    .B(\$32y ),
    .S(\$31y ),
    .Y(\$33y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:243.29-243.61" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$34y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:243.29-243.61" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$35  (
    .A(resumeack_aligned),
    .S(selected_hart),
    .Y(\$35y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:243.29-243.61" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$36  (
    .A(1'hx),
    .B(\$35y ),
    .S(\$34y ),
    .Y(\$36y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:245.29-245.63" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$37y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:245.29-245.63" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$38  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$38y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:245.29-245.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$39  (
    .A(1'hx),
    .B(\$38y ),
    .S(\$37y ),
    .Y(\$39y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:246.29-246.63" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$40y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:246.29-246.63" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$41  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$41y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:246.29-246.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$42  (
    .A(1'hx),
    .B(\$41y ),
    .S(\$40y ),
    .Y(\$42y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:250.38-250.68" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A({ 12'h000, hartsel_o }),
    .B(32'd0),
    .Y(\$43y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:251.38-251.68" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 12'h000, hartsel_o }),
    .B(32'd0),
    .Y(\$44y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.29-255.58" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$45y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.29-255.58" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$46  (
    .A(halted_aligned),
    .S(selected_hart),
    .Y(\$46y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.29-255.58" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$47  (
    .A(1'hx),
    .B(\$46y ),
    .S(\$45y ),
    .Y(\$47y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.62-255.96" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$48y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.62-255.96" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$49  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$49y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.62-255.96" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$50  (
    .A(1'hx),
    .B(\$49y ),
    .S(\$48y ),
    .Y(\$50y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.61-255.96" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\$50y ),
    .Y(\$51y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:255.29-255.96" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\$47y ),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.29-256.58" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$53y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.29-256.58" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$54  (
    .A(halted_aligned),
    .S(selected_hart),
    .Y(\$54y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.29-256.58" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$55  (
    .A(1'hx),
    .B(\$54y ),
    .S(\$53y ),
    .Y(\$55y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.62-256.96" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$56y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.62-256.96" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$57  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$57y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.62-256.96" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$58  (
    .A(1'hx),
    .B(\$57y ),
    .S(\$56y ),
    .Y(\$58y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.61-256.96" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:256.29-256.96" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(\$55y ),
    .B(\$59y ),
    .Y(\$60y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.30-258.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$61y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.30-258.59" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$62  (
    .A(halted_aligned),
    .S(selected_hart),
    .Y(\$62y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.30-258.59" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$63  (
    .A(1'hx),
    .B(\$62y ),
    .S(\$61y ),
    .Y(\$63y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.29-258.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(\$63y ),
    .Y(\$64y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.63-258.97" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$65y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.63-258.97" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$66  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$66y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.63-258.97" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$67  (
    .A(1'hx),
    .B(\$66y ),
    .S(\$65y ),
    .Y(\$67y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.62-258.97" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(\$67y ),
    .Y(\$68y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:258.29-258.97" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(\$64y ),
    .B(\$68y ),
    .Y(\$69y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:133.9-133.50" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd10),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd10),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(hartsel_o[19:10]),
    .B(10'h001),
    .Y(\$7y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.30-259.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$70  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$70y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.30-259.59" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$71  (
    .A(halted_aligned),
    .S(selected_hart),
    .Y(\$71y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.30-259.59" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$72  (
    .A(1'hx),
    .B(\$71y ),
    .S(\$70y ),
    .Y(\$72y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.29-259.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$73  (
    .A(\$72y ),
    .Y(\$73y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.63-259.97" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A({ 1'h0, selected_hart }),
    .B(3'h2),
    .Y(\$74y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.63-259.97" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$75  (
    .A(unavailable_aligned),
    .S(selected_hart),
    .Y(\$75y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.63-259.97" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$76  (
    .A(1'hx),
    .B(\$75y ),
    .S(\$74y ),
    .Y(\$76y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.62-259.97" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(\$76y ),
    .Y(\$77y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:259.29-259.97" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$78  (
    .A(\$73y ),
    .B(\$77y ),
    .Y(\$78y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.9-296.43" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(dmi_req_ready_o),
    .B(dmi_req_valid_i),
    .Y(\$79y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:134.18-134.48" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd11),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, hartsel_o[19:10] }),
    .B(2'h1),
    .Y(\$8y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.47-296.69" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(dtm_op),
    .B(2'h1),
    .Y(\$80y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:296.9-296.69" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(\$79y ),
    .B(\$80y ),
    .Y(\$81y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(dm_csr_addr),
    .B(8'h04),
    .Y(\$82y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(dm_csr_addr),
    .B(8'h05),
    .Y(\$83y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(\$82y ),
    .B(\$83y ),
    .Y(\$84y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:299.33-299.81" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$85  (
    .A({ 1'h0, autoexecdata_idx[0] }),
    .B(3'h2),
    .Y(\$85y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:299.33-299.81" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$86  (
    .A(data_q),
    .S(autoexecdata_idx[0]),
    .Y(\$86y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:299.33-299.81" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$87  (
    .A(32'hxxxxxxxx),
    .B(\$86y ),
    .S(\$85y ),
    .Y(\$87y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:300.15-300.25" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(cmdbusy_i),
    .Y(\$88y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.27-302.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A({ 1'h0, autoexecdata_idx }),
    .B(6'h10),
    .Y(\$89y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:134.18-134.48" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$9  (
    .A(32'hxxxxxxxx),
    .B({ 31'h00000000, \$6y  }),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.27-302.72" */
  \$bmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$90  (
    .A({ 4'hx, abstractauto_q[11:0] }),
    .S(autoexecdata_idx),
    .Y(\$90y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.27-302.72" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$91  (
    .A(1'hx),
    .B(\$90y ),
    .S(\$89y ),
    .Y(\$91y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:306.17-306.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(cmderr_q),
    .Y(\$92y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(dm_csr_addr),
    .B(8'h10),
    .Y(\$97y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(dm_csr_addr),
    .B(8'h11),
    .Y(\$98y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$99  (
    .A(dm_csr_addr),
    .B(8'h12),
    .Y(\$99y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13186  (
    .A({ 1'h0, havereset_q }),
    .B(\$auto$rtlil.cc:2957:Not$13188 ),
    .Y(\$auto$rtlil.cc:3004:And$13189 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13187  (
    .A(\$182y ),
    .Y(\$auto$rtlil.cc:2957:Not$13188 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13190  (
    .A(dmcontrol_q[31]),
    .B(\$311y ),
    .Y(\$auto$rtlil.cc:3004:And$13191 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13192  (
    .A(dmcontrol_q[30]),
    .B(\$316y ),
    .Y(\$auto$rtlil.cc:3004:And$13193 )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd12)
  ) \$driver$abstractauto_q.autoexecdata  (
    .AD(12'h000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$abstractauto_q$332 [11:0]),
    .Q(abstractauto_q[11:0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd16)
  ) \$driver$abstractauto_q.autoexecprogbuf  (
    .AD(16'h0000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$abstractauto_q$332 [31:16]),
    .Q(abstractauto_q[31:16])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$abstractauto_q.zero0  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$abstractauto_q$332 [15:12]),
    .Q(abstractauto_q[15:12])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$cmd_valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$cmd_valid_q$331 ),
    .Q(cmd_valid_q)
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$cmderr_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$cmderr_q$329 ),
    .Q(cmderr_q)
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$command_q.cmdtype  (
    .AD(8'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$command_q$330 [31:24]),
    .Q(command_q[31:24])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd24)
  ) \$driver$command_q.control  (
    .AD(24'h000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$command_q$330 [23:0]),
    .Q(command_q[23:0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_q[0]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$data_q$337 [31:0]),
    .Q(data_q[31:0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_q[1]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$data_q$337 [63:32]),
    .Q(data_q[63:32])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.ackhavereset  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [28]),
    .Q(dmcontrol_q[28])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.clrresethaltreq  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [2]),
    .Q(dmcontrol_q[2])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.dmactive  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [0]),
    .Q(dmcontrol_q[0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.haltreq  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [31]),
    .Q(dmcontrol_q[31])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.hartreset  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [29]),
    .Q(dmcontrol_q[29])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd10)
  ) \$driver$dmcontrol_q.hartselhi  (
    .AD(10'h000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [15:6]),
    .Q(dmcontrol_q[15:6])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd10)
  ) \$driver$dmcontrol_q.hartsello  (
    .AD(10'h000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [25:16]),
    .Q(dmcontrol_q[25:16])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.hasel  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [26]),
    .Q(dmcontrol_q[26])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.ndmreset  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [1]),
    .Q(dmcontrol_q[1])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.resumereq  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [30]),
    .Q(dmcontrol_q[30])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.setresethaltreq  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [3]),
    .Q(dmcontrol_q[3])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$dmcontrol_q.zero0  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [5:4]),
    .Q(dmcontrol_q[5:4])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dmcontrol_q.zero1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$dmcontrol_q$328 [27]),
    .Q(dmcontrol_q[27])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$havereset_q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$326y ),
    .Q(havereset_q)
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[0]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [31:0]),
    .Q(progbuf_q[31:0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[1]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [63:32]),
    .Q(progbuf_q[63:32])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[2]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [95:64]),
    .Q(progbuf_q[95:64])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[3]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [127:96]),
    .Q(progbuf_q[127:96])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[4]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [159:128]),
    .Q(progbuf_q[159:128])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[5]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [191:160]),
    .Q(progbuf_q[191:160])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[6]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [223:192]),
    .Q(progbuf_q[223:192])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$progbuf_q[7]  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$progbuf_q$336 [255:224]),
    .Q(progbuf_q[255:224])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd64)
  ) \$driver$sbaddr_q  (
    .AD(64'h0000000000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbaddr_q$334 ),
    .Q(sbaddr_q)
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$sbcs_q.sbaccess  (
    .AD(3'h2),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [19:17]),
    .Q(sbcs_q[19:17])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbaccess128  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [4]),
    .Q(sbcs_q[4])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbaccess16  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [1]),
    .Q(sbcs_q[1])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbaccess32  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [2]),
    .Q(sbcs_q[2])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbaccess64  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [3]),
    .Q(sbcs_q[3])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbaccess8  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [0]),
    .Q(sbcs_q[0])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$sbcs_q.sbasize  (
    .AD(7'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [11:5]),
    .Q(sbcs_q[11:5])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbautoincrement  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [16]),
    .Q(sbcs_q[16])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbbusy  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [21]),
    .Q(sbcs_q[21])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbbusyerror  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [22]),
    .Q(sbcs_q[22])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$sbcs_q.sberror  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [14:12]),
    .Q(sbcs_q[14:12])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbreadonaddr  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [20]),
    .Q(sbcs_q[20])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$sbcs_q.sbreadondata  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [15]),
    .Q(sbcs_q[15])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$sbcs_q.sbversion  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [31:29]),
    .Q(sbcs_q[31:29])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$sbcs_q.zero0  (
    .AD(6'h00),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbcs_q$333 [28:23]),
    .Q(sbcs_q[28:23])
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:611.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd64)
  ) \$driver$sbdata_q  (
    .AD(64'h0000000000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$sbdata_q$335 ),
    .Q(sbdata_q)
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:554.7-554.36|rtl/riscv-dbg/dm_csrs.sv:553.5-555.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7649  (
    .A(\$dmcontrol_d$279 [30]),
    .B(1'h0),
    .S(\$procmux$7650_CMP ),
    .Y(\$procmux$7649_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:551.7-551.32|rtl/riscv-dbg/dm_csrs.sv:550.5-552.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7652  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7653_CMP ),
    .Y(\$procmux$7652_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:536.7-536.32|rtl/riscv-dbg/dm_csrs.sv:535.5-537.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7655  (
    .A(\$sbdata_d$286 ),
    .B({ 32'h00000000, sbdata_i }),
    .S(\$procmux$7656_CMP ),
    .Y(\$procmux$7655_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:532.7-532.34|rtl/riscv-dbg/dm_csrs.sv:531.5-533.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7658  (
    .A(\$sbcs_d$284 [14:12]),
    .B(sberror_i),
    .S(\$procmux$7659_CMP ),
    .Y(\$procmux$7658_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:525.7-525.45|rtl/riscv-dbg/dm_csrs.sv:524.5-526.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7661  (
    .A(\$havereset_d_aligned$290 [0]),
    .B(1'h1),
    .S(\$procmux$7662_CMP ),
    .Y(\$procmux$7661_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:520.7-520.23|rtl/riscv-dbg/dm_csrs.sv:519.5-521.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7664  (
    .A(\$data_d$288 ),
    .B(data_i),
    .S(\$procmux$7665_CMP ),
    .Y(\$procmux$7664_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:515.7-515.29|rtl/riscv-dbg/dm_csrs.sv:514.5-516.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7667  (
    .A(\$cmderr_d$280 ),
    .B(cmderror_i),
    .S(\$procmux$7668_CMP ),
    .Y(\$procmux$7667_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.47-506.14|rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7671  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(\$procmux$7672_CMP ),
    .Y(\$procmux$7671_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7673  (
    .A(2'hx),
    .B(\$procmux$7671_Y ),
    .S(\$procmux$7674_CMP ),
    .Y(\$procmux$7673_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7675  (
    .A(2'hx),
    .B(\$procmux$7673_Y ),
    .S(\$procmux$7676_CMP ),
    .Y(\$procmux$7675_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.47-506.14|rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7679  (
    .A(dmi_req_i[31:0]),
    .B(sbdata_q[63:32]),
    .S(\$procmux$7680_CMP ),
    .Y(\$procmux$7679_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7681  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7679_Y ),
    .S(\$procmux$7682_CMP ),
    .Y(\$procmux$7681_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7683  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7681_Y ),
    .S(\$procmux$7684_CMP ),
    .Y(\$procmux$7683_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.47-506.14|rtl/riscv-dbg/dm_csrs.sv:503.11-508.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7687  (
    .A(\$sbcs_d[22]$146 ),
    .B(1'h1),
    .S(\$procmux$7688_CMP ),
    .Y(\$procmux$7687_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7689  (
    .A(1'hx),
    .B(\$procmux$7687_Y ),
    .S(\$procmux$7690_CMP ),
    .Y(\$procmux$7689_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7691  (
    .A(1'hx),
    .B(\$procmux$7689_Y ),
    .S(\$procmux$7692_CMP ),
    .Y(\$procmux$7691_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7695  (
    .A(sbdata_q[63:32]),
    .B(\$sbdata_d[63:32]$261 ),
    .S(\$procmux$7696_CMP ),
    .Y(\$procmux$7695_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7697  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7695_Y ),
    .S(\$procmux$7698_CMP ),
    .Y(\$procmux$7697_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7702  (
    .A(sbdata_q[31:0]),
    .B(\$sbdata_d[31:0]$255 ),
    .S(\$procmux$7703_CMP ),
    .Y(\$procmux$7702_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7704  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7702_Y ),
    .S(\$procmux$7705_CMP ),
    .Y(\$procmux$7704_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.47-496.14|rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7709  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(\$procmux$7710_CMP ),
    .Y(\$procmux$7709_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7711  (
    .A(2'hx),
    .B(\$procmux$7709_Y ),
    .S(\$procmux$7712_CMP ),
    .Y(\$procmux$7711_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7713  (
    .A(2'hx),
    .B(\$procmux$7711_Y ),
    .S(\$procmux$7714_CMP ),
    .Y(\$procmux$7713_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.47-496.14|rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7718  (
    .A(dmi_req_i[31:0]),
    .B(sbdata_q[31:0]),
    .S(\$procmux$7719_CMP ),
    .Y(\$procmux$7718_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7720  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7718_Y ),
    .S(\$procmux$7721_CMP ),
    .Y(\$procmux$7720_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7722  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7720_Y ),
    .S(\$procmux$7723_CMP ),
    .Y(\$procmux$7722_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.47-496.14|rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7727  (
    .A(\$sbcs_d[22]$146 ),
    .B(1'h1),
    .S(\$procmux$7728_CMP ),
    .Y(\$procmux$7727_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7729  (
    .A(1'hx),
    .B(\$procmux$7727_Y ),
    .S(\$procmux$7730_CMP ),
    .Y(\$procmux$7729_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7731  (
    .A(1'hx),
    .B(\$procmux$7729_Y ),
    .S(\$procmux$7732_CMP ),
    .Y(\$procmux$7731_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.47-487.14|rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7737  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(\$procmux$7738_CMP ),
    .Y(\$procmux$7737_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7739  (
    .A(2'hx),
    .B(\$procmux$7737_Y ),
    .S(\$procmux$7740_CMP ),
    .Y(\$procmux$7739_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7741  (
    .A(2'hx),
    .B(\$procmux$7739_Y ),
    .S(\$procmux$7742_CMP ),
    .Y(\$procmux$7741_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.47-487.14|rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7747  (
    .A(dmi_req_i[31:0]),
    .B(32'd0),
    .S(\$procmux$7748_CMP ),
    .Y(\$procmux$7747_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7749  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7747_Y ),
    .S(\$procmux$7750_CMP ),
    .Y(\$procmux$7749_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7751  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7749_Y ),
    .S(\$procmux$7752_CMP ),
    .Y(\$procmux$7751_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.47-487.14|rtl/riscv-dbg/dm_csrs.sv:484.11-489.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7757  (
    .A(\$sbcs_d[22]$146 ),
    .B(1'h1),
    .S(\$procmux$7758_CMP ),
    .Y(\$procmux$7757_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7759  (
    .A(1'hx),
    .B(\$procmux$7757_Y ),
    .S(\$procmux$7760_CMP ),
    .Y(\$procmux$7759_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7761  (
    .A(1'hx),
    .B(\$procmux$7759_Y ),
    .S(\$procmux$7762_CMP ),
    .Y(\$procmux$7761_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:484.11-489.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7767  (
    .A(32'd0),
    .B(\$sbaddr_d[63:32]$249 ),
    .S(\$procmux$7768_CMP ),
    .Y(\$procmux$7767_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7769  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7767_Y ),
    .S(\$procmux$7770_CMP ),
    .Y(\$procmux$7769_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7776  (
    .A(sbaddress_i),
    .B(\$sbaddr_d[31:0]$243 ),
    .S(\$procmux$7777_CMP ),
    .Y(\$procmux$7776_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7778  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7776_Y ),
    .S(\$procmux$7779_CMP ),
    .Y(\$procmux$7778_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$7782  (
    .A(\$sbcs_d[22]$146 ),
    .B({ \$sbcs_d$236 [22], \$sbcs_d[22]$242 , \$sbcs_d[22]$248 , \$sbcs_d[22]$254 , \$sbcs_d[22]$260  }),
    .S({ \$procmux$7791_CMP , \$procmux$7789_CMP , \$procmux$7787_CMP , \$procmux$7785_CMP , \$procmux$7783_CMP  }),
    .Y(\$procmux$7782_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7792  (
    .A(1'hx),
    .B(\$procmux$7782_Y ),
    .S(\$procmux$7793_CMP ),
    .Y(\$procmux$7792_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd22)
  ) \$procmux$7800  (
    .A(sbcs_q[21:0]),
    .B(\$sbcs_d$236 [21:0]),
    .S(\$procmux$7801_CMP ),
    .Y(\$procmux$7800_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd22)
  ) \$procmux$7802  (
    .A(22'hxxxxxx),
    .B(\$procmux$7800_Y ),
    .S(\$procmux$7803_CMP ),
    .Y(\$procmux$7802_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.47-477.14|rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7809  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(\$procmux$7810_CMP ),
    .Y(\$procmux$7809_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7811  (
    .A(2'hx),
    .B(\$procmux$7809_Y ),
    .S(\$procmux$7812_CMP ),
    .Y(\$procmux$7811_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7813  (
    .A(2'hx),
    .B(\$procmux$7811_Y ),
    .S(\$procmux$7814_CMP ),
    .Y(\$procmux$7813_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.47-477.14|rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7820  (
    .A(dmi_req_i[31:0]),
    .B(sbaddress_i),
    .S(\$procmux$7821_CMP ),
    .Y(\$procmux$7820_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7822  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7820_Y ),
    .S(\$procmux$7823_CMP ),
    .Y(\$procmux$7822_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7824  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7822_Y ),
    .S(\$procmux$7825_CMP ),
    .Y(\$procmux$7824_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.47-477.14|rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7831  (
    .A(\$sbcs_d[22]$146 ),
    .B(1'h1),
    .S(\$procmux$7832_CMP ),
    .Y(\$procmux$7831_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7833  (
    .A(1'hx),
    .B(\$procmux$7831_Y ),
    .S(\$procmux$7834_CMP ),
    .Y(\$procmux$7833_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7835  (
    .A(1'hx),
    .B(\$procmux$7833_Y ),
    .S(\$procmux$7836_CMP ),
    .Y(\$procmux$7835_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.25-464.14|rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  \$mux  #(
    .WIDTH(32'd9)
  ) \$procmux$7843  (
    .A(dmi_req_i[31:23]),
    .B(sbcs_q[31:23]),
    .S(\$procmux$7844_CMP ),
    .Y(\$procmux$7843_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd9)
  ) \$procmux$7845  (
    .A(9'hxxx),
    .B(\$procmux$7843_Y ),
    .S(\$procmux$7846_CMP ),
    .Y(\$procmux$7845_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd9)
  ) \$procmux$7847  (
    .A(9'hxxx),
    .B(\$procmux$7845_Y ),
    .S(\$procmux$7848_CMP ),
    .Y(\$procmux$7847_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.25-464.14|rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  \$mux  #(
    .WIDTH(32'd22)
  ) \$procmux$7855  (
    .A({ dmi_req_i[21:15], \$235y , dmi_req_i[11:0] }),
    .B(sbcs_q[21:0]),
    .S(\$procmux$7856_CMP ),
    .Y(\$procmux$7855_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd22)
  ) \$procmux$7857  (
    .A(22'hxxxxxx),
    .B(\$procmux$7855_Y ),
    .S(\$procmux$7858_CMP ),
    .Y(\$procmux$7857_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd22)
  ) \$procmux$7859  (
    .A(22'hxxxxxx),
    .B(\$procmux$7857_Y ),
    .S(\$procmux$7860_CMP ),
    .Y(\$procmux$7859_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.25-464.14|rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7867  (
    .A(dmi_req_i[31:0]),
    .B(32'd0),
    .S(\$procmux$7868_CMP ),
    .Y(\$procmux$7867_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7869  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7867_Y ),
    .S(\$procmux$7870_CMP ),
    .Y(\$procmux$7869_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7871  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7869_Y ),
    .S(\$procmux$7872_CMP ),
    .Y(\$procmux$7871_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.25-464.14|rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7879  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(\$procmux$7880_CMP ),
    .Y(\$procmux$7879_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7881  (
    .A(2'hx),
    .B(\$procmux$7879_Y ),
    .S(\$procmux$7882_CMP ),
    .Y(\$procmux$7881_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7883  (
    .A(2'hx),
    .B(\$procmux$7881_Y ),
    .S(\$procmux$7884_CMP ),
    .Y(\$procmux$7883_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.25-464.14|rtl/riscv-dbg/dm_csrs.sv:461.11-470.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7891  (
    .A(\$233y ),
    .B(1'h1),
    .S(\$procmux$7892_CMP ),
    .Y(\$procmux$7891_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7893  (
    .A(1'hx),
    .B(\$procmux$7891_Y ),
    .S(\$procmux$7894_CMP ),
    .Y(\$procmux$7893_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7895  (
    .A(1'hx),
    .B(\$procmux$7893_Y ),
    .S(\$procmux$7896_CMP ),
    .Y(\$procmux$7895_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:455.15-455.41|rtl/riscv-dbg/dm_csrs.sv:454.13-456.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7903  (
    .A(\$cmderr_d$144 ),
    .B(3'h1),
    .S(\$procmux$7904_CMP ),
    .Y(\$procmux$7903_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.27-452.14|rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7906  (
    .A(3'hx),
    .B(\$procmux$7903_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$7906_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7908  (
    .A(3'hx),
    .B(\$procmux$7906_Y ),
    .S(\$procmux$7909_CMP ),
    .Y(\$procmux$7908_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7910  (
    .A(3'hx),
    .B(\$procmux$7908_Y ),
    .S(\$procmux$7911_CMP ),
    .Y(\$procmux$7910_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.27-452.14|rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7920  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$7920_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7922  (
    .A(2'hx),
    .B(\$procmux$7920_Y ),
    .S(\$procmux$7923_CMP ),
    .Y(\$procmux$7922_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7924  (
    .A(2'hx),
    .B(\$procmux$7922_Y ),
    .S(\$procmux$7925_CMP ),
    .Y(\$procmux$7924_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.27-452.14|rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$7933  (
    .A(\$221y ),
    .B(progbuf_q),
    .S(cmdbusy_i),
    .Y(\$procmux$7933_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$7935  (
    .A(256'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$7933_Y ),
    .S(\$procmux$7936_CMP ),
    .Y(\$procmux$7935_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$7937  (
    .A(256'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$7935_Y ),
    .S(\$procmux$7938_CMP ),
    .Y(\$procmux$7937_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.27-452.14|rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7946  (
    .A(\$224y ),
    .B(\$cmd_valid_d$145 ),
    .S(cmdbusy_i),
    .Y(\$procmux$7946_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7948  (
    .A(1'hx),
    .B(\$procmux$7946_Y ),
    .S(\$procmux$7949_CMP ),
    .Y(\$procmux$7948_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7950  (
    .A(1'hx),
    .B(\$procmux$7948_Y ),
    .S(\$procmux$7951_CMP ),
    .Y(\$procmux$7950_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.27-452.14|rtl/riscv-dbg/dm_csrs.sv:444.11-457.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7960  (
    .A(\$cmderr_d$144 ),
    .B(\$cmderr_d$226 ),
    .S(cmdbusy_i),
    .Y(\$procmux$7960_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7962  (
    .A(3'hx),
    .B(\$procmux$7960_Y ),
    .S(\$procmux$7963_CMP ),
    .Y(\$procmux$7962_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7964  (
    .A(3'hx),
    .B(\$procmux$7962_Y ),
    .S(\$procmux$7965_CMP ),
    .Y(\$procmux$7964_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:438.15-438.41|rtl/riscv-dbg/dm_csrs.sv:437.13-439.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7973  (
    .A(\$cmderr_d$144 ),
    .B(3'h1),
    .S(\$procmux$7974_CMP ),
    .Y(\$procmux$7973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.27-435.14|rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7976  (
    .A(3'hx),
    .B(\$procmux$7973_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$7976_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7978  (
    .A(3'hx),
    .B(\$procmux$7976_Y ),
    .S(\$procmux$7979_CMP ),
    .Y(\$procmux$7978_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7980  (
    .A(3'hx),
    .B(\$procmux$7978_Y ),
    .S(\$procmux$7981_CMP ),
    .Y(\$procmux$7980_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.27-435.14|rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7991  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$7991_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7993  (
    .A(2'hx),
    .B(\$procmux$7991_Y ),
    .S(\$procmux$7994_CMP ),
    .Y(\$procmux$7993_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7995  (
    .A(2'hx),
    .B(\$procmux$7993_Y ),
    .S(\$procmux$7996_CMP ),
    .Y(\$procmux$7995_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.27-435.14|rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8005  (
    .A({ 8'h00, dmi_req_i[23:16], 14'h0000, dmi_req_i[1:0] }),
    .B({ abstractauto_q[31:16], 4'h0, abstractauto_q[11:0] }),
    .S(cmdbusy_i),
    .Y(\$procmux$8005_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8007  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8005_Y ),
    .S(\$procmux$8008_CMP ),
    .Y(\$procmux$8007_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8009  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8007_Y ),
    .S(\$procmux$8010_CMP ),
    .Y(\$procmux$8009_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.27-435.14|rtl/riscv-dbg/dm_csrs.sv:431.11-440.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8020  (
    .A(\$cmderr_d$144 ),
    .B(\$cmderr_d$207 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8020_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8022  (
    .A(3'hx),
    .B(\$procmux$8020_Y ),
    .S(\$procmux$8023_CMP ),
    .Y(\$procmux$8022_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8024  (
    .A(3'hx),
    .B(\$procmux$8022_Y ),
    .S(\$procmux$8025_CMP ),
    .Y(\$procmux$8024_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:424.15-424.41|rtl/riscv-dbg/dm_csrs.sv:423.13-425.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8035  (
    .A(\$cmderr_d$144 ),
    .B(3'h1),
    .S(\$procmux$8036_CMP ),
    .Y(\$procmux$8035_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.27-421.14|rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8038  (
    .A(3'hx),
    .B(\$procmux$8035_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$8038_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8040  (
    .A(3'hx),
    .B(\$procmux$8038_Y ),
    .S(\$procmux$8041_CMP ),
    .Y(\$procmux$8040_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8042  (
    .A(3'hx),
    .B(\$procmux$8040_Y ),
    .S(\$procmux$8043_CMP ),
    .Y(\$procmux$8042_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.27-421.14|rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8055  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$8055_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8057  (
    .A(2'hx),
    .B(\$procmux$8055_Y ),
    .S(\$procmux$8058_CMP ),
    .Y(\$procmux$8057_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8059  (
    .A(2'hx),
    .B(\$procmux$8057_Y ),
    .S(\$procmux$8060_CMP ),
    .Y(\$procmux$8059_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.27-421.14|rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8071  (
    .A(1'h1),
    .B(\$cmd_valid_d$145 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8071_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8073  (
    .A(1'hx),
    .B(\$procmux$8071_Y ),
    .S(\$procmux$8074_CMP ),
    .Y(\$procmux$8073_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8075  (
    .A(1'hx),
    .B(\$procmux$8073_Y ),
    .S(\$procmux$8076_CMP ),
    .Y(\$procmux$8075_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.27-421.14|rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8087  (
    .A(dmi_req_i[31:0]),
    .B(command_q),
    .S(cmdbusy_i),
    .Y(\$procmux$8087_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8089  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8087_Y ),
    .S(\$procmux$8090_CMP ),
    .Y(\$procmux$8089_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8091  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8089_Y ),
    .S(\$procmux$8092_CMP ),
    .Y(\$procmux$8091_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.27-421.14|rtl/riscv-dbg/dm_csrs.sv:416.11-426.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8104  (
    .A(\$cmderr_d$144 ),
    .B(\$cmderr_d$198 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8104_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8106  (
    .A(3'hx),
    .B(\$procmux$8104_Y ),
    .S(\$procmux$8107_CMP ),
    .Y(\$procmux$8106_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8108  (
    .A(3'hx),
    .B(\$procmux$8106_Y ),
    .S(\$procmux$8109_CMP ),
    .Y(\$procmux$8108_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:410.15-410.41|rtl/riscv-dbg/dm_csrs.sv:409.13-411.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8120  (
    .A(\$cmderr_d$144 ),
    .B(3'h1),
    .S(\$procmux$8121_CMP ),
    .Y(\$procmux$8120_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:406.13-406.71|rtl/riscv-dbg/dm_csrs.sv:405.11-412.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8123  (
    .A(3'hx),
    .B(\$procmux$8120_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$8123_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:398.25-413.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8125  (
    .A(3'hx),
    .B(\$procmux$8123_Y ),
    .S(\$procmux$8126_CMP ),
    .Y(\$procmux$8125_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8127  (
    .A(3'hx),
    .B(\$procmux$8125_Y ),
    .S(\$procmux$8128_CMP ),
    .Y(\$procmux$8127_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:406.13-406.71|rtl/riscv-dbg/dm_csrs.sv:405.11-412.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8141  (
    .A(\$190y ),
    .B(\$cmderr_d$192 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8141_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:398.25-413.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8143  (
    .A(3'hx),
    .B(\$procmux$8141_Y ),
    .S(\$procmux$8144_CMP ),
    .Y(\$procmux$8143_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8145  (
    .A(3'hx),
    .B(\$procmux$8143_Y ),
    .S(\$procmux$8146_CMP ),
    .Y(\$procmux$8145_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:406.13-406.71|rtl/riscv-dbg/dm_csrs.sv:405.11-412.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8159  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$8159_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:398.25-413.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8161  (
    .A(2'hx),
    .B(\$procmux$8159_Y ),
    .S(\$procmux$8162_CMP ),
    .Y(\$procmux$8161_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8163  (
    .A(2'hx),
    .B(\$procmux$8161_Y ),
    .S(\$procmux$8164_CMP ),
    .Y(\$procmux$8163_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:392.13-392.55|rtl/riscv-dbg/dm_csrs.sv:391.11-393.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8178  (
    .A({ 1'h0, havereset_q }),
    .B(\$183y ),
    .S(\$procmux$8179_CMP ),
    .Y(\$procmux$8178_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:388.24-394.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8180  (
    .A(2'hx),
    .B(\$procmux$8178_Y ),
    .S(\$procmux$8181_CMP ),
    .Y(\$procmux$8180_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8182  (
    .A(2'hx),
    .B(\$procmux$8180_Y ),
    .S(\$procmux$8183_CMP ),
    .Y(\$procmux$8182_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8199  (
    .A(2'hx),
    .B(\$resp_queue_inp[1:0]$171 ),
    .S(\$procmux$8200_CMP ),
    .Y(\$procmux$8199_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8201  (
    .A(2'hx),
    .B(\$procmux$8199_Y ),
    .S(\$procmux$8202_CMP ),
    .Y(\$procmux$8201_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8218  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$data_d$170 ),
    .S(\$procmux$8219_CMP ),
    .Y(\$procmux$8218_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8220  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$8218_Y ),
    .S(\$procmux$8221_CMP ),
    .Y(\$procmux$8220_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8237  (
    .A(1'hx),
    .B(\$cmd_valid_d$169 ),
    .S(\$procmux$8238_CMP ),
    .Y(\$procmux$8237_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8239  (
    .A(1'hx),
    .B(\$procmux$8237_Y ),
    .S(\$procmux$8240_CMP ),
    .Y(\$procmux$8239_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8256  (
    .A(3'hx),
    .B(\$cmderr_d$168 ),
    .S(\$procmux$8257_CMP ),
    .Y(\$procmux$8256_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8258  (
    .A(3'hx),
    .B(\$procmux$8256_Y ),
    .S(\$procmux$8259_CMP ),
    .Y(\$procmux$8258_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:383.17-383.43|rtl/riscv-dbg/dm_csrs.sv:382.15-384.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8274  (
    .A(\$cmderr_d$144 ),
    .B(3'h1),
    .S(\$procmux$8275_CMP ),
    .Y(\$procmux$8274_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.29-380.16|rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8277  (
    .A(3'hx),
    .B(\$procmux$8274_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$8277_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8279  (
    .A(3'hx),
    .B(\$procmux$8277_Y ),
    .S(\$procmux$8280_CMP ),
    .Y(\$procmux$8279_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8281  (
    .A(3'hx),
    .B(\$procmux$8279_Y ),
    .S(\$procmux$8282_CMP ),
    .Y(\$procmux$8281_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.29-380.16|rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8299  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$8299_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8301  (
    .A(2'hx),
    .B(\$procmux$8299_Y ),
    .S(\$procmux$8302_CMP ),
    .Y(\$procmux$8301_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8303  (
    .A(2'hx),
    .B(\$procmux$8301_Y ),
    .S(\$procmux$8304_CMP ),
    .Y(\$procmux$8303_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.29-380.16|rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8320  (
    .A(\$162y ),
    .B(data_q),
    .S(cmdbusy_i),
    .Y(\$procmux$8320_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8322  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$8320_Y ),
    .S(\$procmux$8323_CMP ),
    .Y(\$procmux$8322_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8324  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$8322_Y ),
    .S(\$procmux$8325_CMP ),
    .Y(\$procmux$8324_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.29-380.16|rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8341  (
    .A(\$165y ),
    .B(\$cmd_valid_d$145 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8341_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8343  (
    .A(1'hx),
    .B(\$procmux$8341_Y ),
    .S(\$procmux$8344_CMP ),
    .Y(\$procmux$8343_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8345  (
    .A(1'hx),
    .B(\$procmux$8343_Y ),
    .S(\$procmux$8346_CMP ),
    .Y(\$procmux$8345_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:375.29-380.16|rtl/riscv-dbg/dm_csrs.sv:375.13-385.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8363  (
    .A(\$cmderr_d$144 ),
    .B(\$cmderr_d$167 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8363_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8365  (
    .A(3'hx),
    .B(\$procmux$8363_Y ),
    .S(\$procmux$8366_CMP ),
    .Y(\$procmux$8365_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8367  (
    .A(3'hx),
    .B(\$procmux$8365_Y ),
    .S(\$procmux$8368_CMP ),
    .Y(\$procmux$8367_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8372  (
    .A(1'h0),
    .B(\$sbdata_write_valid_o$257 ),
    .S(\$procmux$8373_CMP ),
    .Y(\$procmux$8372_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8374  (
    .A(1'hx),
    .B(\$procmux$8372_Y ),
    .S(\$procmux$8375_CMP ),
    .Y(\$procmux$8374_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8381  (
    .A(1'h0),
    .B(\$sbaddress_write_valid_o$245 ),
    .S(\$procmux$8382_CMP ),
    .Y(\$procmux$8381_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8383  (
    .A(1'hx),
    .B(\$procmux$8381_Y ),
    .S(\$procmux$8384_CMP ),
    .Y(\$procmux$8383_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:398.25-413.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8396  (
    .A(32'd0),
    .B(dmi_req_i[31:0]),
    .S(\$procmux$8397_CMP ),
    .Y(\$procmux$8396_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8398  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8396_Y ),
    .S(\$procmux$8399_CMP ),
    .Y(\$procmux$8398_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8406  (
    .A(32'd0),
    .B(\$sbcs$238 ),
    .S(\$procmux$8407_CMP ),
    .Y(\$procmux$8406_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8408  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8406_Y ),
    .S(\$procmux$8409_CMP ),
    .Y(\$procmux$8408_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:388.24-394.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8424  (
    .A({ 1'h0, havereset_q }),
    .B(\$havereset_d_aligned$184 ),
    .S(\$procmux$8425_CMP ),
    .Y(\$procmux$8424_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8426  (
    .A(2'hx),
    .B(\$procmux$8424_Y ),
    .S(\$procmux$8427_CMP ),
    .Y(\$procmux$8426_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:503.11-508.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd2)
  ) \$procmux$8430  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B({ \$resp_queue_inp[1:0]$175 , \$resp_queue_inp[1:0]$194 , \$resp_queue_inp[1:0]$202 , \$resp_queue_inp[1:0]$210 , \$resp_queue_inp[1:0]$230 , \$resp_queue_inp[1:0]$237 , \$resp_queue_inp[1:0]$244 , \$resp_queue_inp[1:0]$250 , \$resp_queue_inp[1:0]$256 , \$resp_queue_inp[1:0]$262  }),
    .S({ \$procmux$8449_CMP , \$procmux$8447_CMP , \$procmux$8445_CMP , \$procmux$8443_CMP , \$procmux$8441_CMP , \$procmux$8439_CMP , \$procmux$8437_CMP , \$procmux$8435_CMP , \$procmux$8433_CMP , \$procmux$8431_CMP  }),
    .Y(\$procmux$8430_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8450  (
    .A(2'hx),
    .B(\$procmux$8430_Y ),
    .S(\$procmux$8451_CMP ),
    .Y(\$procmux$8450_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:373.11-386.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8467  (
    .A(data_q),
    .B(\$data_d$174 ),
    .S(\$procmux$8468_CMP ),
    .Y(\$procmux$8467_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8469  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$8467_Y ),
    .S(\$procmux$8470_CMP ),
    .Y(\$procmux$8469_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$8478  (
    .A(progbuf_q),
    .B(\$progbuf_d$229 ),
    .S(\$procmux$8479_CMP ),
    .Y(\$procmux$8478_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$8480  (
    .A(256'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$8478_Y ),
    .S(\$procmux$8481_CMP ),
    .Y(\$procmux$8480_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.47-496.14|rtl/riscv-dbg/dm_csrs.sv:493.11-499.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8485  (
    .A(\$253y ),
    .B(1'h0),
    .S(\$procmux$8486_CMP ),
    .Y(\$procmux$8485_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:493.11-499.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8487  (
    .A(1'hx),
    .B(\$procmux$8485_Y ),
    .S(\$procmux$8488_CMP ),
    .Y(\$procmux$8487_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8489  (
    .A(1'hx),
    .B(\$procmux$8487_Y ),
    .S(\$procmux$8490_CMP ),
    .Y(\$procmux$8489_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:461.11-470.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd9)
  ) \$procmux$8497  (
    .A(sbcs_q[31:23]),
    .B(\$sbcs_d$236 [31:23]),
    .S(\$procmux$8498_CMP ),
    .Y(\$procmux$8497_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd9)
  ) \$procmux$8499  (
    .A(9'hxxx),
    .B(\$procmux$8497_Y ),
    .S(\$procmux$8500_CMP ),
    .Y(\$procmux$8499_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.47-477.14|rtl/riscv-dbg/dm_csrs.sv:474.11-480.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8506  (
    .A(\$241y ),
    .B(1'h0),
    .S(\$procmux$8507_CMP ),
    .Y(\$procmux$8506_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:474.11-480.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8508  (
    .A(1'hx),
    .B(\$procmux$8506_Y ),
    .S(\$procmux$8509_CMP ),
    .Y(\$procmux$8508_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8510  (
    .A(1'hx),
    .B(\$procmux$8508_Y ),
    .S(\$procmux$8511_CMP ),
    .Y(\$procmux$8510_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:431.11-440.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8520  (
    .A({ abstractauto_q[31:16], 4'h0, abstractauto_q[11:0] }),
    .B(\$abstractauto_d$209 ),
    .S(\$procmux$8521_CMP ),
    .Y(\$procmux$8520_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8522  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8520_Y ),
    .S(\$procmux$8523_CMP ),
    .Y(\$procmux$8522_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$8531  (
    .A(\$cmd_valid_d$145 ),
    .B({ \$cmd_valid_d$173 , \$cmd_valid_d$201 , \$cmd_valid_d$228  }),
    .S({ \$procmux$8536_CMP , \$procmux$8534_CMP , \$procmux$8532_CMP  }),
    .Y(\$procmux$8531_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8537  (
    .A(1'hx),
    .B(\$procmux$8531_Y ),
    .S(\$procmux$8538_CMP ),
    .Y(\$procmux$8537_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:416.11-426.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8549  (
    .A(command_q),
    .B(\$command_d$200 ),
    .S(\$procmux$8550_CMP ),
    .Y(\$procmux$8549_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8551  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8549_Y ),
    .S(\$procmux$8552_CMP ),
    .Y(\$procmux$8551_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:444.11-457.14|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$8560  (
    .A(\$cmderr_d$144 ),
    .B({ \$cmderr_d$172 , \$cmderr_d$193 , \$cmderr_d$199 , \$cmderr_d$208 , \$cmderr_d$227  }),
    .S({ \$procmux$8569_CMP , \$procmux$8567_CMP , \$procmux$8565_CMP , \$procmux$8563_CMP , \$procmux$8561_CMP  }),
    .Y(\$procmux$8560_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8570  (
    .A(3'hx),
    .B(\$procmux$8560_Y ),
    .S(\$procmux$8571_CMP ),
    .Y(\$procmux$8570_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:388.24-394.12|rtl/riscv-dbg/dm_csrs.sv:371.7-511.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8586  (
    .A(dmcontrol_q),
    .B(dmi_req_i[31:0]),
    .S(\$procmux$8587_CMP ),
    .Y(\$procmux$8586_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8588  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8586_Y ),
    .S(\$procmux$8589_CMP ),
    .Y(\$procmux$8588_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8592  (
    .A(1'h0),
    .B(\$sbdata_write_valid_o$278 ),
    .S(\$procmux$8593_CMP ),
    .Y(\$procmux$8592_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8596  (
    .A(1'h0),
    .B(\$sbaddress_write_valid_o$277 ),
    .S(\$procmux$8597_CMP ),
    .Y(\$procmux$8596_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8600  (
    .A(32'd0),
    .B(\$a_abstractcs$276 ),
    .S(\$procmux$8601_CMP ),
    .Y(\$procmux$8600_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8604  (
    .A(32'd0),
    .B(\$sbcs$275 ),
    .S(\$procmux$8605_CMP ),
    .Y(\$procmux$8604_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8608  (
    .A({ 1'h0, havereset_q }),
    .B(\$havereset_d_aligned$274 ),
    .S(\$procmux$8609_CMP ),
    .Y(\$procmux$8608_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8612  (
    .A(\$resp_queue_inp$147 [1:0]),
    .B(\$resp_queue_inp[1:0]$273 ),
    .S(\$procmux$8613_CMP ),
    .Y(\$procmux$8612_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8616  (
    .A(data_q),
    .B(\$data_d$272 ),
    .S(\$procmux$8617_CMP ),
    .Y(\$procmux$8616_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$8620  (
    .A(progbuf_q),
    .B(\$progbuf_d$271 ),
    .S(\$procmux$8621_CMP ),
    .Y(\$procmux$8620_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8624  (
    .A(sbdata_q),
    .B(\$sbdata_d$270 ),
    .S(\$procmux$8625_CMP ),
    .Y(\$procmux$8624_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8628  (
    .A({ 32'h00000000, sbaddress_i }),
    .B(\$sbaddr_d$269 ),
    .S(\$procmux$8629_CMP ),
    .Y(\$procmux$8628_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8632  (
    .A({ sbcs_q[31:23], \$sbcs_d[22]$146 , sbcs_q[21:0] }),
    .B(\$sbcs_d$268 ),
    .S(\$procmux$8633_CMP ),
    .Y(\$procmux$8632_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8636  (
    .A({ abstractauto_q[31:16], 4'h0, abstractauto_q[11:0] }),
    .B(\$abstractauto_d$267 ),
    .S(\$procmux$8637_CMP ),
    .Y(\$procmux$8636_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8640  (
    .A(\$cmd_valid_d$145 ),
    .B(\$cmd_valid_d$266 ),
    .S(\$procmux$8641_CMP ),
    .Y(\$procmux$8640_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8644  (
    .A(command_q),
    .B(\$command_d$265 ),
    .S(\$procmux$8645_CMP ),
    .Y(\$procmux$8644_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8648  (
    .A(\$cmderr_d$144 ),
    .B(\$cmderr_d$264 ),
    .S(\$procmux$8649_CMP ),
    .Y(\$procmux$8648_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:371.7-511.14|rtl/riscv-dbg/dm_csrs.sv:370.5-512.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8652  (
    .A(dmcontrol_q),
    .B(\$dmcontrol_d$263 ),
    .S(\$procmux$8653_CMP ),
    .Y(\$procmux$8652_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$pmux  #(
    .S_WIDTH(32'd17),
    .WIDTH(32'd32)
  ) \$procmux$8656  (
    .A(32'd0),
    .B({ \$87y , dmcontrol_q, 12'h000, \$27y , \$30y , \$33y , \$36y , \$43y , \$44y , \$39y , \$42y , \$69y , \$78y , \$52y , \$60y , 8'h82, \$102y , 19'h04000, cmdbusy_i, 1'h0, cmderr_q, 8'h02, abstractauto_q, next_dm_addr_i, \$112y , \$haltsum0$4 , \$haltsum1$10 , \$haltsum2$16 , 31'h00000000, \$18y , sbcs_q, sbaddr_q[31:0], sbaddr_q[63:32], \$resp_queue_inp$133 [33:2], \$resp_queue_inp$138 [33:2] }),
    .S({ \$procmux$8676_CMP , \$procmux$8674_CMP , \$procmux$8673_CMP , \$procmux$8672_CMP , \$procmux$8671_CMP , \$procmux$8670_CMP , \$procmux$8669_CMP , \$procmux$8668_CMP , \$procmux$8666_CMP , \$procmux$8665_CMP , \$procmux$8664_CMP , \$procmux$8663_CMP , \$procmux$8662_CMP , \$procmux$8661_CMP , \$procmux$8660_CMP , \$procmux$8659_CMP , \$procmux$8657_CMP  }),
    .Y(\$procmux$8656_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8677  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8656_Y ),
    .S(\$procmux$8678_CMP ),
    .Y(\$procmux$8677_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.47-361.14|rtl/riscv-dbg/dm_csrs.sv:358.11-363.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8681  (
    .A(2'h0),
    .B(2'h3),
    .S(\$procmux$8682_CMP ),
    .Y(\$procmux$8681_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8683  (
    .A(2'hx),
    .B(\$procmux$8681_Y ),
    .S(\$procmux$8684_CMP ),
    .Y(\$procmux$8683_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8685  (
    .A(2'hx),
    .B(\$procmux$8683_Y ),
    .S(\$procmux$8686_CMP ),
    .Y(\$procmux$8685_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.47-361.14|rtl/riscv-dbg/dm_csrs.sv:358.11-363.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8689  (
    .A(sbcs_q[22]),
    .B(1'h1),
    .S(\$procmux$8690_CMP ),
    .Y(\$procmux$8689_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8691  (
    .A(1'hx),
    .B(\$procmux$8689_Y ),
    .S(\$procmux$8692_CMP ),
    .Y(\$procmux$8691_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8693  (
    .A(1'hx),
    .B(\$procmux$8691_Y ),
    .S(\$procmux$8694_CMP ),
    .Y(\$procmux$8693_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd2)
  ) \$procmux$8697  (
    .A(2'h0),
    .B({ \$resp_queue_inp[1:0]$96 , \$resp_queue_inp[1:0]$121 , \$resp_queue_inp$133 [1:0], \$resp_queue_inp$138 [1:0] }),
    .S({ \$procmux$8704_CMP , \$procmux$8702_CMP , \$procmux$8700_CMP , \$procmux$8698_CMP  }),
    .Y(\$procmux$8697_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8705  (
    .A(2'hx),
    .B(\$procmux$8697_Y ),
    .S(\$procmux$8706_CMP ),
    .Y(\$procmux$8705_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.47-351.14|rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8710  (
    .A(2'h0),
    .B(2'h3),
    .S(\$procmux$8711_CMP ),
    .Y(\$procmux$8710_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8712  (
    .A(2'hx),
    .B(\$procmux$8710_Y ),
    .S(\$procmux$8713_CMP ),
    .Y(\$procmux$8712_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8714  (
    .A(2'hx),
    .B(\$procmux$8712_Y ),
    .S(\$procmux$8715_CMP ),
    .Y(\$procmux$8714_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.47-351.14|rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8719  (
    .A(\$131y ),
    .B(1'h0),
    .S(\$procmux$8720_CMP ),
    .Y(\$procmux$8719_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8721  (
    .A(1'hx),
    .B(\$procmux$8719_Y ),
    .S(\$procmux$8722_CMP ),
    .Y(\$procmux$8721_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8723  (
    .A(1'hx),
    .B(\$procmux$8721_Y ),
    .S(\$procmux$8724_CMP ),
    .Y(\$procmux$8723_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.47-351.14|rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8728  (
    .A(sbcs_q[22]),
    .B(1'h1),
    .S(\$procmux$8729_CMP ),
    .Y(\$procmux$8728_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8730  (
    .A(1'hx),
    .B(\$procmux$8728_Y ),
    .S(\$procmux$8731_CMP ),
    .Y(\$procmux$8730_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8732  (
    .A(1'hx),
    .B(\$procmux$8730_Y ),
    .S(\$procmux$8733_CMP ),
    .Y(\$procmux$8732_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.47-361.14|rtl/riscv-dbg/dm_csrs.sv:358.11-363.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8736  (
    .A(sbdata_q[63:32]),
    .B(32'd0),
    .S(\$procmux$8737_CMP ),
    .Y(\$procmux$8736_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8738  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8736_Y ),
    .S(\$procmux$8739_CMP ),
    .Y(\$procmux$8738_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8740  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8738_Y ),
    .S(\$procmux$8741_CMP ),
    .Y(\$procmux$8740_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.13-323.87|rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8754  (
    .A(2'h0),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$8754_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8756  (
    .A(2'hx),
    .B(\$procmux$8754_Y ),
    .S(\$procmux$8757_CMP ),
    .Y(\$procmux$8756_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8758  (
    .A(2'hx),
    .B(\$procmux$8756_Y ),
    .S(\$procmux$8759_CMP ),
    .Y(\$procmux$8758_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.13-323.87|rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8771  (
    .A(\$116y ),
    .B(1'h0),
    .S(cmdbusy_i),
    .Y(\$procmux$8771_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8773  (
    .A(1'hx),
    .B(\$procmux$8771_Y ),
    .S(\$procmux$8774_CMP ),
    .Y(\$procmux$8773_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8775  (
    .A(1'hx),
    .B(\$procmux$8773_Y ),
    .S(\$procmux$8776_CMP ),
    .Y(\$procmux$8775_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.13-323.87|rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8789  (
    .A(cmderr_q),
    .B(\$cmderr_d$118 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8789_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8791  (
    .A(3'hx),
    .B(\$procmux$8789_Y ),
    .S(\$procmux$8792_CMP ),
    .Y(\$procmux$8791_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8793  (
    .A(3'hx),
    .B(\$procmux$8791_Y ),
    .S(\$procmux$8794_CMP ),
    .Y(\$procmux$8793_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.47-351.14|rtl/riscv-dbg/dm_csrs.sv:348.11-354.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8798  (
    .A(sbdata_q[31:0]),
    .B(32'd0),
    .S(\$procmux$8799_CMP ),
    .Y(\$procmux$8798_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8800  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8798_Y ),
    .S(\$procmux$8801_CMP ),
    .Y(\$procmux$8800_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$8802  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$8800_Y ),
    .S(\$procmux$8803_CMP ),
    .Y(\$procmux$8802_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:329.15-329.41|rtl/riscv-dbg/dm_csrs.sv:328.13-330.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8814  (
    .A(cmderr_q),
    .B(3'h1),
    .S(\$procmux$8815_CMP ),
    .Y(\$procmux$8814_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:323.13-323.87|rtl/riscv-dbg/dm_csrs.sv:320.11-331.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8817  (
    .A(3'hx),
    .B(\$procmux$8814_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$8817_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8819  (
    .A(3'hx),
    .B(\$procmux$8817_Y ),
    .S(\$procmux$8820_CMP ),
    .Y(\$procmux$8819_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8821  (
    .A(3'hx),
    .B(\$procmux$8819_Y ),
    .S(\$procmux$8822_CMP ),
    .Y(\$procmux$8821_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.13-302.73|rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8843  (
    .A(2'h0),
    .B(2'h3),
    .S(cmdbusy_i),
    .Y(\$procmux$8843_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:298.32-310.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8845  (
    .A(2'hx),
    .B(\$procmux$8843_Y ),
    .S(\$procmux$8846_CMP ),
    .Y(\$procmux$8845_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$8847  (
    .A(2'hx),
    .B(\$procmux$8845_Y ),
    .S(\$procmux$8848_CMP ),
    .Y(\$procmux$8847_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.13-302.73|rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8868  (
    .A(\$91y ),
    .B(1'h0),
    .S(cmdbusy_i),
    .Y(\$procmux$8868_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:298.32-310.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8870  (
    .A(1'hx),
    .B(\$procmux$8868_Y ),
    .S(\$procmux$8871_CMP ),
    .Y(\$procmux$8870_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8872  (
    .A(1'hx),
    .B(\$procmux$8870_Y ),
    .S(\$procmux$8873_CMP ),
    .Y(\$procmux$8872_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.13-302.73|rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8894  (
    .A(cmderr_q),
    .B(\$cmderr_d$93 ),
    .S(cmdbusy_i),
    .Y(\$procmux$8894_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:298.32-310.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8896  (
    .A(3'hx),
    .B(\$procmux$8894_Y ),
    .S(\$procmux$8897_CMP ),
    .Y(\$procmux$8896_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8898  (
    .A(3'hx),
    .B(\$procmux$8896_Y ),
    .S(\$procmux$8899_CMP ),
    .Y(\$procmux$8898_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:348.11-354.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8903  (
    .A(1'h0),
    .B(\$sbdata_read_valid_o$134 ),
    .S(\$procmux$8904_CMP ),
    .Y(\$procmux$8903_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8905  (
    .A(1'hx),
    .B(\$procmux$8903_Y ),
    .S(\$procmux$8906_CMP ),
    .Y(\$procmux$8905_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:307.15-307.41|rtl/riscv-dbg/dm_csrs.sv:306.13-308.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8925  (
    .A(cmderr_q),
    .B(3'h1),
    .S(\$procmux$8926_CMP ),
    .Y(\$procmux$8925_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:302.13-302.73|rtl/riscv-dbg/dm_csrs.sv:300.11-309.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8928  (
    .A(3'hx),
    .B(\$procmux$8925_Y ),
    .S(cmdbusy_i),
    .Y(\$procmux$8928_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:298.32-310.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8930  (
    .A(3'hx),
    .B(\$procmux$8928_Y ),
    .S(\$procmux$8931_CMP ),
    .Y(\$procmux$8930_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8932  (
    .A(3'hx),
    .B(\$procmux$8930_Y ),
    .S(\$procmux$8933_CMP ),
    .Y(\$procmux$8932_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:358.11-363.14|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$8936  (
    .A(sbcs_q[22]),
    .B({ \$sbcs_d[22]$132 , \$sbcs_d[22]$137  }),
    .S({ \$procmux$8939_CMP , \$procmux$8937_CMP  }),
    .Y(\$procmux$8936_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8940  (
    .A(1'hx),
    .B(\$procmux$8936_Y ),
    .S(\$procmux$8941_CMP ),
    .Y(\$procmux$8940_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$8953  (
    .A(1'h0),
    .B({ \$cmd_valid_d$95 , \$cmd_valid_d$120  }),
    .S({ \$procmux$8956_CMP , \$procmux$8954_CMP  }),
    .Y(\$procmux$8953_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8957  (
    .A(1'hx),
    .B(\$procmux$8953_Y ),
    .S(\$procmux$8958_CMP ),
    .Y(\$procmux$8957_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:318.38-332.12|rtl/riscv-dbg/dm_csrs.sv:297.7-366.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd3)
  ) \$procmux$8970  (
    .A(cmderr_q),
    .B({ \$cmderr_d$94 , \$cmderr_d$119  }),
    .S({ \$procmux$8973_CMP , \$procmux$8971_CMP  }),
    .Y(\$procmux$8970_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8974  (
    .A(3'hx),
    .B(\$procmux$8970_Y ),
    .S(\$procmux$8975_CMP ),
    .Y(\$procmux$8974_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8977  (
    .A(1'h0),
    .B(\$sbdata_read_valid_o$143 ),
    .S(\$procmux$8978_CMP ),
    .Y(\$procmux$8977_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$procmux$8980  (
    .A(34'h000000000),
    .B(\$resp_queue_inp$142 ),
    .S(\$procmux$8981_CMP ),
    .Y(\$procmux$8980_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8983  (
    .A(sbcs_q[22]),
    .B(\$sbcs_d[22]$141 ),
    .S(\$procmux$8984_CMP ),
    .Y(\$procmux$8983_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$8986  (
    .A(1'h0),
    .B(\$cmd_valid_d$140 ),
    .S(\$procmux$8987_CMP ),
    .Y(\$procmux$8986_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:297.7-366.14|rtl/riscv-dbg/dm_csrs.sv:296.5-367.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$8989  (
    .A(cmderr_q),
    .B(\$cmderr_d$139 ),
    .S(\$procmux$8990_CMP ),
    .Y(\$procmux$8989_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8992  (
    .A(64'h0000000000000000),
    .B(\$data_d$296 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$8992_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd256)
  ) \$procmux$8995  (
    .A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .B(\$progbuf_d$287 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$8995_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$8998  (
    .A(64'h0000000000000000),
    .B(\$sbdata_d$299 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$8998_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$9001  (
    .A(64'h0000000000000000),
    .B(\$sbaddr_d$285 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9001_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9004  (
    .A(32'd262144),
    .B({ 3'h1, \$sbcs_d$284 [28:22], sbbusy_i, \$sbcs_d$284 [20:15], \$sbcs_d[14:12]$298 , 12'h407 }),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9004_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9007  (
    .A(32'd0),
    .B(\$abstractauto_d$283 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9007_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9010  (
    .A(1'h0),
    .B(\$cmd_valid_d$282 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9010_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9013  (
    .A(32'd0),
    .B(\$command_d$281 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9013_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$9016  (
    .A(3'h0),
    .B(\$cmderr_d$295 ),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9016_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_csrs.sv:629.34-653.10|rtl/riscv-dbg/dm_csrs.sv:629.7-664.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9019  (
    .A({ 31'h00000000, \$dmcontrol_d$279 [0] }),
    .B({ \$dmcontrol_d$279 [31], \$dmcontrol_d[30]$304 , 4'h0, \$305y [9:0], \$305y [19:10], 4'h0, \$dmcontrol_d$279 [1:0] }),
    .S(dmcontrol_q[0]),
    .Y(\$procmux$9019_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:576.50-579.8|rtl/riscv-dbg/dm_csrs.sv:576.5-579.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9021  (
    .A(1'h0),
    .B(\$317y ),
    .S(\$procmux$9022_CMP ),
    .Y(\$procmux$9021_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:576.50-579.8|rtl/riscv-dbg/dm_csrs.sv:576.5-579.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$9023  (
    .A(1'h0),
    .B(\$312y ),
    .S(\$procmux$9024_CMP ),
    .Y(\$procmux$9023_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:151.7-151.57|rtl/riscv-dbg/dm_csrs.sv:150.5-152.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9025  (
    .A(32'd0),
    .B(\$15y ),
    .S(\$procmux$9026_CMP ),
    .Y(\$procmux$9025_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:134.7-134.49|rtl/riscv-dbg/dm_csrs.sv:133.5-135.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9027  (
    .A(32'd0),
    .B(\$9y ),
    .S(\$procmux$9028_CMP ),
    .Y(\$procmux$9027_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:117.7-117.49|rtl/riscv-dbg/dm_csrs.sv:116.5-118.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$9029  (
    .A(32'd0),
    .B(\$3y ),
    .S(\$procmux$9030_CMP ),
    .Y(\$procmux$9029_Y )
  );
  /* src = "rtl/riscv-dbg/dm_csrs.sv:596.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_csrs.i_fifo  i_fifo (
    .clk_i(clk_i),
    .data_i(resp_queue_inp),
    .data_o(dmi_resp_o),
    .empty_o(resp_queue_empty),
    .flush_i(\$322y ),
    .full_o(resp_queue_full),
    .pop_i(resp_queue_pop),
    .push_i(resp_queue_push),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign dtm_op = dmi_req_i[33:32];
  assign haltsum0 = \$haltsum0$4 ;
  assign halted = { 31'h00000000, halted_i };
  assign halted_reshaped0 = { 31'h00000000, halted_i };
  assign hartsel_idx0 = hartsel_o[19:5];
  assign haltsum1 = \$haltsum1$10 ;
  assign halted_reshaped1 = { 31'h00000000, \$6y  };
  assign halted_flat1 = { 31'h00000000, \$6y  };
  assign hartsel_idx1 = hartsel_o[19:10];
  assign haltsum2 = \$haltsum2$16 ;
  assign halted_reshaped2 = { 31'h00000000, \$12y  };
  assign halted_flat2 = { 31'h00000000, \$12y  };
  assign hartsel_idx2 = hartsel_o[19:15];
  assign haltsum3 = { 31'h00000000, \$18y  };
  assign halted_flat3 = { 31'h00000000, \$18y  };
  assign dmi_resp_valid_o = \$19y ;
  assign dmi_req_ready_o = \$20y ;
  assign resp_queue_push = \$21y ;
  assign sbautoincrement_o = sbcs_q[16];
  assign sbreadonaddr_o = sbcs_q[20];
  assign sbreadondata_o = sbcs_q[15];
  assign sbaccess_o = sbcs_q[19:17];
  assign sbdata_o = sbdata_q[31:0];
  assign sbaddress_o = sbaddr_q[31:0];
  assign hartsel_o = { dmcontrol_q[15:6], dmcontrol_q[25:16] };
  assign resumeack_aligned = { 1'h0, resumeack_i };
  assign unavailable_aligned = { 1'h0, unavailable_i };
  assign halted_aligned = { 1'h0, halted_i };
  assign havereset_d = havereset_d_aligned[0];
  assign havereset_q_aligned = { 1'h0, havereset_q };
  assign hartinfo_aligned = { 32'h00000000, hartinfo_i };
  assign dm_csr_addr = { 1'h0, dmi_req_i[40:34] };
  assign autoexecdata_idx = \$23y [3:0];
  assign dmstatus = { 12'h000, \$27y , \$30y , \$33y , \$36y , \$43y , \$44y , \$39y , \$42y , \$69y , \$78y , \$52y , \$60y , 8'h82 };
  assign dmcontrol_d = { \$dmcontrol_d$279 [31], \$dmcontrol_d[30]$304 , 4'h0, \$305y [9:0], \$305y [19:10], 4'h0, \$dmcontrol_d$279 [1:0] };
  assign abstractcs = { 19'h04000, cmdbusy_i, 1'h0, cmderr_q, 8'h02 };
  assign cmderr_d = \$cmderr_d$295 ;
  assign command_d = \$command_d$281 ;
  assign cmd_valid_d = \$cmd_valid_d$282 ;
  assign abstractauto_d = \$abstractauto_d$283 ;
  assign sbcs_d = { 3'h1, \$sbcs_d$284 [28:22], sbbusy_i, \$sbcs_d$284 [20:15], \$sbcs_d[14:12]$298 , 12'h407 };
  assign sbaddr_d = \$sbaddr_d$285 ;
  assign sbdata_d = \$sbdata_d$299 ;
  assign progbuf_d = \$progbuf_d$287 ;
  assign data_d = \$data_d$296 ;
  assign resp_queue_inp = { \$resp_queue_inp$147 [33:2], \$resp_queue_inp[1:0]$289  };
  assign havereset_d_aligned = { \$havereset_d_aligned$290 [1], \$havereset_d_aligned[0]$297  };
  assign sbcs = \$sbcs$291 ;
  assign a_abstractcs = \$a_abstractcs$292 ;
  assign clear_resumeack_o = \$clear_resumeack_o$302 ;
  assign sbaddress_write_valid_o = \$sbaddress_write_valid_o$293 ;
  assign sbdata_read_valid_o = \$sbdata_read_valid_o$148 ;
  assign sbdata_write_valid_o = \$sbdata_write_valid_o$294 ;
  assign selected_hart = hartsel_o[0];
  assign haltreq_o = \$haltreq_o$318 ;
  assign resumereq_o = \$resumereq_o$319 ;
  assign dmactive_o = dmcontrol_q[0];
  assign cmd_o = command_q;
  assign cmd_valid_o = cmd_valid_q;
  assign progbuf_o = progbuf_q;
  assign data_o = data_q;
  assign resp_queue_pop = \$321y ;
  assign ndmreset_o = dmcontrol_q[1];
  assign \$procmux$7650_CMP  = \$303y ;
  assign \$dmcontrol_d[30]$304  = \$procmux$7649_Y ;
  assign \$procmux$7653_CMP  = \$301y ;
  assign \$clear_resumeack_o$302  = \$procmux$7652_Y ;
  assign \$procmux$7656_CMP  = sbdata_valid_i;
  assign \$sbdata_d$299  = \$procmux$7655_Y ;
  assign \$procmux$7659_CMP  = sberror_valid_i;
  assign \$sbcs_d[14:12]$298  = \$procmux$7658_Y ;
  assign \$procmux$7662_CMP  = ndmreset_ack_i;
  assign \$havereset_d_aligned[0]$297  = \$procmux$7661_Y ;
  assign \$procmux$7665_CMP  = data_valid_i;
  assign \$data_d$296  = \$procmux$7664_Y ;
  assign \$procmux$7668_CMP  = cmderror_valid_i;
  assign \$cmderr_d$295  = \$procmux$7667_Y ;
  assign \$procmux$7672_CMP  = \$259y ;
  assign \$procmux$7676_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$262  = \$procmux$7675_Y ;
  assign \$procmux$7680_CMP  = \$259y ;
  assign \$procmux$7684_CMP  = \$151y ;
  assign \$sbdata_d[63:32]$261  = \$procmux$7683_Y ;
  assign \$procmux$7688_CMP  = \$259y ;
  assign \$procmux$7692_CMP  = \$151y ;
  assign \$sbcs_d[22]$260  = \$procmux$7691_Y ;
  assign \$procmux$7698_CMP  = \$151y ;
  assign \$sbdata_d$270 [63:32] = \$procmux$7697_Y ;
  assign \$procmux$7705_CMP  = \$151y ;
  assign \$sbdata_d$270 [31:0] = \$procmux$7704_Y ;
  assign \$procmux$7710_CMP  = \$252y ;
  assign \$procmux$7714_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$256  = \$procmux$7713_Y ;
  assign \$procmux$7719_CMP  = \$252y ;
  assign \$procmux$7723_CMP  = \$151y ;
  assign \$sbdata_d[31:0]$255  = \$procmux$7722_Y ;
  assign \$procmux$7728_CMP  = \$252y ;
  assign \$procmux$7732_CMP  = \$151y ;
  assign \$sbcs_d[22]$254  = \$procmux$7731_Y ;
  assign \$procmux$7738_CMP  = \$247y ;
  assign \$procmux$7742_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$250  = \$procmux$7741_Y ;
  assign \$procmux$7748_CMP  = \$247y ;
  assign \$procmux$7752_CMP  = \$151y ;
  assign \$sbaddr_d[63:32]$249  = \$procmux$7751_Y ;
  assign \$procmux$7758_CMP  = \$247y ;
  assign \$procmux$7762_CMP  = \$151y ;
  assign \$sbcs_d[22]$248  = \$procmux$7761_Y ;
  assign \$procmux$7770_CMP  = \$151y ;
  assign \$sbaddr_d$269 [63:32] = \$procmux$7769_Y ;
  assign \$procmux$7779_CMP  = \$151y ;
  assign \$sbaddr_d$269 [31:0] = \$procmux$7778_Y ;
  assign \$procmux$7793_CMP  = \$151y ;
  assign \$sbcs_d$268 [22] = \$procmux$7792_Y ;
  assign \$procmux$7803_CMP  = \$151y ;
  assign \$sbcs_d$268 [21:0] = \$procmux$7802_Y ;
  assign \$procmux$7810_CMP  = \$240y ;
  assign \$procmux$7814_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$244  = \$procmux$7813_Y ;
  assign \$procmux$7821_CMP  = \$240y ;
  assign \$procmux$7825_CMP  = \$151y ;
  assign \$sbaddr_d[31:0]$243  = \$procmux$7824_Y ;
  assign \$procmux$7832_CMP  = \$240y ;
  assign \$procmux$7836_CMP  = \$151y ;
  assign \$sbcs_d[22]$242  = \$procmux$7835_Y ;
  assign \$procmux$7844_CMP  = sbbusy_i;
  assign \$procmux$7848_CMP  = \$151y ;
  assign \$sbcs_d$236 [31:23] = \$procmux$7847_Y ;
  assign \$procmux$7856_CMP  = sbbusy_i;
  assign \$procmux$7860_CMP  = \$151y ;
  assign \$sbcs_d$236 [21:0] = \$procmux$7859_Y ;
  assign \$procmux$7868_CMP  = sbbusy_i;
  assign \$procmux$7872_CMP  = \$151y ;
  assign \$sbcs$238  = \$procmux$7871_Y ;
  assign \$procmux$7880_CMP  = sbbusy_i;
  assign \$procmux$7884_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$237  = \$procmux$7883_Y ;
  assign \$procmux$7892_CMP  = sbbusy_i;
  assign \$procmux$7896_CMP  = \$151y ;
  assign \$sbcs_d$236 [22] = \$procmux$7895_Y ;
  assign \$procmux$7904_CMP  = \$225y ;
  assign \$procmux$7907_CMP  = \$214y ;
  assign \$procmux$7911_CMP  = \$151y ;
  assign \$cmderr_d$226  = \$procmux$7910_Y ;
  assign \$procmux$7921_CMP  = \$214y ;
  assign \$procmux$7925_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$230  = \$procmux$7924_Y ;
  assign \$procmux$7934_CMP  = \$214y ;
  assign \$procmux$7938_CMP  = \$151y ;
  assign \$progbuf_d$229  = \$procmux$7937_Y ;
  assign \$procmux$7947_CMP  = \$214y ;
  assign \$procmux$7951_CMP  = \$151y ;
  assign \$cmd_valid_d$228  = \$procmux$7950_Y ;
  assign \$procmux$7961_CMP  = \$214y ;
  assign \$procmux$7965_CMP  = \$151y ;
  assign \$cmderr_d$227  = \$procmux$7964_Y ;
  assign \$procmux$7974_CMP  = \$206y ;
  assign \$procmux$7977_CMP  = \$205y ;
  assign \$procmux$7981_CMP  = \$151y ;
  assign \$cmderr_d$207  = \$procmux$7980_Y ;
  assign \$procmux$7992_CMP  = \$205y ;
  assign \$procmux$7996_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$210  = \$procmux$7995_Y ;
  assign \$procmux$8006_CMP  = \$205y ;
  assign \$procmux$8010_CMP  = \$151y ;
  assign \$abstractauto_d$209  = \$procmux$8009_Y ;
  assign \$procmux$8021_CMP  = \$205y ;
  assign \$procmux$8025_CMP  = \$151y ;
  assign \$cmderr_d$208  = \$procmux$8024_Y ;
  assign \$procmux$8036_CMP  = \$197y ;
  assign \$procmux$8039_CMP  = \$196y ;
  assign \$procmux$8043_CMP  = \$151y ;
  assign \$cmderr_d$198  = \$procmux$8042_Y ;
  assign \$procmux$8056_CMP  = \$196y ;
  assign \$procmux$8060_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$202  = \$procmux$8059_Y ;
  assign \$procmux$8072_CMP  = \$196y ;
  assign \$procmux$8076_CMP  = \$151y ;
  assign \$cmd_valid_d$201  = \$procmux$8075_Y ;
  assign \$procmux$8088_CMP  = \$196y ;
  assign \$procmux$8092_CMP  = \$151y ;
  assign \$command_d$200  = \$procmux$8091_Y ;
  assign \$procmux$8105_CMP  = \$196y ;
  assign \$procmux$8109_CMP  = \$151y ;
  assign \$cmderr_d$199  = \$procmux$8108_Y ;
  assign \$procmux$8121_CMP  = \$191y ;
  assign \$procmux$8124_CMP  = \$188y ;
  assign \$procmux$8128_CMP  = \$151y ;
  assign \$cmderr_d$192  = \$procmux$8127_Y ;
  assign \$procmux$8142_CMP  = \$188y ;
  assign \$procmux$8146_CMP  = \$151y ;
  assign \$cmderr_d$193  = \$procmux$8145_Y ;
  assign \$procmux$8160_CMP  = \$188y ;
  assign \$procmux$8164_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$194  = \$procmux$8163_Y ;
  assign \$procmux$8179_CMP  = dmi_req_i[28];
  assign \$procmux$8183_CMP  = \$151y ;
  assign \$havereset_d_aligned$184  = \$procmux$8182_Y ;
  assign \$procmux$8202_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$175  = \$procmux$8201_Y ;
  assign \$procmux$8221_CMP  = \$151y ;
  assign \$data_d$174  = \$procmux$8220_Y ;
  assign \$procmux$8240_CMP  = \$151y ;
  assign \$cmd_valid_d$173  = \$procmux$8239_Y ;
  assign \$procmux$8259_CMP  = \$151y ;
  assign \$cmderr_d$172  = \$procmux$8258_Y ;
  assign \$procmux$8275_CMP  = \$166y ;
  assign \$procmux$8278_CMP  = \$155y ;
  assign \$procmux$8282_CMP  = \$151y ;
  assign \$cmderr_d$167  = \$procmux$8281_Y ;
  assign \$procmux$8300_CMP  = \$155y ;
  assign \$procmux$8304_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$171  = \$procmux$8303_Y ;
  assign \$procmux$8321_CMP  = \$155y ;
  assign \$procmux$8325_CMP  = \$151y ;
  assign \$data_d$170  = \$procmux$8324_Y ;
  assign \$procmux$8342_CMP  = \$155y ;
  assign \$procmux$8346_CMP  = \$151y ;
  assign \$cmd_valid_d$169  = \$procmux$8345_Y ;
  assign \$procmux$8364_CMP  = \$155y ;
  assign \$procmux$8368_CMP  = \$151y ;
  assign \$cmderr_d$168  = \$procmux$8367_Y ;
  assign \$procmux$8375_CMP  = \$151y ;
  assign \$sbdata_write_valid_o$278  = \$procmux$8374_Y ;
  assign \$procmux$8384_CMP  = \$151y ;
  assign \$sbaddress_write_valid_o$277  = \$procmux$8383_Y ;
  assign \$procmux$8399_CMP  = \$151y ;
  assign \$a_abstractcs$276  = \$procmux$8398_Y ;
  assign \$procmux$8409_CMP  = \$151y ;
  assign \$sbcs$275  = \$procmux$8408_Y ;
  assign \$procmux$8427_CMP  = \$151y ;
  assign \$havereset_d_aligned$274  = \$procmux$8426_Y ;
  assign \$procmux$8451_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$273  = \$procmux$8450_Y ;
  assign \$procmux$8470_CMP  = \$151y ;
  assign \$data_d$272  = \$procmux$8469_Y ;
  assign \$procmux$8481_CMP  = \$151y ;
  assign \$progbuf_d$271  = \$procmux$8480_Y ;
  assign \$procmux$8486_CMP  = \$252y ;
  assign \$procmux$8490_CMP  = \$151y ;
  assign \$sbdata_write_valid_o$257  = \$procmux$8489_Y ;
  assign \$procmux$8500_CMP  = \$151y ;
  assign \$sbcs_d$268 [31:23] = \$procmux$8499_Y ;
  assign \$procmux$8507_CMP  = \$240y ;
  assign \$procmux$8511_CMP  = \$151y ;
  assign \$sbaddress_write_valid_o$245  = \$procmux$8510_Y ;
  assign \$procmux$8523_CMP  = \$151y ;
  assign \$abstractauto_d$267  = \$procmux$8522_Y ;
  assign \$procmux$8538_CMP  = \$151y ;
  assign \$cmd_valid_d$266  = \$procmux$8537_Y ;
  assign \$procmux$8552_CMP  = \$151y ;
  assign \$command_d$265  = \$procmux$8551_Y ;
  assign \$procmux$8571_CMP  = \$151y ;
  assign \$cmderr_d$264  = \$procmux$8570_Y ;
  assign \$procmux$8589_CMP  = \$151y ;
  assign \$dmcontrol_d$263  = \$procmux$8588_Y ;
  assign \$procmux$8593_CMP  = \$151y ;
  assign \$sbdata_write_valid_o$294  = \$procmux$8592_Y ;
  assign \$procmux$8597_CMP  = \$151y ;
  assign \$sbaddress_write_valid_o$293  = \$procmux$8596_Y ;
  assign \$procmux$8601_CMP  = \$151y ;
  assign \$a_abstractcs$292  = \$procmux$8600_Y ;
  assign \$procmux$8605_CMP  = \$151y ;
  assign \$sbcs$291  = \$procmux$8604_Y ;
  assign \$procmux$8609_CMP  = \$151y ;
  assign \$havereset_d_aligned$290  = \$procmux$8608_Y ;
  assign \$procmux$8613_CMP  = \$151y ;
  assign \$resp_queue_inp[1:0]$289  = \$procmux$8612_Y ;
  assign \$procmux$8617_CMP  = \$151y ;
  assign \$data_d$288  = \$procmux$8616_Y ;
  assign \$procmux$8621_CMP  = \$151y ;
  assign \$progbuf_d$287  = \$procmux$8620_Y ;
  assign \$procmux$8625_CMP  = \$151y ;
  assign \$sbdata_d$286  = \$procmux$8624_Y ;
  assign \$procmux$8629_CMP  = \$151y ;
  assign \$sbaddr_d$285  = \$procmux$8628_Y ;
  assign \$procmux$8633_CMP  = \$151y ;
  assign \$sbcs_d$284  = \$procmux$8632_Y ;
  assign \$procmux$8637_CMP  = \$151y ;
  assign \$abstractauto_d$283  = \$procmux$8636_Y ;
  assign \$procmux$8641_CMP  = \$151y ;
  assign \$cmd_valid_d$282  = \$procmux$8640_Y ;
  assign \$procmux$8645_CMP  = \$151y ;
  assign \$command_d$281  = \$procmux$8644_Y ;
  assign \$procmux$8649_CMP  = \$151y ;
  assign \$cmderr_d$280  = \$procmux$8648_Y ;
  assign \$procmux$8653_CMP  = \$151y ;
  assign \$dmcontrol_d$279  = \$procmux$8652_Y ;
  assign \$procmux$8678_CMP  = \$81y ;
  assign \$resp_queue_inp$142 [33:2] = \$procmux$8677_Y ;
  assign \$procmux$8682_CMP  = \$136y ;
  assign \$procmux$8686_CMP  = \$81y ;
  assign \$resp_queue_inp$138 [1:0] = \$procmux$8685_Y ;
  assign \$procmux$8690_CMP  = \$136y ;
  assign \$procmux$8694_CMP  = \$81y ;
  assign \$sbcs_d[22]$137  = \$procmux$8693_Y ;
  assign \$procmux$8706_CMP  = \$81y ;
  assign \$resp_queue_inp$142 [1:0] = \$procmux$8705_Y ;
  assign \$procmux$8711_CMP  = \$130y ;
  assign \$procmux$8715_CMP  = \$81y ;
  assign \$resp_queue_inp$133 [1:0] = \$procmux$8714_Y ;
  assign \$procmux$8720_CMP  = \$130y ;
  assign \$procmux$8724_CMP  = \$81y ;
  assign \$sbdata_read_valid_o$134  = \$procmux$8723_Y ;
  assign \$procmux$8729_CMP  = \$130y ;
  assign \$procmux$8733_CMP  = \$81y ;
  assign \$sbcs_d[22]$132  = \$procmux$8732_Y ;
  assign \$procmux$8737_CMP  = \$136y ;
  assign \$procmux$8741_CMP  = \$81y ;
  assign \$resp_queue_inp$138 [33:2] = \$procmux$8740_Y ;
  assign \$procmux$8755_CMP  = \$113y ;
  assign \$procmux$8759_CMP  = \$81y ;
  assign \$resp_queue_inp[1:0]$121  = \$procmux$8758_Y ;
  assign \$procmux$8772_CMP  = \$113y ;
  assign \$procmux$8776_CMP  = \$81y ;
  assign \$cmd_valid_d$120  = \$procmux$8775_Y ;
  assign \$procmux$8790_CMP  = \$113y ;
  assign \$procmux$8794_CMP  = \$81y ;
  assign \$cmderr_d$119  = \$procmux$8793_Y ;
  assign \$procmux$8799_CMP  = \$130y ;
  assign \$procmux$8803_CMP  = \$81y ;
  assign \$resp_queue_inp$133 [33:2] = \$procmux$8802_Y ;
  assign \$procmux$8815_CMP  = \$117y ;
  assign \$procmux$8818_CMP  = \$113y ;
  assign \$procmux$8822_CMP  = \$81y ;
  assign \$cmderr_d$118  = \$procmux$8821_Y ;
  assign \$procmux$8844_CMP  = \$88y ;
  assign \$procmux$8848_CMP  = \$81y ;
  assign \$resp_queue_inp[1:0]$96  = \$procmux$8847_Y ;
  assign \$procmux$8869_CMP  = \$88y ;
  assign \$procmux$8873_CMP  = \$81y ;
  assign \$cmd_valid_d$95  = \$procmux$8872_Y ;
  assign \$procmux$8895_CMP  = \$88y ;
  assign \$procmux$8899_CMP  = \$81y ;
  assign \$cmderr_d$94  = \$procmux$8898_Y ;
  assign \$procmux$8906_CMP  = \$81y ;
  assign \$sbdata_read_valid_o$143  = \$procmux$8905_Y ;
  assign \$procmux$8926_CMP  = \$92y ;
  assign \$procmux$8929_CMP  = \$88y ;
  assign \$procmux$8933_CMP  = \$81y ;
  assign \$cmderr_d$93  = \$procmux$8932_Y ;
  assign \$procmux$8941_CMP  = \$81y ;
  assign \$sbcs_d[22]$141  = \$procmux$8940_Y ;
  assign \$procmux$8958_CMP  = \$81y ;
  assign \$cmd_valid_d$140  = \$procmux$8957_Y ;
  assign \$procmux$8975_CMP  = \$81y ;
  assign \$cmderr_d$139  = \$procmux$8974_Y ;
  assign \$procmux$8978_CMP  = \$81y ;
  assign \$sbdata_read_valid_o$148  = \$procmux$8977_Y ;
  assign \$procmux$8981_CMP  = \$81y ;
  assign \$resp_queue_inp$147  = \$procmux$8980_Y ;
  assign \$procmux$8984_CMP  = \$81y ;
  assign \$sbcs_d[22]$146  = \$procmux$8983_Y ;
  assign \$procmux$8987_CMP  = \$81y ;
  assign \$cmd_valid_d$145  = \$procmux$8986_Y ;
  assign \$procmux$8990_CMP  = \$81y ;
  assign \$cmderr_d$144  = \$procmux$8989_Y ;
  assign \$procmux$8993_CMP  = \$327y ;
  assign \$data_q$337  = \$procmux$8992_Y ;
  assign \$procmux$8996_CMP  = \$327y ;
  assign \$progbuf_q$336  = \$procmux$8995_Y ;
  assign \$procmux$8999_CMP  = \$327y ;
  assign \$sbdata_q$335  = \$procmux$8998_Y ;
  assign \$procmux$9002_CMP  = \$327y ;
  assign \$sbaddr_q$334  = \$procmux$9001_Y ;
  assign \$procmux$9005_CMP  = \$327y ;
  assign \$sbcs_q$333  = \$procmux$9004_Y ;
  assign \$procmux$9008_CMP  = \$327y ;
  assign \$abstractauto_q$332  = \$procmux$9007_Y ;
  assign \$procmux$9011_CMP  = \$327y ;
  assign \$cmd_valid_q$331  = \$procmux$9010_Y ;
  assign \$procmux$9014_CMP  = \$327y ;
  assign \$command_q$330  = \$procmux$9013_Y ;
  assign \$procmux$9017_CMP  = \$327y ;
  assign \$cmderr_q$329  = \$procmux$9016_Y ;
  assign \$procmux$9020_CMP  = \$327y ;
  assign \$dmcontrol_q$328  = \$procmux$9019_Y ;
  assign \$procmux$9022_CMP  = \$307y ;
  assign \$resumereq_o$319  = \$procmux$9021_Y ;
  assign \$procmux$9024_CMP  = \$307y ;
  assign \$haltreq_o$318  = \$procmux$9023_Y ;
  assign \$procmux$9026_CMP  = \$13y ;
  assign \$haltsum2$16  = \$procmux$9025_Y ;
  assign \$procmux$9028_CMP  = \$7y ;
  assign \$haltsum1$10  = \$procmux$9027_Y ;
  assign \$procmux$9030_CMP  = \$1y ;
  assign \$haltsum0$4  = \$procmux$9029_Y ;
  assign \$6y  = halted_i;
  assign \$12y  = halted_i;
  assign \$18y  = halted_i;
  assign \$183y  = \$auto$rtlil.cc:3004:And$13189 ;
  assign \$procmux$8587_CMP  = \$176y ;
  assign \$305y  = 32'd0;
  assign \$312y  = \$auto$rtlil.cc:3004:And$13191 ;
  assign \$317y  = \$auto$rtlil.cc:3004:And$13193 ;
  assign \$325y  = rst_ni;
  assign \$procmux$8181_CMP  = \$176y ;
  assign \$procmux$8425_CMP  = \$176y ;
  assign \$326y  = \$procmux$7661_Y ;
  assign \$procmux$7682_CMP  = \$258y ;
  assign \$procmux$7696_CMP  = \$258y ;
  assign \$procmux$7703_CMP  = \$251y ;
  assign \$procmux$7721_CMP  = \$251y ;
  assign \$procmux$8692_CMP  = \$135y ;
  assign \$procmux$8731_CMP  = \$129y ;
  assign \$procmux$8937_CMP  = \$135y ;
  assign \$procmux$8939_CMP  = \$129y ;
  assign \$procmux$7690_CMP  = \$258y ;
  assign \$procmux$7730_CMP  = \$251y ;
  assign \$procmux$7760_CMP  = \$246y ;
  assign \$procmux$7783_CMP  = \$258y ;
  assign \$procmux$7785_CMP  = \$251y ;
  assign \$procmux$7787_CMP  = \$246y ;
  assign \$procmux$7789_CMP  = \$239y ;
  assign \$procmux$7791_CMP  = \$231y ;
  assign \$procmux$7834_CMP  = \$239y ;
  assign \$procmux$7894_CMP  = \$231y ;
  assign \$procmux$7801_CMP  = \$231y ;
  assign \$procmux$7858_CMP  = \$231y ;
  assign \$procmux$7846_CMP  = \$231y ;
  assign \$procmux$8498_CMP  = \$231y ;
  assign \$procmux$8219_CMP  = \$154y ;
  assign \$procmux$8323_CMP  = \$154y ;
  assign \$procmux$8468_CMP  = \$154y ;
  assign \$procmux$8820_CMP  = \$109y ;
  assign \$procmux$8792_CMP  = \$109y ;
  assign \$procmux$8931_CMP  = \$84y ;
  assign \$procmux$8897_CMP  = \$84y ;
  assign \$procmux$8971_CMP  = \$109y ;
  assign \$procmux$8973_CMP  = \$84y ;
  assign \$procmux$7909_CMP  = \$213y ;
  assign \$procmux$7963_CMP  = \$213y ;
  assign \$procmux$7979_CMP  = \$204y ;
  assign \$procmux$8023_CMP  = \$204y ;
  assign \$procmux$8041_CMP  = \$195y ;
  assign \$procmux$8107_CMP  = \$195y ;
  assign \$procmux$8126_CMP  = \$187y ;
  assign \$procmux$8144_CMP  = \$187y ;
  assign \$procmux$8257_CMP  = \$154y ;
  assign \$procmux$8280_CMP  = \$154y ;
  assign \$procmux$8366_CMP  = \$154y ;
  assign \$procmux$8561_CMP  = \$213y ;
  assign \$procmux$8563_CMP  = \$204y ;
  assign \$procmux$8565_CMP  = \$195y ;
  assign \$procmux$8567_CMP  = \$187y ;
  assign \$procmux$8569_CMP  = \$154y ;
  assign \$procmux$8657_CMP  = \$135y ;
  assign \$procmux$8659_CMP  = \$129y ;
  assign \$procmux$8660_CMP  = \$128y ;
  assign \$procmux$8661_CMP  = \$127y ;
  assign \$procmux$8662_CMP  = \$126y ;
  assign \$procmux$8663_CMP  = \$125y ;
  assign \$procmux$8664_CMP  = \$124y ;
  assign \$procmux$8665_CMP  = \$123y ;
  assign \$procmux$8666_CMP  = \$122y ;
  assign \$procmux$8668_CMP  = \$109y ;
  assign \$procmux$8669_CMP  = \$106y ;
  assign \$procmux$8670_CMP  = \$104y ;
  assign \$procmux$8671_CMP  = \$103y ;
  assign \$procmux$8672_CMP  = \$99y ;
  assign \$procmux$8673_CMP  = \$98y ;
  assign \$procmux$8674_CMP  = \$97y ;
  assign \$procmux$8676_CMP  = \$84y ;
  assign \$procmux$8739_CMP  = \$135y ;
  assign \$procmux$8801_CMP  = \$129y ;
  assign \$procmux$8684_CMP  = \$135y ;
  assign \$procmux$8698_CMP  = \$135y ;
  assign \$procmux$8700_CMP  = \$129y ;
  assign \$procmux$8702_CMP  = \$109y ;
  assign \$procmux$8704_CMP  = \$84y ;
  assign \$procmux$8713_CMP  = \$129y ;
  assign \$procmux$8757_CMP  = \$109y ;
  assign \$procmux$8846_CMP  = \$84y ;
  assign \$procmux$7674_CMP  = \$258y ;
  assign \$procmux$7712_CMP  = \$251y ;
  assign \$procmux$7740_CMP  = \$246y ;
  assign \$procmux$7750_CMP  = \$246y ;
  assign \$procmux$7768_CMP  = \$246y ;
  assign \$procmux$7777_CMP  = \$239y ;
  assign \$procmux$7823_CMP  = \$239y ;
  assign \$procmux$7812_CMP  = \$239y ;
  assign \$procmux$7870_CMP  = \$231y ;
  assign \$procmux$7882_CMP  = \$231y ;
  assign \$procmux$7923_CMP  = \$213y ;
  assign \$procmux$7936_CMP  = \$213y ;
  assign \$procmux$8774_CMP  = \$109y ;
  assign \$procmux$8871_CMP  = \$84y ;
  assign \$procmux$8954_CMP  = \$109y ;
  assign \$procmux$8956_CMP  = \$84y ;
  assign \$procmux$7949_CMP  = \$213y ;
  assign \$procmux$7994_CMP  = \$204y ;
  assign \$procmux$8008_CMP  = \$204y ;
  assign \$procmux$8058_CMP  = \$195y ;
  assign \$procmux$8074_CMP  = \$195y ;
  assign \$procmux$8090_CMP  = \$195y ;
  assign \$procmux$8162_CMP  = \$187y ;
  assign \$procmux$8200_CMP  = \$154y ;
  assign \$procmux$8302_CMP  = \$154y ;
  assign \$procmux$8238_CMP  = \$154y ;
  assign \$procmux$8344_CMP  = \$154y ;
  assign \$procmux$8373_CMP  = \$251y ;
  assign \$procmux$8488_CMP  = \$251y ;
  assign \$procmux$8382_CMP  = \$239y ;
  assign \$procmux$8509_CMP  = \$239y ;
  assign \$procmux$8397_CMP  = \$187y ;
  assign \$procmux$8407_CMP  = \$231y ;
  assign \$procmux$8431_CMP  = \$258y ;
  assign \$procmux$8433_CMP  = \$251y ;
  assign \$procmux$8435_CMP  = \$246y ;
  assign \$procmux$8437_CMP  = \$239y ;
  assign \$procmux$8439_CMP  = \$231y ;
  assign \$procmux$8441_CMP  = \$213y ;
  assign \$procmux$8443_CMP  = \$204y ;
  assign \$procmux$8445_CMP  = \$195y ;
  assign \$procmux$8447_CMP  = \$187y ;
  assign \$procmux$8449_CMP  = \$154y ;
  assign \$procmux$8479_CMP  = \$213y ;
  assign \$procmux$8521_CMP  = \$204y ;
  assign \$procmux$8532_CMP  = \$213y ;
  assign \$procmux$8534_CMP  = \$195y ;
  assign \$procmux$8536_CMP  = \$154y ;
  assign \$procmux$8550_CMP  = \$195y ;
  assign \$procmux$8722_CMP  = \$129y ;
  assign \$procmux$8904_CMP  = \$129y ;
endmodule

/* src = "rtl/riscv-dbg/dm_mem.sv:19.8" */
module \dm_mem$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_mem (clk_i, rst_ni, debug_req_o, req_i, we_i, addr_i, wdata_i, be_i, rdata_o, data_i, data_o, ndmreset_i, hartsel_i, haltreq_i, resumereq_i, clear_resumeack_i, halted_o, resuming_o, progbuf_i, data_valid_o, cmd_valid_i
, cmd_i, cmderror_valid_o, cmderror_o, cmdbusy_o);
  wire \$100y ;
  wire [31:0] \$110y ;
  wire \$111y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$130y ;
  wire \$131y ;
  wire \$133y ;
  wire \$134y ;
  wire \$135y ;
  wire \$136y ;
  wire \$139y ;
  wire \$13y ;
  wire \$140y ;
  wire \$141y ;
  wire [8:0] \$142y ;
  wire [8:0] \$143y ;
  wire [8:0] \$144y ;
  wire \$145y ;
  wire [31:0] \$146y ;
  wire [31:0] \$147y ;
  wire [8:0] \$148y ;
  wire [8:0] \$149y ;
  wire \$14y ;
  wire \$150y ;
  wire [31:0] \$151y ;
  wire [31:0] \$152y ;
  wire \$153y ;
  wire \$154y ;
  wire \$155y ;
  wire [8:0] \$156y ;
  wire \$157y ;
  wire [63:0] \$158y ;
  wire [63:0] \$159y ;
  wire \$15y ;
  wire \$160y ;
  wire \$161y ;
  wire \$162y ;
  wire [8:0] \$163y ;
  wire \$164y ;
  wire [63:0] \$165y ;
  wire [63:0] \$166y ;
  wire \$167y ;
  wire \$168y ;
  wire \$169y ;
  wire \$16y ;
  wire [11:0] \$170y ;
  wire [11:0] \$171y ;
  wire \$172y ;
  wire [11:0] \$173y ;
  wire \$174y ;
  wire \$175y ;
  wire \$176y ;
  wire [7:0] \$177y ;
  wire [63:0] \$178y ;
  wire [63:0] \$179y ;
  wire \$17y ;
  wire [63:0] \$180y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$205y ;
  wire \$206y ;
  wire \$207y ;
  wire \$208y ;
  wire \$209y ;
  wire \$20y ;
  wire \$210y ;
  wire \$211y ;
  wire \$212y ;
  wire \$213y ;
  wire \$21y ;
  wire \$220y ;
  wire \$221y ;
  wire \$222y ;
  wire \$223y ;
  wire \$224y ;
  wire \$225y ;
  wire \$226y ;
  wire \$227y ;
  wire \$228y ;
  wire \$229y ;
  wire \$22y ;
  wire \$236y ;
  wire \$237y ;
  wire \$238y ;
  wire \$23y ;
  wire \$247y ;
  wire \$248y ;
  wire \$24y ;
  wire \$254y ;
  wire \$256y ;
  wire \$257y ;
  wire \$259y ;
  wire \$25y ;
  wire \$260y ;
  wire \$261y ;
  wire \$262y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$3y ;
  wire \$45y ;
  wire \$4y ;
  wire [63:0] \$53y ;
  wire [31:0] \$54y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire [1:0] \$60y ;
  wire [1:0] \$61y ;
  wire [1:0] \$62y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire [1:0] \$69y ;
  wire \$6y ;
  wire [1:0] \$70y ;
  wire [1:0] \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire [1:0] \$76y ;
  wire [1:0] \$77y ;
  wire [1:0] \$78y ;
  wire \$79y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire [1:0] \$85y ;
  wire [1:0] \$86y ;
  wire [1:0] \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$90y ;
  wire \$91y ;
  wire [1:0] \$92y ;
  wire [1:0] \$93y ;
  wire [1:0] \$94y ;
  wire \$95y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire [31:0] \$99y ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:399.13-405.16" */
  wire [31:0] \$abstract_cmd[159:128]$214 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:442.13-448.16" */
  wire [31:0] \$abstract_cmd[159:128]$230 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:397.20-417.14" */
  wire [127:0] \$abstract_cmd[255:128]$215 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:386.20-417.14" */
  wire [127:0] \$abstract_cmd[255:128]$216 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  wire [127:0] \$abstract_cmd[255:128]$218 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:440.20-460.14" */
  wire [127:0] \$abstract_cmd[255:128]$231 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:429.20-460.14" */
  wire [127:0] \$abstract_cmd[255:128]$232 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  wire [127:0] \$abstract_cmd[255:128]$234 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  wire [127:0] \$abstract_cmd[255:128]$242 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  wire [127:0] \$abstract_cmd[255:128]$245 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  wire [127:0] \$abstract_cmd[255:128]$251 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:473.9-476.12" */
  wire [31:0] \$abstract_cmd[319:288]$249 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  wire [31:0] \$abstract_cmd[319:288]$252 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  wire [31:0] \$abstract_cmd[31:0]$217 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  wire [31:0] \$abstract_cmd[31:0]$233 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.18-467.12" */
  wire [31:0] \$abstract_cmd[31:0]$239 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  wire [31:0] \$abstract_cmd[31:0]$241 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  wire [31:0] \$abstract_cmd[31:0]$244 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  wire [31:0] \$abstract_cmd[31:0]$250 ;
  wire [1:0] \$auto$rtlil.cc:2957:Not$13170 ;
  wire [1:0] \$auto$rtlil.cc:2957:Not$13176 ;
  wire [1:0] \$auto$rtlil.cc:3004:And$13167 ;
  wire [1:0] \$auto$rtlil.cc:3004:And$13171 ;
  wire [1:0] \$auto$rtlil.cc:3004:And$13177 ;
  wire [63:0] \$auto$rtlil.cc:3004:And$13181 ;
  wire [1:0] \$auto$rtlil.cc:3005:Or$13173 ;
  wire [1:0] \$auto$rtlil.cc:3005:Or$13179 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire \$cmdbusy_o$44 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  wire [2:0] \$cmderror_o$11 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire [2:0] \$cmderror_o$43 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:196.5-199.8" */
  wire [2:0] \$cmderror_o$47 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:201.5-204.8" */
  wire [2:0] \$cmderror_o$49 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:151.18-155.12" */
  wire [2:0] \$cmderror_o$8 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  wire \$cmderror_valid_o$10 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire \$cmderror_valid_o$42 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:196.5-199.8" */
  wire \$cmderror_valid_o$46 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:201.5-204.8" */
  wire \$cmderror_valid_o$48 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:151.18-155.12" */
  wire \$cmderror_valid_o$7 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire [63:0] \$data_bits$126 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [63:0] \$data_bits$190 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [63:0] \$data_bits$199 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[15:8]$103 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[15:8]$104 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[23:16]$105 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[23:16]$106 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  wire [31:0] \$data_bits[31:0]$109 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[31:24]$107 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[31:24]$108 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[39:32]$112 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[39:32]$113 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[47:40]$114 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[47:40]$115 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[55:48]$116 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[55:48]$117 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  wire [31:0] \$data_bits[63:32]$120 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[63:56]$118 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[63:56]$119 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24" */
  wire [7:0] \$data_bits[7:0]$101 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  wire [7:0] \$data_bits[7:0]$102 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire \$data_valid_o$127 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire \$data_valid_o$192 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire \$data_valid_o$201 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire \$exception$122 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire \$exception$185 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire \$exception$194 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire \$go$40 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  wire \$go$51 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire \$going$121 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire \$going$184 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire \$going$193 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire [1:0] \$halted_aligned$124 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [1:0] \$halted_aligned$188 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [1:0] \$halted_aligned$197 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire [1:0] \$halted_d_aligned$123 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [1:0] \$halted_d_aligned$187 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [1:0] \$halted_d_aligned$196 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:343.5-347.8" */
  wire [1:0] \$halted_d_aligned$202 ;
  wire \$procmux$6481_Y ;
  wire \$procmux$6482_CMP ;
  wire [31:0] \$procmux$6485_Y ;
  wire \$procmux$6486_CMP ;
  wire [31:0] \$procmux$6489_Y ;
  wire \$procmux$6490_CMP ;
  wire [31:0] \$procmux$6491_Y ;
  wire \$procmux$6492_CMP ;
  wire \$procmux$6494_Y ;
  wire \$procmux$6495_CMP ;
  wire \$procmux$6497_Y ;
  wire \$procmux$6498_CMP ;
  wire \$procmux$6500_Y ;
  wire \$procmux$6501_CMP ;
  wire \$procmux$6502_Y ;
  wire \$procmux$6503_CMP ;
  wire [31:0] \$procmux$6505_Y ;
  wire \$procmux$6506_CMP ;
  wire [31:0] \$procmux$6508_Y ;
  wire \$procmux$6509_CMP ;
  wire [31:0] \$procmux$6511_Y ;
  wire \$procmux$6512_CMP ;
  wire [31:0] \$procmux$6513_Y ;
  wire \$procmux$6514_CMP ;
  wire \$procmux$6519_Y ;
  wire \$procmux$6520_CMP ;
  wire \$procmux$6522_Y ;
  wire \$procmux$6523_CMP ;
  wire \$procmux$6524_Y ;
  wire \$procmux$6525_CMP ;
  wire [31:0] \$procmux$6530_Y ;
  wire \$procmux$6531_CMP ;
  wire [31:0] \$procmux$6533_Y ;
  wire \$procmux$6534_CMP ;
  wire [31:0] \$procmux$6535_Y ;
  wire \$procmux$6536_CMP ;
  wire [95:0] \$procmux$6540_Y ;
  wire \$procmux$6541_CMP ;
  wire [95:0] \$procmux$6543_Y ;
  wire \$procmux$6544_CMP ;
  wire [95:0] \$procmux$6546_Y ;
  wire \$procmux$6547_CMP ;
  wire [95:0] \$procmux$6548_Y ;
  wire \$procmux$6549_CMP ;
  wire [95:0] \$procmux$6551_Y ;
  wire \$procmux$6552_CMP ;
  wire [95:0] \$procmux$6553_Y ;
  wire \$procmux$6554_CMP ;
  wire [31:0] \$procmux$6559_Y ;
  wire \$procmux$6560_CMP ;
  wire [31:0] \$procmux$6561_Y ;
  wire \$procmux$6562_CMP ;
  wire [31:0] \$procmux$6564_Y ;
  wire \$procmux$6565_CMP ;
  wire [31:0] \$procmux$6567_Y ;
  wire \$procmux$6568_CMP ;
  wire [31:0] \$procmux$6569_Y ;
  wire \$procmux$6570_CMP ;
  wire [31:0] \$procmux$6572_Y ;
  wire \$procmux$6573_CMP ;
  wire [31:0] \$procmux$6574_Y ;
  wire \$procmux$6575_CMP ;
  wire [31:0] \$procmux$6580_Y ;
  wire \$procmux$6581_CMP ;
  wire [31:0] \$procmux$6583_Y ;
  wire \$procmux$6584_CMP ;
  wire [31:0] \$procmux$6586_Y ;
  wire \$procmux$6587_CMP ;
  wire [31:0] \$procmux$6588_Y ;
  wire \$procmux$6589_CMP ;
  wire [31:0] \$procmux$6591_Y ;
  wire \$procmux$6592_CMP ;
  wire [31:0] \$procmux$6593_Y ;
  wire \$procmux$6594_CMP ;
  wire [127:0] \$procmux$6599_Y ;
  wire \$procmux$6600_CMP ;
  wire [127:0] \$procmux$6602_Y ;
  wire \$procmux$6603_CMP ;
  wire [127:0] \$procmux$6604_Y ;
  wire \$procmux$6605_CMP ;
  wire [127:0] \$procmux$6607_Y ;
  wire \$procmux$6608_CMP ;
  wire [127:0] \$procmux$6609_Y ;
  wire \$procmux$6610_CMP ;
  wire \$procmux$6614_Y ;
  wire \$procmux$6615_CMP ;
  wire \$procmux$6616_Y ;
  wire \$procmux$6617_CMP ;
  wire \$procmux$6619_Y ;
  wire \$procmux$6620_CMP ;
  wire \$procmux$6621_Y ;
  wire \$procmux$6622_CMP ;
  wire [127:0] \$procmux$6627_Y ;
  wire \$procmux$6628_CMP ;
  wire [127:0] \$procmux$6629_Y ;
  wire \$procmux$6630_CMP ;
  wire [127:0] \$procmux$6632_Y ;
  wire \$procmux$6633_CMP ;
  wire [127:0] \$procmux$6634_Y ;
  wire \$procmux$6635_CMP ;
  wire [31:0] \$procmux$6639_Y ;
  wire \$procmux$6640_CMP ;
  wire [31:0] \$procmux$6641_Y ;
  wire \$procmux$6642_CMP ;
  wire [31:0] \$procmux$6644_Y ;
  wire \$procmux$6645_CMP ;
  wire [31:0] \$procmux$6646_Y ;
  wire \$procmux$6647_CMP ;
  wire [127:0] \$procmux$6651_Y ;
  wire \$procmux$6652_CMP ;
  wire [127:0] \$procmux$6654_Y ;
  wire \$procmux$6655_CMP ;
  wire [127:0] \$procmux$6656_Y ;
  wire \$procmux$6657_CMP ;
  wire \$procmux$6662_Y ;
  wire \$procmux$6663_CMP ;
  wire \$procmux$6664_Y ;
  wire \$procmux$6665_CMP ;
  wire [127:0] \$procmux$6670_Y ;
  wire \$procmux$6671_CMP ;
  wire [127:0] \$procmux$6672_Y ;
  wire \$procmux$6673_CMP ;
  wire [31:0] \$procmux$6678_Y ;
  wire \$procmux$6679_CMP ;
  wire [31:0] \$procmux$6680_Y ;
  wire \$procmux$6681_CMP ;
  wire [95:0] \$procmux$6685_Y ;
  wire \$procmux$6686_CMP ;
  wire [95:0] \$procmux$6688_Y ;
  wire \$procmux$6689_CMP ;
  wire [95:0] \$procmux$6691_Y ;
  wire \$procmux$6692_CMP ;
  wire [95:0] \$procmux$6693_Y ;
  wire \$procmux$6694_CMP ;
  wire [95:0] \$procmux$6695_Y ;
  wire \$procmux$6696_CMP ;
  wire [31:0] \$procmux$6701_Y ;
  wire \$procmux$6702_CMP ;
  wire [31:0] \$procmux$6703_Y ;
  wire \$procmux$6704_CMP ;
  wire [31:0] \$procmux$6706_Y ;
  wire \$procmux$6707_CMP ;
  wire [31:0] \$procmux$6709_Y ;
  wire \$procmux$6710_CMP ;
  wire [31:0] \$procmux$6711_Y ;
  wire \$procmux$6712_CMP ;
  wire [31:0] \$procmux$6713_Y ;
  wire \$procmux$6714_CMP ;
  wire [31:0] \$procmux$6719_Y ;
  wire \$procmux$6720_CMP ;
  wire [31:0] \$procmux$6722_Y ;
  wire \$procmux$6723_CMP ;
  wire [31:0] \$procmux$6725_Y ;
  wire \$procmux$6726_CMP ;
  wire [31:0] \$procmux$6727_Y ;
  wire \$procmux$6728_CMP ;
  wire [31:0] \$procmux$6729_Y ;
  wire \$procmux$6730_CMP ;
  wire [127:0] \$procmux$6735_Y ;
  wire \$procmux$6736_CMP ;
  wire [127:0] \$procmux$6738_Y ;
  wire \$procmux$6739_CMP ;
  wire [127:0] \$procmux$6740_Y ;
  wire \$procmux$6741_CMP ;
  wire [127:0] \$procmux$6742_Y ;
  wire \$procmux$6743_CMP ;
  wire \$procmux$6747_Y ;
  wire \$procmux$6748_CMP ;
  wire \$procmux$6749_Y ;
  wire \$procmux$6750_CMP ;
  wire \$procmux$6751_Y ;
  wire \$procmux$6752_CMP ;
  wire [127:0] \$procmux$6757_Y ;
  wire \$procmux$6758_CMP ;
  wire [127:0] \$procmux$6759_Y ;
  wire \$procmux$6760_CMP ;
  wire [127:0] \$procmux$6761_Y ;
  wire \$procmux$6762_CMP ;
  wire [31:0] \$procmux$6766_Y ;
  wire \$procmux$6767_CMP ;
  wire [31:0] \$procmux$6768_Y ;
  wire \$procmux$6769_CMP ;
  wire [31:0] \$procmux$6770_Y ;
  wire \$procmux$6771_CMP ;
  wire [31:0] \$procmux$6774_Y ;
  wire \$procmux$6775_CMP ;
  wire [127:0] \$procmux$6778_Y ;
  wire \$procmux$6779_CMP ;
  wire [1:0] \$procmux$6781_Y ;
  wire \$procmux$6782_CMP ;
  wire [1:0] \$procmux$6784_Y ;
  wire \$procmux$6785_CMP ;
  wire [63:0] \$procmux$6787_Y ;
  wire \$procmux$6788_CMP ;
  wire [63:0] \$procmux$6789_Y ;
  wire \$procmux$6790_CMP ;
  wire [63:0] \$procmux$6792_Y ;
  wire \$procmux$6793_CMP ;
  wire [63:0] \$procmux$6794_Y ;
  wire \$procmux$6795_CMP ;
  wire [63:0] \$procmux$6802_Y ;
  wire \$procmux$6803_CMP ;
  wire [63:0] \$procmux$6804_Y ;
  wire \$procmux$6805_CMP ;
  wire [63:0] \$procmux$6806_Y ;
  wire \$procmux$6807_CMP ;
  wire [63:0] \$procmux$6809_Y ;
  wire \$procmux$6810_CMP ;
  wire [63:0] \$procmux$6811_Y ;
  wire \$procmux$6812_CMP ;
  wire [63:0] \$procmux$6820_Y ;
  wire \$procmux$6821_CMP ;
  wire [63:0] \$procmux$6822_Y ;
  wire \$procmux$6823_CMP ;
  wire [63:0] \$procmux$6825_Y ;
  wire \$procmux$6826_CMP ;
  wire [63:0] \$procmux$6827_Y ;
  wire \$procmux$6828_CMP ;
  wire [63:0] \$procmux$6834_Y ;
  wire \$procmux$6835_CMP ;
  wire [63:0] \$procmux$6836_Y ;
  wire \$procmux$6837_CMP ;
  wire [63:0] \$procmux$6839_Y ;
  wire \$procmux$6840_CMP ;
  wire [63:0] \$procmux$6841_Y ;
  wire \$procmux$6842_CMP ;
  wire [63:0] \$procmux$6845_Y ;
  wire \$procmux$6846_CMP ;
  wire [63:0] \$procmux$6848_Y ;
  wire \$procmux$6849_CMP ;
  wire [63:0] \$procmux$6850_Y ;
  wire \$procmux$6851_CMP ;
  wire [63:0] \$procmux$6854_Y ;
  wire \$procmux$6855_CMP ;
  wire \$procmux$6856_CMP ;
  wire \$procmux$6857_CMP ;
  wire \$procmux$6858_CMP ;
  wire \$procmux$6860_CMP ;
  wire [63:0] \$procmux$6862_Y ;
  wire \$procmux$6863_CMP ;
  wire [63:0] \$procmux$6864_Y ;
  wire \$procmux$6865_CMP ;
  wire [7:0] \$procmux$6868_Y ;
  wire \$procmux$6869_CMP ;
  wire [7:0] \$procmux$6870_Y ;
  wire \$procmux$6871_CMP ;
  wire [7:0] \$procmux$6872_Y ;
  wire \$procmux$6873_CMP ;
  wire [7:0] \$procmux$6874_Y ;
  wire \$procmux$6875_CMP ;
  wire [7:0] \$procmux$6876_Y ;
  wire \$procmux$6877_CMP ;
  wire [7:0] \$procmux$6881_Y ;
  wire \$procmux$6882_CMP ;
  wire [7:0] \$procmux$6883_Y ;
  wire \$procmux$6884_CMP ;
  wire [7:0] \$procmux$6885_Y ;
  wire \$procmux$6886_CMP ;
  wire [7:0] \$procmux$6887_Y ;
  wire \$procmux$6888_CMP ;
  wire [7:0] \$procmux$6889_Y ;
  wire \$procmux$6890_CMP ;
  wire [7:0] \$procmux$6893_Y ;
  wire \$procmux$6894_CMP ;
  wire [7:0] \$procmux$6895_Y ;
  wire \$procmux$6896_CMP ;
  wire [7:0] \$procmux$6897_Y ;
  wire \$procmux$6898_CMP ;
  wire [7:0] \$procmux$6899_Y ;
  wire \$procmux$6900_CMP ;
  wire [7:0] \$procmux$6901_Y ;
  wire \$procmux$6902_CMP ;
  wire [7:0] \$procmux$6906_Y ;
  wire \$procmux$6907_CMP ;
  wire [7:0] \$procmux$6908_Y ;
  wire \$procmux$6909_CMP ;
  wire [7:0] \$procmux$6910_Y ;
  wire \$procmux$6911_CMP ;
  wire [7:0] \$procmux$6912_Y ;
  wire \$procmux$6913_CMP ;
  wire [7:0] \$procmux$6914_Y ;
  wire \$procmux$6915_CMP ;
  wire [7:0] \$procmux$6918_Y ;
  wire \$procmux$6919_CMP ;
  wire [7:0] \$procmux$6920_Y ;
  wire \$procmux$6921_CMP ;
  wire [7:0] \$procmux$6922_Y ;
  wire \$procmux$6923_CMP ;
  wire [7:0] \$procmux$6924_Y ;
  wire \$procmux$6925_CMP ;
  wire [7:0] \$procmux$6926_Y ;
  wire \$procmux$6927_CMP ;
  wire [7:0] \$procmux$6931_Y ;
  wire \$procmux$6932_CMP ;
  wire [7:0] \$procmux$6933_Y ;
  wire \$procmux$6934_CMP ;
  wire [7:0] \$procmux$6935_Y ;
  wire \$procmux$6936_CMP ;
  wire [7:0] \$procmux$6937_Y ;
  wire \$procmux$6938_CMP ;
  wire [7:0] \$procmux$6939_Y ;
  wire \$procmux$6940_CMP ;
  wire [7:0] \$procmux$6943_Y ;
  wire \$procmux$6944_CMP ;
  wire [7:0] \$procmux$6945_Y ;
  wire \$procmux$6946_CMP ;
  wire [7:0] \$procmux$6947_Y ;
  wire \$procmux$6948_CMP ;
  wire [7:0] \$procmux$6949_Y ;
  wire \$procmux$6950_CMP ;
  wire [7:0] \$procmux$6951_Y ;
  wire \$procmux$6952_CMP ;
  wire [7:0] \$procmux$6955_Y ;
  wire \$procmux$6956_CMP ;
  wire [7:0] \$procmux$6957_Y ;
  wire \$procmux$6958_CMP ;
  wire [7:0] \$procmux$6959_Y ;
  wire \$procmux$6960_CMP ;
  wire [7:0] \$procmux$6961_Y ;
  wire \$procmux$6962_CMP ;
  wire [7:0] \$procmux$6963_Y ;
  wire \$procmux$6964_CMP ;
  wire [31:0] \$procmux$6969_Y ;
  wire \$procmux$6970_CMP ;
  wire [31:0] \$procmux$6971_Y ;
  wire \$procmux$6972_CMP ;
  wire [31:0] \$procmux$6973_Y ;
  wire \$procmux$6974_CMP ;
  wire [31:0] \$procmux$6975_Y ;
  wire \$procmux$6976_CMP ;
  wire [7:0] \$procmux$6979_Y ;
  wire \$procmux$6980_CMP ;
  wire [7:0] \$procmux$6981_Y ;
  wire \$procmux$6982_CMP ;
  wire [7:0] \$procmux$6983_Y ;
  wire \$procmux$6984_CMP ;
  wire [7:0] \$procmux$6985_Y ;
  wire \$procmux$6986_CMP ;
  wire [7:0] \$procmux$6987_Y ;
  wire \$procmux$6988_CMP ;
  wire [7:0] \$procmux$6992_Y ;
  wire \$procmux$6993_CMP ;
  wire [7:0] \$procmux$6994_Y ;
  wire \$procmux$6995_CMP ;
  wire [7:0] \$procmux$6996_Y ;
  wire \$procmux$6997_CMP ;
  wire [7:0] \$procmux$6998_Y ;
  wire \$procmux$6999_CMP ;
  wire [7:0] \$procmux$7000_Y ;
  wire \$procmux$7001_CMP ;
  wire [7:0] \$procmux$7004_Y ;
  wire \$procmux$7005_CMP ;
  wire [7:0] \$procmux$7006_Y ;
  wire \$procmux$7007_CMP ;
  wire [7:0] \$procmux$7008_Y ;
  wire \$procmux$7009_CMP ;
  wire [7:0] \$procmux$7010_Y ;
  wire \$procmux$7011_CMP ;
  wire [7:0] \$procmux$7012_Y ;
  wire \$procmux$7013_CMP ;
  wire [7:0] \$procmux$7017_Y ;
  wire \$procmux$7018_CMP ;
  wire [7:0] \$procmux$7019_Y ;
  wire \$procmux$7020_CMP ;
  wire [7:0] \$procmux$7021_Y ;
  wire \$procmux$7022_CMP ;
  wire [7:0] \$procmux$7023_Y ;
  wire \$procmux$7024_CMP ;
  wire [7:0] \$procmux$7025_Y ;
  wire \$procmux$7026_CMP ;
  wire [7:0] \$procmux$7029_Y ;
  wire \$procmux$7030_CMP ;
  wire [7:0] \$procmux$7031_Y ;
  wire \$procmux$7032_CMP ;
  wire [7:0] \$procmux$7033_Y ;
  wire \$procmux$7034_CMP ;
  wire [7:0] \$procmux$7035_Y ;
  wire \$procmux$7036_CMP ;
  wire [7:0] \$procmux$7037_Y ;
  wire \$procmux$7038_CMP ;
  wire [7:0] \$procmux$7042_Y ;
  wire \$procmux$7043_CMP ;
  wire [7:0] \$procmux$7044_Y ;
  wire \$procmux$7045_CMP ;
  wire [7:0] \$procmux$7046_Y ;
  wire \$procmux$7047_CMP ;
  wire [7:0] \$procmux$7048_Y ;
  wire \$procmux$7049_CMP ;
  wire [7:0] \$procmux$7050_Y ;
  wire \$procmux$7051_CMP ;
  wire [7:0] \$procmux$7054_Y ;
  wire \$procmux$7055_CMP ;
  wire [7:0] \$procmux$7056_Y ;
  wire \$procmux$7057_CMP ;
  wire [7:0] \$procmux$7058_Y ;
  wire \$procmux$7059_CMP ;
  wire [7:0] \$procmux$7060_Y ;
  wire \$procmux$7061_CMP ;
  wire [7:0] \$procmux$7062_Y ;
  wire \$procmux$7063_CMP ;
  wire [7:0] \$procmux$7066_Y ;
  wire \$procmux$7067_CMP ;
  wire [7:0] \$procmux$7068_Y ;
  wire \$procmux$7069_CMP ;
  wire [7:0] \$procmux$7070_Y ;
  wire \$procmux$7071_CMP ;
  wire [7:0] \$procmux$7072_Y ;
  wire \$procmux$7073_CMP ;
  wire [7:0] \$procmux$7074_Y ;
  wire \$procmux$7075_CMP ;
  wire [31:0] \$procmux$7079_Y ;
  wire \$procmux$7080_CMP ;
  wire [31:0] \$procmux$7081_Y ;
  wire \$procmux$7082_CMP ;
  wire [31:0] \$procmux$7083_Y ;
  wire \$procmux$7084_CMP ;
  wire [31:0] \$procmux$7085_Y ;
  wire \$procmux$7086_CMP ;
  wire \$procmux$7090_Y ;
  wire \$procmux$7091_CMP ;
  wire \$procmux$7092_Y ;
  wire \$procmux$7093_CMP ;
  wire \$procmux$7094_Y ;
  wire \$procmux$7095_CMP ;
  wire [63:0] \$procmux$7099_Y ;
  wire \$procmux$7100_CMP ;
  wire [63:0] \$procmux$7101_Y ;
  wire \$procmux$7102_CMP ;
  wire [63:0] \$procmux$7103_Y ;
  wire \$procmux$7104_CMP ;
  wire [1:0] \$procmux$7109_Y ;
  wire \$procmux$7110_CMP ;
  wire [1:0] \$procmux$7111_Y ;
  wire \$procmux$7112_CMP ;
  wire [1:0] \$procmux$7113_Y ;
  wire \$procmux$7114_CMP ;
  wire [1:0] \$procmux$7121_Y ;
  wire \$procmux$7122_CMP ;
  wire [1:0] \$procmux$7123_Y ;
  wire \$procmux$7124_CMP ;
  wire [1:0] \$procmux$7125_Y ;
  wire \$procmux$7126_CMP ;
  wire [1:0] \$procmux$7131_Y ;
  wire \$procmux$7132_CMP ;
  wire \$procmux$7133_CMP ;
  wire [1:0] \$procmux$7134_Y ;
  wire \$procmux$7135_CMP ;
  wire [1:0] \$procmux$7136_Y ;
  wire \$procmux$7137_CMP ;
  wire \$procmux$7141_Y ;
  wire \$procmux$7142_CMP ;
  wire \$procmux$7143_Y ;
  wire \$procmux$7144_CMP ;
  wire \$procmux$7145_Y ;
  wire \$procmux$7146_CMP ;
  wire \$procmux$7152_Y ;
  wire \$procmux$7153_CMP ;
  wire \$procmux$7154_Y ;
  wire \$procmux$7155_CMP ;
  wire \$procmux$7156_Y ;
  wire \$procmux$7157_CMP ;
  wire \$procmux$7160_Y ;
  wire \$procmux$7161_CMP ;
  wire \$procmux$7162_Y ;
  wire \$procmux$7163_CMP ;
  wire [63:0] \$procmux$7166_Y ;
  wire \$procmux$7167_CMP ;
  wire [63:0] \$procmux$7168_Y ;
  wire \$procmux$7169_CMP ;
  wire [63:0] \$procmux$7172_Y ;
  wire \$procmux$7173_CMP ;
  wire [63:0] \$procmux$7174_Y ;
  wire \$procmux$7175_CMP ;
  wire [1:0] \$procmux$7178_Y ;
  wire \$procmux$7179_CMP ;
  wire [1:0] \$procmux$7180_Y ;
  wire \$procmux$7181_CMP ;
  wire [1:0] \$procmux$7184_Y ;
  wire \$procmux$7185_CMP ;
  wire [1:0] \$procmux$7186_Y ;
  wire \$procmux$7187_CMP ;
  wire [1:0] \$procmux$7190_Y ;
  wire \$procmux$7191_CMP ;
  wire [1:0] \$procmux$7192_Y ;
  wire \$procmux$7193_CMP ;
  wire [63:0] \$procmux$7196_Y ;
  wire \$procmux$7197_CMP ;
  wire [63:0] \$procmux$7198_Y ;
  wire \$procmux$7199_CMP ;
  wire \$procmux$7202_Y ;
  wire \$procmux$7203_CMP ;
  wire \$procmux$7204_Y ;
  wire \$procmux$7205_CMP ;
  wire \$procmux$7208_Y ;
  wire \$procmux$7209_CMP ;
  wire \$procmux$7210_Y ;
  wire \$procmux$7211_CMP ;
  wire \$procmux$7214_Y ;
  wire \$procmux$7215_CMP ;
  wire [63:0] \$procmux$7218_Y ;
  wire \$procmux$7219_CMP ;
  wire [63:0] \$procmux$7222_Y ;
  wire \$procmux$7223_CMP ;
  wire [1:0] \$procmux$7226_Y ;
  wire \$procmux$7227_CMP ;
  wire [1:0] \$procmux$7230_Y ;
  wire \$procmux$7231_CMP ;
  wire [1:0] \$procmux$7234_Y ;
  wire \$procmux$7235_CMP ;
  wire [63:0] \$procmux$7238_Y ;
  wire \$procmux$7239_CMP ;
  wire \$procmux$7242_Y ;
  wire \$procmux$7243_CMP ;
  wire \$procmux$7246_Y ;
  wire \$procmux$7247_CMP ;
  wire [1:0] \$procmux$7248_Y ;
  wire \$procmux$7249_CMP ;
  wire [1:0] \$procmux$7251_Y ;
  wire \$procmux$7252_CMP ;
  wire \$procmux$7254_Y ;
  wire \$procmux$7255_CMP ;
  wire \$procmux$7257_Y ;
  wire \$procmux$7258_CMP ;
  wire [2:0] \$procmux$7260_Y ;
  wire \$procmux$7261_CMP ;
  wire \$procmux$7263_Y ;
  wire \$procmux$7264_CMP ;
  wire [2:0] \$procmux$7266_Y ;
  wire \$procmux$7267_CMP ;
  wire \$procmux$7269_Y ;
  wire \$procmux$7270_CMP ;
  wire [1:0] \$procmux$7271_Y ;
  wire \$procmux$7272_CMP ;
  wire [1:0] \$procmux$7273_Y ;
  wire \$procmux$7274_CMP ;
  wire [1:0] \$procmux$7276_Y ;
  wire \$procmux$7277_CMP ;
  wire [1:0] \$procmux$7278_Y ;
  wire \$procmux$7279_CMP ;
  wire [1:0] \$procmux$7282_Y ;
  wire \$procmux$7283_CMP ;
  wire [1:0] \$procmux$7284_Y ;
  wire \$procmux$7285_CMP ;
  wire \$procmux$7287_Y ;
  wire \$procmux$7288_CMP ;
  wire \$procmux$7290_CMP ;
  wire \$procmux$7292_CMP ;
  wire \$procmux$7294_CMP ;
  wire [1:0] \$procmux$7296_Y ;
  wire \$procmux$7297_CMP ;
  wire \$procmux$7299_CMP ;
  wire \$procmux$7301_CMP ;
  wire \$procmux$7303_CMP ;
  wire [1:0] \$procmux$7308_Y ;
  wire \$procmux$7309_CMP ;
  wire [1:0] \$procmux$7310_Y ;
  wire \$procmux$7311_CMP ;
  wire [2:0] \$procmux$7315_Y ;
  wire \$procmux$7316_CMP ;
  wire [2:0] \$procmux$7318_Y ;
  wire \$procmux$7319_CMP ;
  wire [2:0] \$procmux$7320_Y ;
  wire \$procmux$7321_CMP ;
  wire \$procmux$7325_Y ;
  wire \$procmux$7326_CMP ;
  wire \$procmux$7328_Y ;
  wire \$procmux$7329_CMP ;
  wire \$procmux$7330_Y ;
  wire \$procmux$7331_CMP ;
  wire [2:0] \$procmux$7337_Y ;
  wire \$procmux$7338_CMP ;
  wire [2:0] \$procmux$7339_Y ;
  wire \$procmux$7340_CMP ;
  wire \$procmux$7346_Y ;
  wire \$procmux$7347_CMP ;
  wire \$procmux$7348_Y ;
  wire \$procmux$7349_CMP ;
  wire [1:0] \$procmux$7354_Y ;
  wire \$procmux$7355_CMP ;
  wire [1:0] \$procmux$7356_Y ;
  wire \$procmux$7357_CMP ;
  wire [2:0] \$procmux$7362_Y ;
  wire \$procmux$7363_CMP ;
  wire \$procmux$7368_Y ;
  wire \$procmux$7369_CMP ;
  wire \$procmux$7374_Y ;
  wire \$procmux$7375_CMP ;
  wire \$procmux$7378_Y ;
  wire \$procmux$7379_CMP ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:332.13-335.16" */
  wire [63:0] \$rdata$181 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  wire [63:0] \$rdata$183 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [63:0] \$rdata$191 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [63:0] \$rdata$200 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:293.13-295.16" */
  wire [63:0] \$rdata_d$132 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.15-307.18" */
  wire [63:0] \$rdata_d$137 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:298.13-308.16" */
  wire [63:0] \$rdata_d$138 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  wire [63:0] \$rdata_d$182 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [63:0] \$rdata_d$186 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [63:0] \$rdata_d$195 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire \$resume$39 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  wire \$resume$50 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  wire [1:0] \$resuming_d_aligned$125 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  wire [1:0] \$resuming_d_aligned$189 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  wire [1:0] \$resuming_d_aligned$198 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:343.5-347.8" */
  wire [1:0] \$resuming_d_aligned$203 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:242.5-244.8" */
  wire [1:0] \$resuming_d_aligned$63 ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:385.55" */
  wire [20:0] \$root.dm.auipc.imm ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:384.55" */
  wire [4:0] \$root.dm.auipc.rd ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:420.53" */
  wire [11:0] \$root.dm.csrr.csr ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:421.53" */
  wire [4:0] \$root.dm.csrr.dest ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:414.53" */
  wire [11:0] \$root.dm.csrw.csr ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:415.53" */
  wire [4:0] \$root.dm.csrw.rs1 ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:400.60" */
  wire [4:0] \$root.dm.float_load.base ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:399.60" */
  wire [4:0] \$root.dm.float_load.dest ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:401.60" */
  wire [11:0] \$root.dm.float_load.offset ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:398.60" */
  wire [2:0] \$root.dm.float_load.size ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:408.61" */
  wire [4:0] \$root.dm.float_store.base ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:409.61" */
  wire [11:0] \$root.dm.float_store.offset ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:406.61" */
  wire [2:0] \$root.dm.float_store.size ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:407.61" */
  wire [4:0] \$root.dm.float_store.src ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:343.53" */
  wire [20:0] \$root.dm.jal.imm ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:342.53" */
  wire [4:0] \$root.dm.jal.rd ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:378.54" */
  wire [4:0] \$root.dm.load.base ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:377.54" */
  wire [4:0] \$root.dm.load.dest ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:379.54" */
  wire [11:0] \$root.dm.load.offset ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:376.54" */
  wire [2:0] \$root.dm.load.size ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:362.53" */
  wire [4:0] \$root.dm.slli.rd ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:363.53" */
  wire [4:0] \$root.dm.slli.rs1 ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:364.53" */
  wire [5:0] \$root.dm.slli.shamt ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:369.53" */
  wire [4:0] \$root.dm.srli.rd ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:370.53" */
  wire [4:0] \$root.dm.srli.rs1 ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:371.53" */
  wire [5:0] \$root.dm.srli.shamt ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:392.55" */
  wire [4:0] \$root.dm.store.base ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:393.55" */
  wire [11:0] \$root.dm.store.offset ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:390.55" */
  wire [2:0] \$root.dm.store.size ;
  /* src = "rtl/riscv-dbg/dm_pkg.sv:391.55" */
  wire [4:0] \$root.dm.store.src ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.9-161.12" */
  wire [1:0] \$state_d$29 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:169.9-171.12" */
  wire [1:0] \$state_d$30 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:177.9-179.12" */
  wire [1:0] \$state_d$34 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:186.9-188.12" */
  wire [1:0] \$state_d$38 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  wire [1:0] \$state_d$41 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  wire [1:0] \$state_d$52 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  wire [1:0] \$state_d$9 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  wire \$unsupported_command$219 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  wire \$unsupported_command$235 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.18-467.12" */
  wire \$unsupported_command$240 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  wire \$unsupported_command$243 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  wire \$unsupported_command$246 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  wire \$unsupported_command$253 ;
  /* src = "rtl/riscv-dbg/dm_mem.sv:86.23" */
  wire [511:0] abstract_cmd;
  /* src = "rtl/riscv-dbg/dm_mem.sv:122.19" */
  wire [23:0] ac_ar;
  /* src = "rtl/riscv-dbg/dm_mem.sv:56.44" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:58.44" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:34.44" */
  input clear_resumeack_i;
  wire clear_resumeack_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:25.44" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:47.44" */
  input [31:0] cmd_i;
  wire [31:0] cmd_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:46.44" */
  input cmd_valid_i;
  wire cmd_valid_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:50.44" */
  output cmdbusy_o;
  wire cmdbusy_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:49.44" */
  output [2:0] cmderror_o;
  wire [2:0] cmderror_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:48.44" */
  output cmderror_valid_o;
  wire cmderror_valid_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:225.35" */
  wire [63:0] data_bits;
  /* src = "rtl/riscv-dbg/dm_mem.sv:42.44" */
  input [63:0] data_i;
  wire [63:0] data_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:43.44" */
  output [63:0] data_o;
  wire [63:0] data_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:44.44" */
  output data_valid_o;
  wire data_valid_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:28.44" */
  output debug_req_o;
  wire debug_req_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:91.9" */
  wire exception;
  /* src = "rtl/riscv-dbg/dm_mem.sv:121.9" */
  wire fwd_rom_d;
  /* src = "rtl/riscv-dbg/dm_mem.sv:121.20" */
  wire fwd_rom_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:89.31" */
  wire go;
  /* src = "rtl/riscv-dbg/dm_mem.sv:89.35" */
  wire going;
  /* src = "rtl/riscv-dbg/dm_mem.sv:107.30" */
  wire [1:0] halted_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:87.23" */
  wire halted_d;
  /* src = "rtl/riscv-dbg/dm_mem.sv:106.30" */
  wire [1:0] halted_d_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:37.44" */
  output halted_o;
  wire halted_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:87.33" */
  wire halted_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:106.48" */
  wire [1:0] halted_q_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:105.49" */
  wire [1:0] haltreq_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:32.44" */
  input haltreq_i;
  wire haltreq_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:100.26" */
  wire hartsel;
  /* src = "rtl/riscv-dbg/dm_mem.sv:30.44" */
  input [19:0] hartsel_i;
  wire [19:0] hartsel_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:29.44" */
  input ndmreset_i;
  wire ndmreset_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:85.41" */
  wire [255:0] progbuf;
  /* src = "rtl/riscv-dbg/dm_mem.sv:40.44" */
  input [255:0] progbuf_i;
  wire [255:0] progbuf_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:226.20" */
  wire [63:0] rdata;
  /* src = "rtl/riscv-dbg/dm_mem.sv:95.16" */
  wire [63:0] rdata_d;
  /* src = "rtl/riscv-dbg/dm_mem.sv:59.44" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:95.25" */
  wire [63:0] rdata_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:54.44" */
  input req_i;
  wire req_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:89.23" */
  wire resume;
  /* src = "rtl/riscv-dbg/dm_mem.sv:105.30" */
  wire [1:0] resumereq_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:33.44" */
  input resumereq_i;
  wire resumereq_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:107.46" */
  wire [1:0] resumereq_wdata_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:88.23" */
  wire resuming_d;
  /* src = "rtl/riscv-dbg/dm_mem.sv:108.30" */
  wire [1:0] resuming_d_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:38.44" */
  output resuming_o;
  wire resuming_o;
  /* src = "rtl/riscv-dbg/dm_mem.sv:88.35" */
  wire resuming_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:108.50" */
  wire [1:0] resuming_q_aligned;
  /* src = "rtl/riscv-dbg/dm_mem.sv:488.16" */
  wire [63:0] rom_addr;
  /* src = "rtl/riscv-dbg/dm_mem.sv:94.16" */
  wire [63:0] rom_rdata;
  /* src = "rtl/riscv-dbg/dm_mem.sv:26.44" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dm_mem.sv:134.11" */
  wire [1:0] state_d;
  /* src = "rtl/riscv-dbg/dm_mem.sv:134.20" */
  wire [1:0] state_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:92.9" */
  wire unsupported_command;
  /* src = "rtl/riscv-dbg/dm_mem.sv:100.35" */
  wire wdata_hartsel;
  /* src = "rtl/riscv-dbg/dm_mem.sv:57.44" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:55.44" */
  input we_i;
  wire we_i;
  /* src = "rtl/riscv-dbg/dm_mem.sv:96.16" */
  wire word_enable32_q;
  /* src = "rtl/riscv-dbg/dm_mem.sv:215.16" */
  wire [63:0] word_mux;
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.28-148.53" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$1y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.19-269.88" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$100  (
    .A(\$99y ),
    .Y(\$100y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.20-269.81" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$110  (
    .A({ 22'h000000, addr_i[11:2] }),
    .B(32'd224),
    .Y(\$110y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.19-269.88" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(\$110y ),
    .B(32'd1),
    .Y(\$111y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-158.39" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$12y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(addr_i[11:0]),
    .B(12'h300),
    .Y(\$128y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:293.17-293.55" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A({ 1'h0, wdata_hartsel }),
    .B(3'h2),
    .Y(\$129y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-158.39" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$13  (
    .A(resumereq_aligned),
    .S(hartsel),
    .Y(\$13y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:293.17-293.55" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$130  (
    .A(resumereq_wdata_aligned),
    .S(wdata_hartsel),
    .Y(\$130y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:293.17-293.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$131  (
    .A(1'hx),
    .B(\$130y ),
    .S(\$129y ),
    .Y(\$131y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.19-301.54" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$133  (
    .A(cmd_i[31:24]),
    .Y(\$133y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:302.19-302.34" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(ac_ar[17]),
    .Y(\$134y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.19-302.34" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$135  (
    .A(\$133y ),
    .B(\$134y ),
    .Y(\$135y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.19-302.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(\$135y ),
    .B(ac_ar[18]),
    .Y(\$136y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(addr_i[11:0]),
    .B(12'h380),
    .Y(\$139y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-158.39" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'hx),
    .B(\$13y ),
    .S(\$12y ),
    .Y(\$14y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$140  (
    .A(addr_i[11:0]),
    .B(12'h387),
    .Y(\$140y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(\$139y ),
    .B(\$140y ),
    .Y(\$141y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:313.55-313.116" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd9),
    .Y_WIDTH(32'd9)
  ) \$142  (
    .A(addr_i[11:3]),
    .B(9'h070),
    .Y(\$142y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:313.53-313.130" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd9),
    .Y_WIDTH(32'd9)
  ) \$144  (
    .A(\$143y ),
    .B(9'h001),
    .Y(\$144y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:313.23-313.132" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$145  (
    .A({ 1'h0, \$144y [0] }),
    .B(3'h2),
    .Y(\$145y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:313.23-313.132" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$146  (
    .A(data_i),
    .S(\$144y [0]),
    .Y(\$146y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:313.23-313.132" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$147  (
    .A(32'hxxxxxxxx),
    .B(\$146y ),
    .S(\$145y ),
    .Y(\$147y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:314.55-314.116" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd9),
    .Y_WIDTH(32'd9)
  ) \$148  (
    .A(addr_i[11:3]),
    .B(9'h070),
    .Y(\$148y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.44-158.71" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$15y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:314.23-314.125" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd32)
  ) \$151  (
    .A(data_i),
    .S(1'h0),
    .Y(\$151y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(addr_i[11:0]),
    .B(12'h360),
    .Y(\$153y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$154  (
    .A(addr_i[11:0]),
    .B(12'h37f),
    .Y(\$154y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$155  (
    .A(\$153y ),
    .B(\$154y ),
    .Y(\$155y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:319.56-320.62" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd9),
    .Y_WIDTH(32'd9)
  ) \$156  (
    .A(addr_i[11:3]),
    .B(9'h06c),
    .Y(\$156y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:319.23-320.64" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A({ 1'h0, \$156y [2:0] }),
    .B(4'h4),
    .Y(\$157y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:319.23-320.64" */
  \$bmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd64)
  ) \$158  (
    .A(progbuf),
    .S(\$156y [1:0]),
    .Y(\$158y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:319.23-320.64" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$159  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$158y ),
    .S(\$157y ),
    .Y(\$159y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.44-158.71" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$16  (
    .A(resuming_q_aligned),
    .S(hartsel),
    .Y(\$16y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$160  (
    .A(addr_i[11:0]),
    .B(12'h338),
    .Y(\$160y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$161  (
    .A(addr_i[11:0]),
    .B(12'h35f),
    .Y(\$161y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$162  (
    .A(\$160y ),
    .B(\$161y ),
    .Y(\$162y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:326.39-327.67" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd9),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd9),
    .Y_WIDTH(32'd9)
  ) \$163  (
    .A(addr_i[11:3]),
    .B(9'h067),
    .Y(\$163y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:326.23-327.69" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A({ 1'h0, \$163y [2:0] }),
    .B(5'h08),
    .Y(\$164y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:326.23-327.69" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd64)
  ) \$165  (
    .A(abstract_cmd),
    .S(\$163y [2:0]),
    .Y(\$165y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:326.23-327.69" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$166  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$165y ),
    .S(\$164y ),
    .Y(\$166y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(addr_i[11:0]),
    .B(12'h400),
    .Y(\$167y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$168  (
    .A(addr_i[11:0]),
    .B(12'h7ff),
    .Y(\$168y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$169  (
    .A(\$167y ),
    .B(\$168y ),
    .Y(\$169y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.44-158.71" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$17  (
    .A(1'hx),
    .B(\$16y ),
    .S(\$15y ),
    .Y(\$17y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:332.18-332.88" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd12)
  ) \$170  (
    .A({ addr_i[11:3], 3'h0 }),
    .B(12'h400),
    .Y(\$170y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:332.17-333.78" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$172  (
    .A(\$170y ),
    .Y(\$172y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd13),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$174  (
    .A({ 1'h0, \$173y  }),
    .B(1'h0),
    .Y(\$174y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd13),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$175  (
    .A({ 1'h0, \$173y  }),
    .B(5'h08),
    .Y(\$175y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$176  (
    .A(\$174y ),
    .B(\$175y ),
    .Y(\$176y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$177  (
    .A(8'h00),
    .B(8'hff),
    .S(\$176y ),
    .Y(\$177y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd8)
  ) \$178  (
    .A(\$177y ),
    .S(\$173y [2:0]),
    .Y(\$178y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.93" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd8)
  ) \$179  (
    .A(\$177y ),
    .S(\$173y [2:0]),
    .Y(\$179y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.43-158.71" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-158.71" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(\$14y ),
    .B(\$18y ),
    .Y(\$19y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.28-148.53" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$2  (
    .A(halted_q_aligned),
    .S(hartsel),
    .Y(\$2y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.14-159.38" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$20y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.13-377.40" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$205  (
    .A({ 29'h00000000, ac_ar[22:20] }),
    .B(32'd3),
    .Y(\$205y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.13-377.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$206  (
    .A(\$205y ),
    .B(ac_ar[17]),
    .Y(\$206y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.13-377.73" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$207  (
    .A(\$206y ),
    .B(ac_ar[16]),
    .Y(\$207y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.15-381.39" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$208  (
    .A(ac_ar[15:14]),
    .Y(\$208y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.14-159.38" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$21  (
    .A(haltreq_aligned),
    .S(hartsel),
    .Y(\$21y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:386.61-386.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$210  (
    .A(ac_ar[5]),
    .Y(\$210y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:386.24-386.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$211  (
    .A(\$209y ),
    .B(\$210y ),
    .Y(\$211y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:387.24-387.49" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$212  (
    .A(ac_ar[4:0]),
    .B(5'h0a),
    .Y(\$212y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:386.24-387.50" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$213  (
    .A(\$211y ),
    .B(\$212y ),
    .Y(\$213y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.14-159.38" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'hx),
    .B(\$21y ),
    .S(\$20y ),
    .Y(\$22y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.22-418.49" */
  \$lt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$220  (
    .A({ 29'h00000000, ac_ar[22:20] }),
    .B(32'd3),
    .Y(\$220y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.22-418.67" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$221  (
    .A(\$220y ),
    .B(ac_ar[17]),
    .Y(\$221y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.71-418.83" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$222  (
    .A(ac_ar[16]),
    .Y(\$222y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.22-418.83" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$223  (
    .A(\$221y ),
    .B(\$222y ),
    .Y(\$223y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.15-424.39" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$224  (
    .A(ac_ar[15:14]),
    .Y(\$224y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:429.61-429.76" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$226  (
    .A(ac_ar[5]),
    .Y(\$226y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:429.24-429.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$227  (
    .A(\$225y ),
    .B(\$226y ),
    .Y(\$227y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:430.24-430.49" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$228  (
    .A(ac_ar[4:0]),
    .B(5'h0a),
    .Y(\$228y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:429.24-430.50" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$229  (
    .A(\$227y ),
    .B(\$228y ),
    .Y(\$229y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.13-159.38" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$22y ),
    .Y(\$23y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.22-461.50" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$236  (
    .A({ 29'h00000000, ac_ar[22:20] }),
    .B(32'd3),
    .Y(\$236y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.22-461.84" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$238  (
    .A(\$236y ),
    .B(\$237y ),
    .Y(\$238y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-159.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$19y ),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:473.31-473.51" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$247  (
    .A(\$unsupported_command$246 ),
    .Y(\$247y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:473.13-473.51" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$248  (
    .A(ac_ar[18]),
    .B(\$247y ),
    .Y(\$248y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.42-159.67" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$25y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:520.29-520.94" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$254  (
    .A(addr_i[11:0]),
    .B(12'h800),
    .Y(\$254y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$256  (
    .A(rst_ni),
    .Y(\$256y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$259  (
    .A(rst_ni),
    .Y(\$259y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.42-159.67" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$26  (
    .A(halted_q_aligned),
    .S(hartsel),
    .Y(\$26y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:159.42-159.67" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$27  (
    .A(1'hx),
    .B(\$26y ),
    .S(\$25y ),
    .Y(\$27y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:158.13-159.67" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(\$24y ),
    .B(\$27y ),
    .Y(\$28y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.28-148.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$3  (
    .A(1'hx),
    .B(\$2y ),
    .S(\$1y ),
    .Y(\$3y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:177.13-177.40" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$31y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:177.13-177.40" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$32  (
    .A(resuming_q_aligned),
    .S(hartsel),
    .Y(\$32y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:177.13-177.40" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$33  (
    .A(1'hx),
    .B(\$32y ),
    .S(\$31y ),
    .Y(\$33y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:186.13-186.36" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$35y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:186.13-186.36" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$36  (
    .A(halted_aligned),
    .S(hartsel),
    .Y(\$36y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:186.13-186.36" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$37  (
    .A(1'hx),
    .B(\$36y ),
    .S(\$35y ),
    .Y(\$37y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.13-148.53" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(cmd_valid_i),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:196.9-196.43" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(unsupported_command),
    .B(cmd_valid_i),
    .Y(\$45y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.57-148.77" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(unsupported_command),
    .Y(\$5y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:216.21-216.54" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$53  (
    .A(rdata_q),
    .B(rom_rdata),
    .S(fwd_rom_q),
    .Y(\$53y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:221.22-221.80" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$54  (
    .A(word_mux[31:0]),
    .B(word_mux[63:32]),
    .S(word_enable32_q),
    .Y(\$54y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A({ 1'h0, hartsel }),
    .B(1'h0),
    .Y(\$56y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A({ 1'h0, hartsel }),
    .B(3'h2),
    .Y(\$57y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$56y ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$59  (
    .A(1'h0),
    .B(1'h1),
    .S(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:148.13-148.77" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$4y ),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$60  (
    .A(\$59y ),
    .S(hartsel),
    .Y(\$60y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.41" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$61  (
    .A(\$59y ),
    .S(hartsel),
    .Y(\$61y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(addr_i[11:0]),
    .B(12'h100),
    .Y(\$64y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A({ 1'h0, wdata_hartsel }),
    .B(1'h0),
    .Y(\$65y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A({ 1'h0, wdata_hartsel }),
    .B(3'h2),
    .Y(\$66y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(\$65y ),
    .B(\$66y ),
    .Y(\$67y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$68  (
    .A(1'h0),
    .B(1'h1),
    .S(\$67y ),
    .Y(\$68y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$69  (
    .A(\$68y ),
    .S(wdata_hartsel),
    .Y(\$69y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:251.13-251.49" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$70  (
    .A(\$68y ),
    .S(wdata_hartsel),
    .Y(\$70y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A({ 1'h0, wdata_hartsel }),
    .B(1'h0),
    .Y(\$72y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$73  (
    .A({ 1'h0, wdata_hartsel }),
    .B(3'h2),
    .Y(\$73y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(\$72y ),
    .B(\$73y ),
    .Y(\$74y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$75  (
    .A(1'h0),
    .B(1'h1),
    .S(\$74y ),
    .Y(\$75y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$76  (
    .A(\$75y ),
    .S(wdata_hartsel),
    .Y(\$76y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:252.13-252.51" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$77  (
    .A(\$75y ),
    .S(wdata_hartsel),
    .Y(\$77y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(addr_i[11:0]),
    .B(12'h108),
    .Y(\$79y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(addr_i[11:0]),
    .B(12'h110),
    .Y(\$80y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A({ 1'h0, wdata_hartsel }),
    .B(1'h0),
    .Y(\$81y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A({ 1'h0, wdata_hartsel }),
    .B(3'h2),
    .Y(\$82y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(\$81y ),
    .B(\$82y ),
    .Y(\$83y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$84  (
    .A(1'h0),
    .B(1'h1),
    .S(\$83y ),
    .Y(\$84y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$85  (
    .A(\$84y ),
    .S(wdata_hartsel),
    .Y(\$85y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:259.13-259.51" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$86  (
    .A(\$84y ),
    .S(wdata_hartsel),
    .Y(\$86y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A({ 1'h0, wdata_hartsel }),
    .B(1'h0),
    .Y(\$88y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A({ 1'h0, wdata_hartsel }),
    .B(3'h2),
    .Y(\$89y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(\$88y ),
    .B(\$89y ),
    .Y(\$90y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$91  (
    .A(1'h0),
    .B(1'h1),
    .S(\$90y ),
    .Y(\$91y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$92  (
    .A(\$91y ),
    .S(wdata_hartsel),
    .Y(\$92y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:261.13-261.53" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd1)
  ) \$93  (
    .A(\$91y ),
    .S(wdata_hartsel),
    .Y(\$93y )
  );
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$95  (
    .A(addr_i[11:0]),
    .B(12'h118),
    .Y(\$95y )
  );
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(addr_i[11:0]),
    .B(12'h380),
    .Y(\$96y )
  );
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(addr_i[11:0]),
    .B(12'h387),
    .Y(\$97y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(\$96y ),
    .B(\$97y ),
    .Y(\$98y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:269.20-269.81" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$99  (
    .A({ 22'h000000, addr_i[11:2] }),
    .B(32'd224),
    .Y(\$99y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13168  (
    .A({ 1'h0, resuming_q }),
    .B(\$auto$rtlil.cc:2957:Not$13170 ),
    .Y(\$auto$rtlil.cc:3004:And$13171 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13169  (
    .A(\$61y ),
    .Y(\$auto$rtlil.cc:2957:Not$13170 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13174  (
    .A({ 1'h0, halted_q }),
    .B(\$auto$rtlil.cc:2957:Not$13176 ),
    .Y(\$auto$rtlil.cc:3004:And$13177 )
  );
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:782:replace_const_cells$13175  (
    .A(\$86y ),
    .Y(\$auto$rtlil.cc:2957:Not$13176 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:783:replace_const_cells$13172  (
    .A({ 1'h0, halted_q }),
    .B(\$77y ),
    .Y(\$auto$rtlil.cc:3005:Or$13173 )
  );
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$auto$opt_expr.cc:783:replace_const_cells$13178  (
    .A(\$procmux$7248_Y ),
    .B(\$93y ),
    .Y(\$auto$rtlil.cc:3005:Or$13179 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd64),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd64),
    .Y_WIDTH(32'd64)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13180  (
    .A({ 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y , 6'h00, \$procmux$7257_Y , \$procmux$7254_Y  }),
    .B(\$179y ),
    .Y(\$auto$rtlil.cc:3004:And$13181 )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:522.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$fwd_rom_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(fwd_rom_d),
    .Q(fwd_rom_q)
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:536.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$halted_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$261y ),
    .Q(halted_q)
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:522.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd64)
  ) \$driver$rdata_q  (
    .AD(64'h0000000000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rdata_d),
    .Q(rdata_q)
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:536.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$resuming_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$262y ),
    .Q(resuming_q)
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:522.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$state_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:522.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$word_enable32_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(addr_i[2]),
    .Q(word_enable32_q)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6481  (
    .A(1'h1),
    .B(\$unsupported_command$246 ),
    .S(\$procmux$6482_CMP ),
    .Y(\$procmux$6481_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6482_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6482_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6485  (
    .A(32'd1048691),
    .B(\$abstract_cmd[31:0]$244 ),
    .S(\$procmux$6486_CMP ),
    .Y(\$procmux$6485_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6486_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6486_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:475.11-475.46|rtl/riscv-dbg/dm_mem.sv:473.9-476.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6489  (
    .A(32'd1048691),
    .B(32'd19),
    .S(\$procmux$6490_CMP ),
    .Y(\$procmux$6489_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6491  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6489_Y ),
    .S(\$procmux$6492_CMP ),
    .Y(\$procmux$6491_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6492_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6492_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.86-467.12|rtl/riscv-dbg/dm_mem.sv:461.18-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6494  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$6495_CMP ),
    .Y(\$procmux$6494_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6497  (
    .A(\$procmux$6494_Y ),
    .B(1'hx),
    .S(\$procmux$6498_CMP ),
    .Y(\$procmux$6497_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6500  (
    .A(\$procmux$6497_Y ),
    .B(1'hx),
    .S(\$procmux$6501_CMP ),
    .Y(\$procmux$6500_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6502  (
    .A(1'hx),
    .B(\$procmux$6500_Y ),
    .S(\$procmux$6503_CMP ),
    .Y(\$procmux$6502_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6503_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6503_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:461.86-467.12|rtl/riscv-dbg/dm_mem.sv:461.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6505  (
    .A(32'd0),
    .B(32'd1048691),
    .S(\$procmux$6506_CMP ),
    .Y(\$procmux$6505_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6508  (
    .A(\$procmux$6505_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6509_CMP ),
    .Y(\$procmux$6508_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6511  (
    .A(\$procmux$6508_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6512_CMP ),
    .Y(\$procmux$6511_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6513  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6511_Y ),
    .S(\$procmux$6514_CMP ),
    .Y(\$procmux$6513_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6514_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6514_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6519  (
    .A(\$unsupported_command$240 ),
    .B(\$unsupported_command$235 ),
    .S(\$procmux$6520_CMP ),
    .Y(\$procmux$6519_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6522  (
    .A(\$procmux$6519_Y ),
    .B(1'hx),
    .S(\$procmux$6523_CMP ),
    .Y(\$procmux$6522_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6524  (
    .A(1'hx),
    .B(\$procmux$6522_Y ),
    .S(\$procmux$6525_CMP ),
    .Y(\$procmux$6524_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6525_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6525_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6530  (
    .A(\$abstract_cmd[31:0]$239 ),
    .B(\$abstract_cmd[31:0]$233 ),
    .S(\$procmux$6531_CMP ),
    .Y(\$procmux$6530_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6533  (
    .A(\$procmux$6530_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6534_CMP ),
    .Y(\$procmux$6533_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6535  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6533_Y ),
    .S(\$procmux$6536_CMP ),
    .Y(\$procmux$6535_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6536_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6536_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:442.13-448.16|rtl/riscv-dbg/dm_mem.sv:440.20-460.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6540  (
    .A({ 49'h0f64048e6710a, cmd_i[22:20], 12'h023, cmd_i[11:0], 20'h02473 }),
    .B(96'h000000130000001300000013),
    .S(\$procmux$6541_CMP ),
    .Y(\$procmux$6540_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:430.52-440.14|rtl/riscv-dbg/dm_mem.sv:429.20-460.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6543  (
    .A(\$procmux$6540_Y ),
    .B(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6544_CMP ),
    .Y(\$procmux$6543_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6546  (
    .A(\$procmux$6543_Y ),
    .B(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6547_CMP ),
    .Y(\$procmux$6546_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6548  (
    .A(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6546_Y ),
    .S(\$procmux$6549_CMP ),
    .Y(\$procmux$6548_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6551  (
    .A(\$procmux$6548_Y ),
    .B(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6552_CMP ),
    .Y(\$procmux$6551_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6553  (
    .A(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6551_Y ),
    .S(\$procmux$6554_CMP ),
    .Y(\$procmux$6553_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6554_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6554_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:443.15-444.96|rtl/riscv-dbg/dm_mem.sv:442.13-448.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6559  (
    .A({ 7'h1c, cmd_i[4:0], 5'h0a, cmd_i[22:20], 12'h023 }),
    .B({ 7'h1c, cmd_i[4:0], 5'h0a, cmd_i[22:20], 12'h027 }),
    .S(\$procmux$6560_CMP ),
    .Y(\$procmux$6559_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:442.13-448.16|rtl/riscv-dbg/dm_mem.sv:440.20-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6561  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6559_Y ),
    .S(\$procmux$6562_CMP ),
    .Y(\$procmux$6561_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:430.52-440.14|rtl/riscv-dbg/dm_mem.sv:429.20-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6564  (
    .A(\$procmux$6561_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6565_CMP ),
    .Y(\$procmux$6564_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6567  (
    .A(\$procmux$6564_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6568_CMP ),
    .Y(\$procmux$6567_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6569  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6567_Y ),
    .S(\$procmux$6570_CMP ),
    .Y(\$procmux$6569_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6572  (
    .A(\$procmux$6569_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6573_CMP ),
    .Y(\$procmux$6572_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6574  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6572_Y ),
    .S(\$procmux$6575_CMP ),
    .Y(\$procmux$6574_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6575_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6575_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:442.13-448.16|rtl/riscv-dbg/dm_mem.sv:440.20-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6580  (
    .A(32'd2065961075),
    .B(\$abstract_cmd[159:128]$230 ),
    .S(\$procmux$6581_CMP ),
    .Y(\$procmux$6580_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:430.52-440.14|rtl/riscv-dbg/dm_mem.sv:429.20-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6583  (
    .A(\$procmux$6580_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6584_CMP ),
    .Y(\$procmux$6583_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6586  (
    .A(\$procmux$6583_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6587_CMP ),
    .Y(\$procmux$6586_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6588  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6586_Y ),
    .S(\$procmux$6589_CMP ),
    .Y(\$procmux$6588_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6591  (
    .A(\$procmux$6588_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6592_CMP ),
    .Y(\$procmux$6591_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6593  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6591_Y ),
    .S(\$procmux$6594_CMP ),
    .Y(\$procmux$6593_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6594_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6594_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:430.52-440.14|rtl/riscv-dbg/dm_mem.sv:429.20-460.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6599  (
    .A(\$abstract_cmd[255:128]$231 ),
    .B({ 49'h0f64048e6710a, cmd_i[22:20], 76'h0237b3024737b241073 }),
    .S(\$procmux$6600_CMP ),
    .Y(\$procmux$6599_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6602  (
    .A(\$procmux$6599_Y ),
    .B(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6603_CMP ),
    .Y(\$procmux$6602_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6604  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6602_Y ),
    .S(\$procmux$6605_CMP ),
    .Y(\$procmux$6604_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6607  (
    .A(\$procmux$6604_Y ),
    .B(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6608_CMP ),
    .Y(\$procmux$6607_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6609  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6607_Y ),
    .S(\$procmux$6610_CMP ),
    .Y(\$procmux$6609_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6610_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6610_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6614  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$6615_CMP ),
    .Y(\$procmux$6614_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6616  (
    .A(1'hx),
    .B(\$procmux$6614_Y ),
    .S(\$procmux$6617_CMP ),
    .Y(\$procmux$6616_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6619  (
    .A(\$procmux$6616_Y ),
    .B(1'hx),
    .S(\$procmux$6620_CMP ),
    .Y(\$procmux$6619_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6621  (
    .A(1'hx),
    .B(\$procmux$6619_Y ),
    .S(\$procmux$6622_CMP ),
    .Y(\$procmux$6621_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6622_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6622_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6627  (
    .A(\$abstract_cmd[255:128]$232 ),
    .B(128'h00000013000000130000001300000013),
    .S(\$procmux$6628_CMP ),
    .Y(\$procmux$6627_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6629  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6627_Y ),
    .S(\$procmux$6630_CMP ),
    .Y(\$procmux$6629_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6632  (
    .A(\$procmux$6629_Y ),
    .B(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6633_CMP ),
    .Y(\$procmux$6632_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6634  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6632_Y ),
    .S(\$procmux$6635_CMP ),
    .Y(\$procmux$6634_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6635_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6635_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:424.41-429.14|rtl/riscv-dbg/dm_mem.sv:424.11-460.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6639  (
    .A(32'd2067075187),
    .B(32'd1048691),
    .S(\$procmux$6640_CMP ),
    .Y(\$procmux$6639_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6641  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6639_Y ),
    .S(\$procmux$6642_CMP ),
    .Y(\$procmux$6641_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6644  (
    .A(\$procmux$6641_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6645_CMP ),
    .Y(\$procmux$6644_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6646  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6644_Y ),
    .S(\$procmux$6647_CMP ),
    .Y(\$procmux$6646_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6647_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6647_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:418.85-461.12|rtl/riscv-dbg/dm_mem.sv:418.18-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6651  (
    .A(128'h00000013000000130000001300000013),
    .B(\$abstract_cmd[255:128]$234 ),
    .S(\$procmux$6652_CMP ),
    .Y(\$procmux$6651_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6654  (
    .A(\$procmux$6651_Y ),
    .B(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6655_CMP ),
    .Y(\$procmux$6654_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6656  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6654_Y ),
    .S(\$procmux$6657_CMP ),
    .Y(\$procmux$6656_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6657_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6657_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6662  (
    .A(\$unsupported_command$243 ),
    .B(\$unsupported_command$219 ),
    .S(\$procmux$6663_CMP ),
    .Y(\$procmux$6662_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6664  (
    .A(1'hx),
    .B(\$procmux$6662_Y ),
    .S(\$procmux$6665_CMP ),
    .Y(\$procmux$6664_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6665_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6665_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6670  (
    .A(\$abstract_cmd[255:128]$242 ),
    .B(\$abstract_cmd[255:128]$218 ),
    .S(\$procmux$6671_CMP ),
    .Y(\$procmux$6670_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6672  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6670_Y ),
    .S(\$procmux$6673_CMP ),
    .Y(\$procmux$6672_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6673_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6673_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6678  (
    .A(\$abstract_cmd[31:0]$241 ),
    .B(\$abstract_cmd[31:0]$217 ),
    .S(\$procmux$6679_CMP ),
    .Y(\$procmux$6678_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6680  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6678_Y ),
    .S(\$procmux$6681_CMP ),
    .Y(\$procmux$6680_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6681_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6681_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:399.13-405.16|rtl/riscv-dbg/dm_mem.sv:397.20-417.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6685  (
    .A({ 32'h7b202473, cmd_i[11:0], 37'h0820e6700a, cmd_i[22:20], 12'h403 }),
    .B(96'h000000130000001300000013),
    .S(\$procmux$6686_CMP ),
    .Y(\$procmux$6685_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:387.52-397.14|rtl/riscv-dbg/dm_mem.sv:386.20-417.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6688  (
    .A(\$procmux$6685_Y ),
    .B(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6689_CMP ),
    .Y(\$procmux$6688_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6691  (
    .A(\$procmux$6688_Y ),
    .B(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6692_CMP ),
    .Y(\$procmux$6691_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6693  (
    .A(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6691_Y ),
    .S(\$procmux$6694_CMP ),
    .Y(\$procmux$6693_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd96)
  ) \$procmux$6695  (
    .A(96'hxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6693_Y ),
    .S(\$procmux$6696_CMP ),
    .Y(\$procmux$6695_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6696_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6696_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:400.15-401.95|rtl/riscv-dbg/dm_mem.sv:399.13-405.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6701  (
    .A({ 17'h0700a, cmd_i[22:20], cmd_i[4:0], 7'h03 }),
    .B({ 17'h0700a, cmd_i[22:20], cmd_i[4:0], 7'h07 }),
    .S(\$procmux$6702_CMP ),
    .Y(\$procmux$6701_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:399.13-405.16|rtl/riscv-dbg/dm_mem.sv:397.20-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6703  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6701_Y ),
    .S(\$procmux$6704_CMP ),
    .Y(\$procmux$6703_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:387.52-397.14|rtl/riscv-dbg/dm_mem.sv:386.20-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6706  (
    .A(\$procmux$6703_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6707_CMP ),
    .Y(\$procmux$6706_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6709  (
    .A(\$procmux$6706_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6710_CMP ),
    .Y(\$procmux$6709_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6711  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6709_Y ),
    .S(\$procmux$6712_CMP ),
    .Y(\$procmux$6711_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6713  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6711_Y ),
    .S(\$procmux$6714_CMP ),
    .Y(\$procmux$6713_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6714_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6714_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:399.13-405.16|rtl/riscv-dbg/dm_mem.sv:397.20-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6719  (
    .A(32'd2065961075),
    .B(\$abstract_cmd[159:128]$214 ),
    .S(\$procmux$6720_CMP ),
    .Y(\$procmux$6719_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:387.52-397.14|rtl/riscv-dbg/dm_mem.sv:386.20-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6722  (
    .A(\$procmux$6719_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6723_CMP ),
    .Y(\$procmux$6722_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6725  (
    .A(\$procmux$6722_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$6726_CMP ),
    .Y(\$procmux$6725_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6727  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6725_Y ),
    .S(\$procmux$6728_CMP ),
    .Y(\$procmux$6727_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6729  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6727_Y ),
    .S(\$procmux$6730_CMP ),
    .Y(\$procmux$6729_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6730_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6730_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:387.52-397.14|rtl/riscv-dbg/dm_mem.sv:386.20-417.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6735  (
    .A(\$abstract_cmd[255:128]$215 ),
    .B({ 81'h0f64048e6f66820e6700a, cmd_i[22:20], 44'h4037b241073 }),
    .S(\$procmux$6736_CMP ),
    .Y(\$procmux$6735_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6738  (
    .A(\$procmux$6735_Y ),
    .B(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(\$procmux$6739_CMP ),
    .Y(\$procmux$6738_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6740  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6738_Y ),
    .S(\$procmux$6741_CMP ),
    .Y(\$procmux$6740_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6742  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6740_Y ),
    .S(\$procmux$6743_CMP ),
    .Y(\$procmux$6742_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6743_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6743_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6747  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$6748_CMP ),
    .Y(\$procmux$6747_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6749  (
    .A(1'hx),
    .B(\$procmux$6747_Y ),
    .S(\$procmux$6750_CMP ),
    .Y(\$procmux$6749_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6751  (
    .A(1'hx),
    .B(\$procmux$6749_Y ),
    .S(\$procmux$6752_CMP ),
    .Y(\$procmux$6751_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6752_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6752_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6757  (
    .A(\$abstract_cmd[255:128]$216 ),
    .B(128'h00000013000000130000001300000013),
    .S(\$procmux$6758_CMP ),
    .Y(\$procmux$6757_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6759  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6757_Y ),
    .S(\$procmux$6760_CMP ),
    .Y(\$procmux$6759_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6761  (
    .A(128'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .B(\$procmux$6759_Y ),
    .S(\$procmux$6762_CMP ),
    .Y(\$procmux$6761_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6762_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6762_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:381.41-386.14|rtl/riscv-dbg/dm_mem.sv:381.11-417.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6766  (
    .A(32'd2067075187),
    .B(32'd1048691),
    .S(\$procmux$6767_CMP ),
    .Y(\$procmux$6766_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:377.75-418.12|rtl/riscv-dbg/dm_mem.sv:377.9-467.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6768  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6766_Y ),
    .S(\$procmux$6769_CMP ),
    .Y(\$procmux$6768_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6770  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6768_Y ),
    .S(\$procmux$6771_CMP ),
    .Y(\$procmux$6770_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6771_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6771_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6774  (
    .A(32'd1048691),
    .B(\$abstract_cmd[319:288]$249 ),
    .S(\$procmux$6775_CMP ),
    .Y(\$procmux$6774_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6775_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6775_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$mux  #(
    .WIDTH(32'd128)
  ) \$procmux$6778  (
    .A(128'h00000013000000130000001300000013),
    .B(\$abstract_cmd[255:128]$245 ),
    .S(\$procmux$6779_CMP ),
    .Y(\$procmux$6778_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:376.27-477.10|rtl/riscv-dbg/dm_mem.sv:372.5-485.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$procmux$6779_CMP0  (
    .A(cmd_i[31:24]),
    .Y(\$procmux$6779_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:343.21-347.8|rtl/riscv-dbg/dm_mem.sv:343.5-347.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6781  (
    .A(\$resuming_d_aligned$198 ),
    .B(2'h0),
    .S(\$procmux$6782_CMP ),
    .Y(\$procmux$6781_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:343.21-347.8|rtl/riscv-dbg/dm_mem.sv:343.5-347.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6784  (
    .A(\$halted_d_aligned$196 ),
    .B(2'h0),
    .S(\$procmux$6785_CMP ),
    .Y(\$procmux$6784_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:334.15-334.94|rtl/riscv-dbg/dm_mem.sv:332.13-335.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6787  (
    .A(64'h0000000000000000),
    .B(\$180y ),
    .S(\$procmux$6788_CMP ),
    .Y(\$procmux$6787_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:330.41-337.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6789  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6787_Y ),
    .S(\$procmux$6790_CMP ),
    .Y(\$procmux$6789_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6792  (
    .A(\$procmux$6789_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6793_CMP ),
    .Y(\$procmux$6792_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6794  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6792_Y ),
    .S(\$procmux$6795_CMP ),
    .Y(\$procmux$6794_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:303.17-303.87|rtl/riscv-dbg/dm_mem.sv:301.15-307.18" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6802  (
    .A(64'h000000000380006f),
    .B(64'h000000000600006f),
    .S(\$procmux$6803_CMP ),
    .Y(\$procmux$6802_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.15-307.18|rtl/riscv-dbg/dm_mem.sv:298.13-308.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6804  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6802_Y ),
    .S(\$procmux$6805_CMP ),
    .Y(\$procmux$6804_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:291.24-309.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6806  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6804_Y ),
    .S(\$procmux$6807_CMP ),
    .Y(\$procmux$6806_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6809  (
    .A(\$procmux$6806_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6810_CMP ),
    .Y(\$procmux$6809_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6811  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6809_Y ),
    .S(\$procmux$6812_CMP ),
    .Y(\$procmux$6811_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:301.15-307.18|rtl/riscv-dbg/dm_mem.sv:298.13-308.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6820  (
    .A(\$rdata_d$132 ),
    .B(\$rdata_d$137 ),
    .S(\$procmux$6821_CMP ),
    .Y(\$procmux$6820_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:291.24-309.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6822  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6820_Y ),
    .S(\$procmux$6823_CMP ),
    .Y(\$procmux$6822_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6825  (
    .A(\$procmux$6822_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6826_CMP ),
    .Y(\$procmux$6825_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6827  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6825_Y ),
    .S(\$procmux$6828_CMP ),
    .Y(\$procmux$6827_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:294.15-294.93|rtl/riscv-dbg/dm_mem.sv:293.13-295.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6834  (
    .A(rdata_q),
    .B(64'h000000005080006f),
    .S(\$procmux$6835_CMP ),
    .Y(\$procmux$6834_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:291.24-309.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6836  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6834_Y ),
    .S(\$procmux$6837_CMP ),
    .Y(\$procmux$6836_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6839  (
    .A(\$procmux$6836_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6840_CMP ),
    .Y(\$procmux$6839_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6841  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6839_Y ),
    .S(\$procmux$6842_CMP ),
    .Y(\$procmux$6841_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:330.41-337.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6845  (
    .A(64'h0000000000000000),
    .B(\$rdata$181 ),
    .S(\$procmux$6846_CMP ),
    .Y(\$procmux$6845_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6848  (
    .A(\$procmux$6845_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6849_CMP ),
    .Y(\$procmux$6848_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6850  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6848_Y ),
    .S(\$procmux$6851_CMP ),
    .Y(\$procmux$6850_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:330.41-337.14|rtl/riscv-dbg/dm_mem.sv:289.9-339.16" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd64)
  ) \$procmux$6854  (
    .A(rdata_q),
    .B({ \$rdata_d$138 , \$147y , \$152y , \$159y , \$166y , \$rdata$181  }),
    .S({ \$procmux$6860_CMP , \$procmux$6858_CMP , \$procmux$6857_CMP , \$procmux$6856_CMP , \$procmux$6855_CMP  }),
    .Y(\$procmux$6854_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6862  (
    .A(\$procmux$6854_Y ),
    .B(64'hxxxxxxxxxxxxxxxx),
    .S(\$procmux$6863_CMP ),
    .Y(\$procmux$6862_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$6864  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$6862_Y ),
    .S(\$procmux$6865_CMP ),
    .Y(\$procmux$6864_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6868  (
    .A(8'hxx),
    .B(wdata_i[31:24]),
    .S(\$procmux$6869_CMP ),
    .Y(\$procmux$6868_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6870  (
    .A(8'hxx),
    .B(\$procmux$6868_Y ),
    .S(\$procmux$6871_CMP ),
    .Y(\$procmux$6870_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6872  (
    .A(8'hxx),
    .B(\$procmux$6870_Y ),
    .S(\$procmux$6873_CMP ),
    .Y(\$procmux$6872_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6874  (
    .A(8'hxx),
    .B(\$procmux$6872_Y ),
    .S(\$procmux$6875_CMP ),
    .Y(\$procmux$6874_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6876  (
    .A(8'hxx),
    .B(\$procmux$6874_Y ),
    .S(\$procmux$6877_CMP ),
    .Y(\$procmux$6876_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6881  (
    .A(data_i[63:56]),
    .B(\$data_bits[63:56]$118 ),
    .S(\$procmux$6882_CMP ),
    .Y(\$procmux$6881_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6883  (
    .A(8'hxx),
    .B(\$procmux$6881_Y ),
    .S(\$procmux$6884_CMP ),
    .Y(\$procmux$6883_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6885  (
    .A(8'hxx),
    .B(\$procmux$6883_Y ),
    .S(\$procmux$6886_CMP ),
    .Y(\$procmux$6885_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6887  (
    .A(8'hxx),
    .B(\$procmux$6885_Y ),
    .S(\$procmux$6888_CMP ),
    .Y(\$procmux$6887_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6889  (
    .A(8'hxx),
    .B(\$procmux$6887_Y ),
    .S(\$procmux$6890_CMP ),
    .Y(\$procmux$6889_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6893  (
    .A(8'hxx),
    .B(wdata_i[23:16]),
    .S(\$procmux$6894_CMP ),
    .Y(\$procmux$6893_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6895  (
    .A(8'hxx),
    .B(\$procmux$6893_Y ),
    .S(\$procmux$6896_CMP ),
    .Y(\$procmux$6895_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6897  (
    .A(8'hxx),
    .B(\$procmux$6895_Y ),
    .S(\$procmux$6898_CMP ),
    .Y(\$procmux$6897_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6899  (
    .A(8'hxx),
    .B(\$procmux$6897_Y ),
    .S(\$procmux$6900_CMP ),
    .Y(\$procmux$6899_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6901  (
    .A(8'hxx),
    .B(\$procmux$6899_Y ),
    .S(\$procmux$6902_CMP ),
    .Y(\$procmux$6901_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6906  (
    .A(data_i[55:48]),
    .B(\$data_bits[55:48]$116 ),
    .S(\$procmux$6907_CMP ),
    .Y(\$procmux$6906_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6908  (
    .A(8'hxx),
    .B(\$procmux$6906_Y ),
    .S(\$procmux$6909_CMP ),
    .Y(\$procmux$6908_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6910  (
    .A(8'hxx),
    .B(\$procmux$6908_Y ),
    .S(\$procmux$6911_CMP ),
    .Y(\$procmux$6910_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6912  (
    .A(8'hxx),
    .B(\$procmux$6910_Y ),
    .S(\$procmux$6913_CMP ),
    .Y(\$procmux$6912_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6914  (
    .A(8'hxx),
    .B(\$procmux$6912_Y ),
    .S(\$procmux$6915_CMP ),
    .Y(\$procmux$6914_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6918  (
    .A(8'hxx),
    .B(wdata_i[15:8]),
    .S(\$procmux$6919_CMP ),
    .Y(\$procmux$6918_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6920  (
    .A(8'hxx),
    .B(\$procmux$6918_Y ),
    .S(\$procmux$6921_CMP ),
    .Y(\$procmux$6920_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6922  (
    .A(8'hxx),
    .B(\$procmux$6920_Y ),
    .S(\$procmux$6923_CMP ),
    .Y(\$procmux$6922_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6924  (
    .A(8'hxx),
    .B(\$procmux$6922_Y ),
    .S(\$procmux$6925_CMP ),
    .Y(\$procmux$6924_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6926  (
    .A(8'hxx),
    .B(\$procmux$6924_Y ),
    .S(\$procmux$6927_CMP ),
    .Y(\$procmux$6926_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6931  (
    .A(data_i[47:40]),
    .B(\$data_bits[47:40]$114 ),
    .S(\$procmux$6932_CMP ),
    .Y(\$procmux$6931_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6933  (
    .A(8'hxx),
    .B(\$procmux$6931_Y ),
    .S(\$procmux$6934_CMP ),
    .Y(\$procmux$6933_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6935  (
    .A(8'hxx),
    .B(\$procmux$6933_Y ),
    .S(\$procmux$6936_CMP ),
    .Y(\$procmux$6935_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6937  (
    .A(8'hxx),
    .B(\$procmux$6935_Y ),
    .S(\$procmux$6938_CMP ),
    .Y(\$procmux$6937_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6939  (
    .A(8'hxx),
    .B(\$procmux$6937_Y ),
    .S(\$procmux$6940_CMP ),
    .Y(\$procmux$6939_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6943  (
    .A(8'hxx),
    .B(wdata_i[7:0]),
    .S(\$procmux$6944_CMP ),
    .Y(\$procmux$6943_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6945  (
    .A(8'hxx),
    .B(\$procmux$6943_Y ),
    .S(\$procmux$6946_CMP ),
    .Y(\$procmux$6945_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6947  (
    .A(8'hxx),
    .B(\$procmux$6945_Y ),
    .S(\$procmux$6948_CMP ),
    .Y(\$procmux$6947_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6949  (
    .A(8'hxx),
    .B(\$procmux$6947_Y ),
    .S(\$procmux$6950_CMP ),
    .Y(\$procmux$6949_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6951  (
    .A(8'hxx),
    .B(\$procmux$6949_Y ),
    .S(\$procmux$6952_CMP ),
    .Y(\$procmux$6951_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6955  (
    .A(data_i[39:32]),
    .B(\$data_bits[39:32]$112 ),
    .S(\$procmux$6956_CMP ),
    .Y(\$procmux$6955_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6957  (
    .A(8'hxx),
    .B(\$procmux$6955_Y ),
    .S(\$procmux$6958_CMP ),
    .Y(\$procmux$6957_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6959  (
    .A(8'hxx),
    .B(\$procmux$6957_Y ),
    .S(\$procmux$6960_CMP ),
    .Y(\$procmux$6959_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6961  (
    .A(8'hxx),
    .B(\$procmux$6959_Y ),
    .S(\$procmux$6962_CMP ),
    .Y(\$procmux$6961_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6963  (
    .A(8'hxx),
    .B(\$procmux$6961_Y ),
    .S(\$procmux$6964_CMP ),
    .Y(\$procmux$6963_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6969  (
    .A(data_i[63:32]),
    .B({ \$data_bits[63:56]$119 , \$data_bits[55:48]$117 , \$data_bits[47:40]$115 , \$data_bits[39:32]$113  }),
    .S(\$procmux$6970_CMP ),
    .Y(\$procmux$6969_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6971  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6969_Y ),
    .S(\$procmux$6972_CMP ),
    .Y(\$procmux$6971_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6973  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6971_Y ),
    .S(\$procmux$6974_CMP ),
    .Y(\$procmux$6973_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$6975  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$6973_Y ),
    .S(\$procmux$6976_CMP ),
    .Y(\$procmux$6975_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6979  (
    .A(8'hxx),
    .B(wdata_i[31:24]),
    .S(\$procmux$6980_CMP ),
    .Y(\$procmux$6979_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6981  (
    .A(8'hxx),
    .B(\$procmux$6979_Y ),
    .S(\$procmux$6982_CMP ),
    .Y(\$procmux$6981_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6983  (
    .A(8'hxx),
    .B(\$procmux$6981_Y ),
    .S(\$procmux$6984_CMP ),
    .Y(\$procmux$6983_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6985  (
    .A(8'hxx),
    .B(\$procmux$6983_Y ),
    .S(\$procmux$6986_CMP ),
    .Y(\$procmux$6985_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6987  (
    .A(8'hxx),
    .B(\$procmux$6985_Y ),
    .S(\$procmux$6988_CMP ),
    .Y(\$procmux$6987_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6992  (
    .A(data_i[31:24]),
    .B(\$data_bits[31:24]$107 ),
    .S(\$procmux$6993_CMP ),
    .Y(\$procmux$6992_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6994  (
    .A(8'hxx),
    .B(\$procmux$6992_Y ),
    .S(\$procmux$6995_CMP ),
    .Y(\$procmux$6994_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6996  (
    .A(8'hxx),
    .B(\$procmux$6994_Y ),
    .S(\$procmux$6997_CMP ),
    .Y(\$procmux$6996_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$6998  (
    .A(8'hxx),
    .B(\$procmux$6996_Y ),
    .S(\$procmux$6999_CMP ),
    .Y(\$procmux$6998_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7000  (
    .A(8'hxx),
    .B(\$procmux$6998_Y ),
    .S(\$procmux$7001_CMP ),
    .Y(\$procmux$7000_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7004  (
    .A(8'hxx),
    .B(wdata_i[23:16]),
    .S(\$procmux$7005_CMP ),
    .Y(\$procmux$7004_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7006  (
    .A(8'hxx),
    .B(\$procmux$7004_Y ),
    .S(\$procmux$7007_CMP ),
    .Y(\$procmux$7006_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7008  (
    .A(8'hxx),
    .B(\$procmux$7006_Y ),
    .S(\$procmux$7009_CMP ),
    .Y(\$procmux$7008_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7010  (
    .A(8'hxx),
    .B(\$procmux$7008_Y ),
    .S(\$procmux$7011_CMP ),
    .Y(\$procmux$7010_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7012  (
    .A(8'hxx),
    .B(\$procmux$7010_Y ),
    .S(\$procmux$7013_CMP ),
    .Y(\$procmux$7012_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7017  (
    .A(data_i[23:16]),
    .B(\$data_bits[23:16]$105 ),
    .S(\$procmux$7018_CMP ),
    .Y(\$procmux$7017_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7019  (
    .A(8'hxx),
    .B(\$procmux$7017_Y ),
    .S(\$procmux$7020_CMP ),
    .Y(\$procmux$7019_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7021  (
    .A(8'hxx),
    .B(\$procmux$7019_Y ),
    .S(\$procmux$7022_CMP ),
    .Y(\$procmux$7021_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7023  (
    .A(8'hxx),
    .B(\$procmux$7021_Y ),
    .S(\$procmux$7024_CMP ),
    .Y(\$procmux$7023_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7025  (
    .A(8'hxx),
    .B(\$procmux$7023_Y ),
    .S(\$procmux$7026_CMP ),
    .Y(\$procmux$7025_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7029  (
    .A(8'hxx),
    .B(wdata_i[15:8]),
    .S(\$procmux$7030_CMP ),
    .Y(\$procmux$7029_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7031  (
    .A(8'hxx),
    .B(\$procmux$7029_Y ),
    .S(\$procmux$7032_CMP ),
    .Y(\$procmux$7031_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7033  (
    .A(8'hxx),
    .B(\$procmux$7031_Y ),
    .S(\$procmux$7034_CMP ),
    .Y(\$procmux$7033_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7035  (
    .A(8'hxx),
    .B(\$procmux$7033_Y ),
    .S(\$procmux$7036_CMP ),
    .Y(\$procmux$7035_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7037  (
    .A(8'hxx),
    .B(\$procmux$7035_Y ),
    .S(\$procmux$7038_CMP ),
    .Y(\$procmux$7037_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7042  (
    .A(data_i[15:8]),
    .B(\$data_bits[15:8]$103 ),
    .S(\$procmux$7043_CMP ),
    .Y(\$procmux$7042_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7044  (
    .A(8'hxx),
    .B(\$procmux$7042_Y ),
    .S(\$procmux$7045_CMP ),
    .Y(\$procmux$7044_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7046  (
    .A(8'hxx),
    .B(\$procmux$7044_Y ),
    .S(\$procmux$7047_CMP ),
    .Y(\$procmux$7046_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7048  (
    .A(8'hxx),
    .B(\$procmux$7046_Y ),
    .S(\$procmux$7049_CMP ),
    .Y(\$procmux$7048_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7050  (
    .A(8'hxx),
    .B(\$procmux$7048_Y ),
    .S(\$procmux$7051_CMP ),
    .Y(\$procmux$7050_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7054  (
    .A(8'hxx),
    .B(wdata_i[7:0]),
    .S(\$procmux$7055_CMP ),
    .Y(\$procmux$7054_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7056  (
    .A(8'hxx),
    .B(\$procmux$7054_Y ),
    .S(\$procmux$7057_CMP ),
    .Y(\$procmux$7056_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7058  (
    .A(8'hxx),
    .B(\$procmux$7056_Y ),
    .S(\$procmux$7059_CMP ),
    .Y(\$procmux$7058_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7060  (
    .A(8'hxx),
    .B(\$procmux$7058_Y ),
    .S(\$procmux$7061_CMP ),
    .Y(\$procmux$7060_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7062  (
    .A(8'hxx),
    .B(\$procmux$7060_Y ),
    .S(\$procmux$7063_CMP ),
    .Y(\$procmux$7062_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:272.21-278.24|rtl/riscv-dbg/dm_mem.sv:271.19-279.22" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7066  (
    .A(data_i[7:0]),
    .B(\$data_bits[7:0]$101 ),
    .S(\$procmux$7067_CMP ),
    .Y(\$procmux$7066_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7068  (
    .A(8'hxx),
    .B(\$procmux$7066_Y ),
    .S(\$procmux$7069_CMP ),
    .Y(\$procmux$7068_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7070  (
    .A(8'hxx),
    .B(\$procmux$7068_Y ),
    .S(\$procmux$7071_CMP ),
    .Y(\$procmux$7070_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7072  (
    .A(8'hxx),
    .B(\$procmux$7070_Y ),
    .S(\$procmux$7073_CMP ),
    .Y(\$procmux$7072_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$7074  (
    .A(8'hxx),
    .B(\$procmux$7072_Y ),
    .S(\$procmux$7075_CMP ),
    .Y(\$procmux$7074_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:270.17-280.20|rtl/riscv-dbg/dm_mem.sv:269.15-281.18" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7079  (
    .A(data_i[31:0]),
    .B({ \$data_bits[31:24]$108 , \$data_bits[23:16]$106 , \$data_bits[15:8]$104 , \$data_bits[7:0]$102  }),
    .S(\$procmux$7080_CMP ),
    .Y(\$procmux$7079_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7081  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7079_Y ),
    .S(\$procmux$7082_CMP ),
    .Y(\$procmux$7081_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7083  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7081_Y ),
    .S(\$procmux$7084_CMP ),
    .Y(\$procmux$7083_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$7085  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$7083_Y ),
    .S(\$procmux$7086_CMP ),
    .Y(\$procmux$7085_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7090  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7091_CMP ),
    .Y(\$procmux$7090_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7092  (
    .A(1'hx),
    .B(\$procmux$7090_Y ),
    .S(\$procmux$7093_CMP ),
    .Y(\$procmux$7092_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7094  (
    .A(1'hx),
    .B(\$procmux$7092_Y ),
    .S(\$procmux$7095_CMP ),
    .Y(\$procmux$7094_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:266.39-283.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7099  (
    .A(data_i),
    .B({ \$data_bits[63:32]$120 , \$data_bits[31:0]$109  }),
    .S(\$procmux$7100_CMP ),
    .Y(\$procmux$7099_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7101  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$7099_Y ),
    .S(\$procmux$7102_CMP ),
    .Y(\$procmux$7101_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7103  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$7101_Y ),
    .S(\$procmux$7104_CMP ),
    .Y(\$procmux$7103_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:257.25-262.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7109  (
    .A(\$resuming_d_aligned$63 ),
    .B(\$94y ),
    .S(\$procmux$7110_CMP ),
    .Y(\$procmux$7109_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7111  (
    .A(2'hx),
    .B(\$procmux$7109_Y ),
    .S(\$procmux$7112_CMP ),
    .Y(\$procmux$7111_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7113  (
    .A(2'hx),
    .B(\$procmux$7111_Y ),
    .S(\$procmux$7114_CMP ),
    .Y(\$procmux$7113_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:250.23-253.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7121  (
    .A(2'h0),
    .B(\$71y ),
    .S(\$procmux$7122_CMP ),
    .Y(\$procmux$7121_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7123  (
    .A(2'hx),
    .B(\$procmux$7121_Y ),
    .S(\$procmux$7124_CMP ),
    .Y(\$procmux$7123_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7125  (
    .A(2'hx),
    .B(\$procmux$7123_Y ),
    .S(\$procmux$7126_CMP ),
    .Y(\$procmux$7125_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:257.25-262.14|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$7131  (
    .A({ 1'h0, halted_q }),
    .B({ \$78y , \$87y  }),
    .S({ \$procmux$7133_CMP , \$procmux$7132_CMP  }),
    .Y(\$procmux$7131_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7134  (
    .A(2'hx),
    .B(\$procmux$7131_Y ),
    .S(\$procmux$7135_CMP ),
    .Y(\$procmux$7134_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7136  (
    .A(2'hx),
    .B(\$procmux$7134_Y ),
    .S(\$procmux$7137_CMP ),
    .Y(\$procmux$7136_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:264.26-264.43|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7141  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7142_CMP ),
    .Y(\$procmux$7141_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7143  (
    .A(1'hx),
    .B(\$procmux$7141_Y ),
    .S(\$procmux$7144_CMP ),
    .Y(\$procmux$7143_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7145  (
    .A(1'hx),
    .B(\$procmux$7143_Y ),
    .S(\$procmux$7146_CMP ),
    .Y(\$procmux$7145_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:255.13-255.26|rtl/riscv-dbg/dm_mem.sv:249.9-285.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7152  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7153_CMP ),
    .Y(\$procmux$7152_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7154  (
    .A(1'hx),
    .B(\$procmux$7152_Y ),
    .S(\$procmux$7155_CMP ),
    .Y(\$procmux$7154_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7156  (
    .A(1'hx),
    .B(\$procmux$7154_Y ),
    .S(\$procmux$7157_CMP ),
    .Y(\$procmux$7156_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7160  (
    .A(1'h0),
    .B(\$data_valid_o$127 ),
    .S(\$procmux$7161_CMP ),
    .Y(\$procmux$7160_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7162  (
    .A(1'hx),
    .B(\$procmux$7160_Y ),
    .S(\$procmux$7163_CMP ),
    .Y(\$procmux$7162_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7166  (
    .A(\$rdata$183 ),
    .B(64'h0000000000000000),
    .S(\$procmux$7167_CMP ),
    .Y(\$procmux$7166_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7168  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$7166_Y ),
    .S(\$procmux$7169_CMP ),
    .Y(\$procmux$7168_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7172  (
    .A(data_i),
    .B(\$data_bits$126 ),
    .S(\$procmux$7173_CMP ),
    .Y(\$procmux$7172_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7174  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$7172_Y ),
    .S(\$procmux$7175_CMP ),
    .Y(\$procmux$7174_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7178  (
    .A(\$resuming_d_aligned$63 ),
    .B(\$resuming_d_aligned$125 ),
    .S(\$procmux$7179_CMP ),
    .Y(\$procmux$7178_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7180  (
    .A(2'hx),
    .B(\$procmux$7178_Y ),
    .S(\$procmux$7181_CMP ),
    .Y(\$procmux$7180_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7184  (
    .A(2'h0),
    .B(\$halted_aligned$124 ),
    .S(\$procmux$7185_CMP ),
    .Y(\$procmux$7184_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7186  (
    .A(2'hx),
    .B(\$procmux$7184_Y ),
    .S(\$procmux$7187_CMP ),
    .Y(\$procmux$7186_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7190  (
    .A({ 1'h0, halted_q }),
    .B(\$halted_d_aligned$123 ),
    .S(\$procmux$7191_CMP ),
    .Y(\$procmux$7190_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7192  (
    .A(2'hx),
    .B(\$procmux$7190_Y ),
    .S(\$procmux$7193_CMP ),
    .Y(\$procmux$7192_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7196  (
    .A(\$rdata_d$182 ),
    .B(rdata_q),
    .S(\$procmux$7197_CMP ),
    .Y(\$procmux$7196_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7198  (
    .A(64'hxxxxxxxxxxxxxxxx),
    .B(\$procmux$7196_Y ),
    .S(\$procmux$7199_CMP ),
    .Y(\$procmux$7198_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7202  (
    .A(1'h0),
    .B(\$exception$122 ),
    .S(\$procmux$7203_CMP ),
    .Y(\$procmux$7202_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7204  (
    .A(1'hx),
    .B(\$procmux$7202_Y ),
    .S(\$procmux$7205_CMP ),
    .Y(\$procmux$7204_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:249.9-285.16|rtl/riscv-dbg/dm_mem.sv:248.7-340.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7208  (
    .A(1'h0),
    .B(\$going$121 ),
    .S(\$procmux$7209_CMP ),
    .Y(\$procmux$7208_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7210  (
    .A(1'hx),
    .B(\$procmux$7208_Y ),
    .S(\$procmux$7211_CMP ),
    .Y(\$procmux$7210_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7214  (
    .A(1'h0),
    .B(\$data_valid_o$192 ),
    .S(\$procmux$7215_CMP ),
    .Y(\$procmux$7214_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7218  (
    .A(64'h0000000000000000),
    .B(\$rdata$191 ),
    .S(\$procmux$7219_CMP ),
    .Y(\$procmux$7218_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7222  (
    .A(data_i),
    .B(\$data_bits$190 ),
    .S(\$procmux$7223_CMP ),
    .Y(\$procmux$7222_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7226  (
    .A(\$resuming_d_aligned$63 ),
    .B(\$resuming_d_aligned$189 ),
    .S(\$procmux$7227_CMP ),
    .Y(\$procmux$7226_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7230  (
    .A(2'h0),
    .B(\$halted_aligned$188 ),
    .S(\$procmux$7231_CMP ),
    .Y(\$procmux$7230_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7234  (
    .A({ 1'h0, halted_q }),
    .B(\$halted_d_aligned$187 ),
    .S(\$procmux$7235_CMP ),
    .Y(\$procmux$7234_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$7238  (
    .A(rdata_q),
    .B(\$rdata_d$186 ),
    .S(\$procmux$7239_CMP ),
    .Y(\$procmux$7238_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7242  (
    .A(1'h0),
    .B(\$exception$185 ),
    .S(\$procmux$7243_CMP ),
    .Y(\$procmux$7242_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:248.7-340.10|rtl/riscv-dbg/dm_mem.sv:246.5-341.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7246  (
    .A(1'h0),
    .B(\$going$184 ),
    .S(\$procmux$7247_CMP ),
    .Y(\$procmux$7246_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:243.7-243.42|rtl/riscv-dbg/dm_mem.sv:242.5-244.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7248  (
    .A({ 1'h0, resuming_q }),
    .B(\$62y ),
    .S(\$procmux$7249_CMP ),
    .Y(\$procmux$7248_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.21-211.8|rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7251  (
    .A(\$state_d$41 ),
    .B(2'h0),
    .S(\$procmux$7252_CMP ),
    .Y(\$procmux$7251_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.21-211.8|rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7254  (
    .A(\$go$40 ),
    .B(1'h0),
    .S(\$procmux$7255_CMP ),
    .Y(\$procmux$7254_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:206.21-211.8|rtl/riscv-dbg/dm_mem.sv:206.5-211.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7257  (
    .A(\$resume$39 ),
    .B(1'h0),
    .S(\$procmux$7258_CMP ),
    .Y(\$procmux$7257_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:201.20-204.8|rtl/riscv-dbg/dm_mem.sv:201.5-204.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7260  (
    .A(\$cmderror_o$47 ),
    .B(3'h3),
    .S(\$procmux$7261_CMP ),
    .Y(\$procmux$7260_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:201.20-204.8|rtl/riscv-dbg/dm_mem.sv:201.5-204.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7263  (
    .A(\$cmderror_valid_o$46 ),
    .B(1'h1),
    .S(\$procmux$7264_CMP ),
    .Y(\$procmux$7263_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:196.45-199.8|rtl/riscv-dbg/dm_mem.sv:196.5-199.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7266  (
    .A(\$cmderror_o$43 ),
    .B(3'h2),
    .S(\$procmux$7267_CMP ),
    .Y(\$procmux$7266_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:196.45-199.8|rtl/riscv-dbg/dm_mem.sv:196.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7269  (
    .A(\$cmderror_valid_o$42 ),
    .B(1'h1),
    .S(\$procmux$7270_CMP ),
    .Y(\$procmux$7269_Y )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:187.11-187.26|rtl/riscv-dbg/dm_mem.sv:186.9-188.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7271  (
    .A(state_q),
    .B(2'h0),
    .S(\$procmux$7272_CMP ),
    .Y(\$procmux$7271_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7273  (
    .A(2'hx),
    .B(\$procmux$7271_Y ),
    .S(\$procmux$7274_CMP ),
    .Y(\$procmux$7273_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7274_CMP0  (
    .A(state_q),
    .B(2'h3),
    .Y(\$procmux$7274_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:178.11-178.26|rtl/riscv-dbg/dm_mem.sv:177.9-179.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7276  (
    .A(state_q),
    .B(2'h0),
    .S(\$procmux$7277_CMP ),
    .Y(\$procmux$7276_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7278  (
    .A(2'hx),
    .B(\$procmux$7276_Y ),
    .S(\$procmux$7279_CMP ),
    .Y(\$procmux$7278_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7279_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$7279_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:170.13-170.36|rtl/riscv-dbg/dm_mem.sv:169.9-171.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7282  (
    .A(state_q),
    .B(2'h3),
    .S(\$procmux$7283_CMP ),
    .Y(\$procmux$7282_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7284  (
    .A(2'hx),
    .B(\$procmux$7282_Y ),
    .S(\$procmux$7285_CMP ),
    .Y(\$procmux$7284_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7285_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$7285_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd1)
  ) \$procmux$7287  (
    .A(1'hx),
    .B(4'h7),
    .S({ \$procmux$7294_CMP , \$procmux$7292_CMP , \$procmux$7290_CMP , \$procmux$7288_CMP  }),
    .Y(\$procmux$7287_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7288_CMP0  (
    .A(state_q),
    .B(2'h3),
    .Y(\$procmux$7288_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7290_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$7290_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7292_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$7292_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7294_CMP0  (
    .A(state_q),
    .Y(\$procmux$7294_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd2)
  ) \$procmux$7296  (
    .A(2'hx),
    .B({ \$state_d$29 , \$state_d$30 , \$state_d$34 , \$state_d$38  }),
    .S({ \$procmux$7303_CMP , \$procmux$7301_CMP , \$procmux$7299_CMP , \$procmux$7297_CMP  }),
    .Y(\$procmux$7296_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:182.21-189.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7297_CMP0  (
    .A(state_q),
    .B(2'h3),
    .Y(\$procmux$7297_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7299_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$7299_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7301_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$7301_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7303_CMP0  (
    .A(state_q),
    .Y(\$procmux$7303_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:160.11-160.28|rtl/riscv-dbg/dm_mem.sv:158.9-161.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7308  (
    .A(\$state_d$9 ),
    .B(2'h2),
    .S(\$procmux$7309_CMP ),
    .Y(\$procmux$7308_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7310  (
    .A(2'hx),
    .B(\$procmux$7308_Y ),
    .S(\$procmux$7311_CMP ),
    .Y(\$procmux$7310_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7311_CMP0  (
    .A(state_q),
    .Y(\$procmux$7311_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:151.35-155.12|rtl/riscv-dbg/dm_mem.sv:151.18-155.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7315  (
    .A(3'h0),
    .B(3'h4),
    .S(\$procmux$7316_CMP ),
    .Y(\$procmux$7315_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:150.11-150.24|rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7318  (
    .A(\$procmux$7315_Y ),
    .B(3'hx),
    .S(\$procmux$7319_CMP ),
    .Y(\$procmux$7318_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7320  (
    .A(3'hx),
    .B(\$procmux$7318_Y ),
    .S(\$procmux$7321_CMP ),
    .Y(\$procmux$7320_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7321_CMP0  (
    .A(state_q),
    .Y(\$procmux$7321_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:151.35-155.12|rtl/riscv-dbg/dm_mem.sv:151.18-155.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7325  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7326_CMP ),
    .Y(\$procmux$7325_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:150.11-150.24|rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7328  (
    .A(\$procmux$7325_Y ),
    .B(1'hx),
    .S(\$procmux$7329_CMP ),
    .Y(\$procmux$7328_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7330  (
    .A(1'hx),
    .B(\$procmux$7328_Y ),
    .S(\$procmux$7331_CMP ),
    .Y(\$procmux$7330_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7331_CMP0  (
    .A(state_q),
    .Y(\$procmux$7331_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:150.11-150.24|rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7337  (
    .A(\$cmderror_o$8 ),
    .B(3'h0),
    .S(\$procmux$7338_CMP ),
    .Y(\$procmux$7337_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7339  (
    .A(3'hx),
    .B(\$procmux$7337_Y ),
    .S(\$procmux$7340_CMP ),
    .Y(\$procmux$7339_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7340_CMP0  (
    .A(state_q),
    .Y(\$procmux$7340_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:150.11-150.24|rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7346  (
    .A(\$cmderror_valid_o$7 ),
    .B(1'h0),
    .S(\$procmux$7347_CMP ),
    .Y(\$procmux$7346_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7348  (
    .A(1'hx),
    .B(\$procmux$7346_Y ),
    .S(\$procmux$7349_CMP ),
    .Y(\$procmux$7348_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7349_CMP0  (
    .A(state_q),
    .Y(\$procmux$7349_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:150.11-150.24|rtl/riscv-dbg/dm_mem.sv:148.9-155.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7354  (
    .A(state_q),
    .B(2'h1),
    .S(\$procmux$7355_CMP ),
    .Y(\$procmux$7354_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$7356  (
    .A(2'hx),
    .B(\$procmux$7354_Y ),
    .S(\$procmux$7357_CMP ),
    .Y(\$procmux$7356_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7357_CMP0  (
    .A(state_q),
    .Y(\$procmux$7357_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7362  (
    .A(3'h0),
    .B(\$cmderror_o$11 ),
    .S(\$procmux$7363_CMP ),
    .Y(\$procmux$7362_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7363_CMP0  (
    .A(state_q),
    .Y(\$procmux$7363_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7368  (
    .A(1'h0),
    .B(\$cmderror_valid_o$10 ),
    .S(\$procmux$7369_CMP ),
    .Y(\$procmux$7368_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:146.13-162.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7369_CMP0  (
    .A(state_q),
    .Y(\$procmux$7369_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7374  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7375_CMP ),
    .Y(\$procmux$7374_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:164.11-172.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7375_CMP0  (
    .A(state_q),
    .B(2'h1),
    .Y(\$procmux$7375_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7378  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7379_CMP ),
    .Y(\$procmux$7378_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_mem.sv:174.15-180.10|rtl/riscv-dbg/dm_mem.sv:145.5-192.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$7379_CMP0  (
    .A(state_q),
    .B(2'h2),
    .Y(\$procmux$7379_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_mem.sv:498.15" */
  \debug_rom$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_mem.gen_rom_snd_scratch.i_debug_rom  \gen_rom_snd_scratch.i_debug_rom  (
    .addr_i(rom_addr),
    .clk_i(clk_i),
    .rdata_o(rom_rdata),
    .req_i(req_i),
    .rst_ni(rst_ni)
  );
  assign hartsel = hartsel_i[0];
  assign wdata_hartsel = wdata_i[0];
  assign resumereq_aligned = { 1'h0, resumereq_i };
  assign haltreq_aligned = { 1'h0, haltreq_i };
  assign resumereq_wdata_aligned = { 1'h0, resumereq_i };
  assign halted_q_aligned = { 1'h0, halted_q };
  assign halted_d = halted_d_aligned[0];
  assign resuming_q_aligned = { 1'h0, resuming_q };
  assign resuming_d = resuming_d_aligned[0];
  assign ac_ar = cmd_i[23:0];
  assign debug_req_o = haltreq_i;
  assign halted_o = halted_q;
  assign resuming_o = resuming_q;
  assign progbuf = progbuf_i;
  assign resume = \$resume$50 ;
  assign go = \$go$51 ;
  assign state_d = \$state_d$52 ;
  assign cmderror_valid_o = \$cmderror_valid_o$48 ;
  assign cmderror_o = \$cmderror_o$49 ;
  assign cmdbusy_o = \$cmdbusy_o$44 ;
  assign word_mux = \$53y ;
  assign rdata_o = \$54y ;
  assign going = \$going$193 ;
  assign exception = \$exception$194 ;
  assign rdata_d = \$rdata_d$195 ;
  assign halted_d_aligned = \$halted_d_aligned$202 ;
  assign halted_aligned = \$halted_aligned$197 ;
  assign resuming_d_aligned = \$resuming_d_aligned$203 ;
  assign data_bits = \$data_bits$199 ;
  assign rdata = \$rdata$200 ;
  assign data_o = \$data_bits$199 ;
  assign data_valid_o = \$data_valid_o$201 ;
  assign abstract_cmd = { 192'h000000000000000000000000000000000000000000000000, \$abstract_cmd[319:288]$252 , 32'h7b302573, \$abstract_cmd[255:128]$251 , 96'h00c5151300c5551300000517, \$abstract_cmd[31:0]$250  };
  assign unsupported_command = \$unsupported_command$253 ;
  assign rom_addr = { 32'h00000000, addr_i };
  assign fwd_rom_d = \$254y ;
  assign \$unsupported_command$253  = \$procmux$6481_Y ;
  assign \$abstract_cmd[31:0]$250  = \$procmux$6485_Y ;
  assign \$procmux$6490_CMP  = \$248y ;
  assign \$abstract_cmd[319:288]$249  = \$procmux$6491_Y ;
  assign \$procmux$6495_CMP  = \$238y ;
  assign \$procmux$6498_CMP  = \$223y ;
  assign \$procmux$6501_CMP  = \$207y ;
  assign \$unsupported_command$240  = \$procmux$6502_Y ;
  assign \$procmux$6506_CMP  = \$238y ;
  assign \$procmux$6509_CMP  = \$223y ;
  assign \$procmux$6512_CMP  = \$207y ;
  assign \$abstract_cmd[31:0]$239  = \$procmux$6513_Y ;
  assign \$procmux$6520_CMP  = \$223y ;
  assign \$procmux$6523_CMP  = \$207y ;
  assign \$unsupported_command$243  = \$procmux$6524_Y ;
  assign \$procmux$6531_CMP  = \$223y ;
  assign \$procmux$6534_CMP  = \$207y ;
  assign \$abstract_cmd[31:0]$241  = \$procmux$6535_Y ;
  assign \$procmux$6541_CMP  = ac_ar[12];
  assign \$procmux$6544_CMP  = \$229y ;
  assign \$procmux$6547_CMP  = \$224y ;
  assign \$procmux$6549_CMP  = \$223y ;
  assign \$procmux$6552_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$231 [127:32] = \$procmux$6553_Y ;
  assign \$procmux$6560_CMP  = ac_ar[5];
  assign \$procmux$6562_CMP  = ac_ar[12];
  assign \$procmux$6565_CMP  = \$229y ;
  assign \$procmux$6568_CMP  = \$224y ;
  assign \$procmux$6570_CMP  = \$223y ;
  assign \$procmux$6573_CMP  = \$207y ;
  assign \$abstract_cmd[159:128]$230  = \$procmux$6574_Y ;
  assign \$procmux$6581_CMP  = ac_ar[12];
  assign \$procmux$6584_CMP  = \$229y ;
  assign \$procmux$6587_CMP  = \$224y ;
  assign \$procmux$6589_CMP  = \$223y ;
  assign \$procmux$6592_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$231 [31:0] = \$procmux$6593_Y ;
  assign \$procmux$6600_CMP  = \$229y ;
  assign \$procmux$6603_CMP  = \$224y ;
  assign \$procmux$6605_CMP  = \$223y ;
  assign \$procmux$6608_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$232  = \$procmux$6609_Y ;
  assign \$procmux$6615_CMP  = \$224y ;
  assign \$procmux$6617_CMP  = \$223y ;
  assign \$procmux$6620_CMP  = \$207y ;
  assign \$unsupported_command$235  = \$procmux$6621_Y ;
  assign \$procmux$6628_CMP  = \$224y ;
  assign \$procmux$6630_CMP  = \$223y ;
  assign \$procmux$6633_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$234  = \$procmux$6634_Y ;
  assign \$procmux$6640_CMP  = \$224y ;
  assign \$procmux$6642_CMP  = \$223y ;
  assign \$procmux$6645_CMP  = \$207y ;
  assign \$abstract_cmd[31:0]$233  = \$procmux$6646_Y ;
  assign \$procmux$6652_CMP  = \$223y ;
  assign \$procmux$6655_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$242  = \$procmux$6656_Y ;
  assign \$procmux$6663_CMP  = \$207y ;
  assign \$unsupported_command$246  = \$procmux$6664_Y ;
  assign \$procmux$6671_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$245  = \$procmux$6672_Y ;
  assign \$procmux$6679_CMP  = \$207y ;
  assign \$abstract_cmd[31:0]$244  = \$procmux$6680_Y ;
  assign \$procmux$6686_CMP  = ac_ar[12];
  assign \$procmux$6689_CMP  = \$213y ;
  assign \$procmux$6692_CMP  = \$208y ;
  assign \$procmux$6694_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$215 [127:32] = \$procmux$6695_Y ;
  assign \$procmux$6702_CMP  = ac_ar[5];
  assign \$procmux$6704_CMP  = ac_ar[12];
  assign \$procmux$6707_CMP  = \$213y ;
  assign \$procmux$6710_CMP  = \$208y ;
  assign \$procmux$6712_CMP  = \$207y ;
  assign \$abstract_cmd[159:128]$214  = \$procmux$6713_Y ;
  assign \$procmux$6720_CMP  = ac_ar[12];
  assign \$procmux$6723_CMP  = \$213y ;
  assign \$procmux$6726_CMP  = \$208y ;
  assign \$procmux$6728_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$215 [31:0] = \$procmux$6729_Y ;
  assign \$procmux$6736_CMP  = \$213y ;
  assign \$procmux$6739_CMP  = \$208y ;
  assign \$procmux$6741_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$216  = \$procmux$6742_Y ;
  assign \$procmux$6748_CMP  = \$208y ;
  assign \$procmux$6750_CMP  = \$207y ;
  assign \$unsupported_command$219  = \$procmux$6751_Y ;
  assign \$procmux$6758_CMP  = \$208y ;
  assign \$procmux$6760_CMP  = \$207y ;
  assign \$abstract_cmd[255:128]$218  = \$procmux$6761_Y ;
  assign \$procmux$6767_CMP  = \$208y ;
  assign \$procmux$6769_CMP  = \$207y ;
  assign \$abstract_cmd[31:0]$217  = \$procmux$6770_Y ;
  assign \$abstract_cmd[319:288]$252  = \$procmux$6774_Y ;
  assign \$abstract_cmd[255:128]$251  = \$procmux$6778_Y ;
  assign \$procmux$6782_CMP  = ndmreset_i;
  assign \$resuming_d_aligned$203  = \$procmux$6781_Y ;
  assign \$procmux$6785_CMP  = ndmreset_i;
  assign \$halted_d_aligned$202  = \$procmux$6784_Y ;
  assign \$procmux$6788_CMP  = \$172y ;
  assign \$procmux$6793_CMP  = we_i;
  assign \$procmux$6795_CMP  = req_i;
  assign \$rdata$181  = \$procmux$6794_Y ;
  assign \$procmux$6803_CMP  = \$136y ;
  assign \$procmux$6805_CMP  = cmdbusy_o;
  assign \$procmux$6810_CMP  = we_i;
  assign \$procmux$6812_CMP  = req_i;
  assign \$rdata_d$137  = \$procmux$6811_Y ;
  assign \$procmux$6821_CMP  = cmdbusy_o;
  assign \$procmux$6826_CMP  = we_i;
  assign \$procmux$6828_CMP  = req_i;
  assign \$rdata_d$138  = \$procmux$6827_Y ;
  assign \$procmux$6835_CMP  = \$131y ;
  assign \$procmux$6840_CMP  = we_i;
  assign \$procmux$6842_CMP  = req_i;
  assign \$rdata_d$132  = \$procmux$6841_Y ;
  assign \$procmux$6849_CMP  = we_i;
  assign \$procmux$6851_CMP  = req_i;
  assign \$rdata$183  = \$procmux$6850_Y ;
  assign \$procmux$6863_CMP  = we_i;
  assign \$procmux$6865_CMP  = req_i;
  assign \$rdata_d$182  = \$procmux$6864_Y ;
  assign \$procmux$6869_CMP  = be_i[3];
  assign \$procmux$6871_CMP  = \$111y ;
  assign \$procmux$6875_CMP  = we_i;
  assign \$procmux$6877_CMP  = req_i;
  assign \$data_bits[63:56]$118  = \$procmux$6876_Y ;
  assign \$procmux$6882_CMP  = be_i[3];
  assign \$procmux$6884_CMP  = \$111y ;
  assign \$procmux$6888_CMP  = we_i;
  assign \$procmux$6890_CMP  = req_i;
  assign \$data_bits[63:56]$119  = \$procmux$6889_Y ;
  assign \$procmux$6894_CMP  = be_i[2];
  assign \$procmux$6896_CMP  = \$111y ;
  assign \$procmux$6900_CMP  = we_i;
  assign \$procmux$6902_CMP  = req_i;
  assign \$data_bits[55:48]$116  = \$procmux$6901_Y ;
  assign \$procmux$6907_CMP  = be_i[2];
  assign \$procmux$6909_CMP  = \$111y ;
  assign \$procmux$6913_CMP  = we_i;
  assign \$procmux$6915_CMP  = req_i;
  assign \$data_bits[55:48]$117  = \$procmux$6914_Y ;
  assign \$procmux$6919_CMP  = be_i[1];
  assign \$procmux$6921_CMP  = \$111y ;
  assign \$procmux$6925_CMP  = we_i;
  assign \$procmux$6927_CMP  = req_i;
  assign \$data_bits[47:40]$114  = \$procmux$6926_Y ;
  assign \$procmux$6932_CMP  = be_i[1];
  assign \$procmux$6934_CMP  = \$111y ;
  assign \$procmux$6938_CMP  = we_i;
  assign \$procmux$6940_CMP  = req_i;
  assign \$data_bits[47:40]$115  = \$procmux$6939_Y ;
  assign \$procmux$6944_CMP  = be_i[0];
  assign \$procmux$6946_CMP  = \$111y ;
  assign \$procmux$6950_CMP  = we_i;
  assign \$procmux$6952_CMP  = req_i;
  assign \$data_bits[39:32]$112  = \$procmux$6951_Y ;
  assign \$procmux$6956_CMP  = be_i[0];
  assign \$procmux$6958_CMP  = \$111y ;
  assign \$procmux$6962_CMP  = we_i;
  assign \$procmux$6964_CMP  = req_i;
  assign \$data_bits[39:32]$113  = \$procmux$6963_Y ;
  assign \$procmux$6970_CMP  = \$111y ;
  assign \$procmux$6974_CMP  = we_i;
  assign \$procmux$6976_CMP  = req_i;
  assign \$data_bits[63:32]$120  = \$procmux$6975_Y ;
  assign \$procmux$6980_CMP  = be_i[3];
  assign \$procmux$6982_CMP  = \$100y ;
  assign \$procmux$6986_CMP  = we_i;
  assign \$procmux$6988_CMP  = req_i;
  assign \$data_bits[31:24]$107  = \$procmux$6987_Y ;
  assign \$procmux$6993_CMP  = be_i[3];
  assign \$procmux$6995_CMP  = \$100y ;
  assign \$procmux$6999_CMP  = we_i;
  assign \$procmux$7001_CMP  = req_i;
  assign \$data_bits[31:24]$108  = \$procmux$7000_Y ;
  assign \$procmux$7005_CMP  = be_i[2];
  assign \$procmux$7007_CMP  = \$100y ;
  assign \$procmux$7011_CMP  = we_i;
  assign \$procmux$7013_CMP  = req_i;
  assign \$data_bits[23:16]$105  = \$procmux$7012_Y ;
  assign \$procmux$7018_CMP  = be_i[2];
  assign \$procmux$7020_CMP  = \$100y ;
  assign \$procmux$7024_CMP  = we_i;
  assign \$procmux$7026_CMP  = req_i;
  assign \$data_bits[23:16]$106  = \$procmux$7025_Y ;
  assign \$procmux$7030_CMP  = be_i[1];
  assign \$procmux$7032_CMP  = \$100y ;
  assign \$procmux$7036_CMP  = we_i;
  assign \$procmux$7038_CMP  = req_i;
  assign \$data_bits[15:8]$103  = \$procmux$7037_Y ;
  assign \$procmux$7043_CMP  = be_i[1];
  assign \$procmux$7045_CMP  = \$100y ;
  assign \$procmux$7049_CMP  = we_i;
  assign \$procmux$7051_CMP  = req_i;
  assign \$data_bits[15:8]$104  = \$procmux$7050_Y ;
  assign \$procmux$7055_CMP  = be_i[0];
  assign \$procmux$7057_CMP  = \$100y ;
  assign \$procmux$7061_CMP  = we_i;
  assign \$procmux$7063_CMP  = req_i;
  assign \$data_bits[7:0]$101  = \$procmux$7062_Y ;
  assign \$procmux$7067_CMP  = be_i[0];
  assign \$procmux$7069_CMP  = \$100y ;
  assign \$procmux$7073_CMP  = we_i;
  assign \$procmux$7075_CMP  = req_i;
  assign \$data_bits[7:0]$102  = \$procmux$7074_Y ;
  assign \$procmux$7080_CMP  = \$100y ;
  assign \$procmux$7084_CMP  = we_i;
  assign \$procmux$7086_CMP  = req_i;
  assign \$data_bits[31:0]$109  = \$procmux$7085_Y ;
  assign \$procmux$7093_CMP  = we_i;
  assign \$procmux$7095_CMP  = req_i;
  assign \$data_valid_o$127  = \$procmux$7094_Y ;
  assign \$procmux$7102_CMP  = we_i;
  assign \$procmux$7104_CMP  = req_i;
  assign \$data_bits$126  = \$procmux$7103_Y ;
  assign \$procmux$7112_CMP  = we_i;
  assign \$procmux$7114_CMP  = req_i;
  assign \$resuming_d_aligned$125  = \$procmux$7113_Y ;
  assign \$procmux$7124_CMP  = we_i;
  assign \$procmux$7126_CMP  = req_i;
  assign \$halted_aligned$124  = \$procmux$7125_Y ;
  assign \$procmux$7135_CMP  = we_i;
  assign \$procmux$7137_CMP  = req_i;
  assign \$halted_d_aligned$123  = \$procmux$7136_Y ;
  assign \$procmux$7144_CMP  = we_i;
  assign \$procmux$7146_CMP  = req_i;
  assign \$exception$122  = \$procmux$7145_Y ;
  assign \$procmux$7155_CMP  = we_i;
  assign \$procmux$7157_CMP  = req_i;
  assign \$going$121  = \$procmux$7156_Y ;
  assign \$procmux$7161_CMP  = we_i;
  assign \$procmux$7163_CMP  = req_i;
  assign \$data_valid_o$192  = \$procmux$7162_Y ;
  assign \$procmux$7167_CMP  = we_i;
  assign \$procmux$7169_CMP  = req_i;
  assign \$rdata$191  = \$procmux$7168_Y ;
  assign \$procmux$7173_CMP  = we_i;
  assign \$procmux$7175_CMP  = req_i;
  assign \$data_bits$190  = \$procmux$7174_Y ;
  assign \$procmux$7179_CMP  = we_i;
  assign \$procmux$7181_CMP  = req_i;
  assign \$resuming_d_aligned$189  = \$procmux$7180_Y ;
  assign \$procmux$7185_CMP  = we_i;
  assign \$procmux$7187_CMP  = req_i;
  assign \$halted_aligned$188  = \$procmux$7186_Y ;
  assign \$procmux$7191_CMP  = we_i;
  assign \$procmux$7193_CMP  = req_i;
  assign \$halted_d_aligned$187  = \$procmux$7192_Y ;
  assign \$procmux$7197_CMP  = we_i;
  assign \$procmux$7199_CMP  = req_i;
  assign \$rdata_d$186  = \$procmux$7198_Y ;
  assign \$procmux$7203_CMP  = we_i;
  assign \$procmux$7205_CMP  = req_i;
  assign \$exception$185  = \$procmux$7204_Y ;
  assign \$procmux$7209_CMP  = we_i;
  assign \$procmux$7211_CMP  = req_i;
  assign \$going$184  = \$procmux$7210_Y ;
  assign \$procmux$7215_CMP  = req_i;
  assign \$data_valid_o$201  = \$procmux$7214_Y ;
  assign \$procmux$7219_CMP  = req_i;
  assign \$rdata$200  = \$procmux$7218_Y ;
  assign \$procmux$7223_CMP  = req_i;
  assign \$data_bits$199  = \$procmux$7222_Y ;
  assign \$procmux$7227_CMP  = req_i;
  assign \$resuming_d_aligned$198  = \$procmux$7226_Y ;
  assign \$procmux$7231_CMP  = req_i;
  assign \$halted_aligned$197  = \$procmux$7230_Y ;
  assign \$procmux$7235_CMP  = req_i;
  assign \$halted_d_aligned$196  = \$procmux$7234_Y ;
  assign \$procmux$7239_CMP  = req_i;
  assign \$rdata_d$195  = \$procmux$7238_Y ;
  assign \$procmux$7243_CMP  = req_i;
  assign \$exception$194  = \$procmux$7242_Y ;
  assign \$procmux$7247_CMP  = req_i;
  assign \$going$193  = \$procmux$7246_Y ;
  assign \$procmux$7249_CMP  = clear_resumeack_i;
  assign \$resuming_d_aligned$63  = \$procmux$7248_Y ;
  assign \$procmux$7252_CMP  = ndmreset_i;
  assign \$state_d$52  = \$procmux$7251_Y ;
  assign \$procmux$7255_CMP  = ndmreset_i;
  assign \$go$51  = \$procmux$7254_Y ;
  assign \$procmux$7258_CMP  = ndmreset_i;
  assign \$resume$50  = \$procmux$7257_Y ;
  assign \$procmux$7261_CMP  = exception;
  assign \$cmderror_o$49  = \$procmux$7260_Y ;
  assign \$procmux$7264_CMP  = exception;
  assign \$cmderror_valid_o$48  = \$procmux$7263_Y ;
  assign \$procmux$7267_CMP  = \$45y ;
  assign \$cmderror_o$47  = \$procmux$7266_Y ;
  assign \$procmux$7270_CMP  = \$45y ;
  assign \$cmderror_valid_o$46  = \$procmux$7269_Y ;
  assign \$procmux$7272_CMP  = \$37y ;
  assign \$state_d$38  = \$procmux$7273_Y ;
  assign \$procmux$7277_CMP  = \$33y ;
  assign \$state_d$34  = \$procmux$7278_Y ;
  assign \$procmux$7283_CMP  = going;
  assign \$state_d$30  = \$procmux$7284_Y ;
  assign \$cmdbusy_o$44  = \$procmux$7287_Y ;
  assign \$state_d$41  = \$procmux$7296_Y ;
  assign \$procmux$7309_CMP  = \$28y ;
  assign \$state_d$29  = \$procmux$7310_Y ;
  assign \$procmux$7316_CMP  = cmd_valid_i;
  assign \$procmux$7319_CMP  = \$6y ;
  assign \$cmderror_o$8  = \$procmux$7320_Y ;
  assign \$procmux$7326_CMP  = cmd_valid_i;
  assign \$procmux$7329_CMP  = \$6y ;
  assign \$cmderror_valid_o$7  = \$procmux$7330_Y ;
  assign \$procmux$7338_CMP  = \$6y ;
  assign \$cmderror_o$11  = \$procmux$7339_Y ;
  assign \$procmux$7347_CMP  = \$6y ;
  assign \$cmderror_valid_o$10  = \$procmux$7348_Y ;
  assign \$procmux$7355_CMP  = \$6y ;
  assign \$state_d$9  = \$procmux$7356_Y ;
  assign \$cmderror_o$43  = \$procmux$7362_Y ;
  assign \$cmderror_valid_o$42  = \$procmux$7368_Y ;
  assign \$go$40  = \$procmux$7374_Y ;
  assign \$resume$39  = \$procmux$7378_Y ;
  assign \$237y  = ac_ar[19];
  assign \$71y  = \$auto$rtlil.cc:3004:And$13167 ;
  assign \$procmux$7122_CMP  = \$64y ;
  assign \$62y  = \$auto$rtlil.cc:3004:And$13171 ;
  assign \$78y  = \$auto$rtlil.cc:3005:Or$13173 ;
  assign \$87y  = \$auto$rtlil.cc:3004:And$13177 ;
  assign \$94y  = \$auto$rtlil.cc:3005:Or$13179 ;
  assign \$143y  = { \$142y [7:0], 1'h0 };
  assign \$149y  = { \$148y [7:0], 1'h0 };
  assign \$225y  = cmd_i[12];
  assign \$209y  = cmd_i[12];
  assign \$171y [2:0] = 3'h0;
  assign \$171y [11:3] = 9'h000;
  assign \$173y [11:3] = 9'h000;
  assign \$173y [2:0] = { 2'h0, hartsel_i[0] };
  assign \$180y  = \$auto$rtlil.cc:3004:And$13181 ;
  assign \$257y  = rst_ni;
  assign \$260y  = rst_ni;
  assign \$procmux$7132_CMP  = \$80y ;
  assign \$procmux$7133_CMP  = \$64y ;
  assign \$261y  = \$procmux$6784_Y [0];
  assign \$procmux$7110_CMP  = \$80y ;
  assign \$262y  = \$procmux$6781_Y [0];
  assign \$procmux$6790_CMP  = \$169y ;
  assign \$procmux$6807_CMP  = \$128y ;
  assign \$procmux$6837_CMP  = \$128y ;
  assign \$procmux$6823_CMP  = \$128y ;
  assign \$procmux$6846_CMP  = \$169y ;
  assign \$procmux$6855_CMP  = \$169y ;
  assign \$procmux$6856_CMP  = \$162y ;
  assign \$procmux$6857_CMP  = \$155y ;
  assign \$procmux$6858_CMP  = \$141y ;
  assign \$procmux$6860_CMP  = \$128y ;
  assign \$procmux$6873_CMP  = \$98y ;
  assign \$procmux$6886_CMP  = \$98y ;
  assign \$procmux$6898_CMP  = \$98y ;
  assign \$procmux$6911_CMP  = \$98y ;
  assign \$procmux$6923_CMP  = \$98y ;
  assign \$procmux$6936_CMP  = \$98y ;
  assign \$procmux$6948_CMP  = \$98y ;
  assign \$procmux$6960_CMP  = \$98y ;
  assign \$procmux$6972_CMP  = \$98y ;
  assign \$procmux$6984_CMP  = \$98y ;
  assign \$procmux$6997_CMP  = \$98y ;
  assign \$procmux$7009_CMP  = \$98y ;
  assign \$procmux$7022_CMP  = \$98y ;
  assign \$procmux$7034_CMP  = \$98y ;
  assign \$procmux$7047_CMP  = \$98y ;
  assign \$procmux$7059_CMP  = \$98y ;
  assign \$procmux$7071_CMP  = \$98y ;
  assign \$procmux$7082_CMP  = \$98y ;
  assign \$procmux$7091_CMP  = \$98y ;
  assign \$procmux$7100_CMP  = \$98y ;
  assign \$procmux$7142_CMP  = \$95y ;
  assign \$procmux$7153_CMP  = \$79y ;
  assign \$auto$rtlil.cc:3004:And$13167  = \$70y ;
  assign \$150y  = 1'h1;
  assign \$152y  = \$151y ;
endmodule

/* src = "rtl/riscv-dbg/dm_obi_top.sv:63.8" */
module \dm_obi_top$croc_chip.i_croc_soc.i_croc.i_dm_top (clk_i, rst_ni, testmode_i, debug_req_o, unavailable_i, hartinfo_i, slave_req_i, slave_gnt_o, slave_we_i, slave_addr_i, slave_be_i, slave_wdata_i, slave_aid_i, slave_rvalid_o, slave_rdata_o, slave_rid_o, master_req_o, master_addr_o, master_we_o, master_wdata_o, master_be_o
, master_gnt_i, master_rvalid_i, master_err_i, master_other_err_i, master_rdata_i, dmi_rst_ni, dmi_req_valid_i, dmi_req_ready_o, dmi_req_i, dmi_resp_valid_o, dmi_resp_ready_i, dmi_resp_o, ndmreset_o, dmactive_o);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$procmux$12725_Y ;
  wire \$procmux$12726_CMP ;
  wire [2:0] \$procmux$12728_Y ;
  wire \$procmux$12729_CMP ;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  wire [2:0] \$slave_rid_q$5 ;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  wire \$slave_rvalid_q$4 ;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:72.33" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:78.33" */
  output debug_req_o;
  wire debug_req_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:77.33" */
  output dmactive_o;
  wire dmactive_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:113.33" */
  input [40:0] dmi_req_i;
  wire [40:0] dmi_req_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:112.33" */
  output dmi_req_ready_o;
  wire dmi_req_ready_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:111.33" */
  input dmi_req_valid_i;
  wire dmi_req_valid_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:117.33" */
  output [33:0] dmi_resp_o;
  wire [33:0] dmi_resp_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:116.33" */
  input dmi_resp_ready_i;
  wire dmi_resp_ready_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:115.33" */
  output dmi_resp_valid_o;
  wire dmi_resp_valid_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:110.33" */
  input dmi_rst_ni;
  wire dmi_rst_ni;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:81.40" */
  input [31:0] hartinfo_i;
  wire [31:0] hartinfo_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:99.33" */
  output [31:0] master_addr_o;
  wire [31:0] master_addr_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:102.33" */
  output [3:0] master_be_o;
  wire [3:0] master_be_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:105.33" */
  input master_err_i;
  wire master_err_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:103.33" */
  input master_gnt_i;
  wire master_gnt_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:106.33" */
  input master_other_err_i;
  wire master_other_err_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:107.33" */
  input [31:0] master_rdata_i;
  wire [31:0] master_rdata_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:98.33" */
  output master_req_o;
  wire master_req_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:104.33" */
  input master_rvalid_i;
  wire master_rvalid_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:101.33" */
  output [31:0] master_wdata_o;
  wire [31:0] master_wdata_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:100.33" */
  output master_we_o;
  wire master_we_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:76.33" */
  output ndmreset_o;
  wire ndmreset_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:74.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:87.33" */
  input [31:0] slave_addr_i;
  wire [31:0] slave_addr_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:91.33" */
  input [2:0] slave_aid_i;
  wire [2:0] slave_aid_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:88.33" */
  input [3:0] slave_be_i;
  wire [3:0] slave_be_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:85.33" */
  output slave_gnt_o;
  wire slave_gnt_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:94.33" */
  output [31:0] slave_rdata_o;
  wire [31:0] slave_rdata_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:83.33" */
  input slave_req_i;
  wire slave_req_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:96.33" */
  output [2:0] slave_rid_o;
  wire [2:0] slave_rid_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:122.23" */
  wire [2:0] slave_rid_q;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:93.33" */
  output slave_rvalid_o;
  wire slave_rvalid_o;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:121.23" */
  wire slave_rvalid_q;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:89.33" */
  input [31:0] slave_wdata_i;
  wire [31:0] slave_wdata_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:86.33" */
  input slave_we_i;
  wire slave_we_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:75.33" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:80.33" */
  input unavailable_i;
  wire unavailable_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:175.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$slave_rid_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$slave_rid_q$5 ),
    .Q(slave_rid_q)
  );
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:175.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$slave_rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$slave_rvalid_q$4 ),
    .Q(slave_rvalid_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:180.39-183.10|rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12725  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12726_CMP ),
    .Y(\$procmux$12725_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:180.39-183.10|rtl/riscv-dbg/dm_obi_top.sv:180.7-185.10" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12728  (
    .A(slave_rid_q),
    .B(slave_aid_i),
    .S(\$procmux$12729_CMP ),
    .Y(\$procmux$12728_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_obi_top.sv:130.5" */
  \dm_top$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top  i_dm_top (
    .clk_i(clk_i),
    .debug_req_o(debug_req_o),
    .dmactive_o(dmactive_o),
    .dmi_req_i(dmi_req_i),
    .dmi_req_ready_o(dmi_req_ready_o),
    .dmi_req_valid_i(dmi_req_valid_i),
    .dmi_resp_o(dmi_resp_o),
    .dmi_resp_ready_i(dmi_resp_ready_i),
    .dmi_resp_valid_o(dmi_resp_valid_o),
    .dmi_rst_ni(dmi_rst_ni),
    .hartinfo_i(hartinfo_i),
    .master_add_o(master_addr_o),
    .master_be_o(master_be_o),
    .master_gnt_i(master_gnt_i),
    .master_r_err_i(master_err_i),
    .master_r_other_err_i(master_other_err_i),
    .master_r_rdata_i(master_rdata_i),
    .master_r_valid_i(master_rvalid_i),
    .master_req_o(master_req_o),
    .master_wdata_o(master_wdata_o),
    .master_we_o(master_we_o),
    .ndmreset_ack_i(ndmreset_o),
    .ndmreset_o(ndmreset_o),
    .next_dm_addr_i(32'd0),
    .rst_ni(rst_ni),
    .slave_addr_i(slave_addr_i),
    .slave_be_i(slave_be_i),
    .slave_rdata_o(slave_rdata_o),
    .slave_req_i(slave_req_i),
    .slave_wdata_i(slave_wdata_i),
    .slave_we_i(slave_we_i),
    .testmode_i(testmode_i),
    .unavailable_i(unavailable_i)
  );
  assign slave_gnt_o = 1'h1;
  assign slave_rvalid_o = slave_rvalid_q;
  assign slave_rid_o = slave_rid_q;
  assign \$procmux$12726_CMP  = \$3y ;
  assign \$slave_rvalid_q$4  = \$procmux$12725_Y ;
  assign \$procmux$12729_CMP  = \$3y ;
  assign \$slave_rid_q$5  = \$procmux$12728_Y ;
  assign \$2y  = rst_ni;
  assign \$3y  = slave_req_i;
endmodule

/* src = "rtl/riscv-dbg/dm_sba.sv:18.8" */
module \dm_sba$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_sba (clk_i, rst_ni, master_req_o, master_we_o, master_wdata_o, master_be_o, master_gnt_i, master_add_o, master_r_valid_i, master_r_err_i, master_r_other_err_i, master_r_rdata_i, sbaddress_o, sbaddress_i, sbdata_o, sbdata_i, dmactive_i, sbaddress_write_valid_i, sbreadonaddr_i, sbautoincrement_i, sbaccess_i
, sbreadondata_i, sbdata_read_valid_i, sbdata_write_valid_i, sbdata_valid_o, sbbusy_o, sberror_valid_o, sberror_o);
  wire \$0y ;
  wire [3:0] \$10y ;
  wire [32:0] \$11y ;
  wire [3:0] \$12y ;
  wire [3:0] \$13y ;
  wire [31:0] \$16y ;
  wire [31:0] \$17y ;
  wire [31:0] \$18y ;
  wire [31:0] \$19y ;
  wire \$21y ;
  wire \$24y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [31:0] \$59y ;
  wire \$5y ;
  wire [31:0] \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$69y ;
  wire [3:0] \$6y ;
  wire \$70y ;
  wire [1:0] \$71y ;
  wire [4:0] \$72y ;
  wire [31:0] \$73y ;
  wire [4:0] \$74y ;
  wire [31:0] \$75y ;
  wire [3:0] \$7y ;
  wire [3:0] \$8y ;
  wire [32:0] \$9y ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  wire \$addr_incr_en$34 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  wire \$addr_incr_en$42 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire \$addr_incr_en$49 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13183 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13185 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:126.9-126.42" */
  wire [3:0] \$be$26 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire [3:0] \$be$48 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:83.9-84.46" */
  wire [3:0] \$be_mask$14 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  wire [3:0] \$be_mask$15 ;
  wire [2:0] \$procmux$7381_Y ;
  wire \$procmux$7382_CMP ;
  wire \$procmux$7384_Y ;
  wire \$procmux$7385_CMP ;
  wire \$procmux$7387_Y ;
  wire \$procmux$7388_CMP ;
  wire [2:0] \$procmux$7390_Y ;
  wire \$procmux$7391_CMP ;
  wire [2:0] \$procmux$7393_Y ;
  wire \$procmux$7394_CMP ;
  wire \$procmux$7396_Y ;
  wire \$procmux$7397_CMP ;
  wire \$procmux$7399_Y ;
  wire \$procmux$7400_CMP ;
  wire [2:0] \$procmux$7402_Y ;
  wire \$procmux$7403_CMP ;
  wire [2:0] \$procmux$7405_Y ;
  wire \$procmux$7406_CMP ;
  wire [2:0] \$procmux$7408_Y ;
  wire \$procmux$7409_CMP ;
  wire [2:0] \$procmux$7410_Y ;
  wire \$procmux$7411_CMP ;
  wire [2:0] \$procmux$7412_Y ;
  wire \$procmux$7413_CMP ;
  wire \$procmux$7415_Y ;
  wire \$procmux$7416_CMP ;
  wire \$procmux$7418_Y ;
  wire \$procmux$7419_CMP ;
  wire \$procmux$7420_Y ;
  wire \$procmux$7421_CMP ;
  wire \$procmux$7422_Y ;
  wire \$procmux$7423_CMP ;
  wire [2:0] \$procmux$7427_Y ;
  wire \$procmux$7428_CMP ;
  wire [2:0] \$procmux$7429_Y ;
  wire \$procmux$7430_CMP ;
  wire [2:0] \$procmux$7431_Y ;
  wire \$procmux$7432_CMP ;
  wire \$procmux$7436_Y ;
  wire \$procmux$7437_CMP ;
  wire \$procmux$7438_Y ;
  wire \$procmux$7439_CMP ;
  wire \$procmux$7440_Y ;
  wire \$procmux$7441_CMP ;
  wire [2:0] \$procmux$7444_Y ;
  wire \$procmux$7445_CMP ;
  wire [2:0] \$procmux$7446_Y ;
  wire \$procmux$7447_CMP ;
  wire \$procmux$7450_Y ;
  wire \$procmux$7451_CMP ;
  wire \$procmux$7452_Y ;
  wire \$procmux$7453_CMP ;
  wire \$procmux$7456_Y ;
  wire \$procmux$7457_CMP ;
  wire \$procmux$7458_Y ;
  wire \$procmux$7459_CMP ;
  wire [2:0] \$procmux$7462_Y ;
  wire \$procmux$7463_CMP ;
  wire [2:0] \$procmux$7464_Y ;
  wire \$procmux$7465_CMP ;
  wire [2:0] \$procmux$7468_Y ;
  wire \$procmux$7469_CMP ;
  wire [2:0] \$procmux$7471_Y ;
  wire \$procmux$7472_CMP ;
  wire [2:0] \$procmux$7473_Y ;
  wire \$procmux$7474_CMP ;
  wire [2:0] \$procmux$7475_Y ;
  wire \$procmux$7476_CMP ;
  wire \$procmux$7479_Y ;
  wire \$procmux$7480_CMP ;
  wire \$procmux$7482_Y ;
  wire \$procmux$7483_CMP ;
  wire \$procmux$7484_Y ;
  wire \$procmux$7485_CMP ;
  wire \$procmux$7486_Y ;
  wire \$procmux$7487_CMP ;
  wire [2:0] \$procmux$7492_Y ;
  wire \$procmux$7493_CMP ;
  wire [2:0] \$procmux$7494_Y ;
  wire \$procmux$7495_CMP ;
  wire [2:0] \$procmux$7496_Y ;
  wire \$procmux$7497_CMP ;
  wire \$procmux$7502_Y ;
  wire \$procmux$7503_CMP ;
  wire \$procmux$7504_Y ;
  wire \$procmux$7505_CMP ;
  wire \$procmux$7506_Y ;
  wire \$procmux$7507_CMP ;
  wire [2:0] \$procmux$7511_Y ;
  wire \$procmux$7512_CMP ;
  wire [2:0] \$procmux$7513_Y ;
  wire \$procmux$7514_CMP ;
  wire \$procmux$7518_Y ;
  wire \$procmux$7519_CMP ;
  wire \$procmux$7520_Y ;
  wire \$procmux$7521_CMP ;
  wire \$procmux$7525_Y ;
  wire \$procmux$7526_CMP ;
  wire \$procmux$7527_Y ;
  wire \$procmux$7528_CMP ;
  wire [2:0] \$procmux$7532_Y ;
  wire \$procmux$7533_CMP ;
  wire [2:0] \$procmux$7534_Y ;
  wire \$procmux$7535_CMP ;
  wire [2:0] \$procmux$7539_Y ;
  wire \$procmux$7540_CMP ;
  wire [2:0] \$procmux$7541_Y ;
  wire \$procmux$7542_CMP ;
  wire [2:0] \$procmux$7547_Y ;
  wire \$procmux$7548_CMP ;
  wire [2:0] \$procmux$7549_Y ;
  wire \$procmux$7550_CMP ;
  wire [3:0] \$procmux$7555_Y ;
  wire \$procmux$7556_CMP ;
  wire [2:0] \$procmux$7559_Y ;
  wire \$procmux$7560_CMP ;
  wire \$procmux$7562_CMP ;
  wire \$procmux$7564_CMP ;
  wire \$procmux$7566_CMP ;
  wire \$procmux$7568_CMP ;
  wire [2:0] \$procmux$7575_Y ;
  wire \$procmux$7576_CMP ;
  wire [2:0] \$procmux$7577_Y ;
  wire \$procmux$7578_CMP ;
  wire [2:0] \$procmux$7585_Y ;
  wire \$procmux$7586_CMP ;
  wire [2:0] \$procmux$7587_Y ;
  wire \$procmux$7588_CMP ;
  wire [2:0] \$procmux$7594_Y ;
  wire \$procmux$7595_CMP ;
  wire [2:0] \$procmux$7596_Y ;
  wire \$procmux$7597_CMP ;
  wire [2:0] \$procmux$7600_Y ;
  wire \$procmux$7601_CMP ;
  wire \$procmux$7603_CMP ;
  wire \$procmux$7606_Y ;
  wire \$procmux$7607_CMP ;
  wire \$procmux$7609_CMP ;
  wire \$procmux$7612_Y ;
  wire \$procmux$7613_CMP ;
  wire \$procmux$7615_CMP ;
  wire [3:0] \$procmux$7620_Y ;
  wire \$procmux$7621_CMP ;
  wire \$procmux$7623_CMP ;
  wire \$procmux$7628_Y ;
  wire \$procmux$7629_CMP ;
  wire \$procmux$7634_Y ;
  wire \$procmux$7635_CMP ;
  wire \$procmux$7637_CMP ;
  wire [3:0] \$procmux$7640_Y ;
  wire \$procmux$7641_CMP ;
  wire [3:0] \$procmux$7643_Y ;
  wire \$procmux$7644_CMP ;
  wire \$procmux$7645_CMP ;
  wire \$procmux$7646_CMP ;
  wire \$procmux$7647_CMP ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire \$req$46 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  wire \$req$56 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  wire \$req$65 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:147.20-150.14" */
  wire [2:0] \$sberror_o$30 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  wire [2:0] \$sberror_o$32 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  wire [2:0] \$sberror_o$36 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:164.20-167.14" */
  wire [2:0] \$sberror_o$38 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  wire [2:0] \$sberror_o$40 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  wire [2:0] \$sberror_o$44 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire [2:0] \$sberror_o$51 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  wire [2:0] \$sberror_o$58 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  wire [2:0] \$sberror_o$67 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:147.20-150.14" */
  wire \$sberror_valid_o$29 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  wire \$sberror_valid_o$31 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  wire \$sberror_valid_o$35 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:164.20-167.14" */
  wire \$sberror_valid_o$37 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  wire \$sberror_valid_o$39 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  wire \$sberror_valid_o$43 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire \$sberror_valid_o$50 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  wire \$sberror_valid_o$57 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  wire \$sberror_valid_o$66 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:117.9-117.76" */
  wire [2:0] \$state_d$22 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:119.9-119.55" */
  wire [2:0] \$state_d$23 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:121.9-121.71" */
  wire [2:0] \$state_d$25 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:127.9-127.41" */
  wire [2:0] \$state_d$27 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:134.9-134.42" */
  wire [2:0] \$state_d$28 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  wire [2:0] \$state_d$33 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  wire [2:0] \$state_d$41 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire [2:0] \$state_d$45 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  wire [2:0] \$state_d$55 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  wire [2:0] \$state_d$64 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  wire \$we$47 ;
  /* src = "rtl/riscv-dbg/dm_sba.sv:95.24" */
  wire [31:0] addr_incr;
  /* src = "rtl/riscv-dbg/dm_sba.sv:94.9" */
  wire addr_incr_en;
  /* src = "rtl/riscv-dbg/dm_sba.sv:61.34" */
  wire [31:0] address;
  /* src = "rtl/riscv-dbg/dm_sba.sv:65.34" */
  wire [3:0] be;
  /* src = "rtl/riscv-dbg/dm_sba.sv:67.26" */
  wire [1:0] be_idx;
  /* src = "rtl/riscv-dbg/dm_sba.sv:200.26" */
  wire [1:0] be_idx_masked;
  /* src = "rtl/riscv-dbg/dm_sba.sv:66.34" */
  wire [3:0] be_mask;
  /* src = "rtl/riscv-dbg/dm_sba.sv:22.34" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:24.34" */
  input dmactive_i;
  wire dmactive_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:63.34" */
  wire gnt;
  /* src = "rtl/riscv-dbg/dm_sba.sv:27.34" */
  output [31:0] master_add_o;
  wire [31:0] master_add_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:30.34" */
  output [3:0] master_be_o;
  wire [3:0] master_be_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:31.34" */
  input master_gnt_i;
  wire master_gnt_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:33.34" */
  input master_r_err_i;
  wire master_r_err_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:34.34" */
  input master_r_other_err_i;
  wire master_r_other_err_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:35.34" */
  input [31:0] master_r_rdata_i;
  wire [31:0] master_r_rdata_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:32.34" */
  input master_r_valid_i;
  wire master_r_valid_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:26.34" */
  output master_req_o;
  wire master_req_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:29.34" */
  output [31:0] master_wdata_o;
  wire [31:0] master_wdata_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:28.34" */
  output master_we_o;
  wire master_we_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:62.34" */
  wire req;
  /* src = "rtl/riscv-dbg/dm_sba.sv:23.34" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dm_sba.sv:43.34" */
  input [2:0] sbaccess_i;
  wire [2:0] sbaccess_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:91.24" */
  wire [31:0] sbaccess_mask;
  /* src = "rtl/riscv-dbg/dm_sba.sv:37.34" */
  input [31:0] sbaddress_i;
  wire [31:0] sbaddress_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:41.34" */
  output [31:0] sbaddress_o;
  wire [31:0] sbaddress_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:38.34" */
  input sbaddress_write_valid_i;
  wire sbaddress_write_valid_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:42.34" */
  input sbautoincrement_i;
  wire sbautoincrement_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:53.34" */
  output sbbusy_o;
  wire sbbusy_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:46.34" */
  input [31:0] sbdata_i;
  wire [31:0] sbdata_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:50.34" */
  output [31:0] sbdata_o;
  wire [31:0] sbdata_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:47.34" */
  input sbdata_read_valid_i;
  wire sbdata_read_valid_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:51.34" */
  output sbdata_valid_o;
  wire sbdata_valid_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:48.34" */
  input sbdata_write_valid_i;
  wire sbdata_write_valid_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:55.34" */
  output [2:0] sberror_o;
  wire [2:0] sberror_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:54.34" */
  output sberror_valid_o;
  wire sberror_valid_o;
  /* src = "rtl/riscv-dbg/dm_sba.sv:40.34" */
  input sbreadonaddr_i;
  wire sbreadonaddr_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:45.34" */
  input sbreadondata_i;
  wire sbreadondata_i;
  /* src = "rtl/riscv-dbg/dm_sba.sv:59.19" */
  wire [2:0] state_d;
  /* src = "rtl/riscv-dbg/dm_sba.sv:59.28" */
  wire [2:0] state_q;
  /* src = "rtl/riscv-dbg/dm_sba.sv:64.34" */
  wire we;
  /* src = "rtl/riscv-dbg/dm_sba.sv:69.28-69.47" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(state_q),
    .Y(\$0y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:80.9-80.65" */
  \$shift  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd33),
    .Y_WIDTH(32'd4)
  ) \$10  (
    .A(2'h3),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:80.9-80.65" */
  \$neg  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd33)
  ) \$11  (
    .A({ 30'h00000000, be_idx[1], 1'h0 }),
    .Y(\$11y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:80.9-80.65" */
  \$shiftx  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd33),
    .Y_WIDTH(32'd4)
  ) \$12  (
    .A(2'h3),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:92.26-92.56" */
  \$shl  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd32)
  ) \$16  (
    .A(32'd4294967295),
    .B(sbaccess_i),
    .Y(\$16y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:96.40-96.69" */
  \$shl  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd32)
  ) \$17  (
    .A(32'd1),
    .B(sbaccess_i),
    .Y(\$17y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:96.22-96.75" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$18  (
    .A(32'd0),
    .B(\$17y ),
    .S(addr_incr_en),
    .Y(\$18y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:97.24-97.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A(sbaddress_i),
    .B(addr_incr),
    .Y(\$19y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A({ 1'h0, be_idx }),
    .B(1'h0),
    .Y(\$2y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:117.13-117.54" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(sbaddress_write_valid_i),
    .B(sbreadonaddr_i),
    .Y(\$21y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:121.13-121.50" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(sbdata_read_valid_i),
    .B(sbreadondata_i),
    .Y(\$24y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A({ 1'h0, be_idx }),
    .B(4'h4),
    .Y(\$3y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.9-175.37" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A({ 29'h00000000, sbaccess_i }),
    .B(32'd2),
    .Y(\$52y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.41-175.60" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(state_q),
    .Y(\$53y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.9-175.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.25-183.39" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$59  (
    .A(sbaccess_mask),
    .Y(\$59y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .S(be_idx),
    .Y(\$6y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.11-183.39" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$60  (
    .A(sbaddress_i),
    .B(\$59y ),
    .Y(\$60y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.9-183.40" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$60y ),
    .Y(\$61y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.44-183.63" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(state_q),
    .Y(\$62y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.9-183.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(\$61y ),
    .B(\$62y ),
    .Y(\$63y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(rst_ni),
    .Y(\$69y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.29" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$7  (
    .A(\$5y ),
    .S(be_idx),
    .Y(\$7y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:201.28-201.63" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd2)
  ) \$71  (
    .A(be_idx),
    .B(sbaccess_mask[1:0]),
    .Y(\$71y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:205.55-205.72" */
  \$mul  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd5)
  ) \$72  (
    .A(32'd8),
    .B({ 30'h00000000, be_idx_masked }),
    .Y(\$72y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:205.28-205.73" */
  \$shl  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$73  (
    .A(sbdata_i),
    .B({ 27'h0000000, \$72y  }),
    .Y(\$73y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:209.63-209.80" */
  \$mul  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd5)
  ) \$74  (
    .A(32'd8),
    .B({ 30'h00000000, be_idx_masked }),
    .Y(\$74y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:209.28-209.81" */
  \$shr  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$75  (
    .A(master_r_rdata_i),
    .B({ 27'h0000000, \$74y  }),
    .Y(\$75y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:80.9-80.65" */
  \$neg  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd33)
  ) \$9  (
    .A({ 30'h00000000, be_idx[1], 1'h0 }),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13182  (
    .A(\$12y ),
    .B(\$10y ),
    .Y(\$auto$rtlil.cc:3004:And$13183 )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:192.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$state_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.65-188.8|rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7381  (
    .A(\$sberror_o$58 ),
    .B(3'h3),
    .S(\$procmux$7382_CMP ),
    .Y(\$procmux$7381_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.65-188.8|rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7384  (
    .A(\$sberror_valid_o$57 ),
    .B(1'h1),
    .S(\$procmux$7385_CMP ),
    .Y(\$procmux$7384_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.65-188.8|rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7387  (
    .A(\$req$56 ),
    .B(1'h0),
    .S(\$procmux$7388_CMP ),
    .Y(\$procmux$7387_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:183.65-188.8|rtl/riscv-dbg/dm_sba.sv:183.5-188.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7390  (
    .A(\$state_d$55 ),
    .B(3'h0),
    .S(\$procmux$7391_CMP ),
    .Y(\$procmux$7390_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.62-180.8|rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7393  (
    .A(\$sberror_o$51 ),
    .B(3'h4),
    .S(\$procmux$7394_CMP ),
    .Y(\$procmux$7393_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.62-180.8|rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7396  (
    .A(\$sberror_valid_o$50 ),
    .B(1'h1),
    .S(\$procmux$7397_CMP ),
    .Y(\$procmux$7396_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.62-180.8|rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7399  (
    .A(\$req$46 ),
    .B(1'h0),
    .S(\$procmux$7400_CMP ),
    .Y(\$procmux$7399_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:175.62-180.8|rtl/riscv-dbg/dm_sba.sv:175.5-180.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7402  (
    .A(\$state_d$45 ),
    .B(3'h0),
    .S(\$procmux$7403_CMP ),
    .Y(\$procmux$7402_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:164.40-167.14|rtl/riscv-dbg/dm_sba.sv:164.20-167.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7405  (
    .A(3'h0),
    .B(3'h2),
    .S(\$procmux$7406_CMP ),
    .Y(\$procmux$7405_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.37-164.14|rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7408  (
    .A(\$procmux$7405_Y ),
    .B(3'hx),
    .S(\$procmux$7409_CMP ),
    .Y(\$procmux$7408_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7410  (
    .A(3'hx),
    .B(\$procmux$7408_Y ),
    .S(\$procmux$7411_CMP ),
    .Y(\$procmux$7410_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7412  (
    .A(3'hx),
    .B(\$procmux$7410_Y ),
    .S(\$procmux$7413_CMP ),
    .Y(\$procmux$7412_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7413_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7413_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:164.40-167.14|rtl/riscv-dbg/dm_sba.sv:164.20-167.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7415  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7416_CMP ),
    .Y(\$procmux$7415_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.37-164.14|rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7418  (
    .A(\$procmux$7415_Y ),
    .B(1'hx),
    .S(\$procmux$7419_CMP ),
    .Y(\$procmux$7418_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7420  (
    .A(1'hx),
    .B(\$procmux$7418_Y ),
    .S(\$procmux$7421_CMP ),
    .Y(\$procmux$7420_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7422  (
    .A(1'hx),
    .B(\$procmux$7420_Y ),
    .S(\$procmux$7423_CMP ),
    .Y(\$procmux$7422_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7423_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7423_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.37-164.14|rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7427  (
    .A(\$sberror_o$38 ),
    .B(3'h7),
    .S(\$procmux$7428_CMP ),
    .Y(\$procmux$7427_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7429  (
    .A(3'hx),
    .B(\$procmux$7427_Y ),
    .S(\$procmux$7430_CMP ),
    .Y(\$procmux$7429_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7431  (
    .A(3'hx),
    .B(\$procmux$7429_Y ),
    .S(\$procmux$7432_CMP ),
    .Y(\$procmux$7431_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7432_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7432_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:160.37-164.14|rtl/riscv-dbg/dm_sba.sv:160.11-167.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7436  (
    .A(\$sberror_valid_o$37 ),
    .B(1'h1),
    .S(\$procmux$7437_CMP ),
    .Y(\$procmux$7436_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7438  (
    .A(1'hx),
    .B(\$procmux$7436_Y ),
    .S(\$procmux$7439_CMP ),
    .Y(\$procmux$7438_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7440  (
    .A(1'hx),
    .B(\$procmux$7438_Y ),
    .S(\$procmux$7441_CMP ),
    .Y(\$procmux$7440_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7441_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7441_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7444  (
    .A(3'h0),
    .B(\$sberror_o$40 ),
    .S(\$procmux$7445_CMP ),
    .Y(\$procmux$7444_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7446  (
    .A(3'hx),
    .B(\$procmux$7444_Y ),
    .S(\$procmux$7447_CMP ),
    .Y(\$procmux$7446_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7447_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7447_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7450  (
    .A(1'h0),
    .B(\$sberror_valid_o$39 ),
    .S(\$procmux$7451_CMP ),
    .Y(\$procmux$7450_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7452  (
    .A(1'hx),
    .B(\$procmux$7450_Y ),
    .S(\$procmux$7453_CMP ),
    .Y(\$procmux$7452_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7453_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7453_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7456  (
    .A(1'h0),
    .B(sbautoincrement_i),
    .S(\$procmux$7457_CMP ),
    .Y(\$procmux$7456_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7458  (
    .A(1'hx),
    .B(\$procmux$7456_Y ),
    .S(\$procmux$7459_CMP ),
    .Y(\$procmux$7458_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7459_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7459_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.29-168.12|rtl/riscv-dbg/dm_sba.sv:155.9-168.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7462  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$7463_CMP ),
    .Y(\$procmux$7462_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7464  (
    .A(3'hx),
    .B(\$procmux$7462_Y ),
    .S(\$procmux$7465_CMP ),
    .Y(\$procmux$7464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7465_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7465_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:147.40-150.14|rtl/riscv-dbg/dm_sba.sv:147.20-150.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7468  (
    .A(3'h0),
    .B(3'h2),
    .S(\$procmux$7469_CMP ),
    .Y(\$procmux$7468_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.37-147.14|rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7471  (
    .A(\$procmux$7468_Y ),
    .B(3'hx),
    .S(\$procmux$7472_CMP ),
    .Y(\$procmux$7471_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7473  (
    .A(3'hx),
    .B(\$procmux$7471_Y ),
    .S(\$procmux$7474_CMP ),
    .Y(\$procmux$7473_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7475  (
    .A(3'hx),
    .B(\$procmux$7473_Y ),
    .S(\$procmux$7476_CMP ),
    .Y(\$procmux$7475_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7476_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7476_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:147.40-150.14|rtl/riscv-dbg/dm_sba.sv:147.20-150.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7479  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7480_CMP ),
    .Y(\$procmux$7479_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.37-147.14|rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7482  (
    .A(\$procmux$7479_Y ),
    .B(1'hx),
    .S(\$procmux$7483_CMP ),
    .Y(\$procmux$7482_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7484  (
    .A(1'hx),
    .B(\$procmux$7482_Y ),
    .S(\$procmux$7485_CMP ),
    .Y(\$procmux$7484_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7486  (
    .A(1'hx),
    .B(\$procmux$7484_Y ),
    .S(\$procmux$7487_CMP ),
    .Y(\$procmux$7486_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7487_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7487_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.37-147.14|rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7492  (
    .A(\$sberror_o$30 ),
    .B(3'h7),
    .S(\$procmux$7493_CMP ),
    .Y(\$procmux$7492_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7494  (
    .A(3'hx),
    .B(\$procmux$7492_Y ),
    .S(\$procmux$7495_CMP ),
    .Y(\$procmux$7494_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7496  (
    .A(3'hx),
    .B(\$procmux$7494_Y ),
    .S(\$procmux$7497_CMP ),
    .Y(\$procmux$7496_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7497_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7497_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:143.37-147.14|rtl/riscv-dbg/dm_sba.sv:143.11-150.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7502  (
    .A(\$sberror_valid_o$29 ),
    .B(1'h1),
    .S(\$procmux$7503_CMP ),
    .Y(\$procmux$7502_Y )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7504  (
    .A(1'hx),
    .B(\$procmux$7502_Y ),
    .S(\$procmux$7505_CMP ),
    .Y(\$procmux$7504_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7506  (
    .A(1'hx),
    .B(\$procmux$7504_Y ),
    .S(\$procmux$7507_CMP ),
    .Y(\$procmux$7506_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7507_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7507_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7511  (
    .A(3'h0),
    .B(\$sberror_o$32 ),
    .S(\$procmux$7512_CMP ),
    .Y(\$procmux$7511_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7513  (
    .A(3'hx),
    .B(\$procmux$7511_Y ),
    .S(\$procmux$7514_CMP ),
    .Y(\$procmux$7513_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7514_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7514_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7518  (
    .A(1'h0),
    .B(\$sberror_valid_o$31 ),
    .S(\$procmux$7519_CMP ),
    .Y(\$procmux$7518_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7520  (
    .A(1'hx),
    .B(\$procmux$7518_Y ),
    .S(\$procmux$7521_CMP ),
    .Y(\$procmux$7520_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7521_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7521_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7525  (
    .A(1'h0),
    .B(sbautoincrement_i),
    .S(\$procmux$7526_CMP ),
    .Y(\$procmux$7525_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7527  (
    .A(1'hx),
    .B(\$procmux$7525_Y ),
    .S(\$procmux$7528_CMP ),
    .Y(\$procmux$7527_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7528_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7528_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.29-151.12|rtl/riscv-dbg/dm_sba.sv:138.9-151.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7532  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$7533_CMP ),
    .Y(\$procmux$7532_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7534  (
    .A(3'hx),
    .B(\$procmux$7532_Y ),
    .S(\$procmux$7535_CMP ),
    .Y(\$procmux$7534_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7535_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7535_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:134.18-134.42|rtl/riscv-dbg/dm_sba.sv:134.9-134.42" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7539  (
    .A(state_q),
    .B(3'h4),
    .S(\$procmux$7540_CMP ),
    .Y(\$procmux$7539_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7541  (
    .A(3'hx),
    .B(\$procmux$7539_Y ),
    .S(\$procmux$7542_CMP ),
    .Y(\$procmux$7541_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7542_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$7542_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:127.18-127.41|rtl/riscv-dbg/dm_sba.sv:127.9-127.41" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7547  (
    .A(state_q),
    .B(3'h3),
    .S(\$procmux$7548_CMP ),
    .Y(\$procmux$7547_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7549  (
    .A(3'hx),
    .B(\$procmux$7547_Y ),
    .S(\$procmux$7550_CMP ),
    .Y(\$procmux$7549_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7550_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$7550_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$7555  (
    .A(4'hx),
    .B(\$be_mask$15 ),
    .S(\$procmux$7556_CMP ),
    .Y(\$procmux$7555_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7556_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$7556_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$7559  (
    .A(3'h0),
    .B({ \$state_d$25 , \$state_d$27 , \$state_d$28 , \$state_d$33 , \$state_d$41  }),
    .S({ \$procmux$7568_CMP , \$procmux$7566_CMP , \$procmux$7564_CMP , \$procmux$7562_CMP , \$procmux$7560_CMP  }),
    .Y(\$procmux$7559_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7560_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7560_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7562_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7562_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7564_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$7564_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7566_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$7566_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7568_CMP0  (
    .A(state_q),
    .Y(\$procmux$7568_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:121.52-121.71|rtl/riscv-dbg/dm_sba.sv:121.9-121.71" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7575  (
    .A(\$state_d$23 ),
    .B(3'h1),
    .S(\$procmux$7576_CMP ),
    .Y(\$procmux$7575_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7577  (
    .A(3'hx),
    .B(\$procmux$7575_Y ),
    .S(\$procmux$7578_CMP ),
    .Y(\$procmux$7577_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7578_CMP0  (
    .A(state_q),
    .Y(\$procmux$7578_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:119.35-119.55|rtl/riscv-dbg/dm_sba.sv:119.9-119.55" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7585  (
    .A(\$state_d$22 ),
    .B(3'h2),
    .S(\$procmux$7586_CMP ),
    .Y(\$procmux$7585_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7587  (
    .A(3'hx),
    .B(\$procmux$7585_Y ),
    .S(\$procmux$7588_CMP ),
    .Y(\$procmux$7587_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7588_CMP0  (
    .A(state_q),
    .Y(\$procmux$7588_CMP )
  );
  /* src = "rtl/riscv-dbg/dm_sba.sv:117.57-117.76|rtl/riscv-dbg/dm_sba.sv:117.9-117.76" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7594  (
    .A(state_q),
    .B(3'h1),
    .S(\$procmux$7595_CMP ),
    .Y(\$procmux$7594_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$7596  (
    .A(3'hx),
    .B(\$procmux$7594_Y ),
    .S(\$procmux$7597_CMP ),
    .Y(\$procmux$7596_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:115.17-122.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7597_CMP0  (
    .A(state_q),
    .Y(\$procmux$7597_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd3)
  ) \$procmux$7600  (
    .A(3'h0),
    .B({ \$sberror_o$36 , \$sberror_o$44  }),
    .S({ \$procmux$7603_CMP , \$procmux$7601_CMP  }),
    .Y(\$procmux$7600_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7601_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7601_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7603_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7603_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$7606  (
    .A(1'h0),
    .B({ \$sberror_valid_o$35 , \$sberror_valid_o$43  }),
    .S({ \$procmux$7609_CMP , \$procmux$7607_CMP  }),
    .Y(\$procmux$7606_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7607_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7607_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7609_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7609_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$7612  (
    .A(1'h0),
    .B({ \$addr_incr_en$34 , \$addr_incr_en$42  }),
    .S({ \$procmux$7615_CMP , \$procmux$7613_CMP  }),
    .Y(\$procmux$7612_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:155.9-168.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7613_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$7613_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:138.9-151.12|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7615_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$7615_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd4)
  ) \$procmux$7620  (
    .A(4'h0),
    .B({ \$be$26 , \$be_mask$15  }),
    .S({ \$procmux$7623_CMP , \$procmux$7621_CMP  }),
    .Y(\$procmux$7620_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7621_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$7621_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7623_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$7623_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$7628  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$7629_CMP ),
    .Y(\$procmux$7628_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7629_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$7629_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$7634  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$7637_CMP , \$procmux$7635_CMP  }),
    .Y(\$procmux$7634_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:130.18-135.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7635_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$7635_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:124.17-128.10|rtl/riscv-dbg/dm_sba.sv:114.5-172.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7637_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$7637_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:83.9-84.46|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$7640  (
    .A(4'hx),
    .B(4'hf),
    .S(\$procmux$7641_CMP ),
    .Y(\$procmux$7640_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:83.9-84.46|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7641_CMP0  (
    .A(sbaccess_i),
    .B(3'h2),
    .Y(\$procmux$7641_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:86.15-86.28|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$pmux  #(
    .S_WIDTH(32'd4),
    .WIDTH(32'd4)
  ) \$procmux$7643  (
    .A(4'h0),
    .B({ \$8y , \$13y , \$be_mask$14 , 4'hf }),
    .S({ \$procmux$7647_CMP , \$procmux$7646_CMP , \$procmux$7645_CMP , \$procmux$7644_CMP  }),
    .Y(\$procmux$7643_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:86.15-86.28|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7644_CMP0  (
    .A(sbaccess_i),
    .B(3'h3),
    .Y(\$procmux$7644_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:83.9-84.46|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7645_CMP0  (
    .A(sbaccess_i),
    .B(3'h2),
    .Y(\$procmux$7645_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:80.9-80.66|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7646_CMP0  (
    .A(sbaccess_i),
    .B(3'h1),
    .Y(\$procmux$7646_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dm_sba.sv:77.9-77.30|rtl/riscv-dbg/dm_sba.sv:75.5-88.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$7647_CMP0  (
    .A(sbaccess_i),
    .Y(\$procmux$7647_CMP )
  );
  assign sbbusy_o = \$0y ;
  assign be_mask = \$be_mask$15 ;
  assign sbaccess_mask = \$16y ;
  assign addr_incr = \$18y ;
  assign sbaddress_o = \$19y ;
  assign state_d = \$state_d$64 ;
  assign address = sbaddress_i;
  assign req = \$req$65 ;
  assign we = \$we$47 ;
  assign be = \$be$48 ;
  assign be_idx = sbaddress_i[1:0];
  assign addr_incr_en = \$addr_incr_en$49 ;
  assign sberror_valid_o = \$sberror_valid_o$66 ;
  assign sberror_o = \$sberror_o$67 ;
  assign be_idx_masked = \$71y ;
  assign master_req_o = req;
  assign master_add_o = address;
  assign master_we_o = we;
  assign master_wdata_o = \$73y ;
  assign master_be_o = be;
  assign gnt = master_gnt_i;
  assign sbdata_valid_o = master_r_valid_i;
  assign sbdata_o = \$75y ;
  assign \$procmux$7382_CMP  = \$63y ;
  assign \$sberror_o$67  = \$procmux$7381_Y ;
  assign \$procmux$7385_CMP  = \$63y ;
  assign \$sberror_valid_o$66  = \$procmux$7384_Y ;
  assign \$procmux$7388_CMP  = \$63y ;
  assign \$req$65  = \$procmux$7387_Y ;
  assign \$procmux$7391_CMP  = \$63y ;
  assign \$state_d$64  = \$procmux$7390_Y ;
  assign \$procmux$7394_CMP  = \$54y ;
  assign \$sberror_o$58  = \$procmux$7393_Y ;
  assign \$procmux$7397_CMP  = \$54y ;
  assign \$sberror_valid_o$57  = \$procmux$7396_Y ;
  assign \$procmux$7400_CMP  = \$54y ;
  assign \$req$56  = \$procmux$7399_Y ;
  assign \$procmux$7403_CMP  = \$54y ;
  assign \$state_d$55  = \$procmux$7402_Y ;
  assign \$procmux$7406_CMP  = master_r_err_i;
  assign \$procmux$7409_CMP  = master_r_other_err_i;
  assign \$procmux$7411_CMP  = sbdata_valid_o;
  assign \$sberror_o$38  = \$procmux$7412_Y ;
  assign \$procmux$7416_CMP  = master_r_err_i;
  assign \$procmux$7419_CMP  = master_r_other_err_i;
  assign \$procmux$7421_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$37  = \$procmux$7422_Y ;
  assign \$procmux$7428_CMP  = master_r_other_err_i;
  assign \$procmux$7430_CMP  = sbdata_valid_o;
  assign \$sberror_o$40  = \$procmux$7431_Y ;
  assign \$procmux$7437_CMP  = master_r_other_err_i;
  assign \$procmux$7439_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$39  = \$procmux$7440_Y ;
  assign \$procmux$7445_CMP  = sbdata_valid_o;
  assign \$sberror_o$44  = \$procmux$7446_Y ;
  assign \$procmux$7451_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$43  = \$procmux$7452_Y ;
  assign \$procmux$7457_CMP  = sbdata_valid_o;
  assign \$addr_incr_en$42  = \$procmux$7458_Y ;
  assign \$procmux$7463_CMP  = sbdata_valid_o;
  assign \$state_d$41  = \$procmux$7464_Y ;
  assign \$procmux$7469_CMP  = master_r_err_i;
  assign \$procmux$7472_CMP  = master_r_other_err_i;
  assign \$procmux$7474_CMP  = sbdata_valid_o;
  assign \$sberror_o$30  = \$procmux$7475_Y ;
  assign \$procmux$7480_CMP  = master_r_err_i;
  assign \$procmux$7483_CMP  = master_r_other_err_i;
  assign \$procmux$7485_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$29  = \$procmux$7486_Y ;
  assign \$procmux$7493_CMP  = master_r_other_err_i;
  assign \$procmux$7495_CMP  = sbdata_valid_o;
  assign \$sberror_o$32  = \$procmux$7496_Y ;
  assign \$procmux$7503_CMP  = master_r_other_err_i;
  assign \$procmux$7505_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$31  = \$procmux$7506_Y ;
  assign \$procmux$7512_CMP  = sbdata_valid_o;
  assign \$sberror_o$36  = \$procmux$7513_Y ;
  assign \$procmux$7519_CMP  = sbdata_valid_o;
  assign \$sberror_valid_o$35  = \$procmux$7520_Y ;
  assign \$procmux$7526_CMP  = sbdata_valid_o;
  assign \$addr_incr_en$34  = \$procmux$7527_Y ;
  assign \$procmux$7533_CMP  = sbdata_valid_o;
  assign \$state_d$33  = \$procmux$7534_Y ;
  assign \$procmux$7540_CMP  = gnt;
  assign \$state_d$28  = \$procmux$7541_Y ;
  assign \$procmux$7548_CMP  = gnt;
  assign \$state_d$27  = \$procmux$7549_Y ;
  assign \$be$26  = \$procmux$7555_Y ;
  assign \$state_d$45  = \$procmux$7559_Y ;
  assign \$procmux$7576_CMP  = \$24y ;
  assign \$state_d$25  = \$procmux$7577_Y ;
  assign \$procmux$7586_CMP  = sbdata_write_valid_i;
  assign \$state_d$23  = \$procmux$7587_Y ;
  assign \$procmux$7595_CMP  = \$21y ;
  assign \$state_d$22  = \$procmux$7596_Y ;
  assign \$sberror_o$51  = \$procmux$7600_Y ;
  assign \$sberror_valid_o$50  = \$procmux$7606_Y ;
  assign \$addr_incr_en$49  = \$procmux$7612_Y ;
  assign \$be$48  = \$procmux$7620_Y ;
  assign \$we$47  = \$procmux$7628_Y ;
  assign \$req$46  = \$procmux$7634_Y ;
  assign \$be_mask$14  = \$procmux$7640_Y ;
  assign \$be_mask$15  = \$procmux$7643_Y ;
  assign \$13y  = \$auto$rtlil.cc:3004:And$13183 ;
  assign \$70y  = rst_ni;
  assign \$8y  = \$auto$rtlil.cc:3004:And$13185 ;
  assign \$auto$rtlil.cc:3004:And$13185  = \$7y ;
endmodule

/* src = "rtl/riscv-dbg/dm_top.sv:20.8" */
module \dm_top$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top (clk_i, rst_ni, testmode_i, debug_req_o, unavailable_i, hartinfo_i, slave_req_i, slave_we_i, slave_addr_i, slave_be_i, slave_wdata_i, slave_rdata_o, master_req_o, master_we_o, master_wdata_o, master_be_o, master_gnt_i, dmi_rst_ni, dmi_req_valid_i, dmi_req_ready_o, dmi_req_i
, dmi_resp_valid_o, dmi_resp_ready_i, dmi_resp_o, ndmreset_o, dmactive_o, next_dm_addr_i, ndmreset_ack_i, master_add_o, master_r_valid_i, master_r_err_i, master_r_other_err_i, master_r_rdata_i);
  /* src = "rtl/riscv-dbg/dm_top.sv:85.37" */
  wire clear_resumeack;
  /* src = "rtl/riscv-dbg/dm_top.sv:30.33" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:87.37" */
  wire [31:0] cmd;
  /* src = "rtl/riscv-dbg/dm_top.sv:86.37" */
  wire cmd_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:91.37" */
  wire cmdbusy;
  /* src = "rtl/riscv-dbg/dm_top.sv:90.37" */
  wire [2:0] cmderror;
  /* src = "rtl/riscv-dbg/dm_top.sv:89.37" */
  wire cmderror_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:93.37" */
  wire [63:0] data_csrs_mem;
  /* src = "rtl/riscv-dbg/dm_top.sv:94.37" */
  wire [63:0] data_mem_csrs;
  /* src = "rtl/riscv-dbg/dm_top.sv:95.37" */
  wire data_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:43.33" */
  output debug_req_o;
  wire debug_req_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:42.33" */
  output dmactive_o;
  wire dmactive_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:72.33" */
  input [40:0] dmi_req_i;
  wire [40:0] dmi_req_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:71.33" */
  output dmi_req_ready_o;
  wire dmi_req_ready_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:70.33" */
  input dmi_req_valid_i;
  wire dmi_req_valid_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:76.33" */
  output [33:0] dmi_resp_o;
  wire [33:0] dmi_resp_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:75.33" */
  input dmi_resp_ready_i;
  wire dmi_resp_ready_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:74.33" */
  output dmi_resp_valid_o;
  wire dmi_resp_valid_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:67.33" */
  input dmi_rst_ni;
  wire dmi_rst_ni;
  /* src = "rtl/riscv-dbg/dm_top.sv:80.37" */
  wire halted;
  /* src = "rtl/riscv-dbg/dm_top.sv:83.37" */
  wire haltreq;
  /* src = "rtl/riscv-dbg/dm_top.sv:46.39" */
  input [31:0] hartinfo_i;
  wire [31:0] hartinfo_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:97.37" */
  wire [19:0] hartsel;
  /* src = "rtl/riscv-dbg/dm_top.sv:56.33" */
  output [31:0] master_add_o;
  wire [31:0] master_add_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:59.33" */
  output [3:0] master_be_o;
  wire [3:0] master_be_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:60.33" */
  input master_gnt_i;
  wire master_gnt_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:62.33" */
  input master_r_err_i;
  wire master_r_err_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:63.33" */
  input master_r_other_err_i;
  wire master_r_other_err_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:64.33" */
  input [31:0] master_r_rdata_i;
  wire [31:0] master_r_rdata_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:61.33" */
  input master_r_valid_i;
  wire master_r_valid_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:55.33" */
  output master_req_o;
  wire master_req_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:58.33" */
  output [31:0] master_wdata_o;
  wire [31:0] master_wdata_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:57.33" */
  output master_we_o;
  wire master_we_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:96.37" */
  wire ndmreset;
  /* src = "rtl/riscv-dbg/dm_top.sv:41.33" */
  input ndmreset_ack_i;
  wire ndmreset_ack_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:40.33" */
  output ndmreset_o;
  wire ndmreset_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:38.33" */
  input [31:0] next_dm_addr_i;
  wire [31:0] next_dm_addr_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:92.37" */
  wire [255:0] progbuf;
  /* src = "rtl/riscv-dbg/dm_top.sv:82.37" */
  wire resumeack;
  /* src = "rtl/riscv-dbg/dm_top.sv:84.37" */
  wire resumereq;
  /* src = "rtl/riscv-dbg/dm_top.sv:32.33" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dm_top.sv:104.37" */
  wire [2:0] sbaccess;
  /* src = "rtl/riscv-dbg/dm_top.sv:99.37" */
  wire [31:0] sbaddress_csrs_sba;
  /* src = "rtl/riscv-dbg/dm_top.sv:100.37" */
  wire [31:0] sbaddress_sba_csrs;
  /* src = "rtl/riscv-dbg/dm_top.sv:101.37" */
  wire sbaddress_write_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:103.37" */
  wire sbautoincrement;
  /* src = "rtl/riscv-dbg/dm_top.sv:111.37" */
  wire sbbusy;
  /* src = "rtl/riscv-dbg/dm_top.sv:109.37" */
  wire [31:0] sbdata_read;
  /* src = "rtl/riscv-dbg/dm_top.sv:107.37" */
  wire sbdata_read_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:110.37" */
  wire sbdata_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:106.37" */
  wire [31:0] sbdata_write;
  /* src = "rtl/riscv-dbg/dm_top.sv:108.37" */
  wire sbdata_write_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:113.37" */
  wire [2:0] sberror;
  /* src = "rtl/riscv-dbg/dm_top.sv:112.37" */
  wire sberror_valid;
  /* src = "rtl/riscv-dbg/dm_top.sv:102.37" */
  wire sbreadonaddr;
  /* src = "rtl/riscv-dbg/dm_top.sv:105.37" */
  wire sbreadondata;
  /* src = "rtl/riscv-dbg/dm_top.sv:50.33" */
  input [31:0] slave_addr_i;
  wire [31:0] slave_addr_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:51.33" */
  input [3:0] slave_be_i;
  wire [3:0] slave_be_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:53.33" */
  output [31:0] slave_rdata_o;
  wire [31:0] slave_rdata_o;
  /* src = "rtl/riscv-dbg/dm_top.sv:48.33" */
  input slave_req_i;
  wire slave_req_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:52.33" */
  input [31:0] slave_wdata_i;
  wire [31:0] slave_wdata_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:49.33" */
  input slave_we_i;
  wire slave_we_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:39.33" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:45.33" */
  input unavailable_i;
  wire unavailable_i;
  /* src = "rtl/riscv-dbg/dm_top.sv:121.5" */
  \dm_csrs$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_csrs  i_dm_csrs (
    .clear_resumeack_o(clear_resumeack),
    .clk_i(clk_i),
    .cmd_o(cmd),
    .cmd_valid_o(cmd_valid),
    .cmdbusy_i(cmdbusy),
    .cmderror_i(cmderror),
    .cmderror_valid_i(cmderror_valid),
    .data_i(data_mem_csrs),
    .data_o(data_csrs_mem),
    .data_valid_i(data_valid),
    .dmactive_o(dmactive_o),
    .dmi_req_i(dmi_req_i),
    .dmi_req_ready_o(dmi_req_ready_o),
    .dmi_req_valid_i(dmi_req_valid_i),
    .dmi_resp_o(dmi_resp_o),
    .dmi_resp_ready_i(dmi_resp_ready_i),
    .dmi_resp_valid_o(dmi_resp_valid_o),
    .dmi_rst_ni(dmi_rst_ni),
    .halted_i(halted),
    .haltreq_o(haltreq),
    .hartinfo_i(hartinfo_i),
    .hartsel_o(hartsel),
    .ndmreset_ack_i(ndmreset_ack_i),
    .ndmreset_o(ndmreset),
    .next_dm_addr_i(next_dm_addr_i),
    .progbuf_o(progbuf),
    .resumeack_i(resumeack),
    .resumereq_o(resumereq),
    .rst_ni(rst_ni),
    .sbaccess_o(sbaccess),
    .sbaddress_i(sbaddress_sba_csrs),
    .sbaddress_o(sbaddress_csrs_sba),
    .sbaddress_write_valid_o(sbaddress_write_valid),
    .sbautoincrement_o(sbautoincrement),
    .sbbusy_i(sbbusy),
    .sbdata_i(sbdata_read),
    .sbdata_o(sbdata_write),
    .sbdata_read_valid_o(sbdata_read_valid),
    .sbdata_valid_i(sbdata_valid),
    .sbdata_write_valid_o(sbdata_write_valid),
    .sberror_i(sberror),
    .sberror_valid_i(sberror_valid),
    .sbreadonaddr_o(sbreadonaddr),
    .sbreadondata_o(sbreadondata),
    .testmode_i(testmode_i),
    .unavailable_i(unavailable_i)
  );
  /* src = "rtl/riscv-dbg/dm_top.sv:211.5" */
  \dm_mem$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_mem  i_dm_mem (
    .addr_i(slave_addr_i),
    .be_i(slave_be_i),
    .clear_resumeack_i(clear_resumeack),
    .clk_i(clk_i),
    .cmd_i(cmd),
    .cmd_valid_i(cmd_valid),
    .cmdbusy_o(cmdbusy),
    .cmderror_o(cmderror),
    .cmderror_valid_o(cmderror_valid),
    .data_i(data_csrs_mem),
    .data_o(data_mem_csrs),
    .data_valid_o(data_valid),
    .debug_req_o(debug_req_o),
    .halted_o(halted),
    .haltreq_i(haltreq),
    .hartsel_i(hartsel),
    .ndmreset_i(ndmreset),
    .progbuf_i(progbuf),
    .rdata_o(slave_rdata_o),
    .req_i(slave_req_i),
    .resumereq_i(resumereq),
    .resuming_o(resumeack),
    .rst_ni(rst_ni),
    .wdata_i(slave_wdata_i),
    .we_i(slave_we_i)
  );
  /* src = "rtl/riscv-dbg/dm_top.sv:173.5" */
  \dm_sba$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_sba  i_dm_sba (
    .clk_i(clk_i),
    .dmactive_i(dmactive_o),
    .master_add_o(master_add_o),
    .master_be_o(master_be_o),
    .master_gnt_i(master_gnt_i),
    .master_r_err_i(master_r_err_i),
    .master_r_other_err_i(master_r_other_err_i),
    .master_r_rdata_i(master_r_rdata_i),
    .master_r_valid_i(master_r_valid_i),
    .master_req_o(master_req_o),
    .master_wdata_o(master_wdata_o),
    .master_we_o(master_we_o),
    .rst_ni(rst_ni),
    .sbaccess_i(sbaccess),
    .sbaddress_i(sbaddress_csrs_sba),
    .sbaddress_o(sbaddress_sba_csrs),
    .sbaddress_write_valid_i(sbaddress_write_valid),
    .sbautoincrement_i(sbautoincrement),
    .sbbusy_o(sbbusy),
    .sbdata_i(sbdata_write),
    .sbdata_o(sbdata_read),
    .sbdata_read_valid_i(sbdata_read_valid),
    .sbdata_valid_o(sbdata_valid),
    .sbdata_write_valid_i(sbdata_write_valid),
    .sberror_o(sberror),
    .sberror_valid_o(sberror_valid),
    .sbreadonaddr_i(sbreadonaddr),
    .sbreadondata_i(sbreadondata)
  );
  assign ndmreset_o = ndmreset;
endmodule

/* src = "rtl/riscv-dbg/dmi_cdc.sv:19.8" */
module \dmi_cdc$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc (clk_i, rst_ni, tck_i, trst_ni, jtag_dmi_req_i, jtag_dmi_ready_o, jtag_dmi_valid_i, jtag_dmi_cdc_clear_i, jtag_dmi_resp_o, jtag_dmi_valid_o, jtag_dmi_ready_i, core_dmi_rst_no, core_dmi_req_o, core_dmi_valid_o, core_dmi_ready_i, core_dmi_resp_i, core_dmi_ready_o, core_dmi_valid_i);
  wire \$0y ;
  wire \$1y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:98.28" */
  wire clear_pending_rise_edge_detect;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:35.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:48.28" */
  wire core_clear_pending;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:96.28" */
  wire core_clear_pending_q;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:41.28" */
  input core_dmi_ready_i;
  wire core_dmi_ready_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:44.28" */
  output core_dmi_ready_o;
  wire core_dmi_ready_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:39.28" */
  output [40:0] core_dmi_req_o;
  wire [40:0] core_dmi_req_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:43.28" */
  input [33:0] core_dmi_resp_i;
  wire [33:0] core_dmi_resp_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:38.28" */
  output core_dmi_rst_no;
  wire core_dmi_rst_no;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:97.28" */
  wire core_dmi_rst_nq;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:45.28" */
  input core_dmi_valid_i;
  wire core_dmi_valid_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:40.28" */
  output core_dmi_valid_o;
  wire core_dmi_valid_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:26.28" */
  input jtag_dmi_cdc_clear_i;
  wire jtag_dmi_cdc_clear_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:32.28" */
  input jtag_dmi_ready_i;
  wire jtag_dmi_ready_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:24.28" */
  output jtag_dmi_ready_o;
  wire jtag_dmi_ready_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:23.28" */
  input [40:0] jtag_dmi_req_i;
  wire [40:0] jtag_dmi_req_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:30.28" */
  output [33:0] jtag_dmi_resp_o;
  wire [33:0] jtag_dmi_resp_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:25.28" */
  input jtag_dmi_valid_i;
  wire jtag_dmi_valid_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:31.28" */
  output jtag_dmi_valid_o;
  wire jtag_dmi_valid_o;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:36.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:21.28" */
  input tck_i;
  wire tck_i;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:22.28" */
  input trst_ni;
  wire trst_ni;
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:100.43-100.64" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(core_clear_pending_q),
    .Y(\$0y )
  );
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:100.43-100.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\$0y ),
    .B(core_clear_pending),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(rst_ni),
    .Y(\$3y )
  );
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:107.32-107.63" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(clear_pending_rise_edge_detect),
    .Y(\$5y )
  );
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_clear_pending_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(core_clear_pending),
    .Q(core_clear_pending_q)
  );
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:102.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$core_dmi_rst_nq  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$5y ),
    .Q(core_dmi_rst_nq)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:50.45" */
  \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req  i_cdc_req (
    .dst_clear_i(1'h0),
    .dst_clear_pending_o(core_clear_pending),
    .dst_clk_i(clk_i),
    .dst_data_o(core_dmi_req_o),
    .dst_ready_i(core_dmi_ready_i),
    .dst_rst_ni(rst_ni),
    .dst_valid_o(core_dmi_valid_o),
    .src_clear_i(jtag_dmi_cdc_clear_i),
    .src_clk_i(tck_i),
    .src_data_i(jtag_dmi_req_i),
    .src_ready_o(jtag_dmi_ready_o),
    .src_rst_ni(trst_ni),
    .src_valid_i(jtag_dmi_valid_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_cdc.sv:72.46" */
  \cdc_2phase_clearable$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp  i_cdc_resp (
    .dst_clear_i(jtag_dmi_cdc_clear_i),
    .dst_clk_i(tck_i),
    .dst_data_o(jtag_dmi_resp_o),
    .dst_ready_i(jtag_dmi_ready_i),
    .dst_rst_ni(trst_ni),
    .dst_valid_o(jtag_dmi_valid_o),
    .src_clear_i(1'h0),
    .src_clk_i(clk_i),
    .src_data_i(core_dmi_resp_i),
    .src_ready_o(core_dmi_ready_o),
    .src_rst_ni(rst_ni),
    .src_valid_i(core_dmi_valid_i)
  );
  assign clear_pending_rise_edge_detect = \$1y ;
  assign core_dmi_rst_no = core_dmi_rst_nq;
  assign \$4y  = rst_ni;
endmodule

/* src = "rtl/riscv-dbg/dmi_jtag.sv:19.8" */
module \dmi_jtag$croc_chip.i_croc_soc.i_croc.i_dmi_jtag (clk_i, rst_ni, testmode_i, dmi_rst_no, dmi_req_o, dmi_req_valid_o, dmi_req_ready_i, dmi_resp_i, dmi_resp_ready_o, dmi_resp_valid_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire [1:0] \$13y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$2y ;
  wire \$46y ;
  wire \$47y ;
  wire \$49y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$54y ;
  wire \$55y ;
  wire \$57y ;
  wire \$58y ;
  wire \$60y ;
  wire \$61y ;
  wire [31:0] \$6y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire \$84y ;
  wire \$85y ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  wire [6:0] \$address_d$23 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire [6:0] \$address_d$42 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire [6:0] \$address_d$66 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  wire [31:0] \$data_d$24 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  wire [31:0] \$data_d$26 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  wire [31:0] \$data_d$30 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire [31:0] \$data_d$43 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire [31:0] \$data_d$67 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire \$dmi_req_valid$40 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire \$dmi_req_valid$64 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:272.20-274.14" */
  wire [40:0] \$dr_d$76 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14" */
  wire [40:0] \$dr_d$77 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12" */
  wire [40:0] \$dr_d$78 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:267.7-276.10" */
  wire [40:0] \$dr_d$79 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:279.9-281.12" */
  wire [40:0] \$dr_d$80 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:278.7-282.10" */
  wire [40:0] \$dr_d$81 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  wire [40:0] \$dr_d$82 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:74.7-85.10" */
  wire [31:0] \$dtmcs_d$4 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:73.5-86.8" */
  wire [31:0] \$dtmcs_d$5 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:89.7-89.61" */
  wire [31:0] \$dtmcs_d$7 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:88.5-90.8" */
  wire [31:0] \$dtmcs_d$8 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:244.7-246.10" */
  wire [1:0] \$error_d$56 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:248.7-250.10" */
  wire [1:0] \$error_d$59 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:253.7-255.10" */
  wire [1:0] \$error_d$62 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire [1:0] \$error_d$63 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  wire \$error_dmi_busy$27 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  wire \$error_dmi_busy$31 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  wire \$error_dmi_busy$34 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  wire \$error_dmi_busy$37 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire \$error_dmi_busy$44 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:233.7-235.10" */
  wire \$error_dmi_busy$48 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:240.7-242.10" */
  wire \$error_dmi_busy$53 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire \$error_dmi_busy$68 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  wire \$error_dmi_op_failed$28 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  wire \$error_dmi_op_failed$32 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  wire \$error_dmi_op_failed$35 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  wire \$error_dmi_op_failed$38 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire \$error_dmi_op_failed$45 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire \$error_dmi_op_failed$69 ;
  wire [1:0] \$procmux$12731_Y ;
  wire \$procmux$12732_CMP ;
  wire [1:0] \$procmux$12734_Y ;
  wire \$procmux$12735_CMP ;
  wire [1:0] \$procmux$12737_Y ;
  wire \$procmux$12738_CMP ;
  wire [1:0] \$procmux$12740_Y ;
  wire \$procmux$12741_CMP ;
  wire [1:0] \$procmux$12743_Y ;
  wire \$procmux$12744_CMP ;
  wire [1:0] \$procmux$12746_Y ;
  wire \$procmux$12747_CMP ;
  wire \$procmux$12749_Y ;
  wire \$procmux$12750_CMP ;
  wire \$procmux$12752_Y ;
  wire \$procmux$12753_CMP ;
  wire \$procmux$12755_Y ;
  wire \$procmux$12756_CMP ;
  wire \$procmux$12758_Y ;
  wire \$procmux$12759_CMP ;
  wire [2:0] \$procmux$12760_Y ;
  wire \$procmux$12761_CMP ;
  wire [2:0] \$procmux$12763_Y ;
  wire \$procmux$12764_CMP ;
  wire \$procmux$12765_CMP ;
  wire \$procmux$12766_CMP ;
  wire \$procmux$12767_CMP ;
  wire \$procmux$12768_CMP ;
  wire [2:0] \$procmux$12770_Y ;
  wire \$procmux$12771_CMP ;
  wire \$procmux$12775_Y ;
  wire \$procmux$12776_CMP ;
  wire \$procmux$12777_Y ;
  wire \$procmux$12778_CMP ;
  wire \$procmux$12779_Y ;
  wire \$procmux$12780_CMP ;
  wire \$procmux$12782_Y ;
  wire \$procmux$12783_CMP ;
  wire \$procmux$12786_Y ;
  wire \$procmux$12787_CMP ;
  wire \$procmux$12788_Y ;
  wire \$procmux$12789_CMP ;
  wire \$procmux$12790_Y ;
  wire \$procmux$12791_CMP ;
  wire \$procmux$12793_Y ;
  wire \$procmux$12794_CMP ;
  wire \$procmux$12797_Y ;
  wire \$procmux$12798_CMP ;
  wire \$procmux$12799_Y ;
  wire \$procmux$12800_CMP ;
  wire \$procmux$12802_Y ;
  wire \$procmux$12803_CMP ;
  wire \$procmux$12806_Y ;
  wire \$procmux$12807_CMP ;
  wire \$procmux$12808_Y ;
  wire \$procmux$12809_CMP ;
  wire \$procmux$12811_Y ;
  wire \$procmux$12812_CMP ;
  wire [2:0] \$procmux$12815_Y ;
  wire \$procmux$12816_CMP ;
  wire [2:0] \$procmux$12817_Y ;
  wire \$procmux$12818_CMP ;
  wire [2:0] \$procmux$12820_Y ;
  wire \$procmux$12821_CMP ;
  wire [2:0] \$procmux$12824_Y ;
  wire \$procmux$12825_CMP ;
  wire [2:0] \$procmux$12826_Y ;
  wire \$procmux$12827_CMP ;
  wire [2:0] \$procmux$12829_Y ;
  wire \$procmux$12830_CMP ;
  wire [31:0] \$procmux$12835_Y ;
  wire \$procmux$12836_CMP ;
  wire \$procmux$12837_CMP ;
  wire \$procmux$12838_CMP ;
  wire [31:0] \$procmux$12839_Y ;
  wire \$procmux$12840_CMP ;
  wire [31:0] \$procmux$12841_Y ;
  wire \$procmux$12842_CMP ;
  wire [31:0] \$procmux$12844_Y ;
  wire \$procmux$12845_CMP ;
  wire \$procmux$12851_Y ;
  wire \$procmux$12852_CMP ;
  wire \$procmux$12853_Y ;
  wire \$procmux$12854_CMP ;
  wire \$procmux$12855_Y ;
  wire \$procmux$12856_CMP ;
  wire \$procmux$12858_Y ;
  wire \$procmux$12859_CMP ;
  wire \$procmux$12864_Y ;
  wire \$procmux$12865_CMP ;
  wire \$procmux$12866_Y ;
  wire \$procmux$12867_CMP ;
  wire \$procmux$12868_Y ;
  wire \$procmux$12869_CMP ;
  wire \$procmux$12871_Y ;
  wire \$procmux$12872_CMP ;
  wire \$procmux$12877_Y ;
  wire \$procmux$12878_CMP ;
  wire \$procmux$12879_Y ;
  wire \$procmux$12880_CMP ;
  wire \$procmux$12882_Y ;
  wire \$procmux$12883_CMP ;
  wire \$procmux$12888_Y ;
  wire \$procmux$12889_CMP ;
  wire \$procmux$12890_Y ;
  wire \$procmux$12891_CMP ;
  wire \$procmux$12893_Y ;
  wire \$procmux$12894_CMP ;
  wire [31:0] \$procmux$12899_Y ;
  wire \$procmux$12900_CMP ;
  wire [31:0] \$procmux$12901_Y ;
  wire \$procmux$12902_CMP ;
  wire [31:0] \$procmux$12904_Y ;
  wire \$procmux$12905_CMP ;
  wire [2:0] \$procmux$12910_Y ;
  wire \$procmux$12911_CMP ;
  wire [2:0] \$procmux$12912_Y ;
  wire \$procmux$12913_CMP ;
  wire [2:0] \$procmux$12915_Y ;
  wire \$procmux$12916_CMP ;
  wire [2:0] \$procmux$12921_Y ;
  wire \$procmux$12922_CMP ;
  wire [2:0] \$procmux$12923_Y ;
  wire \$procmux$12924_CMP ;
  wire [2:0] \$procmux$12926_Y ;
  wire \$procmux$12927_CMP ;
  wire [2:0] \$procmux$12931_Y ;
  wire \$procmux$12932_CMP ;
  wire \$procmux$12934_CMP ;
  wire \$procmux$12936_CMP ;
  wire \$procmux$12938_CMP ;
  wire \$procmux$12940_CMP ;
  wire [2:0] \$procmux$12942_Y ;
  wire \$procmux$12943_CMP ;
  wire [2:0] \$procmux$12949_Y ;
  wire \$procmux$12950_CMP ;
  wire [2:0] \$procmux$12952_Y ;
  wire \$procmux$12953_CMP ;
  wire [2:0] \$procmux$12954_Y ;
  wire \$procmux$12955_CMP ;
  wire [2:0] \$procmux$12956_Y ;
  wire \$procmux$12957_CMP ;
  wire [2:0] \$procmux$12959_Y ;
  wire \$procmux$12960_CMP ;
  wire [2:0] \$procmux$12968_Y ;
  wire \$procmux$12969_CMP ;
  wire [2:0] \$procmux$12970_Y ;
  wire \$procmux$12971_CMP ;
  wire [2:0] \$procmux$12972_Y ;
  wire \$procmux$12973_CMP ;
  wire [2:0] \$procmux$12975_Y ;
  wire \$procmux$12976_CMP ;
  wire [31:0] \$procmux$12983_Y ;
  wire \$procmux$12984_CMP ;
  wire [31:0] \$procmux$12985_Y ;
  wire \$procmux$12986_CMP ;
  wire [31:0] \$procmux$12988_Y ;
  wire \$procmux$12989_CMP ;
  wire [6:0] \$procmux$12996_Y ;
  wire \$procmux$12997_CMP ;
  wire [6:0] \$procmux$12998_Y ;
  wire \$procmux$12999_CMP ;
  wire [6:0] \$procmux$13001_Y ;
  wire \$procmux$13002_CMP ;
  wire [2:0] \$procmux$13009_Y ;
  wire \$procmux$13010_CMP ;
  wire [2:0] \$procmux$13011_Y ;
  wire \$procmux$13012_CMP ;
  wire [2:0] \$procmux$13014_Y ;
  wire \$procmux$13015_CMP ;
  wire \$procmux$13018_Y ;
  wire \$procmux$13019_CMP ;
  wire \$procmux$13021_CMP ;
  wire \$procmux$13023_Y ;
  wire \$procmux$13024_CMP ;
  wire \$procmux$13027_Y ;
  wire \$procmux$13028_CMP ;
  wire \$procmux$13030_CMP ;
  wire \$procmux$13032_Y ;
  wire \$procmux$13033_CMP ;
  wire [31:0] \$procmux$13038_Y ;
  wire \$procmux$13039_CMP ;
  wire \$procmux$13041_CMP ;
  wire [31:0] \$procmux$13043_Y ;
  wire \$procmux$13044_CMP ;
  wire [6:0] \$procmux$13051_Y ;
  wire \$procmux$13052_CMP ;
  wire [6:0] \$procmux$13054_Y ;
  wire \$procmux$13055_CMP ;
  wire \$procmux$13059_Y ;
  wire \$procmux$13060_CMP ;
  wire \$procmux$13062_CMP ;
  wire \$procmux$13064_Y ;
  wire \$procmux$13065_CMP ;
  wire [31:0] \$procmux$13068_Y ;
  wire \$procmux$13069_CMP ;
  wire [6:0] \$procmux$13072_Y ;
  wire \$procmux$13073_CMP ;
  wire [2:0] \$procmux$13076_Y ;
  wire \$procmux$13077_CMP ;
  wire [1:0] \$procmux$13080_Y ;
  wire \$procmux$13081_CMP ;
  wire \$procmux$13084_Y ;
  wire \$procmux$13085_CMP ;
  wire \$procmux$13088_Y ;
  wire \$procmux$13089_CMP ;
  wire \$procmux$13092_Y ;
  wire \$procmux$13093_CMP ;
  wire [40:0] \$procmux$13094_Y ;
  wire \$procmux$13095_CMP ;
  wire [40:0] \$procmux$13096_Y ;
  wire \$procmux$13097_CMP ;
  wire [40:0] \$procmux$13099_Y ;
  wire \$procmux$13100_CMP ;
  wire [40:0] \$procmux$13103_Y ;
  wire \$procmux$13104_CMP ;
  wire [40:0] \$procmux$13106_Y ;
  wire \$procmux$13107_CMP ;
  wire [40:0] \$procmux$13108_Y ;
  wire \$procmux$13109_CMP ;
  wire [40:0] \$procmux$13111_Y ;
  wire \$procmux$13112_CMP ;
  wire [40:0] \$procmux$13113_Y ;
  wire \$procmux$13114_CMP ;
  wire [40:0] \$procmux$13115_Y ;
  wire \$procmux$13116_CMP ;
  wire [40:0] \$procmux$13118_Y ;
  wire \$procmux$13119_CMP ;
  wire [40:0] \$procmux$13122_Y ;
  wire \$procmux$13123_CMP ;
  wire [40:0] \$procmux$13124_Y ;
  wire \$procmux$13125_CMP ;
  wire [40:0] \$procmux$13126_Y ;
  wire \$procmux$13127_CMP ;
  wire [40:0] \$procmux$13129_Y ;
  wire \$procmux$13130_CMP ;
  wire [40:0] \$procmux$13132_Y ;
  wire \$procmux$13133_CMP ;
  wire [40:0] \$procmux$13134_Y ;
  wire \$procmux$13135_CMP ;
  wire [40:0] \$procmux$13137_Y ;
  wire \$procmux$13138_CMP ;
  wire [40:0] \$procmux$13140_Y ;
  wire \$procmux$13141_CMP ;
  wire [40:0] \$procmux$13143_Y ;
  wire \$procmux$13144_CMP ;
  wire [40:0] \$procmux$13147_Y ;
  wire \$procmux$13148_CMP ;
  wire [31:0] \$procmux$13149_Y ;
  wire \$procmux$13150_CMP ;
  wire [31:0] \$procmux$13151_Y ;
  wire \$procmux$13152_CMP ;
  wire [31:0] \$procmux$13155_Y ;
  wire \$procmux$13156_CMP ;
  wire [31:0] \$procmux$13157_Y ;
  wire \$procmux$13158_CMP ;
  wire [31:0] \$procmux$13159_Y ;
  wire \$procmux$13160_CMP ;
  wire [31:0] \$procmux$13162_Y ;
  wire \$procmux$13163_CMP ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:166.22-168.16" */
  wire [2:0] \$state_d$20 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:164.13-168.16" */
  wire [2:0] \$state_d$21 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  wire [2:0] \$state_d$22 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:175.11-177.14" */
  wire [2:0] \$state_d$25 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  wire [2:0] \$state_d$29 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:206.11-208.14" */
  wire [2:0] \$state_d$33 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  wire [2:0] \$state_d$36 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:225.11-227.14" */
  wire [2:0] \$state_d$39 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  wire [2:0] \$state_d$41 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  wire [2:0] \$state_d$65 ;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:126.15" */
  wire [6:0] address_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:126.26" */
  wire [6:0] address_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:56.9" */
  wire capture;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:22.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:127.16" */
  wire [31:0] data_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:127.24" */
  wire [31:0] data_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:129.10" */
  wire [40:0] dmi;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:54.9" */
  wire dmi_clear;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:108.18" */
  wire [40:0] dmi_req;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:29.24" */
  output [40:0] dmi_req_o;
  wire [40:0] dmi_req_o;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:109.18" */
  wire dmi_req_ready;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:31.24" */
  input dmi_req_ready_i;
  wire dmi_req_ready_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:110.18" */
  wire dmi_req_valid;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:30.24" */
  output dmi_req_valid_o;
  wire dmi_req_valid_o;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:112.18" */
  wire [33:0] dmi_resp;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:33.24" */
  input [33:0] dmi_resp_i;
  wire [33:0] dmi_resp_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:114.18" */
  wire dmi_resp_ready;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:34.24" */
  output dmi_resp_ready_o;
  wire dmi_resp_ready_o;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:113.18" */
  wire dmi_resp_valid;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:35.24" */
  input dmi_resp_valid_i;
  wire dmi_resp_valid_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:28.24" */
  output dmi_rst_no;
  wire dmi_rst_no;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:105.16" */
  wire dmi_select;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:106.16" */
  wire dmi_tdo;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:125.28" */
  wire [40:0] dr_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:125.34" */
  wire [40:0] dr_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:62.15" */
  wire [31:0] dtmcs_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:62.24" */
  wire [31:0] dtmcs_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:60.9" */
  wire dtmcs_select;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:49.15" */
  wire [1:0] error_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:137.9" */
  wire error_dmi_busy;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:138.9" */
  wire error_dmi_op_failed;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:49.24" */
  wire [1:0] error_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:52.9" */
  wire jtag_dmi_clear;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:23.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:57.9" */
  wire shift;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:123.11" */
  wire [2:0] state_d;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:123.20" */
  wire [2:0] state_q;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:51.9" */
  wire tck;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:37.24" */
  input tck_i;
  wire tck_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:40.24" */
  input td_i;
  wire td_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:41.24" */
  output td_o;
  wire td_o;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:58.9" */
  wire tdi;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:42.24" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:24.24" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:38.24" */
  input tms_i;
  wire tms_i;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:39.24" */
  input trst_ni;
  wire trst_ni;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:55.9" */
  wire update;
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:64.41-64.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(dtmcs_select),
    .B(update),
    .Y(\$0y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:64.41-64.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\$0y ),
    .B(dtmcs_q[17]),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(trst_ni),
    .Y(\$10y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:133.26-133.42" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(state_q),
    .B(3'h3),
    .Y(\$12y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:133.25-133.74" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$13  (
    .A(2'h1),
    .B(2'h2),
    .S(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.15-160.35" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(dmi_select),
    .B(update),
    .Y(\$15y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.40-160.61" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(error_q),
    .Y(\$16y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.15-160.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:164.17-164.54" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(dmi[1:0]),
    .B(2'h1),
    .Y(\$18y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:166.26-166.64" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(dmi[1:0]),
    .B(2'h2),
    .Y(\$19y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:64.22-64.88" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(jtag_dmi_clear),
    .B(\$1y ),
    .Y(\$2y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:233.21-233.36" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(state_q),
    .Y(\$46y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:233.11-233.36" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(update),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:240.22-240.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(state_q),
    .B(3'h1),
    .Y(\$49y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:240.22-240.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(state_q),
    .B(3'h2),
    .Y(\$50y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:240.22-240.58" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A({ \$50y , \$49y  }),
    .Y(\$51y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:240.11-240.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(capture),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:244.29-244.50" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(error_q),
    .Y(\$54y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:244.11-244.50" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(\$error_dmi_busy$53 ),
    .B(\$54y ),
    .Y(\$55y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:248.34-248.55" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(error_q),
    .Y(\$57y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:248.11-248.55" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$error_dmi_op_failed$45 ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:253.11-253.37" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(update),
    .B(dtmcs_q[16]),
    .Y(\$60y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:253.11-253.53" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$60y ),
    .B(dtmcs_select),
    .Y(\$61y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.15-269.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(error_q),
    .Y(\$71y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.40-269.55" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(error_dmi_busy),
    .Y(\$72y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.15-269.55" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$73  (
    .A(\$71y ),
    .B(\$72y ),
    .Y(\$73y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:272.24-272.42" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(error_q),
    .B(2'h3),
    .Y(\$74y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:272.24-272.60" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$75  (
    .A(\$74y ),
    .B(error_dmi_busy),
    .Y(\$75y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(trst_ni),
    .Y(\$84y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:286.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$address_q  (
    .AD(7'h00),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(address_d),
    .Q(address_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:286.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$data_q  (
    .AD(32'd0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(data_d),
    .Q(data_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:286.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd41)
  ) \$driver$dr_q  (
    .AD(41'h00000000000),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dr_d),
    .Q(dr_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$dtmcs_q.abits  (
    .AD(6'h00),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[9:4]),
    .Q(dtmcs_q[9:4])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmihardreset  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[17]),
    .Q(dtmcs_q[17])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.dmireset  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[16]),
    .Q(dtmcs_q[16])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$dtmcs_q.dmistat  (
    .AD(2'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[11:10]),
    .Q(dtmcs_q[11:10])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$dtmcs_q.idle  (
    .AD(3'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[14:12]),
    .Q(dtmcs_q[14:12])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$dtmcs_q.version  (
    .AD(4'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[3:0]),
    .Q(dtmcs_q[3:0])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$dtmcs_q.zero0  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[15]),
    .Q(dtmcs_q[15])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:93.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd14)
  ) \$driver$dtmcs_q.zero1  (
    .AD(14'h0000),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(dtmcs_d[31:18]),
    .Q(dtmcs_q[31:18])
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:286.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$error_q  (
    .AD(2'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(error_d),
    .Q(error_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:286.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$state_q  (
    .AD(3'h0),
    .ALOAD(trst_ni),
    .CLK(tck),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:254.9-254.30|rtl/riscv-dbg/dmi_jtag.sv:253.7-255.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12731  (
    .A(\$error_d$59 ),
    .B(2'h0),
    .S(\$procmux$12732_CMP ),
    .Y(\$procmux$12731_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12734  (
    .A(\$procmux$12731_Y ),
    .B(2'hx),
    .S(\$procmux$12735_CMP ),
    .Y(\$procmux$12734_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:249.9-249.31|rtl/riscv-dbg/dmi_jtag.sv:248.7-250.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12737  (
    .A(\$error_d$56 ),
    .B(2'h2),
    .S(\$procmux$12738_CMP ),
    .Y(\$procmux$12737_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12740  (
    .A(\$procmux$12737_Y ),
    .B(2'hx),
    .S(\$procmux$12741_CMP ),
    .Y(\$procmux$12740_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:245.9-245.27|rtl/riscv-dbg/dmi_jtag.sv:244.7-246.10" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12743  (
    .A(error_q),
    .B(2'h3),
    .S(\$procmux$12744_CMP ),
    .Y(\$procmux$12743_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12746  (
    .A(\$procmux$12743_Y ),
    .B(2'hx),
    .S(\$procmux$12747_CMP ),
    .Y(\$procmux$12746_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:241.9-241.31|rtl/riscv-dbg/dmi_jtag.sv:240.7-242.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12749  (
    .A(\$error_dmi_busy$48 ),
    .B(1'h1),
    .S(\$procmux$12750_CMP ),
    .Y(\$procmux$12749_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12752  (
    .A(\$procmux$12749_Y ),
    .B(1'hx),
    .S(\$procmux$12753_CMP ),
    .Y(\$procmux$12752_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:234.9-234.31|rtl/riscv-dbg/dmi_jtag.sv:233.7-235.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12755  (
    .A(\$error_dmi_busy$44 ),
    .B(1'h1),
    .S(\$procmux$12756_CMP ),
    .Y(\$procmux$12755_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12758  (
    .A(\$procmux$12755_Y ),
    .B(1'hx),
    .S(\$procmux$12759_CMP ),
    .Y(\$procmux$12758_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:226.13-226.28|rtl/riscv-dbg/dmi_jtag.sv:225.11-227.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12760  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$12761_CMP ),
    .Y(\$procmux$12760_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$12763  (
    .A(\$procmux$12760_Y ),
    .B(15'hxxxx),
    .S({ \$procmux$12768_CMP , \$procmux$12767_CMP , \$procmux$12766_CMP , \$procmux$12765_CMP , \$procmux$12764_CMP  }),
    .Y(\$procmux$12763_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12764_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12764_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12765_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$12765_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12766_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12766_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:173.15-178.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12767_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$12767_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12768_CMP0  (
    .A(state_q),
    .Y(\$procmux$12768_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12770  (
    .A(\$procmux$12763_Y ),
    .B(3'hx),
    .S(\$procmux$12771_CMP ),
    .Y(\$procmux$12770_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:215.28-215.55|rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12775  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12776_CMP ),
    .Y(\$procmux$12775_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:215.28-215.55|rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12776_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$12776_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.31-220.14|rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12777  (
    .A(1'hx),
    .B(\$procmux$12775_Y ),
    .S(\$procmux$12778_CMP ),
    .Y(\$procmux$12777_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12779  (
    .A(1'hx),
    .B(\$procmux$12777_Y ),
    .S(\$procmux$12780_CMP ),
    .Y(\$procmux$12779_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12780_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12780_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12782  (
    .A(\$procmux$12779_Y ),
    .B(1'hx),
    .S(\$procmux$12783_CMP ),
    .Y(\$procmux$12782_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:216.29-216.51|rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12786  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12787_CMP ),
    .Y(\$procmux$12786_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:216.29-216.51|rtl/riscv-dbg/dmi_jtag.sv:214.13-218.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12787_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$12787_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.31-220.14|rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12788  (
    .A(1'hx),
    .B(\$procmux$12786_Y ),
    .S(\$procmux$12789_CMP ),
    .Y(\$procmux$12788_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12790  (
    .A(1'hx),
    .B(\$procmux$12788_Y ),
    .S(\$procmux$12791_CMP ),
    .Y(\$procmux$12790_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12791_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12791_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12793  (
    .A(\$procmux$12790_Y ),
    .B(1'hx),
    .S(\$procmux$12794_CMP ),
    .Y(\$procmux$12793_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.31-220.14|rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12797  (
    .A(1'h0),
    .B(\$error_dmi_op_failed$35 ),
    .S(\$procmux$12798_CMP ),
    .Y(\$procmux$12797_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12799  (
    .A(1'hx),
    .B(\$procmux$12797_Y ),
    .S(\$procmux$12800_CMP ),
    .Y(\$procmux$12799_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12800_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12800_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12802  (
    .A(\$procmux$12799_Y ),
    .B(1'hx),
    .S(\$procmux$12803_CMP ),
    .Y(\$procmux$12802_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.31-220.14|rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12806  (
    .A(1'h0),
    .B(\$error_dmi_busy$34 ),
    .S(\$procmux$12807_CMP ),
    .Y(\$procmux$12806_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12808  (
    .A(1'hx),
    .B(\$procmux$12806_Y ),
    .S(\$procmux$12809_CMP ),
    .Y(\$procmux$12808_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12809_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12809_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12811  (
    .A(\$procmux$12808_Y ),
    .B(1'hx),
    .S(\$procmux$12812_CMP ),
    .Y(\$procmux$12811_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.31-220.14|rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12815  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$12816_CMP ),
    .Y(\$procmux$12815_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12817  (
    .A(3'hx),
    .B(\$procmux$12815_Y ),
    .S(\$procmux$12818_CMP ),
    .Y(\$procmux$12817_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12818_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12818_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12820  (
    .A(\$procmux$12817_Y ),
    .B(3'hx),
    .S(\$procmux$12821_CMP ),
    .Y(\$procmux$12820_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:207.13-207.38|rtl/riscv-dbg/dmi_jtag.sv:206.11-208.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12824  (
    .A(state_q),
    .B(3'h4),
    .S(\$procmux$12825_CMP ),
    .Y(\$procmux$12824_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12826  (
    .A(3'hx),
    .B(\$procmux$12824_Y ),
    .S(\$procmux$12827_CMP ),
    .Y(\$procmux$12826_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12827_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$12827_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12829  (
    .A(\$procmux$12826_Y ),
    .B(3'hx),
    .S(\$procmux$12830_CMP ),
    .Y(\$procmux$12829_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:191.29-194.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd32)
  ) \$procmux$12835  (
    .A(32'd3131949278),
    .B({ dmi_resp[33:2], 64'hdeadbeefb051b051 }),
    .S({ \$procmux$12838_CMP , \$procmux$12837_CMP , \$procmux$12836_CMP  }),
    .Y(\$procmux$12835_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:191.29-194.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12836_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$12836_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:187.28-190.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12837_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$12837_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:185.17-185.40|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12838_CMP0  (
    .A(dmi_resp[1:0]),
    .Y(\$procmux$12838_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12839  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12835_Y ),
    .S(\$procmux$12840_CMP ),
    .Y(\$procmux$12839_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12841  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12839_Y ),
    .S(\$procmux$12842_CMP ),
    .Y(\$procmux$12841_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12842_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12842_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12844  (
    .A(\$procmux$12841_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$12845_CMP ),
    .Y(\$procmux$12844_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:187.28-190.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12851  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12852_CMP ),
    .Y(\$procmux$12851_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:187.28-190.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12852_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h2),
    .Y(\$procmux$12852_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12853  (
    .A(1'hx),
    .B(\$procmux$12851_Y ),
    .S(\$procmux$12854_CMP ),
    .Y(\$procmux$12853_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12855  (
    .A(1'hx),
    .B(\$procmux$12853_Y ),
    .S(\$procmux$12856_CMP ),
    .Y(\$procmux$12855_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12856_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12856_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12858  (
    .A(\$procmux$12855_Y ),
    .B(1'hx),
    .S(\$procmux$12859_CMP ),
    .Y(\$procmux$12858_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:191.29-194.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12864  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12865_CMP ),
    .Y(\$procmux$12864_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:191.29-194.18|rtl/riscv-dbg/dmi_jtag.sv:183.13-198.20" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12865_CMP0  (
    .A(dmi_resp[1:0]),
    .B(2'h3),
    .Y(\$procmux$12865_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12866  (
    .A(1'hx),
    .B(\$procmux$12864_Y ),
    .S(\$procmux$12867_CMP ),
    .Y(\$procmux$12866_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12868  (
    .A(1'hx),
    .B(\$procmux$12866_Y ),
    .S(\$procmux$12869_CMP ),
    .Y(\$procmux$12868_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12869_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12869_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12871  (
    .A(\$procmux$12868_Y ),
    .B(1'hx),
    .S(\$procmux$12872_CMP ),
    .Y(\$procmux$12871_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12877  (
    .A(1'h0),
    .B(\$error_dmi_op_failed$28 ),
    .S(\$procmux$12878_CMP ),
    .Y(\$procmux$12877_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12879  (
    .A(1'hx),
    .B(\$procmux$12877_Y ),
    .S(\$procmux$12880_CMP ),
    .Y(\$procmux$12879_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12880_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12880_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12882  (
    .A(\$procmux$12879_Y ),
    .B(1'hx),
    .S(\$procmux$12883_CMP ),
    .Y(\$procmux$12882_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12888  (
    .A(1'h0),
    .B(\$error_dmi_busy$27 ),
    .S(\$procmux$12889_CMP ),
    .Y(\$procmux$12888_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12890  (
    .A(1'hx),
    .B(\$procmux$12888_Y ),
    .S(\$procmux$12891_CMP ),
    .Y(\$procmux$12890_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12891_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12891_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12893  (
    .A(\$procmux$12890_Y ),
    .B(1'hx),
    .S(\$procmux$12894_CMP ),
    .Y(\$procmux$12893_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12899  (
    .A(data_q),
    .B(\$data_d$26 ),
    .S(\$procmux$12900_CMP ),
    .Y(\$procmux$12899_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12901  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12899_Y ),
    .S(\$procmux$12902_CMP ),
    .Y(\$procmux$12901_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12902_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12902_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12904  (
    .A(\$procmux$12901_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$12905_CMP ),
    .Y(\$procmux$12904_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.31-200.14|rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12910  (
    .A(state_q),
    .B(3'h0),
    .S(\$procmux$12911_CMP ),
    .Y(\$procmux$12910_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12912  (
    .A(3'hx),
    .B(\$procmux$12910_Y ),
    .S(\$procmux$12913_CMP ),
    .Y(\$procmux$12912_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12913_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12913_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12915  (
    .A(\$procmux$12912_Y ),
    .B(3'hx),
    .S(\$procmux$12916_CMP ),
    .Y(\$procmux$12915_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:176.13-176.37|rtl/riscv-dbg/dmi_jtag.sv:175.11-177.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12921  (
    .A(state_q),
    .B(3'h2),
    .S(\$procmux$12922_CMP ),
    .Y(\$procmux$12921_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:173.15-178.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12923  (
    .A(3'hx),
    .B(\$procmux$12921_Y ),
    .S(\$procmux$12924_CMP ),
    .Y(\$procmux$12923_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:173.15-178.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12924_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$12924_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12926  (
    .A(\$procmux$12923_Y ),
    .B(3'hx),
    .S(\$procmux$12927_CMP ),
    .Y(\$procmux$12926_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd3)
  ) \$procmux$12931  (
    .A(\$state_d$39 ),
    .B({ \$state_d$22 , \$state_d$25 , \$state_d$29 , \$state_d$33 , \$state_d$36  }),
    .S({ \$procmux$12940_CMP , \$procmux$12938_CMP , \$procmux$12936_CMP , \$procmux$12934_CMP , \$procmux$12932_CMP  }),
    .Y(\$procmux$12931_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12932_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$12932_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12934_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$12934_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12936_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$12936_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:173.15-178.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12938_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$12938_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12940_CMP0  (
    .A(state_q),
    .Y(\$procmux$12940_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12942  (
    .A(\$procmux$12931_Y ),
    .B(3'hx),
    .S(\$procmux$12943_CMP ),
    .Y(\$procmux$12942_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:167.15-167.31|rtl/riscv-dbg/dmi_jtag.sv:166.22-168.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12949  (
    .A(state_q),
    .B(3'h3),
    .S(\$procmux$12950_CMP ),
    .Y(\$procmux$12949_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:165.15-165.30|rtl/riscv-dbg/dmi_jtag.sv:164.13-168.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12952  (
    .A(\$procmux$12949_Y ),
    .B(3'hx),
    .S(\$procmux$12953_CMP ),
    .Y(\$procmux$12952_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.64-170.14|rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12954  (
    .A(3'hx),
    .B(\$procmux$12952_Y ),
    .S(\$procmux$12955_CMP ),
    .Y(\$procmux$12954_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12956  (
    .A(3'hx),
    .B(\$procmux$12954_Y ),
    .S(\$procmux$12957_CMP ),
    .Y(\$procmux$12956_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12957_CMP0  (
    .A(state_q),
    .Y(\$procmux$12957_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12959  (
    .A(\$procmux$12956_Y ),
    .B(3'hx),
    .S(\$procmux$12960_CMP ),
    .Y(\$procmux$12959_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:165.15-165.30|rtl/riscv-dbg/dmi_jtag.sv:164.13-168.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12968  (
    .A(\$state_d$20 ),
    .B(3'h1),
    .S(\$procmux$12969_CMP ),
    .Y(\$procmux$12968_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.64-170.14|rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12970  (
    .A(3'hx),
    .B(\$procmux$12968_Y ),
    .S(\$procmux$12971_CMP ),
    .Y(\$procmux$12970_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12972  (
    .A(3'hx),
    .B(\$procmux$12970_Y ),
    .S(\$procmux$12973_CMP ),
    .Y(\$procmux$12972_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12973_CMP0  (
    .A(state_q),
    .Y(\$procmux$12973_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12975  (
    .A(\$procmux$12972_Y ),
    .B(3'hx),
    .S(\$procmux$12976_CMP ),
    .Y(\$procmux$12975_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.64-170.14|rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12983  (
    .A(data_q),
    .B(dr_q[33:2]),
    .S(\$procmux$12984_CMP ),
    .Y(\$procmux$12983_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12985  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12983_Y ),
    .S(\$procmux$12986_CMP ),
    .Y(\$procmux$12985_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12986_CMP0  (
    .A(state_q),
    .Y(\$procmux$12986_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12988  (
    .A(\$procmux$12985_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$12989_CMP ),
    .Y(\$procmux$12988_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.64-170.14|rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$12996  (
    .A(address_q),
    .B(dr_q[40:34]),
    .S(\$procmux$12997_CMP ),
    .Y(\$procmux$12996_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$12998  (
    .A(7'hxx),
    .B(\$procmux$12996_Y ),
    .S(\$procmux$12999_CMP ),
    .Y(\$procmux$12998_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$12999_CMP0  (
    .A(state_q),
    .Y(\$procmux$12999_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13001  (
    .A(\$procmux$12998_Y ),
    .B(7'hxx),
    .S(\$procmux$13002_CMP ),
    .Y(\$procmux$13001_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.64-170.14|rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13009  (
    .A(state_q),
    .B(\$state_d$21 ),
    .S(\$procmux$13010_CMP ),
    .Y(\$procmux$13009_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13011  (
    .A(3'hx),
    .B(\$procmux$13009_Y ),
    .S(\$procmux$13012_CMP ),
    .Y(\$procmux$13011_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13012_CMP0  (
    .A(state_q),
    .Y(\$procmux$13012_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13014  (
    .A(\$procmux$13011_Y ),
    .B(3'hx),
    .S(\$procmux$13015_CMP ),
    .Y(\$procmux$13014_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$13018  (
    .A(1'h0),
    .B({ \$error_dmi_op_failed$32 , \$error_dmi_op_failed$38  }),
    .S({ \$procmux$13021_CMP , \$procmux$13019_CMP  }),
    .Y(\$procmux$13018_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13019_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$13019_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13021_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$13021_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13023  (
    .A(\$procmux$13018_Y ),
    .B(1'hx),
    .S(\$procmux$13024_CMP ),
    .Y(\$procmux$13023_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$13027  (
    .A(1'h0),
    .B({ \$error_dmi_busy$31 , \$error_dmi_busy$37  }),
    .S({ \$procmux$13030_CMP , \$procmux$13028_CMP  }),
    .Y(\$procmux$13027_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:213.11-220.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13028_CMP0  (
    .A(state_q),
    .B(3'h4),
    .Y(\$procmux$13028_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13030_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$13030_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13032  (
    .A(\$procmux$13027_Y ),
    .B(1'hx),
    .S(\$procmux$13033_CMP ),
    .Y(\$procmux$13032_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd32)
  ) \$procmux$13038  (
    .A(data_q),
    .B({ \$data_d$24 , \$data_d$30  }),
    .S({ \$procmux$13041_CMP , \$procmux$13039_CMP  }),
    .Y(\$procmux$13038_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:182.11-200.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13039_CMP0  (
    .A(state_q),
    .B(3'h2),
    .Y(\$procmux$13039_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13041_CMP0  (
    .A(state_q),
    .Y(\$procmux$13041_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13043  (
    .A(\$procmux$13038_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$13044_CMP ),
    .Y(\$procmux$13043_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13051  (
    .A(address_q),
    .B(\$address_d$23 ),
    .S(\$procmux$13052_CMP ),
    .Y(\$procmux$13051_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:160.11-170.14|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13052_CMP0  (
    .A(state_q),
    .Y(\$procmux$13052_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13054  (
    .A(\$procmux$13051_Y ),
    .B(7'hxx),
    .S(\$procmux$13055_CMP ),
    .Y(\$procmux$13054_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$13059  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$13062_CMP , \$procmux$13060_CMP  }),
    .Y(\$procmux$13059_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:203.16-209.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13060_CMP0  (
    .A(state_q),
    .B(3'h3),
    .Y(\$procmux$13060_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:173.15-178.12|rtl/riscv-dbg/dmi_jtag.sv:157.7-229.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$13062_CMP0  (
    .A(state_q),
    .B(3'h1),
    .Y(\$procmux$13062_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13064  (
    .A(\$procmux$13059_Y ),
    .B(1'hx),
    .S(\$procmux$13065_CMP ),
    .Y(\$procmux$13064_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13068  (
    .A(\$data_d$43 ),
    .B(32'd0),
    .S(\$procmux$13069_CMP ),
    .Y(\$procmux$13068_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$13072  (
    .A(\$address_d$42 ),
    .B(7'h00),
    .S(\$procmux$13073_CMP ),
    .Y(\$procmux$13072_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$13076  (
    .A(\$state_d$41 ),
    .B(3'h0),
    .S(\$procmux$13077_CMP ),
    .Y(\$procmux$13076_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$13080  (
    .A(\$error_d$62 ),
    .B(2'h0),
    .S(\$procmux$13081_CMP ),
    .Y(\$procmux$13080_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13084  (
    .A(\$error_dmi_op_failed$45 ),
    .B(1'h0),
    .S(\$procmux$13085_CMP ),
    .Y(\$procmux$13084_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13088  (
    .A(\$error_dmi_busy$53 ),
    .B(1'h0),
    .S(\$procmux$13089_CMP ),
    .Y(\$procmux$13088_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:151.20-156.8|rtl/riscv-dbg/dmi_jtag.sv:151.5-256.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$13092  (
    .A(\$dmi_req_valid$40 ),
    .B(1'h0),
    .S(\$procmux$13093_CMP ),
    .Y(\$procmux$13092_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:280.11-280.47|rtl/riscv-dbg/dmi_jtag.sv:279.9-281.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13094  (
    .A(\$dr_d$79 ),
    .B({ tdi, dr_q[40:1] }),
    .S(\$procmux$13095_CMP ),
    .Y(\$procmux$13094_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:279.9-281.12|rtl/riscv-dbg/dmi_jtag.sv:278.7-282.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13096  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13094_Y ),
    .S(\$procmux$13097_CMP ),
    .Y(\$procmux$13096_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13099  (
    .A(\$procmux$13096_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13100_CMP ),
    .Y(\$procmux$13099_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:279.9-281.12|rtl/riscv-dbg/dmi_jtag.sv:278.7-282.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13103  (
    .A(\$dr_d$79 ),
    .B(\$dr_d$80 ),
    .S(\$procmux$13104_CMP ),
    .Y(\$procmux$13103_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13106  (
    .A(\$procmux$13103_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13107_CMP ),
    .Y(\$procmux$13106_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:273.13-273.49|rtl/riscv-dbg/dmi_jtag.sv:272.20-274.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13108  (
    .A(dr_q),
    .B({ address_q, data_q, 2'h3 }),
    .S(\$procmux$13109_CMP ),
    .Y(\$procmux$13108_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:270.13-270.52|rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13111  (
    .A(\$procmux$13108_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13112_CMP ),
    .Y(\$procmux$13111_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14|rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13113  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13111_Y ),
    .S(\$procmux$13114_CMP ),
    .Y(\$procmux$13113_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12|rtl/riscv-dbg/dmi_jtag.sv:267.7-276.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13115  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13113_Y ),
    .S(\$procmux$13116_CMP ),
    .Y(\$procmux$13115_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13118  (
    .A(\$procmux$13115_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13119_CMP ),
    .Y(\$procmux$13118_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:270.13-270.52|rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13122  (
    .A(\$dr_d$76 ),
    .B({ address_q, data_q, 2'h0 }),
    .S(\$procmux$13123_CMP ),
    .Y(\$procmux$13122_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14|rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13124  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13122_Y ),
    .S(\$procmux$13125_CMP ),
    .Y(\$procmux$13124_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12|rtl/riscv-dbg/dmi_jtag.sv:267.7-276.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13126  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13124_Y ),
    .S(\$procmux$13127_CMP ),
    .Y(\$procmux$13126_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13129  (
    .A(\$procmux$13126_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13130_CMP ),
    .Y(\$procmux$13129_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:269.11-274.14|rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13132  (
    .A(dr_q),
    .B(\$dr_d$77 ),
    .S(\$procmux$13133_CMP ),
    .Y(\$procmux$13132_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12|rtl/riscv-dbg/dmi_jtag.sv:267.7-276.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13134  (
    .A(41'hxxxxxxxxxxx),
    .B(\$procmux$13132_Y ),
    .S(\$procmux$13135_CMP ),
    .Y(\$procmux$13134_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13137  (
    .A(\$procmux$13134_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13138_CMP ),
    .Y(\$procmux$13137_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:268.9-275.12|rtl/riscv-dbg/dmi_jtag.sv:267.7-276.10" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13140  (
    .A(dr_q),
    .B(\$dr_d$78 ),
    .S(\$procmux$13141_CMP ),
    .Y(\$procmux$13140_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13143  (
    .A(\$procmux$13140_Y ),
    .B(41'hxxxxxxxxxxx),
    .S(\$procmux$13144_CMP ),
    .Y(\$procmux$13143_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:265.7-265.17|rtl/riscv-dbg/dmi_jtag.sv:264.5-283.8" */
  \$mux  #(
    .WIDTH(32'd41)
  ) \$procmux$13147  (
    .A(\$dr_d$81 ),
    .B(41'h00000000000),
    .S(\$procmux$13148_CMP ),
    .Y(\$procmux$13147_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:89.25-89.61|rtl/riscv-dbg/dmi_jtag.sv:89.7-89.61" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13149  (
    .A(\$dtmcs_d$5 ),
    .B({ tdi, \$6y [30:0] }),
    .S(\$procmux$13150_CMP ),
    .Y(\$procmux$13149_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:89.7-89.61|rtl/riscv-dbg/dmi_jtag.sv:88.5-90.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13151  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$13149_Y ),
    .S(\$procmux$13152_CMP ),
    .Y(\$procmux$13151_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:89.7-89.61|rtl/riscv-dbg/dmi_jtag.sv:88.5-90.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13155  (
    .A(\$dtmcs_d$5 ),
    .B(\$dtmcs_d$7 ),
    .S(\$procmux$13156_CMP ),
    .Y(\$procmux$13155_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:75.9-84.23|rtl/riscv-dbg/dmi_jtag.sv:74.7-85.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13157  (
    .A(dtmcs_q),
    .B({ 20'h00001, error_q, 10'h071 }),
    .S(\$procmux$13158_CMP ),
    .Y(\$procmux$13157_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:74.7-85.10|rtl/riscv-dbg/dmi_jtag.sv:73.5-86.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13159  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$13157_Y ),
    .S(\$procmux$13160_CMP ),
    .Y(\$procmux$13159_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:74.7-85.10|rtl/riscv-dbg/dmi_jtag.sv:73.5-86.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$13162  (
    .A(dtmcs_q),
    .B(\$dtmcs_d$4 ),
    .S(\$procmux$13163_CMP ),
    .Y(\$procmux$13162_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:331.11" */
  \dmi_cdc$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc  i_dmi_cdc (
    .clk_i(clk_i),
    .core_dmi_ready_i(dmi_req_ready_i),
    .core_dmi_ready_o(dmi_resp_ready_o),
    .core_dmi_req_o(dmi_req_o),
    .core_dmi_resp_i(dmi_resp_i),
    .core_dmi_rst_no(dmi_rst_no),
    .core_dmi_valid_i(dmi_resp_valid_i),
    .core_dmi_valid_o(dmi_req_valid_o),
    .jtag_dmi_cdc_clear_i(dmi_clear),
    .jtag_dmi_ready_i(1'h1),
    .jtag_dmi_ready_o(dmi_req_ready),
    .jtag_dmi_req_i(dmi_req),
    .jtag_dmi_resp_o(dmi_resp),
    .jtag_dmi_valid_i(dmi_req_valid),
    .jtag_dmi_valid_o(dmi_resp_valid),
    .rst_ni(rst_ni),
    .tck_i(tck),
    .trst_ni(trst_ni)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag.sv:308.5" */
  \dmi_jtag_tap$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap  i_dmi_jtag_tap (
    .capture_o(capture),
    .dmi_clear_o(jtag_dmi_clear),
    .dmi_select_o(dmi_select),
    .dmi_tdo_i(dmi_tdo),
    .dtmcs_select_o(dtmcs_select),
    .dtmcs_tdo_i(dtmcs_q[0]),
    .shift_o(shift),
    .tck_i(tck_i),
    .tck_o(tck),
    .td_i(td_i),
    .td_o(td_o),
    .tdi_o(tdi),
    .tdo_oe_o(tdo_oe_o),
    .testmode_i(testmode_i),
    .tms_i(tms_i),
    .trst_ni(trst_ni),
    .update_o(update)
  );
  assign dmi_clear = \$2y ;
  assign dtmcs_d = \$dtmcs_d$8 ;
  assign dmi = dr_q;
  assign dmi_req[40:34] = address_q;
  assign dmi_req[31:0] = data_q;
  assign dmi_req[33:32] = \$13y ;
  assign dmi_resp_ready = 1'h1;
  assign error_d = \$error_d$63 ;
  assign dmi_req_valid = \$dmi_req_valid$64 ;
  assign state_d = \$state_d$65 ;
  assign address_d = \$address_d$66 ;
  assign data_d = \$data_d$67 ;
  assign error_dmi_busy = \$error_dmi_busy$68 ;
  assign error_dmi_op_failed = \$error_dmi_op_failed$69 ;
  assign dmi_tdo = dr_q[0];
  assign dr_d = \$dr_d$82 ;
  assign \$procmux$12732_CMP  = \$61y ;
  assign \$procmux$12735_CMP  = dmi_clear;
  assign \$error_d$62  = \$procmux$12734_Y ;
  assign \$procmux$12738_CMP  = \$58y ;
  assign \$procmux$12741_CMP  = dmi_clear;
  assign \$error_d$59  = \$procmux$12740_Y ;
  assign \$procmux$12744_CMP  = \$55y ;
  assign \$procmux$12747_CMP  = dmi_clear;
  assign \$error_d$56  = \$procmux$12746_Y ;
  assign \$procmux$12750_CMP  = \$52y ;
  assign \$procmux$12753_CMP  = dmi_clear;
  assign \$error_dmi_busy$53  = \$procmux$12752_Y ;
  assign \$procmux$12756_CMP  = \$47y ;
  assign \$procmux$12759_CMP  = dmi_clear;
  assign \$error_dmi_busy$48  = \$procmux$12758_Y ;
  assign \$procmux$12761_CMP  = dmi_resp_valid;
  assign \$procmux$12771_CMP  = dmi_clear;
  assign \$state_d$39  = \$procmux$12770_Y ;
  assign \$procmux$12778_CMP  = dmi_resp_valid;
  assign \$procmux$12783_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$35  = \$procmux$12782_Y ;
  assign \$procmux$12789_CMP  = dmi_resp_valid;
  assign \$procmux$12794_CMP  = dmi_clear;
  assign \$error_dmi_busy$34  = \$procmux$12793_Y ;
  assign \$procmux$12798_CMP  = dmi_resp_valid;
  assign \$procmux$12803_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$38  = \$procmux$12802_Y ;
  assign \$procmux$12807_CMP  = dmi_resp_valid;
  assign \$procmux$12812_CMP  = dmi_clear;
  assign \$error_dmi_busy$37  = \$procmux$12811_Y ;
  assign \$procmux$12816_CMP  = dmi_resp_valid;
  assign \$procmux$12821_CMP  = dmi_clear;
  assign \$state_d$36  = \$procmux$12820_Y ;
  assign \$procmux$12825_CMP  = dmi_req_ready;
  assign \$procmux$12830_CMP  = dmi_clear;
  assign \$state_d$33  = \$procmux$12829_Y ;
  assign \$procmux$12840_CMP  = dmi_resp_valid;
  assign \$procmux$12845_CMP  = dmi_clear;
  assign \$data_d$26  = \$procmux$12844_Y ;
  assign \$procmux$12854_CMP  = dmi_resp_valid;
  assign \$procmux$12859_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$28  = \$procmux$12858_Y ;
  assign \$procmux$12867_CMP  = dmi_resp_valid;
  assign \$procmux$12872_CMP  = dmi_clear;
  assign \$error_dmi_busy$27  = \$procmux$12871_Y ;
  assign \$procmux$12878_CMP  = dmi_resp_valid;
  assign \$procmux$12883_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$32  = \$procmux$12882_Y ;
  assign \$procmux$12889_CMP  = dmi_resp_valid;
  assign \$procmux$12894_CMP  = dmi_clear;
  assign \$error_dmi_busy$31  = \$procmux$12893_Y ;
  assign \$procmux$12900_CMP  = dmi_resp_valid;
  assign \$procmux$12905_CMP  = dmi_clear;
  assign \$data_d$30  = \$procmux$12904_Y ;
  assign \$procmux$12911_CMP  = dmi_resp_valid;
  assign \$procmux$12916_CMP  = dmi_clear;
  assign \$state_d$29  = \$procmux$12915_Y ;
  assign \$procmux$12922_CMP  = dmi_req_ready;
  assign \$procmux$12927_CMP  = dmi_clear;
  assign \$state_d$25  = \$procmux$12926_Y ;
  assign \$procmux$12943_CMP  = dmi_clear;
  assign \$state_d$41  = \$procmux$12942_Y ;
  assign \$procmux$12950_CMP  = \$19y ;
  assign \$procmux$12953_CMP  = \$18y ;
  assign \$procmux$12955_CMP  = \$17y ;
  assign \$procmux$12960_CMP  = dmi_clear;
  assign \$state_d$20  = \$procmux$12959_Y ;
  assign \$procmux$12969_CMP  = \$18y ;
  assign \$procmux$12971_CMP  = \$17y ;
  assign \$procmux$12976_CMP  = dmi_clear;
  assign \$state_d$21  = \$procmux$12975_Y ;
  assign \$procmux$12984_CMP  = \$17y ;
  assign \$procmux$12989_CMP  = dmi_clear;
  assign \$data_d$24  = \$procmux$12988_Y ;
  assign \$procmux$12997_CMP  = \$17y ;
  assign \$procmux$13002_CMP  = dmi_clear;
  assign \$address_d$23  = \$procmux$13001_Y ;
  assign \$procmux$13010_CMP  = \$17y ;
  assign \$procmux$13015_CMP  = dmi_clear;
  assign \$state_d$22  = \$procmux$13014_Y ;
  assign \$procmux$13024_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$45  = \$procmux$13023_Y ;
  assign \$procmux$13033_CMP  = dmi_clear;
  assign \$error_dmi_busy$44  = \$procmux$13032_Y ;
  assign \$procmux$13044_CMP  = dmi_clear;
  assign \$data_d$43  = \$procmux$13043_Y ;
  assign \$procmux$13055_CMP  = dmi_clear;
  assign \$address_d$42  = \$procmux$13054_Y ;
  assign \$procmux$13065_CMP  = dmi_clear;
  assign \$dmi_req_valid$40  = \$procmux$13064_Y ;
  assign \$procmux$13069_CMP  = dmi_clear;
  assign \$data_d$67  = \$procmux$13068_Y ;
  assign \$procmux$13073_CMP  = dmi_clear;
  assign \$address_d$66  = \$procmux$13072_Y ;
  assign \$procmux$13077_CMP  = dmi_clear;
  assign \$state_d$65  = \$procmux$13076_Y ;
  assign \$procmux$13081_CMP  = dmi_clear;
  assign \$error_d$63  = \$procmux$13080_Y ;
  assign \$procmux$13085_CMP  = dmi_clear;
  assign \$error_dmi_op_failed$69  = \$procmux$13084_Y ;
  assign \$procmux$13089_CMP  = dmi_clear;
  assign \$error_dmi_busy$68  = \$procmux$13088_Y ;
  assign \$procmux$13093_CMP  = dmi_clear;
  assign \$dmi_req_valid$64  = \$procmux$13092_Y ;
  assign \$procmux$13095_CMP  = dmi_select;
  assign \$procmux$13097_CMP  = shift;
  assign \$procmux$13100_CMP  = dmi_clear;
  assign \$dr_d$80  = \$procmux$13099_Y ;
  assign \$procmux$13104_CMP  = shift;
  assign \$procmux$13107_CMP  = dmi_clear;
  assign \$dr_d$81  = \$procmux$13106_Y ;
  assign \$procmux$13109_CMP  = \$75y ;
  assign \$procmux$13112_CMP  = \$73y ;
  assign \$procmux$13114_CMP  = dmi_select;
  assign \$procmux$13116_CMP  = capture;
  assign \$procmux$13119_CMP  = dmi_clear;
  assign \$dr_d$76  = \$procmux$13118_Y ;
  assign \$procmux$13123_CMP  = \$73y ;
  assign \$procmux$13125_CMP  = dmi_select;
  assign \$procmux$13127_CMP  = capture;
  assign \$procmux$13130_CMP  = dmi_clear;
  assign \$dr_d$77  = \$procmux$13129_Y ;
  assign \$procmux$13133_CMP  = dmi_select;
  assign \$procmux$13135_CMP  = capture;
  assign \$procmux$13138_CMP  = dmi_clear;
  assign \$dr_d$78  = \$procmux$13137_Y ;
  assign \$procmux$13141_CMP  = capture;
  assign \$procmux$13144_CMP  = dmi_clear;
  assign \$dr_d$79  = \$procmux$13143_Y ;
  assign \$procmux$13148_CMP  = dmi_clear;
  assign \$dr_d$82  = \$procmux$13147_Y ;
  assign \$procmux$13150_CMP  = dtmcs_select;
  assign \$procmux$13152_CMP  = shift;
  assign \$dtmcs_d$7  = \$procmux$13151_Y ;
  assign \$procmux$13156_CMP  = shift;
  assign \$dtmcs_d$8  = \$procmux$13155_Y ;
  assign \$procmux$13158_CMP  = dtmcs_select;
  assign \$procmux$13160_CMP  = capture;
  assign \$dtmcs_d$4  = \$procmux$13159_Y ;
  assign \$procmux$13163_CMP  = capture;
  assign \$dtmcs_d$5  = \$procmux$13162_Y ;
  assign \$6y  = { 1'h0, dtmcs_q[31:1] };
  assign \$11y  = trst_ni;
  assign \$85y  = trst_ni;
endmodule

/* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:19.8" */
module \dmi_jtag_tap$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap (testmode_i, tck_i, tms_i, trst_ni, td_i, td_o, tdo_oe_o, tck_o, dmi_clear_o, update_o, capture_o, shift_o, tdi_o, dtmcs_select_o, dtmcs_tdo_i, dmi_select_o, dmi_tdo_i);
  wire [31:0] \$14y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire [3:0] \$34y ;
  wire [3:0] \$35y ;
  wire [3:0] \$36y ;
  wire [3:0] \$37y ;
  wire [3:0] \$38y ;
  wire [3:0] \$39y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire [3:0] \$42y ;
  wire [3:0] \$43y ;
  wire [3:0] \$44y ;
  wire [3:0] \$45y ;
  wire [3:0] \$46y ;
  wire [3:0] \$47y ;
  wire [3:0] \$48y ;
  wire [3:0] \$49y ;
  wire \$59y ;
  wire \$60y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  wire \$bypass_d$11 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire \$bypass_d$13 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  wire \$bypass_d$16 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire \$bypass_d$18 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  wire \$bypass_d$20 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$bypass_select$23 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$capture_dr$53 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$capture_ir$54 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$dmi_select_o$25 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$dtmcs_select_o$24 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  wire [31:0] \$idcode_d$10 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  wire [31:0] \$idcode_d$12 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  wire [31:0] \$idcode_d$15 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  wire [31:0] \$idcode_d$17 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  wire [31:0] \$idcode_d$19 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  wire \$idcode_select$22 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:93.5-95.8" */
  wire [4:0] \$jtag_ir_d$3 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  wire [4:0] \$jtag_ir_d$5 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:83.5-85.8" */
  wire [4:0] \$jtag_ir_shift_d$1 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  wire [4:0] \$jtag_ir_shift_d$2 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  wire [4:0] \$jtag_ir_shift_d$4 ;
  wire \$procmux$11735_Y ;
  wire \$procmux$11736_CMP ;
  wire \$procmux$11737_CMP ;
  wire \$procmux$11738_CMP ;
  wire \$procmux$11740_Y ;
  wire \$procmux$11741_CMP ;
  wire \$procmux$11744_Y ;
  wire \$procmux$11745_CMP ;
  wire \$procmux$11748_Y ;
  wire \$procmux$11749_CMP ;
  wire \$procmux$11753_Y ;
  wire \$procmux$11754_CMP ;
  wire \$procmux$11757_Y ;
  wire \$procmux$11758_CMP ;
  wire \$procmux$11759_CMP ;
  wire \$procmux$11760_CMP ;
  wire \$procmux$11765_Y ;
  wire \$procmux$11766_CMP ;
  wire \$procmux$11768_Y ;
  wire \$procmux$11769_CMP ;
  wire [31:0] \$procmux$11771_Y ;
  wire \$procmux$11772_CMP ;
  wire \$procmux$11774_Y ;
  wire \$procmux$11775_CMP ;
  wire \$procmux$11776_Y ;
  wire \$procmux$11777_CMP ;
  wire [31:0] \$procmux$11778_Y ;
  wire \$procmux$11779_CMP ;
  wire [31:0] \$procmux$11780_Y ;
  wire \$procmux$11781_CMP ;
  wire \$procmux$11784_Y ;
  wire \$procmux$11785_CMP ;
  wire [31:0] \$procmux$11788_Y ;
  wire \$procmux$11789_CMP ;
  wire \$procmux$11791_Y ;
  wire \$procmux$11792_CMP ;
  wire \$procmux$11793_Y ;
  wire \$procmux$11794_CMP ;
  wire [31:0] \$procmux$11795_Y ;
  wire \$procmux$11796_CMP ;
  wire [31:0] \$procmux$11797_Y ;
  wire \$procmux$11798_CMP ;
  wire \$procmux$11800_Y ;
  wire \$procmux$11801_CMP ;
  wire [31:0] \$procmux$11803_Y ;
  wire \$procmux$11804_CMP ;
  wire [3:0] \$procmux$11805_Y ;
  wire \$procmux$11806_CMP ;
  wire \$procmux$11807_CMP ;
  wire \$procmux$11808_CMP ;
  wire \$procmux$11809_CMP ;
  wire \$procmux$11810_CMP ;
  wire \$procmux$11811_CMP ;
  wire \$procmux$11812_CMP ;
  wire \$procmux$11813_CMP ;
  wire \$procmux$11814_CMP ;
  wire \$procmux$11815_CMP ;
  wire \$procmux$11816_CMP ;
  wire \$procmux$11817_CMP ;
  wire \$procmux$11818_CMP ;
  wire \$procmux$11819_CMP ;
  wire \$procmux$11820_CMP ;
  wire \$procmux$11821_CMP ;
  wire \$procmux$11837_Y ;
  wire \$procmux$11838_CMP ;
  wire \$procmux$11839_Y ;
  wire \$procmux$11840_CMP ;
  wire \$procmux$11845_Y ;
  wire \$procmux$11846_CMP ;
  wire \$procmux$11852_Y ;
  wire \$procmux$11853_CMP ;
  wire \$procmux$11866_Y ;
  wire \$procmux$11867_CMP ;
  wire \$procmux$11879_Y ;
  wire \$procmux$11880_CMP ;
  wire \$procmux$11888_Y ;
  wire \$procmux$11889_CMP ;
  wire [4:0] \$procmux$11891_Y ;
  wire \$procmux$11892_CMP ;
  wire [4:0] \$procmux$11894_Y ;
  wire \$procmux$11895_CMP ;
  wire [4:0] \$procmux$11897_Y ;
  wire \$procmux$11898_CMP ;
  wire [4:0] \$procmux$11900_Y ;
  wire \$procmux$11901_CMP ;
  wire [4:0] \$procmux$11902_Y ;
  wire \$procmux$11903_CMP ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$shift_dr$52 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$shift_ir$55 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire [3:0] \$tap_state_d$50 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  wire \$tdo_mux$27 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  wire \$tdo_mux$28 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$test_logic_reset$57 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$update_dr$51 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  wire \$update_ir$56 ;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:124.16" */
  wire bypass_d;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:124.26" */
  wire bypass_q;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:122.16" */
  wire bypass_select;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:58.30" */
  wire capture_dr;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:76.9" */
  wire capture_ir;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:40.23" */
  output capture_o;
  wire capture_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:38.23" */
  output dmi_clear_o;
  wire dmi_clear_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:46.23" */
  output dmi_select_o;
  wire dmi_select_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:47.23" */
  input dmi_tdo_i;
  wire dmi_tdo_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:43.23" */
  output dtmcs_select_o;
  wire dtmcs_select_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:44.23" */
  input dtmcs_tdo_i;
  wire dtmcs_tdo_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:120.16" */
  wire [31:0] idcode_d;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:120.26" */
  wire [31:0] idcode_q;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:121.16" */
  wire idcode_select;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:75.25" */
  wire [4:0] jtag_ir_d;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:75.36" */
  wire [4:0] jtag_ir_q;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:73.25" */
  wire [4:0] jtag_ir_shift_d;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:73.42" */
  wire [4:0] jtag_ir_shift_q;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:58.20" */
  wire shift_dr;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:76.21" */
  wire shift_ir;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:41.23" */
  output shift_o;
  wire shift_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:57.28" */
  wire [3:0] tap_state_d;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:57.15" */
  wire [3:0] tap_state_q;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:28.23" */
  input tck_i;
  wire tck_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:188.9" */
  wire tck_n;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:188.16" */
  wire tck_ni;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:36.23" */
  output tck_o;
  wire tck_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:31.23" */
  input td_i;
  wire td_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:32.23" */
  output td_o;
  wire td_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:42.23" */
  output tdi_o;
  wire tdi_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:168.9" */
  wire tdo_mux;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:33.23" */
  output tdo_oe_o;
  wire tdo_oe_o;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:76.42" */
  wire test_logic_reset;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:34.23" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:29.23" */
  input tms_i;
  wire tms_i;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:30.23" */
  input trst_ni;
  wire trst_ni;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:58.9" */
  wire update_dr;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:76.31" */
  wire update_ir;
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:39.23" */
  output update_o;
  wire update_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(trst_ni),
    .Y(\$30y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:209.20-209.39" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(shift_ir),
    .B(shift_dr),
    .Y(\$32y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:231.23-231.61" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$34  (
    .A(4'h1),
    .B(4'h0),
    .S(tms_i),
    .Y(\$34y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:235.23-235.59" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$35  (
    .A(4'h1),
    .B(4'h2),
    .S(tms_i),
    .Y(\$35y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:239.23-239.57" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$36  (
    .A(4'h3),
    .B(4'h9),
    .S(tms_i),
    .Y(\$36y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:243.23-243.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$37  (
    .A(4'h4),
    .B(4'h5),
    .S(tms_i),
    .Y(\$37y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:247.23-247.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$38  (
    .A(4'h4),
    .B(4'h5),
    .S(tms_i),
    .Y(\$38y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:250.23-250.51" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$39  (
    .A(4'h6),
    .B(4'h8),
    .S(tms_i),
    .Y(\$39y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:253.23-253.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$40  (
    .A(4'h6),
    .B(4'h7),
    .S(tms_i),
    .Y(\$40y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:256.23-256.51" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$41  (
    .A(4'h4),
    .B(4'h8),
    .S(tms_i),
    .Y(\$41y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:260.23-260.59" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$42  (
    .A(4'h1),
    .B(4'h2),
    .S(tms_i),
    .Y(\$42y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:264.23-264.59" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$43  (
    .A(4'ha),
    .B(4'h0),
    .S(tms_i),
    .Y(\$43y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:272.23-272.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$44  (
    .A(4'hb),
    .B(4'hc),
    .S(tms_i),
    .Y(\$44y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:280.23-280.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$45  (
    .A(4'hb),
    .B(4'hc),
    .S(tms_i),
    .Y(\$45y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:283.23-283.51" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$46  (
    .A(4'hd),
    .B(4'hf),
    .S(tms_i),
    .Y(\$46y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:287.23-287.50" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$47  (
    .A(4'hd),
    .B(4'he),
    .S(tms_i),
    .Y(\$47y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:290.23-290.51" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$48  (
    .A(4'hb),
    .B(4'hf),
    .S(tms_i),
    .Y(\$48y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:298.23-298.59" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$49  (
    .A(4'h1),
    .B(4'h2),
    .S(tms_i),
    .Y(\$49y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(trst_ni),
    .Y(\$59y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(trst_ni),
    .Y(\$7y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$bypass_q  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(bypass_d),
    .Q(bypass_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$idcode_q  (
    .AD(32'd202137011),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(idcode_d),
    .Q(idcode_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$jtag_ir_q  (
    .AD(5'h01),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_d),
    .Q(jtag_ir_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:104.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$jtag_ir_shift_q  (
    .AD(5'h00),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(jtag_ir_shift_d),
    .Q(jtag_ir_shift_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:304.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$tap_state_q  (
    .AD(4'h1),
    .ALOAD(trst_ni),
    .CLK(tck_i),
    .D(tap_state_d),
    .Q(tap_state_q)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$td_o  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_n),
    .D(tdo_mux),
    .Q(td_o)
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:203.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$tdo_oe_o  (
    .AD(1'h0),
    .ALOAD(trst_ni),
    .CLK(tck_n),
    .D(\$32y ),
    .Q(tdo_oe_o)
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$11735  (
    .A(bypass_q),
    .B({ idcode_q[0], dtmcs_tdo_i, dmi_tdo_i }),
    .S({ \$procmux$11738_CMP , \$procmux$11737_CMP , \$procmux$11736_CMP  }),
    .Y(\$procmux$11735_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:179.25-179.45|rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11736_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$11736_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:178.25-178.47|rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11737_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$11737_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:177.25-177.47|rtl/riscv-dbg/dmi_jtag_tap.sv:176.7-181.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11738_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$11738_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:173.7-173.36|rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11740  (
    .A(\$procmux$11735_Y ),
    .B(1'hx),
    .S(\$procmux$11741_CMP ),
    .Y(\$procmux$11740_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:173.7-173.36|rtl/riscv-dbg/dmi_jtag_tap.sv:172.5-182.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11744  (
    .A(\$tdo_mux$27 ),
    .B(jtag_ir_shift_q[0]),
    .S(\$procmux$11745_CMP ),
    .Y(\$procmux$11744_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11748  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11749_CMP ),
    .Y(\$procmux$11748_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11749_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$11749_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11753  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11754_CMP ),
    .Y(\$procmux$11753_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11754_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$11754_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$11757  (
    .A(1'h1),
    .B(3'h0),
    .S({ \$procmux$11760_CMP , \$procmux$11759_CMP , \$procmux$11758_CMP  }),
    .Y(\$procmux$11757_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:159.18-159.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11758_CMP0  (
    .A(jtag_ir_q),
    .B(5'h11),
    .Y(\$procmux$11758_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:158.18-158.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11759_CMP0  (
    .A(jtag_ir_q),
    .B(5'h10),
    .Y(\$procmux$11759_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11760_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$11760_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11765  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11766_CMP ),
    .Y(\$procmux$11765_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:157.18-157.40|rtl/riscv-dbg/dmi_jtag_tap.sv:155.5-162.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$procmux$11766_CMP0  (
    .A(jtag_ir_q),
    .B(5'h01),
    .Y(\$procmux$11766_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11768  (
    .A(\$bypass_d$18 ),
    .B(1'h0),
    .S(\$procmux$11769_CMP ),
    .Y(\$procmux$11768_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:140.27-144.8|rtl/riscv-dbg/dmi_jtag_tap.sv:140.5-144.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11771  (
    .A(\$idcode_d$17 ),
    .B(32'd202137011),
    .S(\$procmux$11772_CMP ),
    .Y(\$procmux$11771_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:137.27-137.43|rtl/riscv-dbg/dmi_jtag_tap.sv:137.7-137.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11774  (
    .A(\$bypass_d$13 ),
    .B(td_i),
    .S(\$procmux$11775_CMP ),
    .Y(\$procmux$11774_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11776  (
    .A(1'hx),
    .B(\$procmux$11774_Y ),
    .S(\$procmux$11777_CMP ),
    .Y(\$procmux$11776_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:136.27-136.65|rtl/riscv-dbg/dmi_jtag_tap.sv:136.7-136.65" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11778  (
    .A(\$idcode_d$12 ),
    .B({ td_i, \$14y [30:0] }),
    .S(\$procmux$11779_CMP ),
    .Y(\$procmux$11778_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11780  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11778_Y ),
    .S(\$procmux$11781_CMP ),
    .Y(\$procmux$11780_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11784  (
    .A(\$bypass_d$13 ),
    .B(\$bypass_d$16 ),
    .S(\$procmux$11785_CMP ),
    .Y(\$procmux$11784_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:135.19-138.8|rtl/riscv-dbg/dmi_jtag_tap.sv:135.5-138.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11788  (
    .A(\$idcode_d$12 ),
    .B(\$idcode_d$15 ),
    .S(\$procmux$11789_CMP ),
    .Y(\$procmux$11788_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:132.26-132.42|rtl/riscv-dbg/dmi_jtag_tap.sv:132.7-132.42" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11791  (
    .A(bypass_q),
    .B(1'h0),
    .S(\$procmux$11792_CMP ),
    .Y(\$procmux$11791_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11793  (
    .A(1'hx),
    .B(\$procmux$11791_Y ),
    .S(\$procmux$11794_CMP ),
    .Y(\$procmux$11793_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:131.26-131.49|rtl/riscv-dbg/dmi_jtag_tap.sv:131.7-131.49" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11795  (
    .A(idcode_q),
    .B(32'd202137011),
    .S(\$procmux$11796_CMP ),
    .Y(\$procmux$11795_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11797  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11795_Y ),
    .S(\$procmux$11798_CMP ),
    .Y(\$procmux$11797_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11800  (
    .A(bypass_q),
    .B(\$bypass_d$11 ),
    .S(\$procmux$11801_CMP ),
    .Y(\$procmux$11800_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:130.21-133.8|rtl/riscv-dbg/dmi_jtag_tap.sv:130.5-133.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11803  (
    .A(idcode_q),
    .B(\$idcode_d$10 ),
    .S(\$procmux$11804_CMP ),
    .Y(\$procmux$11803_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$pmux  #(
    .S_WIDTH(32'd16),
    .WIDTH(32'd4)
  ) \$procmux$11805  (
    .A(4'hx),
    .B({ \$34y , \$35y , \$36y , \$37y , \$38y , \$39y , \$40y , \$41y , \$42y , \$43y , \$44y , \$45y , \$46y , \$47y , \$48y , \$49y  }),
    .S({ \$procmux$11821_CMP , \$procmux$11820_CMP , \$procmux$11819_CMP , \$procmux$11818_CMP , \$procmux$11817_CMP , \$procmux$11816_CMP , \$procmux$11815_CMP , \$procmux$11814_CMP , \$procmux$11813_CMP , \$procmux$11812_CMP , \$procmux$11811_CMP , \$procmux$11810_CMP , \$procmux$11809_CMP , \$procmux$11808_CMP , \$procmux$11807_CMP , \$procmux$11806_CMP  }),
    .Y(\$procmux$11805_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11806_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(\$procmux$11806_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:290.9-290.52|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11807_CMP0  (
    .A(tap_state_q),
    .B(4'he),
    .Y(\$procmux$11807_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:287.9-287.51|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11808_CMP0  (
    .A(tap_state_q),
    .B(4'hd),
    .Y(\$procmux$11808_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:283.9-283.52|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11809_CMP0  (
    .A(tap_state_q),
    .B(4'hc),
    .Y(\$procmux$11809_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11810_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(\$procmux$11810_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11811_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(\$procmux$11811_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:264.9-264.60|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11812_CMP0  (
    .A(tap_state_q),
    .B(4'h9),
    .Y(\$procmux$11812_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11813_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(\$procmux$11813_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:256.9-256.52|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11814_CMP0  (
    .A(tap_state_q),
    .B(4'h7),
    .Y(\$procmux$11814_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:253.9-253.51|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11815_CMP0  (
    .A(tap_state_q),
    .B(4'h6),
    .Y(\$procmux$11815_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:250.9-250.52|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11816_CMP0  (
    .A(tap_state_q),
    .B(4'h5),
    .Y(\$procmux$11816_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11817_CMP0  (
    .A(tap_state_q),
    .B(4'h4),
    .Y(\$procmux$11817_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11818_CMP0  (
    .A(tap_state_q),
    .B(4'h3),
    .Y(\$procmux$11818_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:239.9-239.58|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11819_CMP0  (
    .A(tap_state_q),
    .B(4'h2),
    .Y(\$procmux$11819_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:235.9-235.60|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11820_CMP0  (
    .A(tap_state_q),
    .B(4'h1),
    .Y(\$procmux$11820_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:230.23-233.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11821_CMP0  (
    .A(tap_state_q),
    .Y(\$procmux$11821_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:230.23-233.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11837  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11838_CMP ),
    .Y(\$procmux$11837_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:230.23-233.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11838_CMP0  (
    .A(tap_state_q),
    .Y(\$procmux$11838_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11839  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11840_CMP ),
    .Y(\$procmux$11839_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:296.17-299.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11840_CMP0  (
    .A(tap_state_q),
    .B(4'hf),
    .Y(\$procmux$11840_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11845  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11846_CMP ),
    .Y(\$procmux$11845_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:278.16-281.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11846_CMP0  (
    .A(tap_state_q),
    .B(4'hb),
    .Y(\$procmux$11846_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11852  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11853_CMP ),
    .Y(\$procmux$11852_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:270.18-273.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11853_CMP0  (
    .A(tap_state_q),
    .B(4'ha),
    .Y(\$procmux$11853_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11866  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11867_CMP ),
    .Y(\$procmux$11866_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:241.18-244.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11867_CMP0  (
    .A(tap_state_q),
    .B(4'h3),
    .Y(\$procmux$11867_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11879  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11880_CMP ),
    .Y(\$procmux$11879_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:245.16-248.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11880_CMP0  (
    .A(tap_state_q),
    .B(4'h4),
    .Y(\$procmux$11880_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11888  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11889_CMP ),
    .Y(\$procmux$11888_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:258.17-261.10|rtl/riscv-dbg/dmi_jtag_tap.sv:229.5-301.12" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$11889_CMP0  (
    .A(tap_state_q),
    .B(4'h8),
    .Y(\$procmux$11889_CMP )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$11891  (
    .A(\$jtag_ir_d$3 ),
    .B(5'h01),
    .S(\$procmux$11892_CMP ),
    .Y(\$procmux$11891_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:97.27-101.8|rtl/riscv-dbg/dmi_jtag_tap.sv:97.5-101.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$11894  (
    .A(\$jtag_ir_shift_d$2 ),
    .B(5'h00),
    .S(\$procmux$11895_CMP ),
    .Y(\$procmux$11894_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:94.7-94.46|rtl/riscv-dbg/dmi_jtag_tap.sv:93.5-95.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$11897  (
    .A(jtag_ir_q),
    .B(jtag_ir_shift_q),
    .S(\$procmux$11898_CMP ),
    .Y(\$procmux$11897_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:89.7-89.45|rtl/riscv-dbg/dmi_jtag_tap.sv:88.5-90.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$11900  (
    .A(\$jtag_ir_shift_d$1 ),
    .B(5'h05),
    .S(\$procmux$11901_CMP ),
    .Y(\$procmux$11900_Y )
  );
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:84.7-84.63|rtl/riscv-dbg/dmi_jtag_tap.sv:83.5-85.8" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$11902  (
    .A(jtag_ir_shift_q),
    .B({ td_i, jtag_ir_shift_q[4:1] }),
    .S(\$procmux$11903_CMP ),
    .Y(\$procmux$11902_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:195.15" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux  i_dft_tck_mux (
    .clk0_i(tck_ni),
    .clk1_i(tck_i),
    .clk_o(tck_n),
    .clk_sel_i(testmode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/riscv-dbg/dmi_jtag_tap.sv:190.19" */
  \tc_clk_inverter$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_tck_inv  i_tck_inv (
    .clk_i(tck_i),
    .clk_o(tck_ni)
  );
  assign jtag_ir_shift_d = \$jtag_ir_shift_d$4 ;
  assign jtag_ir_d = \$jtag_ir_d$5 ;
  assign idcode_d = \$idcode_d$19 ;
  assign bypass_d = \$bypass_d$20 ;
  assign idcode_select = \$idcode_select$22 ;
  assign bypass_select = \$bypass_select$23 ;
  assign dtmcs_select_o = \$dtmcs_select_o$24 ;
  assign dmi_select_o = \$dmi_select_o$25 ;
  assign tdo_mux = \$tdo_mux$28 ;
  assign tap_state_d = \$tap_state_d$50 ;
  assign update_dr = \$update_dr$51 ;
  assign shift_dr = \$shift_dr$52 ;
  assign capture_dr = \$capture_dr$53 ;
  assign capture_ir = \$capture_ir$54 ;
  assign shift_ir = \$shift_ir$55 ;
  assign update_ir = \$update_ir$56 ;
  assign test_logic_reset = \$test_logic_reset$57 ;
  assign tck_o = tck_i;
  assign tdi_o = td_i;
  assign update_o = update_dr;
  assign shift_o = shift_dr;
  assign capture_o = capture_dr;
  assign dmi_clear_o = test_logic_reset;
  assign \$procmux$11741_CMP  = shift_ir;
  assign \$tdo_mux$27  = \$procmux$11740_Y ;
  assign \$procmux$11745_CMP  = shift_ir;
  assign \$tdo_mux$28  = \$procmux$11744_Y ;
  assign \$dmi_select_o$25  = \$procmux$11748_Y ;
  assign \$dtmcs_select_o$24  = \$procmux$11753_Y ;
  assign \$bypass_select$23  = \$procmux$11757_Y ;
  assign \$idcode_select$22  = \$procmux$11765_Y ;
  assign \$procmux$11769_CMP  = test_logic_reset;
  assign \$bypass_d$20  = \$procmux$11768_Y ;
  assign \$procmux$11772_CMP  = test_logic_reset;
  assign \$idcode_d$19  = \$procmux$11771_Y ;
  assign \$procmux$11775_CMP  = bypass_select;
  assign \$procmux$11777_CMP  = shift_dr;
  assign \$bypass_d$16  = \$procmux$11776_Y ;
  assign \$procmux$11779_CMP  = idcode_select;
  assign \$procmux$11781_CMP  = shift_dr;
  assign \$idcode_d$15  = \$procmux$11780_Y ;
  assign \$procmux$11785_CMP  = shift_dr;
  assign \$bypass_d$18  = \$procmux$11784_Y ;
  assign \$procmux$11789_CMP  = shift_dr;
  assign \$idcode_d$17  = \$procmux$11788_Y ;
  assign \$procmux$11792_CMP  = bypass_select;
  assign \$procmux$11794_CMP  = capture_dr;
  assign \$bypass_d$11  = \$procmux$11793_Y ;
  assign \$procmux$11796_CMP  = idcode_select;
  assign \$procmux$11798_CMP  = capture_dr;
  assign \$idcode_d$10  = \$procmux$11797_Y ;
  assign \$procmux$11801_CMP  = capture_dr;
  assign \$bypass_d$13  = \$procmux$11800_Y ;
  assign \$procmux$11804_CMP  = capture_dr;
  assign \$idcode_d$12  = \$procmux$11803_Y ;
  assign \$tap_state_d$50  = \$procmux$11805_Y ;
  assign \$test_logic_reset$57  = \$procmux$11837_Y ;
  assign \$update_ir$56  = \$procmux$11839_Y ;
  assign \$shift_ir$55  = \$procmux$11845_Y ;
  assign \$capture_ir$54  = \$procmux$11852_Y ;
  assign \$capture_dr$53  = \$procmux$11866_Y ;
  assign \$shift_dr$52  = \$procmux$11879_Y ;
  assign \$update_dr$51  = \$procmux$11888_Y ;
  assign \$procmux$11892_CMP  = test_logic_reset;
  assign \$jtag_ir_d$5  = \$procmux$11891_Y ;
  assign \$procmux$11895_CMP  = test_logic_reset;
  assign \$jtag_ir_shift_d$4  = \$procmux$11894_Y ;
  assign \$procmux$11898_CMP  = update_ir;
  assign \$jtag_ir_d$3  = \$procmux$11897_Y ;
  assign \$procmux$11901_CMP  = capture_ir;
  assign \$jtag_ir_shift_d$2  = \$procmux$11900_Y ;
  assign \$procmux$11903_CMP  = shift_ir;
  assign \$jtag_ir_shift_d$1  = \$procmux$11902_Y ;
  assign \$14y  = { 1'h0, idcode_q[31:1] };
  assign \$60y  = trst_ni;
  assign \$8y  = trst_ni;
  assign \$31y  = trst_ni;
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_dm_top.i_dm_top.i_dm_csrs.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [33:0] \$14y ;
  wire [67:0] \$15y ;
  wire [67:0] \$16y ;
  wire [67:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [33:0] \$7y ;
  wire [33:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [67:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [67:0] \$mem_q$50 ;
  wire [67:0] \$procmux$1896_Y ;
  wire \$procmux$1897_CMP ;
  wire [1:0] \$procmux$1899_Y ;
  wire \$procmux$1900_CMP ;
  wire \$procmux$1902_Y ;
  wire \$procmux$1903_CMP ;
  wire \$procmux$1905_Y ;
  wire \$procmux$1906_CMP ;
  wire [1:0] \$procmux$1908_Y ;
  wire \$procmux$1909_CMP ;
  wire \$procmux$1911_Y ;
  wire \$procmux$1912_CMP ;
  wire \$procmux$1913_Y ;
  wire \$procmux$1914_CMP ;
  wire [1:0] \$procmux$1917_Y ;
  wire \$procmux$1918_CMP ;
  wire \$procmux$1921_Y ;
  wire \$procmux$1922_CMP ;
  wire \$procmux$1924_Y ;
  wire \$procmux$1925_CMP ;
  wire \$procmux$1926_Y ;
  wire \$procmux$1927_CMP ;
  wire [67:0] \$procmux$1929_Y ;
  wire \$procmux$1930_CMP ;
  wire [1:0] \$procmux$1932_Y ;
  wire \$procmux$1933_CMP ;
  wire \$procmux$1935_Y ;
  wire \$procmux$1936_CMP ;
  wire \$procmux$1938_Y ;
  wire \$procmux$1939_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [33:0] data_i;
  wire [33:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [33:0] data_o;
  wire [33:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [67:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [67:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$14  (
    .A(34'h000000000),
    .B(34'h3ffffffff),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd34)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd34)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd68)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd34)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd34)
  ) \$8  (
    .A(34'hxxxxxxxxx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd34)
  ) \$driver$mem_q[0]  (
    .AD(34'h000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [33:0]),
    .Q(mem_q[33:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd34)
  ) \$driver$mem_q[1]  (
    .AD(34'h000000000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [67:34]),
    .Q(mem_q[67:34])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd68)
  ) \$procmux$1896  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$1897_CMP ),
    .Y(\$procmux$1896_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1899  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$1900_CMP ),
    .Y(\$procmux$1899_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1902  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$1903_CMP ),
    .Y(\$procmux$1902_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1905  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$1906_CMP ),
    .Y(\$procmux$1905_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1908  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$1909_CMP ),
    .Y(\$procmux$1908_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1913  (
    .A(1'hx),
    .B(\$procmux$1911_Y ),
    .S(\$procmux$1914_CMP ),
    .Y(\$procmux$1913_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1917  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$1918_CMP ),
    .Y(\$procmux$1917_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1921  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$1922_CMP ),
    .Y(\$procmux$1921_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1926  (
    .A(1'hx),
    .B(\$procmux$1924_Y ),
    .S(\$procmux$1927_CMP ),
    .Y(\$procmux$1926_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd68)
  ) \$procmux$1929  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$1930_CMP ),
    .Y(\$procmux$1929_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$1932  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$1933_CMP ),
    .Y(\$procmux$1932_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1935  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$1936_CMP ),
    .Y(\$procmux$1935_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1938  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$1939_CMP ),
    .Y(\$procmux$1938_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$1897_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$1896_Y ;
  assign \$procmux$1900_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$1899_Y ;
  assign \$procmux$1903_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$1902_Y ;
  assign \$procmux$1906_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$1905_Y ;
  assign \$procmux$1909_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$1908_Y ;
  assign \$procmux$1912_CMP  = \$28y ;
  assign \$procmux$1914_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$1913_Y ;
  assign \$procmux$1918_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$1917_Y ;
  assign \$procmux$1922_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$1921_Y ;
  assign \$procmux$1925_CMP  = \$18y ;
  assign \$procmux$1927_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$1926_Y ;
  assign \$procmux$1930_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$1929_Y ;
  assign \$procmux$1933_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$1932_Y ;
  assign \$procmux$1936_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$1935_Y ;
  assign \$procmux$1939_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$1938_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$1924_Y  = \$19y [0];
  assign \$procmux$1911_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [1:0] \$14y ;
  wire [3:0] \$15y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [1:0] \$7y ;
  wire [1:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$mem_q$50 ;
  wire [3:0] \$procmux$6126_Y ;
  wire \$procmux$6127_CMP ;
  wire [1:0] \$procmux$6129_Y ;
  wire \$procmux$6130_CMP ;
  wire \$procmux$6132_Y ;
  wire \$procmux$6133_CMP ;
  wire \$procmux$6135_Y ;
  wire \$procmux$6136_CMP ;
  wire [1:0] \$procmux$6138_Y ;
  wire \$procmux$6139_CMP ;
  wire \$procmux$6141_Y ;
  wire \$procmux$6142_CMP ;
  wire \$procmux$6143_Y ;
  wire \$procmux$6144_CMP ;
  wire [1:0] \$procmux$6147_Y ;
  wire \$procmux$6148_CMP ;
  wire \$procmux$6151_Y ;
  wire \$procmux$6152_CMP ;
  wire \$procmux$6154_Y ;
  wire \$procmux$6155_CMP ;
  wire \$procmux$6156_Y ;
  wire \$procmux$6157_CMP ;
  wire [3:0] \$procmux$6159_Y ;
  wire \$procmux$6160_CMP ;
  wire [1:0] \$procmux$6162_Y ;
  wire \$procmux$6163_CMP ;
  wire \$procmux$6165_Y ;
  wire \$procmux$6166_CMP ;
  wire \$procmux$6168_Y ;
  wire \$procmux$6169_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$14  (
    .A(2'h0),
    .B(2'h3),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$8  (
    .A(2'hx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6126  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$6127_CMP ),
    .Y(\$procmux$6126_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6129  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$6130_CMP ),
    .Y(\$procmux$6129_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6132  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$6133_CMP ),
    .Y(\$procmux$6132_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6135  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$6136_CMP ),
    .Y(\$procmux$6135_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6138  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$6139_CMP ),
    .Y(\$procmux$6138_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6143  (
    .A(1'hx),
    .B(\$procmux$6141_Y ),
    .S(\$procmux$6144_CMP ),
    .Y(\$procmux$6143_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6147  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$6148_CMP ),
    .Y(\$procmux$6147_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6151  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$6152_CMP ),
    .Y(\$procmux$6151_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6156  (
    .A(1'hx),
    .B(\$procmux$6154_Y ),
    .S(\$procmux$6157_CMP ),
    .Y(\$procmux$6156_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6159  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$6160_CMP ),
    .Y(\$procmux$6159_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6162  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$6163_CMP ),
    .Y(\$procmux$6162_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6165  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$6166_CMP ),
    .Y(\$procmux$6165_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6168  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$6169_CMP ),
    .Y(\$procmux$6168_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$6127_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$6126_Y ;
  assign \$procmux$6130_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$6129_Y ;
  assign \$procmux$6133_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$6132_Y ;
  assign \$procmux$6136_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$6135_Y ;
  assign \$procmux$6139_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$6138_Y ;
  assign \$procmux$6142_CMP  = \$28y ;
  assign \$procmux$6144_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$6143_Y ;
  assign \$procmux$6148_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$6147_Y ;
  assign \$procmux$6152_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$6151_Y ;
  assign \$procmux$6155_CMP  = \$18y ;
  assign \$procmux$6157_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$6156_Y ;
  assign \$procmux$6160_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$6159_Y ;
  assign \$procmux$6163_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$6162_Y ;
  assign \$procmux$6166_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$6165_Y ;
  assign \$procmux$6169_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$6168_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$6154_Y  = \$19y [0];
  assign \$procmux$6141_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [1:0] \$14y ;
  wire [3:0] \$15y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [1:0] \$7y ;
  wire [1:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$mem_q$50 ;
  wire [3:0] \$procmux$6073_Y ;
  wire \$procmux$6074_CMP ;
  wire [1:0] \$procmux$6076_Y ;
  wire \$procmux$6077_CMP ;
  wire \$procmux$6079_Y ;
  wire \$procmux$6080_CMP ;
  wire \$procmux$6082_Y ;
  wire \$procmux$6083_CMP ;
  wire [1:0] \$procmux$6085_Y ;
  wire \$procmux$6086_CMP ;
  wire \$procmux$6088_Y ;
  wire \$procmux$6089_CMP ;
  wire \$procmux$6090_Y ;
  wire \$procmux$6091_CMP ;
  wire [1:0] \$procmux$6094_Y ;
  wire \$procmux$6095_CMP ;
  wire \$procmux$6098_Y ;
  wire \$procmux$6099_CMP ;
  wire \$procmux$6101_Y ;
  wire \$procmux$6102_CMP ;
  wire \$procmux$6103_Y ;
  wire \$procmux$6104_CMP ;
  wire [3:0] \$procmux$6106_Y ;
  wire \$procmux$6107_CMP ;
  wire [1:0] \$procmux$6109_Y ;
  wire \$procmux$6110_CMP ;
  wire \$procmux$6112_Y ;
  wire \$procmux$6113_CMP ;
  wire \$procmux$6115_Y ;
  wire \$procmux$6116_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$14  (
    .A(2'h0),
    .B(2'h3),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$8  (
    .A(2'hx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6073  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$6074_CMP ),
    .Y(\$procmux$6073_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6076  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$6077_CMP ),
    .Y(\$procmux$6076_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6079  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$6080_CMP ),
    .Y(\$procmux$6079_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6082  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$6083_CMP ),
    .Y(\$procmux$6082_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6085  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$6086_CMP ),
    .Y(\$procmux$6085_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6090  (
    .A(1'hx),
    .B(\$procmux$6088_Y ),
    .S(\$procmux$6091_CMP ),
    .Y(\$procmux$6090_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6094  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$6095_CMP ),
    .Y(\$procmux$6094_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6098  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$6099_CMP ),
    .Y(\$procmux$6098_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6103  (
    .A(1'hx),
    .B(\$procmux$6101_Y ),
    .S(\$procmux$6104_CMP ),
    .Y(\$procmux$6103_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6106  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$6107_CMP ),
    .Y(\$procmux$6106_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6109  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$6110_CMP ),
    .Y(\$procmux$6109_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6112  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$6113_CMP ),
    .Y(\$procmux$6112_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6115  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$6116_CMP ),
    .Y(\$procmux$6115_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$6074_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$6073_Y ;
  assign \$procmux$6077_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$6076_Y ;
  assign \$procmux$6080_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$6079_Y ;
  assign \$procmux$6083_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$6082_Y ;
  assign \$procmux$6086_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$6085_Y ;
  assign \$procmux$6089_CMP  = \$28y ;
  assign \$procmux$6091_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$6090_Y ;
  assign \$procmux$6095_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$6094_Y ;
  assign \$procmux$6099_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$6098_Y ;
  assign \$procmux$6102_CMP  = \$18y ;
  assign \$procmux$6104_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$6103_Y ;
  assign \$procmux$6107_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$6106_Y ;
  assign \$procmux$6110_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$6109_Y ;
  assign \$procmux$6113_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$6112_Y ;
  assign \$procmux$6116_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$6115_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$6101_Y  = \$19y [0];
  assign \$procmux$6088_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [1:0] \$14y ;
  wire [3:0] \$15y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [1:0] \$7y ;
  wire [1:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$mem_q$50 ;
  wire [3:0] \$procmux$6020_Y ;
  wire \$procmux$6021_CMP ;
  wire [1:0] \$procmux$6023_Y ;
  wire \$procmux$6024_CMP ;
  wire \$procmux$6026_Y ;
  wire \$procmux$6027_CMP ;
  wire \$procmux$6029_Y ;
  wire \$procmux$6030_CMP ;
  wire [1:0] \$procmux$6032_Y ;
  wire \$procmux$6033_CMP ;
  wire \$procmux$6035_Y ;
  wire \$procmux$6036_CMP ;
  wire \$procmux$6037_Y ;
  wire \$procmux$6038_CMP ;
  wire [1:0] \$procmux$6041_Y ;
  wire \$procmux$6042_CMP ;
  wire \$procmux$6045_Y ;
  wire \$procmux$6046_CMP ;
  wire \$procmux$6048_Y ;
  wire \$procmux$6049_CMP ;
  wire \$procmux$6050_Y ;
  wire \$procmux$6051_CMP ;
  wire [3:0] \$procmux$6053_Y ;
  wire \$procmux$6054_CMP ;
  wire [1:0] \$procmux$6056_Y ;
  wire \$procmux$6057_CMP ;
  wire \$procmux$6059_Y ;
  wire \$procmux$6060_CMP ;
  wire \$procmux$6062_Y ;
  wire \$procmux$6063_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$14  (
    .A(2'h0),
    .B(2'h3),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$8  (
    .A(2'hx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6020  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$6021_CMP ),
    .Y(\$procmux$6020_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6023  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$6024_CMP ),
    .Y(\$procmux$6023_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6026  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$6027_CMP ),
    .Y(\$procmux$6026_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6029  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$6030_CMP ),
    .Y(\$procmux$6029_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6032  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$6033_CMP ),
    .Y(\$procmux$6032_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6037  (
    .A(1'hx),
    .B(\$procmux$6035_Y ),
    .S(\$procmux$6038_CMP ),
    .Y(\$procmux$6037_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6041  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$6042_CMP ),
    .Y(\$procmux$6041_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6045  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$6046_CMP ),
    .Y(\$procmux$6045_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6050  (
    .A(1'hx),
    .B(\$procmux$6048_Y ),
    .S(\$procmux$6051_CMP ),
    .Y(\$procmux$6050_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6053  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$6054_CMP ),
    .Y(\$procmux$6053_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6056  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$6057_CMP ),
    .Y(\$procmux$6056_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6059  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$6060_CMP ),
    .Y(\$procmux$6059_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6062  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$6063_CMP ),
    .Y(\$procmux$6062_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$6021_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$6020_Y ;
  assign \$procmux$6024_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$6023_Y ;
  assign \$procmux$6027_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$6026_Y ;
  assign \$procmux$6030_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$6029_Y ;
  assign \$procmux$6033_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$6032_Y ;
  assign \$procmux$6036_CMP  = \$28y ;
  assign \$procmux$6038_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$6037_Y ;
  assign \$procmux$6042_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$6041_Y ;
  assign \$procmux$6046_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$6045_Y ;
  assign \$procmux$6049_CMP  = \$18y ;
  assign \$procmux$6051_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$6050_Y ;
  assign \$procmux$6054_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$6053_Y ;
  assign \$procmux$6057_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$6056_Y ;
  assign \$procmux$6060_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$6059_Y ;
  assign \$procmux$6063_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$6062_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$6048_Y  = \$19y [0];
  assign \$procmux$6035_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [1:0] \$14y ;
  wire [3:0] \$15y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [1:0] \$7y ;
  wire [1:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$mem_q$50 ;
  wire [3:0] \$procmux$5967_Y ;
  wire \$procmux$5968_CMP ;
  wire [1:0] \$procmux$5970_Y ;
  wire \$procmux$5971_CMP ;
  wire \$procmux$5973_Y ;
  wire \$procmux$5974_CMP ;
  wire \$procmux$5976_Y ;
  wire \$procmux$5977_CMP ;
  wire [1:0] \$procmux$5979_Y ;
  wire \$procmux$5980_CMP ;
  wire \$procmux$5982_Y ;
  wire \$procmux$5983_CMP ;
  wire \$procmux$5984_Y ;
  wire \$procmux$5985_CMP ;
  wire [1:0] \$procmux$5988_Y ;
  wire \$procmux$5989_CMP ;
  wire \$procmux$5992_Y ;
  wire \$procmux$5993_CMP ;
  wire \$procmux$5995_Y ;
  wire \$procmux$5996_CMP ;
  wire \$procmux$5997_Y ;
  wire \$procmux$5998_CMP ;
  wire [3:0] \$procmux$6000_Y ;
  wire \$procmux$6001_CMP ;
  wire [1:0] \$procmux$6003_Y ;
  wire \$procmux$6004_CMP ;
  wire \$procmux$6006_Y ;
  wire \$procmux$6007_CMP ;
  wire \$procmux$6009_Y ;
  wire \$procmux$6010_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$14  (
    .A(2'h0),
    .B(2'h3),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$8  (
    .A(2'hx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5967  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$5968_CMP ),
    .Y(\$procmux$5967_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5970  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$5971_CMP ),
    .Y(\$procmux$5970_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5973  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$5974_CMP ),
    .Y(\$procmux$5973_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5976  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$5977_CMP ),
    .Y(\$procmux$5976_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5979  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$5980_CMP ),
    .Y(\$procmux$5979_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5984  (
    .A(1'hx),
    .B(\$procmux$5982_Y ),
    .S(\$procmux$5985_CMP ),
    .Y(\$procmux$5984_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5988  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$5989_CMP ),
    .Y(\$procmux$5988_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5992  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$5993_CMP ),
    .Y(\$procmux$5992_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5997  (
    .A(1'hx),
    .B(\$procmux$5995_Y ),
    .S(\$procmux$5998_CMP ),
    .Y(\$procmux$5997_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6000  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$6001_CMP ),
    .Y(\$procmux$6000_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6003  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$6004_CMP ),
    .Y(\$procmux$6003_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6006  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$6007_CMP ),
    .Y(\$procmux$6006_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6009  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$6010_CMP ),
    .Y(\$procmux$6009_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$5968_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$5967_Y ;
  assign \$procmux$5971_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$5970_Y ;
  assign \$procmux$5974_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$5973_Y ;
  assign \$procmux$5977_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$5976_Y ;
  assign \$procmux$5980_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$5979_Y ;
  assign \$procmux$5983_CMP  = \$28y ;
  assign \$procmux$5985_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$5984_Y ;
  assign \$procmux$5989_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$5988_Y ;
  assign \$procmux$5993_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$5992_Y ;
  assign \$procmux$5996_CMP  = \$18y ;
  assign \$procmux$5998_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$5997_Y ;
  assign \$procmux$6001_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$6000_Y ;
  assign \$procmux$6004_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$6003_Y ;
  assign \$procmux$6007_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$6006_Y ;
  assign \$procmux$6010_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$6009_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$5995_Y  = \$19y [0];
  assign \$procmux$5982_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.gen_no_id_assign.i_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [1:0] \$14y ;
  wire [3:0] \$15y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire [31:0] \$19y ;
  wire \$1y ;
  wire [31:0] \$21y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire [31:0] \$29y ;
  wire \$2y ;
  wire [31:0] \$31y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$6y ;
  wire [1:0] \$7y ;
  wire [1:0] \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [3:0] \$mem_n$25 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [3:0] \$mem_q$50 ;
  wire [3:0] \$procmux$5914_Y ;
  wire \$procmux$5915_CMP ;
  wire [1:0] \$procmux$5917_Y ;
  wire \$procmux$5918_CMP ;
  wire \$procmux$5920_Y ;
  wire \$procmux$5921_CMP ;
  wire \$procmux$5923_Y ;
  wire \$procmux$5924_CMP ;
  wire [1:0] \$procmux$5926_Y ;
  wire \$procmux$5927_CMP ;
  wire \$procmux$5929_Y ;
  wire \$procmux$5930_CMP ;
  wire \$procmux$5931_Y ;
  wire \$procmux$5932_CMP ;
  wire [1:0] \$procmux$5935_Y ;
  wire \$procmux$5936_CMP ;
  wire \$procmux$5939_Y ;
  wire \$procmux$5940_CMP ;
  wire \$procmux$5942_Y ;
  wire \$procmux$5943_CMP ;
  wire \$procmux$5944_Y ;
  wire \$procmux$5945_CMP ;
  wire [3:0] \$procmux$5947_Y ;
  wire \$procmux$5948_CMP ;
  wire [1:0] \$procmux$5950_Y ;
  wire \$procmux$5951_CMP ;
  wire \$procmux$5953_Y ;
  wire \$procmux$5954_CMP ;
  wire \$procmux$5956_Y ;
  wire \$procmux$5957_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$32 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$43 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$24 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$33 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$39 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$45 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$23 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$44 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [1:0] data_i;
  wire [1:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [1:0] data_o;
  wire [1:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [3:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [3:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h2),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(push_i),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A({ 1'h0, write_pointer_q }),
    .B(3'h2),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$14  (
    .A(2'h0),
    .B(2'h3),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$15  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$16  (
    .A(\$14y ),
    .S(write_pointer_q),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd4)
  ) \$17  (
    .A(mem_q),
    .B({ data_i, data_i }),
    .S(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$19  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$21  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(empty_o),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(pop_i),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$29  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$29y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$31  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(push_i),
    .B(pop_i),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(full_o),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(empty_o),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(rst_ni),
    .Y(\$41y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(rst_ni),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(3'h2),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd2)
  ) \$7  (
    .A(mem_q),
    .S(read_pointer_q),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$8  (
    .A(2'hx),
    .B(\$7y ),
    .S(\$6y ),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(full_o),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[0]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [1:0]),
    .Q(mem_q[1:0])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$mem_q[1]  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$50 [3:2]),
    .Q(mem_q[3:2])
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$43 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$45 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$44 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5914  (
    .A(mem_q),
    .B(\$mem_n$25 ),
    .S(\$procmux$5915_CMP ),
    .Y(\$procmux$5914_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5917  (
    .A(\$status_cnt_n$39 ),
    .B(2'h0),
    .S(\$procmux$5918_CMP ),
    .Y(\$procmux$5917_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5920  (
    .A(\$write_pointer_n$23 ),
    .B(1'h0),
    .S(\$procmux$5921_CMP ),
    .Y(\$procmux$5920_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5923  (
    .A(\$read_pointer_n$32 ),
    .B(1'h0),
    .S(\$procmux$5924_CMP ),
    .Y(\$procmux$5923_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5926  (
    .A(\$status_cnt_n$33 ),
    .B(status_cnt_q),
    .S(\$procmux$5927_CMP ),
    .Y(\$procmux$5926_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5931  (
    .A(1'hx),
    .B(\$procmux$5929_Y ),
    .S(\$procmux$5932_CMP ),
    .Y(\$procmux$5931_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5935  (
    .A(\$status_cnt_n$24 ),
    .B(\$31y [1:0]),
    .S(\$procmux$5936_CMP ),
    .Y(\$procmux$5935_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5939  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$30 ),
    .S(\$procmux$5940_CMP ),
    .Y(\$procmux$5939_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5944  (
    .A(1'hx),
    .B(\$procmux$5942_Y ),
    .S(\$procmux$5945_CMP ),
    .Y(\$procmux$5944_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5947  (
    .A(mem_q),
    .B(\$17y ),
    .S(\$procmux$5948_CMP ),
    .Y(\$procmux$5947_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5950  (
    .A(status_cnt_q),
    .B(\$21y [1:0]),
    .S(\$procmux$5951_CMP ),
    .Y(\$procmux$5950_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5953  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$20 ),
    .S(\$procmux$5954_CMP ),
    .Y(\$procmux$5953_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5956  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$5957_CMP ),
    .Y(\$procmux$5956_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$22 ;
  assign read_pointer_n = \$read_pointer_n$32 ;
  assign write_pointer_n = \$write_pointer_n$23 ;
  assign status_cnt_n = \$status_cnt_n$39 ;
  assign mem_n = \$mem_n$25 ;
  assign data_o = \$8y ;
  assign \$procmux$5915_CMP  = \$49y ;
  assign \$mem_q$50  = \$procmux$5914_Y ;
  assign \$procmux$5918_CMP  = flush_i;
  assign \$status_cnt_q$45  = \$procmux$5917_Y ;
  assign \$procmux$5921_CMP  = flush_i;
  assign \$write_pointer_q$44  = \$procmux$5920_Y ;
  assign \$procmux$5924_CMP  = flush_i;
  assign \$read_pointer_q$43  = \$procmux$5923_Y ;
  assign \$procmux$5927_CMP  = \$38y ;
  assign \$status_cnt_n$39  = \$procmux$5926_Y ;
  assign \$procmux$5930_CMP  = \$28y ;
  assign \$procmux$5932_CMP  = \$27y ;
  assign \$read_pointer_n$30  = \$procmux$5931_Y ;
  assign \$procmux$5936_CMP  = \$27y ;
  assign \$status_cnt_n$33  = \$procmux$5935_Y ;
  assign \$procmux$5940_CMP  = \$27y ;
  assign \$read_pointer_n$32  = \$procmux$5939_Y ;
  assign \$procmux$5943_CMP  = \$18y ;
  assign \$procmux$5945_CMP  = \$10y ;
  assign \$write_pointer_n$20  = \$procmux$5944_Y ;
  assign \$procmux$5948_CMP  = \$10y ;
  assign \$mem_n$25  = \$procmux$5947_Y ;
  assign \$procmux$5951_CMP  = \$10y ;
  assign \$status_cnt_n$24  = \$procmux$5950_Y ;
  assign \$procmux$5954_CMP  = \$10y ;
  assign \$write_pointer_n$23  = \$procmux$5953_Y ;
  assign \$procmux$5957_CMP  = \$10y ;
  assign \$gate_clock$22  = \$procmux$5956_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$18y  = 1'h0;
  assign \$49y  = \$10y ;
  assign \$28y  = 1'h0;
  assign \$42y  = rst_ni;
  assign \$48y  = rst_ni;
  assign \$procmux$5942_Y  = \$19y [0];
  assign \$procmux$5929_Y  = \$29y [0];
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_periph_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire [2:0] \$13y ;
  wire [2:0] \$14y ;
  wire \$15y ;
  wire [31:0] \$16y ;
  wire [31:0] \$18y ;
  wire \$1y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [31:0] \$26y ;
  wire [31:0] \$28y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$4y ;
  wire \$6y ;
  wire [2:0] \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$19 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$mem_n$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$mem_q$47 ;
  wire [2:0] \$procmux$11479_Y ;
  wire \$procmux$11480_CMP ;
  wire [1:0] \$procmux$11482_Y ;
  wire \$procmux$11483_CMP ;
  wire \$procmux$11485_Y ;
  wire \$procmux$11486_CMP ;
  wire \$procmux$11488_Y ;
  wire \$procmux$11489_CMP ;
  wire [1:0] \$procmux$11491_Y ;
  wire \$procmux$11492_CMP ;
  wire \$procmux$11494_Y ;
  wire \$procmux$11495_CMP ;
  wire \$procmux$11496_Y ;
  wire \$procmux$11497_CMP ;
  wire [1:0] \$procmux$11500_Y ;
  wire \$procmux$11501_CMP ;
  wire \$procmux$11504_Y ;
  wire \$procmux$11505_CMP ;
  wire \$procmux$11507_Y ;
  wire \$procmux$11508_CMP ;
  wire \$procmux$11509_Y ;
  wire \$procmux$11510_CMP ;
  wire [2:0] \$procmux$11512_Y ;
  wire \$procmux$11513_CMP ;
  wire [1:0] \$procmux$11515_Y ;
  wire \$procmux$11516_CMP ;
  wire \$procmux$11518_Y ;
  wire \$procmux$11519_CMP ;
  wire \$procmux$11521_Y ;
  wire \$procmux$11522_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$27 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$29 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$40 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$21 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$36 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$42 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$17 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$41 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$10y ),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$13  (
    .A(3'h0),
    .B(3'h7),
    .S(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$14  (
    .A(mem_q),
    .B(data_i),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:80.17-80.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$16  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$18  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(empty_o),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(pop_i),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:92.17-92.64" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(read_pointer_q),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$26  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$28  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(push_i),
    .B(pop_i),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(full_o),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(empty_o),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(rst_ni),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(rst_ni),
    .Y(\$44y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$7  (
    .A(3'hx),
    .B(mem_q),
    .S(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(full_o),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(push_i),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$47 ),
    .Q(mem_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$40 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$42 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$41 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11479  (
    .A(mem_q),
    .B(\$mem_n$22 ),
    .S(\$procmux$11480_CMP ),
    .Y(\$procmux$11479_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11482  (
    .A(\$status_cnt_n$36 ),
    .B(2'h0),
    .S(\$procmux$11483_CMP ),
    .Y(\$procmux$11482_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11485  (
    .A(\$write_pointer_n$20 ),
    .B(1'h0),
    .S(\$procmux$11486_CMP ),
    .Y(\$procmux$11485_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11488  (
    .A(\$read_pointer_n$29 ),
    .B(1'h0),
    .S(\$procmux$11489_CMP ),
    .Y(\$procmux$11488_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11491  (
    .A(\$status_cnt_n$30 ),
    .B(status_cnt_q),
    .S(\$procmux$11492_CMP ),
    .Y(\$procmux$11491_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:93.17-93.37|rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11494  (
    .A(1'h0),
    .B(\$26y [0]),
    .S(read_pointer_q),
    .Y(\$procmux$11494_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11496  (
    .A(1'hx),
    .B(\$procmux$11494_Y ),
    .S(\$procmux$11497_CMP ),
    .Y(\$procmux$11496_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11500  (
    .A(\$status_cnt_n$21 ),
    .B(\$28y [1:0]),
    .S(\$procmux$11501_CMP ),
    .Y(\$procmux$11500_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11504  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$27 ),
    .S(\$procmux$11505_CMP ),
    .Y(\$procmux$11504_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:81.17-81.38|rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11507  (
    .A(1'h0),
    .B(\$16y [0]),
    .S(write_pointer_q),
    .Y(\$procmux$11507_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11509  (
    .A(1'hx),
    .B(\$procmux$11507_Y ),
    .S(\$procmux$11510_CMP ),
    .Y(\$procmux$11509_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11512  (
    .A(mem_q),
    .B(\$14y ),
    .S(\$procmux$11513_CMP ),
    .Y(\$procmux$11512_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11515  (
    .A(status_cnt_q),
    .B(\$18y [1:0]),
    .S(\$procmux$11516_CMP ),
    .Y(\$procmux$11515_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11518  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$17 ),
    .S(\$procmux$11519_CMP ),
    .Y(\$procmux$11518_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11521  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$11522_CMP ),
    .Y(\$procmux$11521_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$19 ;
  assign read_pointer_n = \$read_pointer_n$29 ;
  assign write_pointer_n = \$write_pointer_n$20 ;
  assign status_cnt_n = \$status_cnt_n$36 ;
  assign mem_n = \$mem_n$22 ;
  assign data_o = \$7y ;
  assign \$procmux$11480_CMP  = \$46y ;
  assign \$mem_q$47  = \$procmux$11479_Y ;
  assign \$procmux$11483_CMP  = flush_i;
  assign \$status_cnt_q$42  = \$procmux$11482_Y ;
  assign \$procmux$11486_CMP  = flush_i;
  assign \$write_pointer_q$41  = \$procmux$11485_Y ;
  assign \$procmux$11489_CMP  = flush_i;
  assign \$read_pointer_q$40  = \$procmux$11488_Y ;
  assign \$procmux$11492_CMP  = \$35y ;
  assign \$status_cnt_n$36  = \$procmux$11491_Y ;
  assign \$procmux$11495_CMP  = \$25y ;
  assign \$procmux$11497_CMP  = \$24y ;
  assign \$read_pointer_n$27  = \$procmux$11496_Y ;
  assign \$procmux$11501_CMP  = \$24y ;
  assign \$status_cnt_n$30  = \$procmux$11500_Y ;
  assign \$procmux$11505_CMP  = \$24y ;
  assign \$read_pointer_n$29  = \$procmux$11504_Y ;
  assign \$procmux$11508_CMP  = \$15y ;
  assign \$procmux$11510_CMP  = \$9y ;
  assign \$write_pointer_n$17  = \$procmux$11509_Y ;
  assign \$procmux$11513_CMP  = \$9y ;
  assign \$mem_n$22  = \$procmux$11512_Y ;
  assign \$procmux$11516_CMP  = \$9y ;
  assign \$status_cnt_n$21  = \$procmux$11515_Y ;
  assign \$procmux$11519_CMP  = \$9y ;
  assign \$write_pointer_n$20  = \$procmux$11518_Y ;
  assign \$procmux$11522_CMP  = \$9y ;
  assign \$gate_clock$19  = \$procmux$11521_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$46y  = \$9y ;
  assign \$39y  = rst_ni;
  assign \$45y  = rst_ni;
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_croc.i_xbar_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire [2:0] \$13y ;
  wire [2:0] \$14y ;
  wire \$15y ;
  wire [31:0] \$16y ;
  wire [31:0] \$18y ;
  wire \$1y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [31:0] \$26y ;
  wire [31:0] \$28y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$4y ;
  wire \$6y ;
  wire [2:0] \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$19 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$mem_n$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$mem_q$47 ;
  wire [2:0] \$procmux$11610_Y ;
  wire \$procmux$11611_CMP ;
  wire [1:0] \$procmux$11613_Y ;
  wire \$procmux$11614_CMP ;
  wire \$procmux$11616_Y ;
  wire \$procmux$11617_CMP ;
  wire \$procmux$11619_Y ;
  wire \$procmux$11620_CMP ;
  wire [1:0] \$procmux$11622_Y ;
  wire \$procmux$11623_CMP ;
  wire \$procmux$11625_Y ;
  wire \$procmux$11626_CMP ;
  wire \$procmux$11627_Y ;
  wire \$procmux$11628_CMP ;
  wire [1:0] \$procmux$11631_Y ;
  wire \$procmux$11632_CMP ;
  wire \$procmux$11635_Y ;
  wire \$procmux$11636_CMP ;
  wire \$procmux$11638_Y ;
  wire \$procmux$11639_CMP ;
  wire \$procmux$11640_Y ;
  wire \$procmux$11641_CMP ;
  wire [2:0] \$procmux$11643_Y ;
  wire \$procmux$11644_CMP ;
  wire [1:0] \$procmux$11646_Y ;
  wire \$procmux$11647_CMP ;
  wire \$procmux$11649_Y ;
  wire \$procmux$11650_CMP ;
  wire \$procmux$11652_Y ;
  wire \$procmux$11653_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$27 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$29 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$40 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$21 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$36 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$42 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$17 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$41 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$10y ),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$13  (
    .A(3'h0),
    .B(3'h7),
    .S(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$14  (
    .A(mem_q),
    .B(data_i),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:80.17-80.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$16  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$18  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(empty_o),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(pop_i),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:92.17-92.64" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(read_pointer_q),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$26  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$28  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(push_i),
    .B(pop_i),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(full_o),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(empty_o),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(rst_ni),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(rst_ni),
    .Y(\$44y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$7  (
    .A(3'hx),
    .B(mem_q),
    .S(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(full_o),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(push_i),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$47 ),
    .Q(mem_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$40 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$42 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$41 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11610  (
    .A(mem_q),
    .B(\$mem_n$22 ),
    .S(\$procmux$11611_CMP ),
    .Y(\$procmux$11610_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11613  (
    .A(\$status_cnt_n$36 ),
    .B(2'h0),
    .S(\$procmux$11614_CMP ),
    .Y(\$procmux$11613_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11616  (
    .A(\$write_pointer_n$20 ),
    .B(1'h0),
    .S(\$procmux$11617_CMP ),
    .Y(\$procmux$11616_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11619  (
    .A(\$read_pointer_n$29 ),
    .B(1'h0),
    .S(\$procmux$11620_CMP ),
    .Y(\$procmux$11619_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11622  (
    .A(\$status_cnt_n$30 ),
    .B(status_cnt_q),
    .S(\$procmux$11623_CMP ),
    .Y(\$procmux$11622_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:93.17-93.37|rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11625  (
    .A(1'h0),
    .B(\$26y [0]),
    .S(read_pointer_q),
    .Y(\$procmux$11625_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11627  (
    .A(1'hx),
    .B(\$procmux$11625_Y ),
    .S(\$procmux$11628_CMP ),
    .Y(\$procmux$11627_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11631  (
    .A(\$status_cnt_n$21 ),
    .B(\$28y [1:0]),
    .S(\$procmux$11632_CMP ),
    .Y(\$procmux$11631_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11635  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$27 ),
    .S(\$procmux$11636_CMP ),
    .Y(\$procmux$11635_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:81.17-81.38|rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11638  (
    .A(1'h0),
    .B(\$16y [0]),
    .S(write_pointer_q),
    .Y(\$procmux$11638_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11640  (
    .A(1'hx),
    .B(\$procmux$11638_Y ),
    .S(\$procmux$11641_CMP ),
    .Y(\$procmux$11640_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11643  (
    .A(mem_q),
    .B(\$14y ),
    .S(\$procmux$11644_CMP ),
    .Y(\$procmux$11643_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$11646  (
    .A(status_cnt_q),
    .B(\$18y [1:0]),
    .S(\$procmux$11647_CMP ),
    .Y(\$procmux$11646_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11649  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$17 ),
    .S(\$procmux$11650_CMP ),
    .Y(\$procmux$11649_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11652  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$11653_CMP ),
    .Y(\$procmux$11652_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$19 ;
  assign read_pointer_n = \$read_pointer_n$29 ;
  assign write_pointer_n = \$write_pointer_n$20 ;
  assign status_cnt_n = \$status_cnt_n$36 ;
  assign mem_n = \$mem_n$22 ;
  assign data_o = \$7y ;
  assign \$procmux$11611_CMP  = \$46y ;
  assign \$mem_q$47  = \$procmux$11610_Y ;
  assign \$procmux$11614_CMP  = flush_i;
  assign \$status_cnt_q$42  = \$procmux$11613_Y ;
  assign \$procmux$11617_CMP  = flush_i;
  assign \$write_pointer_q$41  = \$procmux$11616_Y ;
  assign \$procmux$11620_CMP  = flush_i;
  assign \$read_pointer_q$40  = \$procmux$11619_Y ;
  assign \$procmux$11623_CMP  = \$35y ;
  assign \$status_cnt_n$36  = \$procmux$11622_Y ;
  assign \$procmux$11626_CMP  = \$25y ;
  assign \$procmux$11628_CMP  = \$24y ;
  assign \$read_pointer_n$27  = \$procmux$11627_Y ;
  assign \$procmux$11632_CMP  = \$24y ;
  assign \$status_cnt_n$30  = \$procmux$11631_Y ;
  assign \$procmux$11636_CMP  = \$24y ;
  assign \$read_pointer_n$29  = \$procmux$11635_Y ;
  assign \$procmux$11639_CMP  = \$15y ;
  assign \$procmux$11641_CMP  = \$9y ;
  assign \$write_pointer_n$17  = \$procmux$11640_Y ;
  assign \$procmux$11644_CMP  = \$9y ;
  assign \$mem_n$22  = \$procmux$11643_Y ;
  assign \$procmux$11647_CMP  = \$9y ;
  assign \$status_cnt_n$21  = \$procmux$11646_Y ;
  assign \$procmux$11650_CMP  = \$9y ;
  assign \$write_pointer_n$20  = \$procmux$11649_Y ;
  assign \$procmux$11653_CMP  = \$9y ;
  assign \$gate_clock$19  = \$procmux$11652_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$46y  = \$9y ;
  assign \$39y  = rst_ni;
  assign \$45y  = rst_ni;
endmodule

/* src = "rtl/common_cells/fifo_v3.sv:15.8" */
module \fifo_v3$croc_chip.i_croc_soc.i_user.i_user_err.i_id_fifo (clk_i, rst_ni, testmode_i, flush_i, full_o, empty_o, data_i, push_i, data_o, pop_i, usage_o);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire [2:0] \$13y ;
  wire [2:0] \$14y ;
  wire \$15y ;
  wire [31:0] \$16y ;
  wire [31:0] \$18y ;
  wire \$1y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [31:0] \$26y ;
  wire [31:0] \$28y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$4y ;
  wire \$6y ;
  wire [2:0] \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$gate_clock$19 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [2:0] \$mem_n$22 ;
  /* src = "rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  wire [2:0] \$mem_q$47 ;
  wire [2:0] \$procmux$10812_Y ;
  wire \$procmux$10813_CMP ;
  wire [1:0] \$procmux$10815_Y ;
  wire \$procmux$10816_CMP ;
  wire \$procmux$10818_Y ;
  wire \$procmux$10819_CMP ;
  wire \$procmux$10821_Y ;
  wire \$procmux$10822_CMP ;
  wire [1:0] \$procmux$10824_Y ;
  wire \$procmux$10825_CMP ;
  wire \$procmux$10827_Y ;
  wire \$procmux$10828_CMP ;
  wire \$procmux$10829_Y ;
  wire \$procmux$10830_CMP ;
  wire [1:0] \$procmux$10833_Y ;
  wire \$procmux$10834_CMP ;
  wire \$procmux$10837_Y ;
  wire \$procmux$10838_CMP ;
  wire \$procmux$10840_Y ;
  wire \$procmux$10841_CMP ;
  wire \$procmux$10842_Y ;
  wire \$procmux$10843_CMP ;
  wire [2:0] \$procmux$10845_Y ;
  wire \$procmux$10846_CMP ;
  wire [1:0] \$procmux$10848_Y ;
  wire \$procmux$10849_CMP ;
  wire \$procmux$10851_Y ;
  wire \$procmux$10852_CMP ;
  wire \$procmux$10854_Y ;
  wire \$procmux$10855_CMP ;
  /* src = "rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  wire \$read_pointer_n$27 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire \$read_pointer_n$29 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$read_pointer_q$40 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire [1:0] \$status_cnt_n$21 ;
  /* src = "rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  wire [1:0] \$status_cnt_n$30 ;
  /* src = "rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  wire [1:0] \$status_cnt_n$36 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire [1:0] \$status_cnt_q$42 ;
  /* src = "rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  wire \$write_pointer_n$17 ;
  /* src = "rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  wire \$write_pointer_n$20 ;
  /* src = "rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  wire \$write_pointer_q$41 ;
  /* src = "rtl/common_cells/fifo_v3.sv:23.19" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/fifo_v3.sv:32.19" */
  input [2:0] data_i;
  wire [2:0] data_i;
  /* src = "rtl/common_cells/fifo_v3.sv:35.19" */
  output [2:0] data_o;
  wire [2:0] data_o;
  /* src = "rtl/common_cells/fifo_v3.sv:29.19" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/fifo_v3.sv:25.19" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/fifo_v3.sv:28.19" */
  output full_o;
  wire full_o;
  /* src = "rtl/common_cells/fifo_v3.sv:42.11" */
  wire gate_clock;
  /* src = "rtl/common_cells/fifo_v3.sv:49.29" */
  wire [2:0] mem_n;
  /* src = "rtl/common_cells/fifo_v3.sv:49.36" */
  wire [2:0] mem_q;
  /* src = "rtl/common_cells/fifo_v3.sv:36.19" */
  input pop_i;
  wire pop_i;
  /* src = "rtl/common_cells/fifo_v3.sv:33.19" */
  input push_i;
  wire push_i;
  /* src = "rtl/common_cells/fifo_v3.sv:44.30" */
  wire read_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.46" */
  wire read_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:24.19" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/fifo_v3.sv:47.26" */
  wire [1:0] status_cnt_n;
  /* src = "rtl/common_cells/fifo_v3.sv:47.40" */
  wire [1:0] status_cnt_q;
  /* src = "rtl/common_cells/fifo_v3.sv:26.19" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/common_cells/fifo_v3.sv:30.36" */
  output usage_o;
  wire usage_o;
  /* src = "rtl/common_cells/fifo_v3.sv:44.62" */
  wire write_pointer_n;
  /* src = "rtl/common_cells/fifo_v3.sv:44.79" */
  wire write_pointer_q;
  /* src = "rtl/common_cells/fifo_v3.sv:57.32-57.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(status_cnt_q),
    .B(2'h1),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:58.32-58.49" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(status_cnt_q),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A({ 1'h0, write_pointer_q }),
    .B(1'h0),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A({ 1'h0, write_pointer_q }),
    .B(2'h1),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$10y ),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$13  (
    .A(3'h0),
    .B(3'h7),
    .S(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:75.13-75.44" */
  \$bwmux  #(
    .WIDTH(32'd3)
  ) \$14  (
    .A(mem_q),
    .B(data_i),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:80.17-80.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(write_pointer_q),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:83.35-83.54" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$16  (
    .A({ 31'h00000000, write_pointer_q }),
    .B(32'd1),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:85.31-85.47" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$18  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.22-88.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(empty_o),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.13-88.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(pop_i),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:92.17-92.64" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(read_pointer_q),
    .Y(\$25y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:95.34-95.52" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$26  (
    .A({ 31'h00000000, read_pointer_q }),
    .B(32'd1),
    .Y(\$26y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:97.30-97.46" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$28  (
    .A({ 30'h00000000, status_cnt_q }),
    .B(32'd1),
    .Y(\$28y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(push_i),
    .B(pop_i),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.33-101.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(full_o),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.44-101.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(empty_o),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:101.13-101.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$33y ),
    .B(\$34y ),
    .Y(\$35y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(rst_ni),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(rst_ni),
    .Y(\$44y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A({ 1'h0, read_pointer_q }),
    .B(2'h1),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:68.51-68.72" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$7  (
    .A(3'hx),
    .B(mem_q),
    .S(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.23-73.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(full_o),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.13-73.30" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(push_i),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:134.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$mem_q[0]  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$mem_q$47 ),
    .Q(mem_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$read_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$read_pointer_q$40 ),
    .Q(read_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$status_cnt_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$status_cnt_q$42 ),
    .Q(status_cnt_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:116.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$write_pointer_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$write_pointer_q$41 ),
    .Q(write_pointer_q)
  );
  /* src = "rtl/common_cells/fifo_v3.sv:138.13-138.28|rtl/common_cells/fifo_v3.sv:137.18-139.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10812  (
    .A(mem_q),
    .B(\$mem_n$22 ),
    .S(\$procmux$10813_CMP ),
    .Y(\$procmux$10812_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10815  (
    .A(\$status_cnt_n$36 ),
    .B(2'h0),
    .S(\$procmux$10816_CMP ),
    .Y(\$procmux$10815_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10818  (
    .A(\$write_pointer_n$20 ),
    .B(1'h0),
    .S(\$procmux$10819_CMP ),
    .Y(\$procmux$10818_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:122.26-126.17|rtl/common_cells/fifo_v3.sv:122.13-130.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10821  (
    .A(\$read_pointer_n$29 ),
    .B(1'h0),
    .S(\$procmux$10822_CMP ),
    .Y(\$procmux$10821_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:102.13-102.43|rtl/common_cells/fifo_v3.sv:101.9-102.43" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10824  (
    .A(\$status_cnt_n$30 ),
    .B(status_cnt_q),
    .S(\$procmux$10825_CMP ),
    .Y(\$procmux$10824_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:93.17-93.37|rtl/common_cells/fifo_v3.sv:92.13-95.53" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10827  (
    .A(1'h0),
    .B(\$26y [0]),
    .S(read_pointer_q),
    .Y(\$procmux$10827_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10829  (
    .A(1'hx),
    .B(\$procmux$10827_Y ),
    .S(\$procmux$10830_CMP ),
    .Y(\$procmux$10829_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10833  (
    .A(\$status_cnt_n$21 ),
    .B(\$28y [1:0]),
    .S(\$procmux$10834_CMP ),
    .Y(\$procmux$10833_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:88.32-98.12|rtl/common_cells/fifo_v3.sv:88.9-98.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10837  (
    .A(read_pointer_q),
    .B(\$read_pointer_n$27 ),
    .S(\$procmux$10838_CMP ),
    .Y(\$procmux$10837_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/fifo_v3.sv:81.17-81.38|rtl/common_cells/fifo_v3.sv:80.13-83.55" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10840  (
    .A(1'h0),
    .B(\$16y [0]),
    .S(write_pointer_q),
    .Y(\$procmux$10840_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10842  (
    .A(1'hx),
    .B(\$procmux$10840_Y ),
    .S(\$procmux$10843_CMP ),
    .Y(\$procmux$10842_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$10845  (
    .A(mem_q),
    .B(\$14y ),
    .S(\$procmux$10846_CMP ),
    .Y(\$procmux$10845_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$10848  (
    .A(status_cnt_q),
    .B(\$18y [1:0]),
    .S(\$procmux$10849_CMP ),
    .Y(\$procmux$10848_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10851  (
    .A(write_pointer_q),
    .B(\$write_pointer_n$17 ),
    .S(\$procmux$10852_CMP ),
    .Y(\$procmux$10851_Y )
  );
  /* src = "rtl/common_cells/fifo_v3.sv:73.32-86.12|rtl/common_cells/fifo_v3.sv:73.9-86.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10854  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$10855_CMP ),
    .Y(\$procmux$10854_Y )
  );
  assign usage_o = status_cnt_q[0];
  assign full_o = \$0y ;
  assign empty_o = \$4y ;
  assign gate_clock = \$gate_clock$19 ;
  assign read_pointer_n = \$read_pointer_n$29 ;
  assign write_pointer_n = \$write_pointer_n$20 ;
  assign status_cnt_n = \$status_cnt_n$36 ;
  assign mem_n = \$mem_n$22 ;
  assign data_o = \$7y ;
  assign \$procmux$10813_CMP  = \$46y ;
  assign \$mem_q$47  = \$procmux$10812_Y ;
  assign \$procmux$10816_CMP  = flush_i;
  assign \$status_cnt_q$42  = \$procmux$10815_Y ;
  assign \$procmux$10819_CMP  = flush_i;
  assign \$write_pointer_q$41  = \$procmux$10818_Y ;
  assign \$procmux$10822_CMP  = flush_i;
  assign \$read_pointer_q$40  = \$procmux$10821_Y ;
  assign \$procmux$10825_CMP  = \$35y ;
  assign \$status_cnt_n$36  = \$procmux$10824_Y ;
  assign \$procmux$10828_CMP  = \$25y ;
  assign \$procmux$10830_CMP  = \$24y ;
  assign \$read_pointer_n$27  = \$procmux$10829_Y ;
  assign \$procmux$10834_CMP  = \$24y ;
  assign \$status_cnt_n$30  = \$procmux$10833_Y ;
  assign \$procmux$10838_CMP  = \$24y ;
  assign \$read_pointer_n$29  = \$procmux$10837_Y ;
  assign \$procmux$10841_CMP  = \$15y ;
  assign \$procmux$10843_CMP  = \$9y ;
  assign \$write_pointer_n$17  = \$procmux$10842_Y ;
  assign \$procmux$10846_CMP  = \$9y ;
  assign \$mem_n$22  = \$procmux$10845_Y ;
  assign \$procmux$10849_CMP  = \$9y ;
  assign \$status_cnt_n$21  = \$procmux$10848_Y ;
  assign \$procmux$10852_CMP  = \$9y ;
  assign \$write_pointer_n$20  = \$procmux$10851_Y ;
  assign \$procmux$10855_CMP  = \$9y ;
  assign \$gate_clock$19  = \$procmux$10854_Y ;
  assign \$2y  = 1'h0;
  assign \$3y  = 1'h1;
  assign \$4y  = \$1y ;
  assign \$46y  = \$9y ;
  assign \$39y  = rst_ni;
  assign \$45y  = rst_ni;
endmodule

/* src = "rtl/gpio/gpio.sv:12.8" */
module \gpio$croc_chip.i_croc_soc.i_croc.i_gpio (clk_i, rst_ni, gpio_i, gpio_o, gpio_out_en_o, gpio_in_sync_o, obi_req_i, obi_rsp_o, interrupt_o);
  wire \$100y ;
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$105y ;
  wire \$106y ;
  wire \$107y ;
  wire \$109y ;
  wire \$10y ;
  wire \$110y ;
  wire \$112y ;
  wire \$113y ;
  wire \$115y ;
  wire \$116y ;
  wire \$117y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$120y ;
  wire \$121y ;
  wire \$122y ;
  wire \$123y ;
  wire \$124y ;
  wire \$125y ;
  wire \$126y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$131y ;
  wire \$132y ;
  wire \$134y ;
  wire \$135y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$140y ;
  wire \$141y ;
  wire \$142y ;
  wire \$143y ;
  wire \$144y ;
  wire \$145y ;
  wire \$147y ;
  wire \$148y ;
  wire \$14y ;
  wire \$150y ;
  wire \$151y ;
  wire \$153y ;
  wire \$154y ;
  wire \$155y ;
  wire \$156y ;
  wire \$157y ;
  wire \$158y ;
  wire \$159y ;
  wire \$15y ;
  wire \$160y ;
  wire \$161y ;
  wire \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$166y ;
  wire \$167y ;
  wire \$169y ;
  wire \$170y ;
  wire \$172y ;
  wire \$173y ;
  wire \$174y ;
  wire \$175y ;
  wire \$176y ;
  wire \$177y ;
  wire \$178y ;
  wire \$179y ;
  wire \$17y ;
  wire \$180y ;
  wire \$181y ;
  wire \$182y ;
  wire \$183y ;
  wire \$185y ;
  wire \$186y ;
  wire \$188y ;
  wire \$189y ;
  wire \$18y ;
  wire \$191y ;
  wire \$192y ;
  wire \$193y ;
  wire \$194y ;
  wire \$195y ;
  wire \$196y ;
  wire \$197y ;
  wire \$198y ;
  wire \$199y ;
  wire \$1y ;
  wire \$200y ;
  wire \$201y ;
  wire \$202y ;
  wire \$204y ;
  wire \$205y ;
  wire \$207y ;
  wire \$208y ;
  wire \$20y ;
  wire \$210y ;
  wire \$211y ;
  wire \$212y ;
  wire \$213y ;
  wire \$214y ;
  wire \$215y ;
  wire \$216y ;
  wire \$217y ;
  wire \$218y ;
  wire \$219y ;
  wire \$21y ;
  wire \$220y ;
  wire \$221y ;
  wire \$223y ;
  wire \$224y ;
  wire \$226y ;
  wire \$227y ;
  wire \$229y ;
  wire \$22y ;
  wire \$230y ;
  wire \$231y ;
  wire \$232y ;
  wire \$233y ;
  wire \$234y ;
  wire \$235y ;
  wire \$236y ;
  wire \$237y ;
  wire \$238y ;
  wire \$239y ;
  wire \$23y ;
  wire \$240y ;
  wire \$242y ;
  wire \$243y ;
  wire \$245y ;
  wire \$246y ;
  wire \$248y ;
  wire \$249y ;
  wire \$24y ;
  wire \$250y ;
  wire \$251y ;
  wire \$252y ;
  wire \$253y ;
  wire \$254y ;
  wire \$255y ;
  wire \$256y ;
  wire \$257y ;
  wire \$258y ;
  wire \$259y ;
  wire \$25y ;
  wire \$261y ;
  wire \$262y ;
  wire \$264y ;
  wire \$265y ;
  wire \$267y ;
  wire \$268y ;
  wire \$269y ;
  wire \$26y ;
  wire \$270y ;
  wire \$271y ;
  wire \$272y ;
  wire \$273y ;
  wire \$274y ;
  wire \$275y ;
  wire \$276y ;
  wire \$277y ;
  wire \$278y ;
  wire \$27y ;
  wire \$280y ;
  wire \$281y ;
  wire \$283y ;
  wire \$284y ;
  wire \$286y ;
  wire \$287y ;
  wire \$288y ;
  wire \$289y ;
  wire \$28y ;
  wire \$290y ;
  wire \$291y ;
  wire \$292y ;
  wire \$293y ;
  wire \$294y ;
  wire \$295y ;
  wire \$296y ;
  wire \$297y ;
  wire \$299y ;
  wire \$29y ;
  wire \$2y ;
  wire \$300y ;
  wire \$302y ;
  wire \$303y ;
  wire \$305y ;
  wire \$306y ;
  wire \$307y ;
  wire \$308y ;
  wire \$309y ;
  wire \$30y ;
  wire \$310y ;
  wire \$311y ;
  wire \$312y ;
  wire \$313y ;
  wire \$314y ;
  wire \$315y ;
  wire \$316y ;
  wire \$318y ;
  wire \$319y ;
  wire \$31y ;
  wire \$321y ;
  wire \$322y ;
  wire \$324y ;
  wire \$325y ;
  wire \$326y ;
  wire \$327y ;
  wire \$328y ;
  wire \$329y ;
  wire \$330y ;
  wire \$331y ;
  wire \$332y ;
  wire \$333y ;
  wire \$334y ;
  wire \$335y ;
  wire \$337y ;
  wire \$338y ;
  wire \$33y ;
  wire \$340y ;
  wire \$341y ;
  wire \$343y ;
  wire \$344y ;
  wire \$345y ;
  wire \$346y ;
  wire \$347y ;
  wire \$348y ;
  wire \$349y ;
  wire \$34y ;
  wire \$350y ;
  wire \$351y ;
  wire \$352y ;
  wire \$353y ;
  wire \$354y ;
  wire \$356y ;
  wire \$357y ;
  wire \$359y ;
  wire \$360y ;
  wire \$362y ;
  wire \$363y ;
  wire \$364y ;
  wire \$365y ;
  wire \$366y ;
  wire \$367y ;
  wire \$368y ;
  wire \$369y ;
  wire \$36y ;
  wire \$370y ;
  wire \$371y ;
  wire \$372y ;
  wire \$373y ;
  wire \$375y ;
  wire \$376y ;
  wire \$378y ;
  wire \$379y ;
  wire \$37y ;
  wire \$381y ;
  wire \$382y ;
  wire \$383y ;
  wire \$384y ;
  wire \$385y ;
  wire \$386y ;
  wire \$387y ;
  wire \$388y ;
  wire \$389y ;
  wire \$390y ;
  wire \$391y ;
  wire \$392y ;
  wire \$394y ;
  wire \$395y ;
  wire \$397y ;
  wire \$398y ;
  wire \$39y ;
  wire \$3y ;
  wire \$400y ;
  wire \$401y ;
  wire \$402y ;
  wire \$403y ;
  wire \$404y ;
  wire \$405y ;
  wire \$406y ;
  wire \$407y ;
  wire \$408y ;
  wire \$409y ;
  wire \$40y ;
  wire \$410y ;
  wire \$411y ;
  wire \$413y ;
  wire \$414y ;
  wire \$416y ;
  wire \$417y ;
  wire \$419y ;
  wire \$41y ;
  wire \$420y ;
  wire \$421y ;
  wire \$422y ;
  wire \$423y ;
  wire \$424y ;
  wire \$425y ;
  wire \$426y ;
  wire \$427y ;
  wire \$428y ;
  wire \$429y ;
  wire \$42y ;
  wire \$430y ;
  wire \$432y ;
  wire \$433y ;
  wire \$435y ;
  wire \$436y ;
  wire \$438y ;
  wire \$439y ;
  wire \$43y ;
  wire \$440y ;
  wire \$441y ;
  wire \$442y ;
  wire \$443y ;
  wire \$444y ;
  wire \$445y ;
  wire \$446y ;
  wire \$447y ;
  wire \$448y ;
  wire \$449y ;
  wire \$44y ;
  wire \$451y ;
  wire \$452y ;
  wire \$454y ;
  wire \$455y ;
  wire \$457y ;
  wire \$458y ;
  wire \$459y ;
  wire \$45y ;
  wire \$460y ;
  wire \$461y ;
  wire \$462y ;
  wire \$463y ;
  wire \$464y ;
  wire \$465y ;
  wire \$466y ;
  wire \$467y ;
  wire \$468y ;
  wire \$46y ;
  wire \$470y ;
  wire \$471y ;
  wire \$473y ;
  wire \$474y ;
  wire \$476y ;
  wire \$477y ;
  wire \$478y ;
  wire \$479y ;
  wire \$47y ;
  wire \$480y ;
  wire \$481y ;
  wire \$482y ;
  wire \$483y ;
  wire \$484y ;
  wire \$485y ;
  wire \$486y ;
  wire \$487y ;
  wire \$489y ;
  wire \$48y ;
  wire \$490y ;
  wire \$492y ;
  wire \$493y ;
  wire \$495y ;
  wire \$496y ;
  wire \$497y ;
  wire \$498y ;
  wire \$499y ;
  wire \$49y ;
  wire \$4y ;
  wire \$500y ;
  wire \$501y ;
  wire \$502y ;
  wire \$503y ;
  wire \$504y ;
  wire \$505y ;
  wire \$506y ;
  wire \$508y ;
  wire \$509y ;
  wire \$50y ;
  wire \$511y ;
  wire \$512y ;
  wire \$514y ;
  wire \$515y ;
  wire \$516y ;
  wire \$517y ;
  wire \$518y ;
  wire \$519y ;
  wire \$520y ;
  wire \$521y ;
  wire \$522y ;
  wire \$523y ;
  wire \$524y ;
  wire \$525y ;
  wire \$527y ;
  wire \$528y ;
  wire \$52y ;
  wire \$530y ;
  wire \$531y ;
  wire \$533y ;
  wire \$534y ;
  wire \$535y ;
  wire \$536y ;
  wire \$537y ;
  wire \$538y ;
  wire \$539y ;
  wire \$53y ;
  wire \$540y ;
  wire \$541y ;
  wire \$542y ;
  wire \$543y ;
  wire \$544y ;
  wire \$546y ;
  wire \$547y ;
  wire \$549y ;
  wire \$550y ;
  wire \$552y ;
  wire \$553y ;
  wire \$554y ;
  wire \$555y ;
  wire \$556y ;
  wire \$557y ;
  wire \$558y ;
  wire \$559y ;
  wire \$55y ;
  wire \$560y ;
  wire \$561y ;
  wire \$562y ;
  wire \$563y ;
  wire \$565y ;
  wire \$566y ;
  wire \$568y ;
  wire \$569y ;
  wire \$56y ;
  wire \$571y ;
  wire \$572y ;
  wire \$573y ;
  wire \$574y ;
  wire \$575y ;
  wire \$576y ;
  wire \$577y ;
  wire \$578y ;
  wire \$579y ;
  wire \$580y ;
  wire \$581y ;
  wire \$582y ;
  wire \$584y ;
  wire \$585y ;
  wire \$587y ;
  wire \$588y ;
  wire \$58y ;
  wire \$590y ;
  wire \$591y ;
  wire \$592y ;
  wire \$593y ;
  wire \$594y ;
  wire \$595y ;
  wire \$596y ;
  wire \$597y ;
  wire \$598y ;
  wire \$599y ;
  wire \$59y ;
  wire \$5y ;
  wire \$600y ;
  wire \$601y ;
  wire \$603y ;
  wire \$604y ;
  wire \$606y ;
  wire \$607y ;
  wire \$609y ;
  wire \$60y ;
  wire \$610y ;
  wire \$611y ;
  wire \$612y ;
  wire \$613y ;
  wire \$614y ;
  wire \$615y ;
  wire \$616y ;
  wire \$617y ;
  wire \$618y ;
  wire \$619y ;
  wire \$61y ;
  wire \$620y ;
  wire \$621y ;
  wire \$622y ;
  wire \$623y ;
  wire \$624y ;
  wire \$625y ;
  wire \$626y ;
  wire \$627y ;
  wire \$628y ;
  wire \$629y ;
  wire \$62y ;
  wire \$630y ;
  wire \$631y ;
  wire \$632y ;
  wire \$633y ;
  wire \$634y ;
  wire \$635y ;
  wire \$636y ;
  wire \$637y ;
  wire \$638y ;
  wire \$639y ;
  wire \$63y ;
  wire \$640y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$71y ;
  wire \$72y ;
  wire \$74y ;
  wire \$75y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$85y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$93y ;
  wire \$94y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire \$9y ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[103:102]$396 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[108:107]$415 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[113:112]$434 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[118:117]$453 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[123:122]$472 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[128:127]$491 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[133:132]$510 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[138:137]$529 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[13:12]$54 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[143:142]$548 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[148:147]$567 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[153:152]$586 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[158:157]$605 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[18:17]$73 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[23:22]$92 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[28:27]$111 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[33:32]$130 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[38:37]$149 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[3:2]$16 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[43:42]$168 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[48:47]$187 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[53:52]$206 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[58:57]$225 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[63:62]$244 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[68:67]$263 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[73:72]$282 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[78:77]$301 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[83:82]$320 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[88:87]$339 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[8:7]$35 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[93:92]$358 ;
  /* src = "rtl/gpio/gpio.sv:143.13-146.16" */
  wire [1:0] \$hw2reg[98:97]$377 ;
  wire [1:0] \$procmux$12430_Y ;
  wire \$procmux$12431_CMP ;
  wire [1:0] \$procmux$12432_Y ;
  wire \$procmux$12433_CMP ;
  wire [1:0] \$procmux$12434_Y ;
  wire \$procmux$12435_CMP ;
  wire [1:0] \$procmux$12436_Y ;
  wire \$procmux$12437_CMP ;
  wire [1:0] \$procmux$12438_Y ;
  wire \$procmux$12439_CMP ;
  wire [1:0] \$procmux$12440_Y ;
  wire \$procmux$12441_CMP ;
  wire [1:0] \$procmux$12442_Y ;
  wire \$procmux$12443_CMP ;
  wire [1:0] \$procmux$12444_Y ;
  wire \$procmux$12445_CMP ;
  wire [1:0] \$procmux$12446_Y ;
  wire \$procmux$12447_CMP ;
  wire [1:0] \$procmux$12448_Y ;
  wire \$procmux$12449_CMP ;
  wire [1:0] \$procmux$12450_Y ;
  wire \$procmux$12451_CMP ;
  wire [1:0] \$procmux$12452_Y ;
  wire \$procmux$12453_CMP ;
  wire [1:0] \$procmux$12454_Y ;
  wire \$procmux$12455_CMP ;
  wire [1:0] \$procmux$12456_Y ;
  wire \$procmux$12457_CMP ;
  wire [1:0] \$procmux$12458_Y ;
  wire \$procmux$12459_CMP ;
  wire [1:0] \$procmux$12460_Y ;
  wire \$procmux$12461_CMP ;
  wire [1:0] \$procmux$12462_Y ;
  wire \$procmux$12463_CMP ;
  wire [1:0] \$procmux$12464_Y ;
  wire \$procmux$12465_CMP ;
  wire [1:0] \$procmux$12466_Y ;
  wire \$procmux$12467_CMP ;
  wire [1:0] \$procmux$12468_Y ;
  wire \$procmux$12469_CMP ;
  wire [1:0] \$procmux$12470_Y ;
  wire \$procmux$12471_CMP ;
  wire [1:0] \$procmux$12472_Y ;
  wire \$procmux$12473_CMP ;
  wire [1:0] \$procmux$12474_Y ;
  wire \$procmux$12475_CMP ;
  wire [1:0] \$procmux$12476_Y ;
  wire \$procmux$12477_CMP ;
  wire [1:0] \$procmux$12478_Y ;
  wire \$procmux$12479_CMP ;
  wire [1:0] \$procmux$12480_Y ;
  wire \$procmux$12481_CMP ;
  wire [1:0] \$procmux$12482_Y ;
  wire \$procmux$12483_CMP ;
  wire [1:0] \$procmux$12484_Y ;
  wire \$procmux$12485_CMP ;
  wire [1:0] \$procmux$12486_Y ;
  wire \$procmux$12487_CMP ;
  wire [1:0] \$procmux$12488_Y ;
  wire \$procmux$12489_CMP ;
  wire [1:0] \$procmux$12490_Y ;
  wire \$procmux$12491_CMP ;
  wire [1:0] \$procmux$12492_Y ;
  wire \$procmux$12493_CMP ;
  /* src = "rtl/gpio/gpio.sv:25.34" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[0].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[0].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[0].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[0].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[0].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[0].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[10].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[10].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[10].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[10].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[10].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[10].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[11].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[11].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[11].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[11].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[11].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[11].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[12].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[12].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[12].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[12].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[12].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[12].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[13].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[13].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[13].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[13].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[13].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[13].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[14].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[14].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[14].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[14].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[14].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[14].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[15].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[15].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[15].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[15].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[15].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[15].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[16].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[16].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[16].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[16].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[16].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[16].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[17].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[17].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[17].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[17].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[17].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[17].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[18].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[18].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[18].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[18].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[18].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[18].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[19].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[19].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[19].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[19].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[19].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[19].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[1].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[1].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[1].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[1].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[1].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[1].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[20].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[20].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[20].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[20].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[20].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[20].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[21].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[21].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[21].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[21].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[21].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[21].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[22].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[22].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[22].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[22].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[22].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[22].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[23].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[23].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[23].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[23].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[23].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[23].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[24].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[24].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[24].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[24].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[24].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[24].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[25].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[25].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[25].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[25].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[25].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[25].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[26].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[26].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[26].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[26].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[26].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[26].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[27].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[27].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[27].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[27].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[27].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[27].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[28].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[28].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[28].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[28].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[28].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[28].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[29].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[29].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[29].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[29].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[29].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[29].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[2].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[2].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[2].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[2].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[2].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[2].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[30].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[30].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[30].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[30].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[30].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[30].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[31].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[31].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[31].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[31].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[31].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[31].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[3].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[3].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[3].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[3].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[3].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[3].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[4].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[4].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[4].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[4].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[4].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[4].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[5].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[5].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[5].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[5].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[5].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[5].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[6].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[6].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[6].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[6].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[6].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[6].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[7].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[7].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[7].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[7].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[7].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[7].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[8].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[8].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[8].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[8].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[8].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[8].serial_q ;
  /* src = "rtl/gpio/gpio.sv:95.24" */
  wire \gen_gpios[9].f_edge ;
  /* src = "rtl/gpio/gpio.sv:119.15" */
  wire \gen_gpios[9].is_input ;
  /* src = "rtl/gpio/gpio.sv:120.15" */
  wire \gen_gpios[9].is_output ;
  /* src = "rtl/gpio/gpio.sv:96.24" */
  wire \gen_gpios[9].r_edge ;
  /* src = "rtl/gpio/gpio.sv:97.24" */
  wire \gen_gpios[9].serial_d ;
  /* src = "rtl/gpio/gpio.sv:97.34" */
  wire \gen_gpios[9].serial_q ;
  /* src = "rtl/gpio/gpio.sv:64.25" */
  wire [31:0] gpio_edge;
  /* src = "rtl/gpio/gpio.sv:30.34" */
  input [31:0] gpio_i;
  wire [31:0] gpio_i;
  /* src = "rtl/gpio/gpio.sv:61.25" */
  wire [31:0] gpio_in_sync;
  /* src = "rtl/gpio/gpio.sv:39.34" */
  output [31:0] gpio_in_sync_o;
  wire [31:0] gpio_in_sync_o;
  /* src = "rtl/gpio/gpio.sv:65.25" */
  wire [31:0] gpio_intrpt;
  /* src = "rtl/gpio/gpio.sv:67.9" */
  wire gpio_intrpt_pending;
  /* src = "rtl/gpio/gpio.sv:32.34" */
  output [31:0] gpio_o;
  wire [31:0] gpio_o;
  /* src = "rtl/gpio/gpio.sv:36.34" */
  output [31:0] gpio_out_en_o;
  wire [31:0] gpio_out_en_o;
  /* src = "rtl/gpio/gpio.sv:58.33" */
  wire [159:0] hw2reg;
  /* src = "rtl/gpio/gpio.sv:42.34" */
  output interrupt_o;
  wire interrupt_o;
  /* src = "rtl/gpio/gpio.sv:45.34" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/gpio/gpio.sv:47.34" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/gpio/gpio.sv:57.33" */
  wire [223:0] reg2hw;
  /* src = "rtl/gpio/gpio.sv:27.34" */
  input rst_ni;
  wire rst_ni;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(reg2hw[5]),
    .B(reg2hw[6]),
    .Y(\$10y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$100  (
    .A(\gen_gpios[5].serial_q ),
    .Y(\$100y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$101  (
    .A(\gen_gpios[5].serial_d ),
    .B(\$100y ),
    .Y(\$101y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$102  (
    .A(\gen_gpios[5].f_edge ),
    .B(\gen_gpios[5].r_edge ),
    .S(reg2hw[35]),
    .Y(\$102y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(reg2hw[41]),
    .Y(\$103y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(reg2hw[40]),
    .B(\$103y ),
    .Y(\$104y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$105  (
    .A(reg2hw[40]),
    .B(reg2hw[41]),
    .Y(\$105y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(gpio_in_sync[5]),
    .B(\gen_gpios[5].is_input ),
    .Y(\$106y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(reg2hw[39]),
    .B(\gen_gpios[5].is_output ),
    .Y(\$107y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$109  (
    .A(\gen_gpios[5].is_output ),
    .B(reg2hw[38]),
    .Y(\$109y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(gpio_in_sync[0]),
    .B(\gen_gpios[0].is_input ),
    .Y(\$11y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$110  (
    .A(reg2hw[39]),
    .Y(\$110y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$112  (
    .A(gpio_edge[5]),
    .B(reg2hw[37]),
    .Y(\$112y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(\$112y ),
    .B(\gen_gpios[5].is_input ),
    .Y(\$113y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$115  (
    .A(rst_ni),
    .Y(\$115y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$117  (
    .A(\gen_gpios[6].serial_d ),
    .Y(\$117y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$118  (
    .A(\$117y ),
    .B(\gen_gpios[6].serial_q ),
    .Y(\$118y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(\gen_gpios[6].serial_q ),
    .Y(\$119y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(reg2hw[4]),
    .B(\gen_gpios[0].is_output ),
    .Y(\$12y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$120  (
    .A(\gen_gpios[6].serial_d ),
    .B(\$119y ),
    .Y(\$120y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$121  (
    .A(\gen_gpios[6].f_edge ),
    .B(\gen_gpios[6].r_edge ),
    .S(reg2hw[42]),
    .Y(\$121y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(reg2hw[48]),
    .Y(\$122y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$123  (
    .A(reg2hw[47]),
    .B(\$122y ),
    .Y(\$123y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(reg2hw[47]),
    .B(reg2hw[48]),
    .Y(\$124y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$125  (
    .A(gpio_in_sync[6]),
    .B(\gen_gpios[6].is_input ),
    .Y(\$125y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(reg2hw[46]),
    .B(\gen_gpios[6].is_output ),
    .Y(\$126y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(\gen_gpios[6].is_output ),
    .B(reg2hw[45]),
    .Y(\$128y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(reg2hw[46]),
    .Y(\$129y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(gpio_edge[6]),
    .B(reg2hw[44]),
    .Y(\$131y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(\$131y ),
    .B(\gen_gpios[6].is_input ),
    .Y(\$132y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(rst_ni),
    .Y(\$134y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(\gen_gpios[7].serial_d ),
    .Y(\$136y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(\$136y ),
    .B(\gen_gpios[7].serial_q ),
    .Y(\$137y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(\gen_gpios[7].serial_q ),
    .Y(\$138y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(\gen_gpios[7].serial_d ),
    .B(\$138y ),
    .Y(\$139y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\gen_gpios[0].is_output ),
    .B(reg2hw[3]),
    .Y(\$14y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$140  (
    .A(\gen_gpios[7].f_edge ),
    .B(\gen_gpios[7].r_edge ),
    .S(reg2hw[49]),
    .Y(\$140y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(reg2hw[55]),
    .Y(\$141y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(reg2hw[54]),
    .B(\$141y ),
    .Y(\$142y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(reg2hw[54]),
    .B(reg2hw[55]),
    .Y(\$143y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(gpio_in_sync[7]),
    .B(\gen_gpios[7].is_input ),
    .Y(\$144y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$145  (
    .A(reg2hw[53]),
    .B(\gen_gpios[7].is_output ),
    .Y(\$145y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$147  (
    .A(\gen_gpios[7].is_output ),
    .B(reg2hw[52]),
    .Y(\$147y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(reg2hw[53]),
    .Y(\$148y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(reg2hw[4]),
    .Y(\$15y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$150  (
    .A(gpio_edge[7]),
    .B(reg2hw[51]),
    .Y(\$150y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(\$150y ),
    .B(\gen_gpios[7].is_input ),
    .Y(\$151y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(rst_ni),
    .Y(\$153y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$155  (
    .A(\gen_gpios[8].serial_d ),
    .Y(\$155y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A(\$155y ),
    .B(\gen_gpios[8].serial_q ),
    .Y(\$156y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A(\gen_gpios[8].serial_q ),
    .Y(\$157y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(\gen_gpios[8].serial_d ),
    .B(\$157y ),
    .Y(\$158y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$159  (
    .A(\gen_gpios[8].f_edge ),
    .B(\gen_gpios[8].r_edge ),
    .S(reg2hw[56]),
    .Y(\$159y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$160  (
    .A(reg2hw[62]),
    .Y(\$160y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$161  (
    .A(reg2hw[61]),
    .B(\$160y ),
    .Y(\$161y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$162  (
    .A(reg2hw[61]),
    .B(reg2hw[62]),
    .Y(\$162y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$163  (
    .A(gpio_in_sync[8]),
    .B(\gen_gpios[8].is_input ),
    .Y(\$163y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(reg2hw[60]),
    .B(\gen_gpios[8].is_output ),
    .Y(\$164y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$166  (
    .A(\gen_gpios[8].is_output ),
    .B(reg2hw[59]),
    .Y(\$166y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(reg2hw[60]),
    .Y(\$167y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$169  (
    .A(gpio_edge[8]),
    .B(reg2hw[58]),
    .Y(\$169y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(gpio_edge[0]),
    .B(reg2hw[2]),
    .Y(\$17y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$170  (
    .A(\$169y ),
    .B(\gen_gpios[8].is_input ),
    .Y(\$170y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$172  (
    .A(rst_ni),
    .Y(\$172y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$174  (
    .A(\gen_gpios[9].serial_d ),
    .Y(\$174y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$175  (
    .A(\$174y ),
    .B(\gen_gpios[9].serial_q ),
    .Y(\$175y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$176  (
    .A(\gen_gpios[9].serial_q ),
    .Y(\$176y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$177  (
    .A(\gen_gpios[9].serial_d ),
    .B(\$176y ),
    .Y(\$177y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$178  (
    .A(\gen_gpios[9].f_edge ),
    .B(\gen_gpios[9].r_edge ),
    .S(reg2hw[63]),
    .Y(\$178y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$179  (
    .A(reg2hw[69]),
    .Y(\$179y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$17y ),
    .B(\gen_gpios[0].is_input ),
    .Y(\$18y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$180  (
    .A(reg2hw[68]),
    .B(\$179y ),
    .Y(\$180y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$181  (
    .A(reg2hw[68]),
    .B(reg2hw[69]),
    .Y(\$181y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$182  (
    .A(gpio_in_sync[9]),
    .B(\gen_gpios[9].is_input ),
    .Y(\$182y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$183  (
    .A(reg2hw[67]),
    .B(\gen_gpios[9].is_output ),
    .Y(\$183y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$185  (
    .A(\gen_gpios[9].is_output ),
    .B(reg2hw[66]),
    .Y(\$185y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$186  (
    .A(reg2hw[67]),
    .Y(\$186y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$188  (
    .A(gpio_edge[9]),
    .B(reg2hw[65]),
    .Y(\$188y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$189  (
    .A(\$188y ),
    .B(\gen_gpios[9].is_input ),
    .Y(\$189y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$191  (
    .A(rst_ni),
    .Y(\$191y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$193  (
    .A(\gen_gpios[10].serial_d ),
    .Y(\$193y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$194  (
    .A(\$193y ),
    .B(\gen_gpios[10].serial_q ),
    .Y(\$194y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$195  (
    .A(\gen_gpios[10].serial_q ),
    .Y(\$195y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$196  (
    .A(\gen_gpios[10].serial_d ),
    .B(\$195y ),
    .Y(\$196y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$197  (
    .A(\gen_gpios[10].f_edge ),
    .B(\gen_gpios[10].r_edge ),
    .S(reg2hw[70]),
    .Y(\$197y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$198  (
    .A(reg2hw[76]),
    .Y(\$198y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$199  (
    .A(reg2hw[75]),
    .B(\$198y ),
    .Y(\$199y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$200  (
    .A(reg2hw[75]),
    .B(reg2hw[76]),
    .Y(\$200y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$201  (
    .A(gpio_in_sync[10]),
    .B(\gen_gpios[10].is_input ),
    .Y(\$201y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$202  (
    .A(reg2hw[74]),
    .B(\gen_gpios[10].is_output ),
    .Y(\$202y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$204  (
    .A(\gen_gpios[10].is_output ),
    .B(reg2hw[73]),
    .Y(\$204y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$205  (
    .A(reg2hw[74]),
    .Y(\$205y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$207  (
    .A(gpio_edge[10]),
    .B(reg2hw[72]),
    .Y(\$207y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$208  (
    .A(\$207y ),
    .B(\gen_gpios[10].is_input ),
    .Y(\$208y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$210  (
    .A(rst_ni),
    .Y(\$210y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$212  (
    .A(\gen_gpios[11].serial_d ),
    .Y(\$212y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$213  (
    .A(\$212y ),
    .B(\gen_gpios[11].serial_q ),
    .Y(\$213y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$214  (
    .A(\gen_gpios[11].serial_q ),
    .Y(\$214y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$215  (
    .A(\gen_gpios[11].serial_d ),
    .B(\$214y ),
    .Y(\$215y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$216  (
    .A(\gen_gpios[11].f_edge ),
    .B(\gen_gpios[11].r_edge ),
    .S(reg2hw[77]),
    .Y(\$216y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$217  (
    .A(reg2hw[83]),
    .Y(\$217y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$218  (
    .A(reg2hw[82]),
    .B(\$217y ),
    .Y(\$218y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$219  (
    .A(reg2hw[82]),
    .B(reg2hw[83]),
    .Y(\$219y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(\gen_gpios[1].serial_d ),
    .Y(\$22y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$220  (
    .A(gpio_in_sync[11]),
    .B(\gen_gpios[11].is_input ),
    .Y(\$220y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$221  (
    .A(reg2hw[81]),
    .B(\gen_gpios[11].is_output ),
    .Y(\$221y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$223  (
    .A(\gen_gpios[11].is_output ),
    .B(reg2hw[80]),
    .Y(\$223y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$224  (
    .A(reg2hw[81]),
    .Y(\$224y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$226  (
    .A(gpio_edge[11]),
    .B(reg2hw[79]),
    .Y(\$226y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$227  (
    .A(\$226y ),
    .B(\gen_gpios[11].is_input ),
    .Y(\$227y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$229  (
    .A(rst_ni),
    .Y(\$229y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$22y ),
    .B(\gen_gpios[1].serial_q ),
    .Y(\$23y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$231  (
    .A(\gen_gpios[12].serial_d ),
    .Y(\$231y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$232  (
    .A(\$231y ),
    .B(\gen_gpios[12].serial_q ),
    .Y(\$232y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$233  (
    .A(\gen_gpios[12].serial_q ),
    .Y(\$233y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$234  (
    .A(\gen_gpios[12].serial_d ),
    .B(\$233y ),
    .Y(\$234y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$235  (
    .A(\gen_gpios[12].f_edge ),
    .B(\gen_gpios[12].r_edge ),
    .S(reg2hw[84]),
    .Y(\$235y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$236  (
    .A(reg2hw[90]),
    .Y(\$236y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$237  (
    .A(reg2hw[89]),
    .B(\$236y ),
    .Y(\$237y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$238  (
    .A(reg2hw[89]),
    .B(reg2hw[90]),
    .Y(\$238y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$239  (
    .A(gpio_in_sync[12]),
    .B(\gen_gpios[12].is_input ),
    .Y(\$239y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\gen_gpios[1].serial_q ),
    .Y(\$24y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$240  (
    .A(reg2hw[88]),
    .B(\gen_gpios[12].is_output ),
    .Y(\$240y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$242  (
    .A(\gen_gpios[12].is_output ),
    .B(reg2hw[87]),
    .Y(\$242y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$243  (
    .A(reg2hw[88]),
    .Y(\$243y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$245  (
    .A(gpio_edge[12]),
    .B(reg2hw[86]),
    .Y(\$245y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$246  (
    .A(\$245y ),
    .B(\gen_gpios[12].is_input ),
    .Y(\$246y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$248  (
    .A(rst_ni),
    .Y(\$248y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(\gen_gpios[1].serial_d ),
    .B(\$24y ),
    .Y(\$25y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$250  (
    .A(\gen_gpios[13].serial_d ),
    .Y(\$250y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$251  (
    .A(\$250y ),
    .B(\gen_gpios[13].serial_q ),
    .Y(\$251y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$252  (
    .A(\gen_gpios[13].serial_q ),
    .Y(\$252y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$253  (
    .A(\gen_gpios[13].serial_d ),
    .B(\$252y ),
    .Y(\$253y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$254  (
    .A(\gen_gpios[13].f_edge ),
    .B(\gen_gpios[13].r_edge ),
    .S(reg2hw[91]),
    .Y(\$254y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$255  (
    .A(reg2hw[97]),
    .Y(\$255y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$256  (
    .A(reg2hw[96]),
    .B(\$255y ),
    .Y(\$256y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$257  (
    .A(reg2hw[96]),
    .B(reg2hw[97]),
    .Y(\$257y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$258  (
    .A(gpio_in_sync[13]),
    .B(\gen_gpios[13].is_input ),
    .Y(\$258y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$259  (
    .A(reg2hw[95]),
    .B(\gen_gpios[13].is_output ),
    .Y(\$259y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$26  (
    .A(\gen_gpios[1].f_edge ),
    .B(\gen_gpios[1].r_edge ),
    .S(reg2hw[7]),
    .Y(\$26y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$261  (
    .A(\gen_gpios[13].is_output ),
    .B(reg2hw[94]),
    .Y(\$261y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$262  (
    .A(reg2hw[95]),
    .Y(\$262y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$264  (
    .A(gpio_edge[13]),
    .B(reg2hw[93]),
    .Y(\$264y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$265  (
    .A(\$264y ),
    .B(\gen_gpios[13].is_input ),
    .Y(\$265y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$267  (
    .A(rst_ni),
    .Y(\$267y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$269  (
    .A(\gen_gpios[14].serial_d ),
    .Y(\$269y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(reg2hw[13]),
    .Y(\$27y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$270  (
    .A(\$269y ),
    .B(\gen_gpios[14].serial_q ),
    .Y(\$270y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$271  (
    .A(\gen_gpios[14].serial_q ),
    .Y(\$271y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$272  (
    .A(\gen_gpios[14].serial_d ),
    .B(\$271y ),
    .Y(\$272y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$273  (
    .A(\gen_gpios[14].f_edge ),
    .B(\gen_gpios[14].r_edge ),
    .S(reg2hw[98]),
    .Y(\$273y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$274  (
    .A(reg2hw[104]),
    .Y(\$274y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$275  (
    .A(reg2hw[103]),
    .B(\$274y ),
    .Y(\$275y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$276  (
    .A(reg2hw[103]),
    .B(reg2hw[104]),
    .Y(\$276y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$277  (
    .A(gpio_in_sync[14]),
    .B(\gen_gpios[14].is_input ),
    .Y(\$277y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$278  (
    .A(reg2hw[102]),
    .B(\gen_gpios[14].is_output ),
    .Y(\$278y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(reg2hw[12]),
    .B(\$27y ),
    .Y(\$28y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$280  (
    .A(\gen_gpios[14].is_output ),
    .B(reg2hw[101]),
    .Y(\$280y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$281  (
    .A(reg2hw[102]),
    .Y(\$281y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$283  (
    .A(gpio_edge[14]),
    .B(reg2hw[100]),
    .Y(\$283y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$284  (
    .A(\$283y ),
    .B(\gen_gpios[14].is_input ),
    .Y(\$284y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$286  (
    .A(rst_ni),
    .Y(\$286y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$288  (
    .A(\gen_gpios[15].serial_d ),
    .Y(\$288y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$289  (
    .A(\$288y ),
    .B(\gen_gpios[15].serial_q ),
    .Y(\$289y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(reg2hw[12]),
    .B(reg2hw[13]),
    .Y(\$29y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$290  (
    .A(\gen_gpios[15].serial_q ),
    .Y(\$290y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$291  (
    .A(\gen_gpios[15].serial_d ),
    .B(\$290y ),
    .Y(\$291y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$292  (
    .A(\gen_gpios[15].f_edge ),
    .B(\gen_gpios[15].r_edge ),
    .S(reg2hw[105]),
    .Y(\$292y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$293  (
    .A(reg2hw[111]),
    .Y(\$293y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$294  (
    .A(reg2hw[110]),
    .B(\$293y ),
    .Y(\$294y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$295  (
    .A(reg2hw[110]),
    .B(reg2hw[111]),
    .Y(\$295y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$296  (
    .A(gpio_in_sync[15]),
    .B(\gen_gpios[15].is_input ),
    .Y(\$296y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$297  (
    .A(reg2hw[109]),
    .B(\gen_gpios[15].is_output ),
    .Y(\$297y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$299  (
    .A(\gen_gpios[15].is_output ),
    .B(reg2hw[108]),
    .Y(\$299y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\gen_gpios[0].serial_d ),
    .Y(\$3y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(gpio_in_sync[1]),
    .B(\gen_gpios[1].is_input ),
    .Y(\$30y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$300  (
    .A(reg2hw[109]),
    .Y(\$300y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$302  (
    .A(gpio_edge[15]),
    .B(reg2hw[107]),
    .Y(\$302y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$303  (
    .A(\$302y ),
    .B(\gen_gpios[15].is_input ),
    .Y(\$303y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$305  (
    .A(rst_ni),
    .Y(\$305y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$307  (
    .A(\gen_gpios[16].serial_d ),
    .Y(\$307y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$308  (
    .A(\$307y ),
    .B(\gen_gpios[16].serial_q ),
    .Y(\$308y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$309  (
    .A(\gen_gpios[16].serial_q ),
    .Y(\$309y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(reg2hw[11]),
    .B(\gen_gpios[1].is_output ),
    .Y(\$31y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$310  (
    .A(\gen_gpios[16].serial_d ),
    .B(\$309y ),
    .Y(\$310y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$311  (
    .A(\gen_gpios[16].f_edge ),
    .B(\gen_gpios[16].r_edge ),
    .S(reg2hw[112]),
    .Y(\$311y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$312  (
    .A(reg2hw[118]),
    .Y(\$312y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$313  (
    .A(reg2hw[117]),
    .B(\$312y ),
    .Y(\$313y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$314  (
    .A(reg2hw[117]),
    .B(reg2hw[118]),
    .Y(\$314y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$315  (
    .A(gpio_in_sync[16]),
    .B(\gen_gpios[16].is_input ),
    .Y(\$315y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$316  (
    .A(reg2hw[116]),
    .B(\gen_gpios[16].is_output ),
    .Y(\$316y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$318  (
    .A(\gen_gpios[16].is_output ),
    .B(reg2hw[115]),
    .Y(\$318y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$319  (
    .A(reg2hw[116]),
    .Y(\$319y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$321  (
    .A(gpio_edge[16]),
    .B(reg2hw[114]),
    .Y(\$321y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$322  (
    .A(\$321y ),
    .B(\gen_gpios[16].is_input ),
    .Y(\$322y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$324  (
    .A(rst_ni),
    .Y(\$324y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$326  (
    .A(\gen_gpios[17].serial_d ),
    .Y(\$326y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$327  (
    .A(\$326y ),
    .B(\gen_gpios[17].serial_q ),
    .Y(\$327y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$328  (
    .A(\gen_gpios[17].serial_q ),
    .Y(\$328y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$329  (
    .A(\gen_gpios[17].serial_d ),
    .B(\$328y ),
    .Y(\$329y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\gen_gpios[1].is_output ),
    .B(reg2hw[10]),
    .Y(\$33y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$330  (
    .A(\gen_gpios[17].f_edge ),
    .B(\gen_gpios[17].r_edge ),
    .S(reg2hw[119]),
    .Y(\$330y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$331  (
    .A(reg2hw[125]),
    .Y(\$331y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$332  (
    .A(reg2hw[124]),
    .B(\$331y ),
    .Y(\$332y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$333  (
    .A(reg2hw[124]),
    .B(reg2hw[125]),
    .Y(\$333y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$334  (
    .A(gpio_in_sync[17]),
    .B(\gen_gpios[17].is_input ),
    .Y(\$334y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$335  (
    .A(reg2hw[123]),
    .B(\gen_gpios[17].is_output ),
    .Y(\$335y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$337  (
    .A(\gen_gpios[17].is_output ),
    .B(reg2hw[122]),
    .Y(\$337y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$338  (
    .A(reg2hw[123]),
    .Y(\$338y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(reg2hw[11]),
    .Y(\$34y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$340  (
    .A(gpio_edge[17]),
    .B(reg2hw[121]),
    .Y(\$340y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$341  (
    .A(\$340y ),
    .B(\gen_gpios[17].is_input ),
    .Y(\$341y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$343  (
    .A(rst_ni),
    .Y(\$343y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$345  (
    .A(\gen_gpios[18].serial_d ),
    .Y(\$345y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$346  (
    .A(\$345y ),
    .B(\gen_gpios[18].serial_q ),
    .Y(\$346y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$347  (
    .A(\gen_gpios[18].serial_q ),
    .Y(\$347y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$348  (
    .A(\gen_gpios[18].serial_d ),
    .B(\$347y ),
    .Y(\$348y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$349  (
    .A(\gen_gpios[18].f_edge ),
    .B(\gen_gpios[18].r_edge ),
    .S(reg2hw[126]),
    .Y(\$349y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$350  (
    .A(reg2hw[132]),
    .Y(\$350y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$351  (
    .A(reg2hw[131]),
    .B(\$350y ),
    .Y(\$351y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$352  (
    .A(reg2hw[131]),
    .B(reg2hw[132]),
    .Y(\$352y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$353  (
    .A(gpio_in_sync[18]),
    .B(\gen_gpios[18].is_input ),
    .Y(\$353y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$354  (
    .A(reg2hw[130]),
    .B(\gen_gpios[18].is_output ),
    .Y(\$354y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$356  (
    .A(\gen_gpios[18].is_output ),
    .B(reg2hw[129]),
    .Y(\$356y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$357  (
    .A(reg2hw[130]),
    .Y(\$357y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$359  (
    .A(gpio_edge[18]),
    .B(reg2hw[128]),
    .Y(\$359y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(gpio_edge[1]),
    .B(reg2hw[9]),
    .Y(\$36y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$360  (
    .A(\$359y ),
    .B(\gen_gpios[18].is_input ),
    .Y(\$360y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$362  (
    .A(rst_ni),
    .Y(\$362y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$364  (
    .A(\gen_gpios[19].serial_d ),
    .Y(\$364y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$365  (
    .A(\$364y ),
    .B(\gen_gpios[19].serial_q ),
    .Y(\$365y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$366  (
    .A(\gen_gpios[19].serial_q ),
    .Y(\$366y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$367  (
    .A(\gen_gpios[19].serial_d ),
    .B(\$366y ),
    .Y(\$367y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$368  (
    .A(\gen_gpios[19].f_edge ),
    .B(\gen_gpios[19].r_edge ),
    .S(reg2hw[133]),
    .Y(\$368y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$369  (
    .A(reg2hw[139]),
    .Y(\$369y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$36y ),
    .B(\gen_gpios[1].is_input ),
    .Y(\$37y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$370  (
    .A(reg2hw[138]),
    .B(\$369y ),
    .Y(\$370y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$371  (
    .A(reg2hw[138]),
    .B(reg2hw[139]),
    .Y(\$371y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$372  (
    .A(gpio_in_sync[19]),
    .B(\gen_gpios[19].is_input ),
    .Y(\$372y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$373  (
    .A(reg2hw[137]),
    .B(\gen_gpios[19].is_output ),
    .Y(\$373y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$375  (
    .A(\gen_gpios[19].is_output ),
    .B(reg2hw[136]),
    .Y(\$375y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$376  (
    .A(reg2hw[137]),
    .Y(\$376y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$378  (
    .A(gpio_edge[19]),
    .B(reg2hw[135]),
    .Y(\$378y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$379  (
    .A(\$378y ),
    .B(\gen_gpios[19].is_input ),
    .Y(\$379y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$381  (
    .A(rst_ni),
    .Y(\$381y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$383  (
    .A(\gen_gpios[20].serial_d ),
    .Y(\$383y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$384  (
    .A(\$383y ),
    .B(\gen_gpios[20].serial_q ),
    .Y(\$384y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$385  (
    .A(\gen_gpios[20].serial_q ),
    .Y(\$385y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$386  (
    .A(\gen_gpios[20].serial_d ),
    .B(\$385y ),
    .Y(\$386y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$387  (
    .A(\gen_gpios[20].f_edge ),
    .B(\gen_gpios[20].r_edge ),
    .S(reg2hw[140]),
    .Y(\$387y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$388  (
    .A(reg2hw[146]),
    .Y(\$388y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$389  (
    .A(reg2hw[145]),
    .B(\$388y ),
    .Y(\$389y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(rst_ni),
    .Y(\$39y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$390  (
    .A(reg2hw[145]),
    .B(reg2hw[146]),
    .Y(\$390y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$391  (
    .A(gpio_in_sync[20]),
    .B(\gen_gpios[20].is_input ),
    .Y(\$391y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$392  (
    .A(reg2hw[144]),
    .B(\gen_gpios[20].is_output ),
    .Y(\$392y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$394  (
    .A(\gen_gpios[20].is_output ),
    .B(reg2hw[143]),
    .Y(\$394y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$395  (
    .A(reg2hw[144]),
    .Y(\$395y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$397  (
    .A(gpio_edge[20]),
    .B(reg2hw[142]),
    .Y(\$397y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$398  (
    .A(\$397y ),
    .B(\gen_gpios[20].is_input ),
    .Y(\$398y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$3y ),
    .B(\gen_gpios[0].serial_q ),
    .Y(\$4y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$400  (
    .A(rst_ni),
    .Y(\$400y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$402  (
    .A(\gen_gpios[21].serial_d ),
    .Y(\$402y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$403  (
    .A(\$402y ),
    .B(\gen_gpios[21].serial_q ),
    .Y(\$403y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$404  (
    .A(\gen_gpios[21].serial_q ),
    .Y(\$404y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$405  (
    .A(\gen_gpios[21].serial_d ),
    .B(\$404y ),
    .Y(\$405y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$406  (
    .A(\gen_gpios[21].f_edge ),
    .B(\gen_gpios[21].r_edge ),
    .S(reg2hw[147]),
    .Y(\$406y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$407  (
    .A(reg2hw[153]),
    .Y(\$407y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$408  (
    .A(reg2hw[152]),
    .B(\$407y ),
    .Y(\$408y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$409  (
    .A(reg2hw[152]),
    .B(reg2hw[153]),
    .Y(\$409y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_gpios[2].serial_d ),
    .Y(\$41y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$410  (
    .A(gpio_in_sync[21]),
    .B(\gen_gpios[21].is_input ),
    .Y(\$410y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$411  (
    .A(reg2hw[151]),
    .B(\gen_gpios[21].is_output ),
    .Y(\$411y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$413  (
    .A(\gen_gpios[21].is_output ),
    .B(reg2hw[150]),
    .Y(\$413y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$414  (
    .A(reg2hw[151]),
    .Y(\$414y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$416  (
    .A(gpio_edge[21]),
    .B(reg2hw[149]),
    .Y(\$416y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$417  (
    .A(\$416y ),
    .B(\gen_gpios[21].is_input ),
    .Y(\$417y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$419  (
    .A(rst_ni),
    .Y(\$419y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$41y ),
    .B(\gen_gpios[2].serial_q ),
    .Y(\$42y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$421  (
    .A(\gen_gpios[22].serial_d ),
    .Y(\$421y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$422  (
    .A(\$421y ),
    .B(\gen_gpios[22].serial_q ),
    .Y(\$422y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$423  (
    .A(\gen_gpios[22].serial_q ),
    .Y(\$423y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$424  (
    .A(\gen_gpios[22].serial_d ),
    .B(\$423y ),
    .Y(\$424y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$425  (
    .A(\gen_gpios[22].f_edge ),
    .B(\gen_gpios[22].r_edge ),
    .S(reg2hw[154]),
    .Y(\$425y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$426  (
    .A(reg2hw[160]),
    .Y(\$426y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$427  (
    .A(reg2hw[159]),
    .B(\$426y ),
    .Y(\$427y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$428  (
    .A(reg2hw[159]),
    .B(reg2hw[160]),
    .Y(\$428y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$429  (
    .A(gpio_in_sync[22]),
    .B(\gen_gpios[22].is_input ),
    .Y(\$429y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(\gen_gpios[2].serial_q ),
    .Y(\$43y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$430  (
    .A(reg2hw[158]),
    .B(\gen_gpios[22].is_output ),
    .Y(\$430y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$432  (
    .A(\gen_gpios[22].is_output ),
    .B(reg2hw[157]),
    .Y(\$432y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$433  (
    .A(reg2hw[158]),
    .Y(\$433y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$435  (
    .A(gpio_edge[22]),
    .B(reg2hw[156]),
    .Y(\$435y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$436  (
    .A(\$435y ),
    .B(\gen_gpios[22].is_input ),
    .Y(\$436y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$438  (
    .A(rst_ni),
    .Y(\$438y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\gen_gpios[2].serial_d ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$440  (
    .A(\gen_gpios[23].serial_d ),
    .Y(\$440y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$441  (
    .A(\$440y ),
    .B(\gen_gpios[23].serial_q ),
    .Y(\$441y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$442  (
    .A(\gen_gpios[23].serial_q ),
    .Y(\$442y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$443  (
    .A(\gen_gpios[23].serial_d ),
    .B(\$442y ),
    .Y(\$443y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$444  (
    .A(\gen_gpios[23].f_edge ),
    .B(\gen_gpios[23].r_edge ),
    .S(reg2hw[161]),
    .Y(\$444y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$445  (
    .A(reg2hw[167]),
    .Y(\$445y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$446  (
    .A(reg2hw[166]),
    .B(\$445y ),
    .Y(\$446y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$447  (
    .A(reg2hw[166]),
    .B(reg2hw[167]),
    .Y(\$447y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$448  (
    .A(gpio_in_sync[23]),
    .B(\gen_gpios[23].is_input ),
    .Y(\$448y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$449  (
    .A(reg2hw[165]),
    .B(\gen_gpios[23].is_output ),
    .Y(\$449y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$45  (
    .A(\gen_gpios[2].f_edge ),
    .B(\gen_gpios[2].r_edge ),
    .S(reg2hw[14]),
    .Y(\$45y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$451  (
    .A(\gen_gpios[23].is_output ),
    .B(reg2hw[164]),
    .Y(\$451y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$452  (
    .A(reg2hw[165]),
    .Y(\$452y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$454  (
    .A(gpio_edge[23]),
    .B(reg2hw[163]),
    .Y(\$454y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$455  (
    .A(\$454y ),
    .B(\gen_gpios[23].is_input ),
    .Y(\$455y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$457  (
    .A(rst_ni),
    .Y(\$457y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$459  (
    .A(\gen_gpios[24].serial_d ),
    .Y(\$459y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(reg2hw[20]),
    .Y(\$46y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$460  (
    .A(\$459y ),
    .B(\gen_gpios[24].serial_q ),
    .Y(\$460y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$461  (
    .A(\gen_gpios[24].serial_q ),
    .Y(\$461y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$462  (
    .A(\gen_gpios[24].serial_d ),
    .B(\$461y ),
    .Y(\$462y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$463  (
    .A(\gen_gpios[24].f_edge ),
    .B(\gen_gpios[24].r_edge ),
    .S(reg2hw[168]),
    .Y(\$463y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$464  (
    .A(reg2hw[174]),
    .Y(\$464y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$465  (
    .A(reg2hw[173]),
    .B(\$464y ),
    .Y(\$465y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$466  (
    .A(reg2hw[173]),
    .B(reg2hw[174]),
    .Y(\$466y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$467  (
    .A(gpio_in_sync[24]),
    .B(\gen_gpios[24].is_input ),
    .Y(\$467y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$468  (
    .A(reg2hw[172]),
    .B(\gen_gpios[24].is_output ),
    .Y(\$468y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(reg2hw[19]),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$470  (
    .A(\gen_gpios[24].is_output ),
    .B(reg2hw[171]),
    .Y(\$470y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$471  (
    .A(reg2hw[172]),
    .Y(\$471y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$473  (
    .A(gpio_edge[24]),
    .B(reg2hw[170]),
    .Y(\$473y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$474  (
    .A(\$473y ),
    .B(\gen_gpios[24].is_input ),
    .Y(\$474y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$476  (
    .A(rst_ni),
    .Y(\$476y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$478  (
    .A(\gen_gpios[25].serial_d ),
    .Y(\$478y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$479  (
    .A(\$478y ),
    .B(\gen_gpios[25].serial_q ),
    .Y(\$479y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(reg2hw[19]),
    .B(reg2hw[20]),
    .Y(\$48y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$480  (
    .A(\gen_gpios[25].serial_q ),
    .Y(\$480y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$481  (
    .A(\gen_gpios[25].serial_d ),
    .B(\$480y ),
    .Y(\$481y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$482  (
    .A(\gen_gpios[25].f_edge ),
    .B(\gen_gpios[25].r_edge ),
    .S(reg2hw[175]),
    .Y(\$482y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$483  (
    .A(reg2hw[181]),
    .Y(\$483y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$484  (
    .A(reg2hw[180]),
    .B(\$483y ),
    .Y(\$484y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$485  (
    .A(reg2hw[180]),
    .B(reg2hw[181]),
    .Y(\$485y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$486  (
    .A(gpio_in_sync[25]),
    .B(\gen_gpios[25].is_input ),
    .Y(\$486y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$487  (
    .A(reg2hw[179]),
    .B(\gen_gpios[25].is_output ),
    .Y(\$487y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$489  (
    .A(\gen_gpios[25].is_output ),
    .B(reg2hw[178]),
    .Y(\$489y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(gpio_in_sync[2]),
    .B(\gen_gpios[2].is_input ),
    .Y(\$49y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$490  (
    .A(reg2hw[179]),
    .Y(\$490y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$492  (
    .A(gpio_edge[25]),
    .B(reg2hw[177]),
    .Y(\$492y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$493  (
    .A(\$492y ),
    .B(\gen_gpios[25].is_input ),
    .Y(\$493y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$495  (
    .A(rst_ni),
    .Y(\$495y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$497  (
    .A(\gen_gpios[26].serial_d ),
    .Y(\$497y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$498  (
    .A(\$497y ),
    .B(\gen_gpios[26].serial_q ),
    .Y(\$498y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$499  (
    .A(\gen_gpios[26].serial_q ),
    .Y(\$499y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\gen_gpios[0].serial_q ),
    .Y(\$5y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(reg2hw[18]),
    .B(\gen_gpios[2].is_output ),
    .Y(\$50y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$500  (
    .A(\gen_gpios[26].serial_d ),
    .B(\$499y ),
    .Y(\$500y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$501  (
    .A(\gen_gpios[26].f_edge ),
    .B(\gen_gpios[26].r_edge ),
    .S(reg2hw[182]),
    .Y(\$501y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$502  (
    .A(reg2hw[188]),
    .Y(\$502y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$503  (
    .A(reg2hw[187]),
    .B(\$502y ),
    .Y(\$503y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$504  (
    .A(reg2hw[187]),
    .B(reg2hw[188]),
    .Y(\$504y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$505  (
    .A(gpio_in_sync[26]),
    .B(\gen_gpios[26].is_input ),
    .Y(\$505y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$506  (
    .A(reg2hw[186]),
    .B(\gen_gpios[26].is_output ),
    .Y(\$506y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$508  (
    .A(\gen_gpios[26].is_output ),
    .B(reg2hw[185]),
    .Y(\$508y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$509  (
    .A(reg2hw[186]),
    .Y(\$509y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$511  (
    .A(gpio_edge[26]),
    .B(reg2hw[184]),
    .Y(\$511y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$512  (
    .A(\$511y ),
    .B(\gen_gpios[26].is_input ),
    .Y(\$512y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$514  (
    .A(rst_ni),
    .Y(\$514y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$516  (
    .A(\gen_gpios[27].serial_d ),
    .Y(\$516y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$517  (
    .A(\$516y ),
    .B(\gen_gpios[27].serial_q ),
    .Y(\$517y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$518  (
    .A(\gen_gpios[27].serial_q ),
    .Y(\$518y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$519  (
    .A(\gen_gpios[27].serial_d ),
    .B(\$518y ),
    .Y(\$519y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_gpios[2].is_output ),
    .B(reg2hw[17]),
    .Y(\$52y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$520  (
    .A(\gen_gpios[27].f_edge ),
    .B(\gen_gpios[27].r_edge ),
    .S(reg2hw[189]),
    .Y(\$520y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$521  (
    .A(reg2hw[195]),
    .Y(\$521y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$522  (
    .A(reg2hw[194]),
    .B(\$521y ),
    .Y(\$522y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$523  (
    .A(reg2hw[194]),
    .B(reg2hw[195]),
    .Y(\$523y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$524  (
    .A(gpio_in_sync[27]),
    .B(\gen_gpios[27].is_input ),
    .Y(\$524y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$525  (
    .A(reg2hw[193]),
    .B(\gen_gpios[27].is_output ),
    .Y(\$525y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$527  (
    .A(\gen_gpios[27].is_output ),
    .B(reg2hw[192]),
    .Y(\$527y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$528  (
    .A(reg2hw[193]),
    .Y(\$528y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(reg2hw[18]),
    .Y(\$53y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$530  (
    .A(gpio_edge[27]),
    .B(reg2hw[191]),
    .Y(\$530y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$531  (
    .A(\$530y ),
    .B(\gen_gpios[27].is_input ),
    .Y(\$531y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$533  (
    .A(rst_ni),
    .Y(\$533y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$535  (
    .A(\gen_gpios[28].serial_d ),
    .Y(\$535y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$536  (
    .A(\$535y ),
    .B(\gen_gpios[28].serial_q ),
    .Y(\$536y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$537  (
    .A(\gen_gpios[28].serial_q ),
    .Y(\$537y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$538  (
    .A(\gen_gpios[28].serial_d ),
    .B(\$537y ),
    .Y(\$538y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$539  (
    .A(\gen_gpios[28].f_edge ),
    .B(\gen_gpios[28].r_edge ),
    .S(reg2hw[196]),
    .Y(\$539y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$540  (
    .A(reg2hw[202]),
    .Y(\$540y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$541  (
    .A(reg2hw[201]),
    .B(\$540y ),
    .Y(\$541y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$542  (
    .A(reg2hw[201]),
    .B(reg2hw[202]),
    .Y(\$542y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$543  (
    .A(gpio_in_sync[28]),
    .B(\gen_gpios[28].is_input ),
    .Y(\$543y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$544  (
    .A(reg2hw[200]),
    .B(\gen_gpios[28].is_output ),
    .Y(\$544y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$546  (
    .A(\gen_gpios[28].is_output ),
    .B(reg2hw[199]),
    .Y(\$546y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$547  (
    .A(reg2hw[200]),
    .Y(\$547y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$549  (
    .A(gpio_edge[28]),
    .B(reg2hw[198]),
    .Y(\$549y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(gpio_edge[2]),
    .B(reg2hw[16]),
    .Y(\$55y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$550  (
    .A(\$549y ),
    .B(\gen_gpios[28].is_input ),
    .Y(\$550y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$552  (
    .A(rst_ni),
    .Y(\$552y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$554  (
    .A(\gen_gpios[29].serial_d ),
    .Y(\$554y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$555  (
    .A(\$554y ),
    .B(\gen_gpios[29].serial_q ),
    .Y(\$555y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$556  (
    .A(\gen_gpios[29].serial_q ),
    .Y(\$556y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$557  (
    .A(\gen_gpios[29].serial_d ),
    .B(\$556y ),
    .Y(\$557y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$558  (
    .A(\gen_gpios[29].f_edge ),
    .B(\gen_gpios[29].r_edge ),
    .S(reg2hw[203]),
    .Y(\$558y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$559  (
    .A(reg2hw[209]),
    .Y(\$559y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(\$55y ),
    .B(\gen_gpios[2].is_input ),
    .Y(\$56y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$560  (
    .A(reg2hw[208]),
    .B(\$559y ),
    .Y(\$560y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$561  (
    .A(reg2hw[208]),
    .B(reg2hw[209]),
    .Y(\$561y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$562  (
    .A(gpio_in_sync[29]),
    .B(\gen_gpios[29].is_input ),
    .Y(\$562y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$563  (
    .A(reg2hw[207]),
    .B(\gen_gpios[29].is_output ),
    .Y(\$563y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$565  (
    .A(\gen_gpios[29].is_output ),
    .B(reg2hw[206]),
    .Y(\$565y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$566  (
    .A(reg2hw[207]),
    .Y(\$566y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$568  (
    .A(gpio_edge[29]),
    .B(reg2hw[205]),
    .Y(\$568y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$569  (
    .A(\$568y ),
    .B(\gen_gpios[29].is_input ),
    .Y(\$569y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$571  (
    .A(rst_ni),
    .Y(\$571y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$573  (
    .A(\gen_gpios[30].serial_d ),
    .Y(\$573y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$574  (
    .A(\$573y ),
    .B(\gen_gpios[30].serial_q ),
    .Y(\$574y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$575  (
    .A(\gen_gpios[30].serial_q ),
    .Y(\$575y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$576  (
    .A(\gen_gpios[30].serial_d ),
    .B(\$575y ),
    .Y(\$576y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$577  (
    .A(\gen_gpios[30].f_edge ),
    .B(\gen_gpios[30].r_edge ),
    .S(reg2hw[210]),
    .Y(\$577y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$578  (
    .A(reg2hw[216]),
    .Y(\$578y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$579  (
    .A(reg2hw[215]),
    .B(\$578y ),
    .Y(\$579y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(rst_ni),
    .Y(\$58y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$580  (
    .A(reg2hw[215]),
    .B(reg2hw[216]),
    .Y(\$580y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$581  (
    .A(gpio_in_sync[30]),
    .B(\gen_gpios[30].is_input ),
    .Y(\$581y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$582  (
    .A(reg2hw[214]),
    .B(\gen_gpios[30].is_output ),
    .Y(\$582y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$584  (
    .A(\gen_gpios[30].is_output ),
    .B(reg2hw[213]),
    .Y(\$584y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$585  (
    .A(reg2hw[214]),
    .Y(\$585y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$587  (
    .A(gpio_edge[30]),
    .B(reg2hw[212]),
    .Y(\$587y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$588  (
    .A(\$587y ),
    .B(\gen_gpios[30].is_input ),
    .Y(\$588y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$590  (
    .A(rst_ni),
    .Y(\$590y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$592  (
    .A(\gen_gpios[31].serial_d ),
    .Y(\$592y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$593  (
    .A(\$592y ),
    .B(\gen_gpios[31].serial_q ),
    .Y(\$593y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$594  (
    .A(\gen_gpios[31].serial_q ),
    .Y(\$594y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$595  (
    .A(\gen_gpios[31].serial_d ),
    .B(\$594y ),
    .Y(\$595y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$596  (
    .A(\gen_gpios[31].f_edge ),
    .B(\gen_gpios[31].r_edge ),
    .S(reg2hw[217]),
    .Y(\$596y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$597  (
    .A(reg2hw[223]),
    .Y(\$597y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$598  (
    .A(reg2hw[222]),
    .B(\$597y ),
    .Y(\$598y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$599  (
    .A(reg2hw[222]),
    .B(reg2hw[223]),
    .Y(\$599y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\gen_gpios[0].serial_d ),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(\gen_gpios[3].serial_d ),
    .Y(\$60y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$600  (
    .A(gpio_in_sync[31]),
    .B(\gen_gpios[31].is_input ),
    .Y(\$600y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$601  (
    .A(reg2hw[221]),
    .B(\gen_gpios[31].is_output ),
    .Y(\$601y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$603  (
    .A(\gen_gpios[31].is_output ),
    .B(reg2hw[220]),
    .Y(\$603y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$604  (
    .A(reg2hw[221]),
    .Y(\$604y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$606  (
    .A(gpio_edge[31]),
    .B(reg2hw[219]),
    .Y(\$606y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$607  (
    .A(\$606y ),
    .B(\gen_gpios[31].is_input ),
    .Y(\$607y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$60y ),
    .B(\gen_gpios[3].serial_q ),
    .Y(\$61y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$610  (
    .A(\$609y ),
    .B(reg2hw[8]),
    .Y(\$610y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$611  (
    .A(\$610y ),
    .B(reg2hw[15]),
    .Y(\$611y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$612  (
    .A(\$611y ),
    .B(reg2hw[22]),
    .Y(\$612y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$613  (
    .A(\$612y ),
    .B(reg2hw[29]),
    .Y(\$613y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$614  (
    .A(\$613y ),
    .B(reg2hw[36]),
    .Y(\$614y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$615  (
    .A(\$614y ),
    .B(reg2hw[43]),
    .Y(\$615y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$616  (
    .A(\$615y ),
    .B(reg2hw[50]),
    .Y(\$616y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$617  (
    .A(\$616y ),
    .B(reg2hw[57]),
    .Y(\$617y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$618  (
    .A(\$617y ),
    .B(reg2hw[64]),
    .Y(\$618y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$619  (
    .A(\$618y ),
    .B(reg2hw[71]),
    .Y(\$619y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\gen_gpios[3].serial_q ),
    .Y(\$62y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$620  (
    .A(\$619y ),
    .B(reg2hw[78]),
    .Y(\$620y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$621  (
    .A(\$620y ),
    .B(reg2hw[85]),
    .Y(\$621y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$622  (
    .A(\$621y ),
    .B(reg2hw[92]),
    .Y(\$622y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$623  (
    .A(\$622y ),
    .B(reg2hw[99]),
    .Y(\$623y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$624  (
    .A(\$623y ),
    .B(reg2hw[106]),
    .Y(\$624y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$625  (
    .A(\$624y ),
    .B(reg2hw[113]),
    .Y(\$625y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$626  (
    .A(\$625y ),
    .B(reg2hw[120]),
    .Y(\$626y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$627  (
    .A(\$626y ),
    .B(reg2hw[127]),
    .Y(\$627y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$628  (
    .A(\$627y ),
    .B(reg2hw[134]),
    .Y(\$628y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$629  (
    .A(\$628y ),
    .B(reg2hw[141]),
    .Y(\$629y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(\gen_gpios[3].serial_d ),
    .B(\$62y ),
    .Y(\$63y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$630  (
    .A(\$629y ),
    .B(reg2hw[148]),
    .Y(\$630y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$631  (
    .A(\$630y ),
    .B(reg2hw[155]),
    .Y(\$631y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$632  (
    .A(\$631y ),
    .B(reg2hw[162]),
    .Y(\$632y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$633  (
    .A(\$632y ),
    .B(reg2hw[169]),
    .Y(\$633y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$634  (
    .A(\$633y ),
    .B(reg2hw[176]),
    .Y(\$634y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$635  (
    .A(\$634y ),
    .B(reg2hw[183]),
    .Y(\$635y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$636  (
    .A(\$635y ),
    .B(reg2hw[190]),
    .Y(\$636y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$637  (
    .A(\$636y ),
    .B(reg2hw[197]),
    .Y(\$637y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$638  (
    .A(\$637y ),
    .B(reg2hw[204]),
    .Y(\$638y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$639  (
    .A(\$638y ),
    .B(reg2hw[211]),
    .Y(\$639y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$64  (
    .A(\gen_gpios[3].f_edge ),
    .B(\gen_gpios[3].r_edge ),
    .S(reg2hw[21]),
    .Y(\$64y )
  );
  /* src = "rtl/gpio/gpio.sv:166.31-166.71" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$640  (
    .A(\$639y ),
    .B(reg2hw[218]),
    .Y(\$640y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A(reg2hw[27]),
    .Y(\$65y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(reg2hw[26]),
    .B(\$65y ),
    .Y(\$66y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(reg2hw[26]),
    .B(reg2hw[27]),
    .Y(\$67y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(gpio_in_sync[3]),
    .B(\gen_gpios[3].is_input ),
    .Y(\$68y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(reg2hw[25]),
    .B(\gen_gpios[3].is_output ),
    .Y(\$69y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$7  (
    .A(\gen_gpios[0].f_edge ),
    .B(\gen_gpios[0].r_edge ),
    .S(reg2hw[0]),
    .Y(\$7y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(\gen_gpios[3].is_output ),
    .B(reg2hw[24]),
    .Y(\$71y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(reg2hw[25]),
    .Y(\$72y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(gpio_edge[3]),
    .B(reg2hw[23]),
    .Y(\$74y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$75  (
    .A(\$74y ),
    .B(\gen_gpios[3].is_input ),
    .Y(\$75y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(rst_ni),
    .Y(\$77y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(\gen_gpios[4].serial_d ),
    .Y(\$79y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(reg2hw[6]),
    .Y(\$8y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(\$79y ),
    .B(\gen_gpios[4].serial_q ),
    .Y(\$80y )
  );
  /* src = "rtl/gpio/gpio.sv:111.37-111.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(\gen_gpios[4].serial_q ),
    .Y(\$81y )
  );
  /* src = "rtl/gpio/gpio.sv:111.25-111.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(\gen_gpios[4].serial_d ),
    .B(\$81y ),
    .Y(\$82y )
  );
  /* src = "rtl/gpio/gpio.sv:112.33-112.74" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$83  (
    .A(\gen_gpios[4].f_edge ),
    .B(\gen_gpios[4].r_edge ),
    .S(reg2hw[28]),
    .Y(\$83y )
  );
  /* src = "rtl/gpio/gpio.sv:122.44-122.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(reg2hw[34]),
    .Y(\$84y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$85  (
    .A(reg2hw[33]),
    .B(\$84y ),
    .Y(\$85y )
  );
  /* src = "rtl/gpio/gpio.sv:123.28-123.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(reg2hw[33]),
    .B(reg2hw[34]),
    .Y(\$86y )
  );
  /* src = "rtl/gpio/gpio.sv:126.38-126.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(gpio_in_sync[4]),
    .B(\gen_gpios[4].is_input ),
    .Y(\$87y )
  );
  /* src = "rtl/gpio/gpio.sv:129.30-129.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(reg2hw[32]),
    .B(\gen_gpios[4].is_output ),
    .Y(\$88y )
  );
  /* src = "rtl/gpio/gpio.sv:122.27-122.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(reg2hw[5]),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/gpio/gpio.sv:143.17-143.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(\gen_gpios[4].is_output ),
    .B(reg2hw[31]),
    .Y(\$90y )
  );
  /* src = "rtl/gpio/gpio.sv:144.41-144.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(reg2hw[32]),
    .Y(\$91y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.73" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$93  (
    .A(gpio_edge[4]),
    .B(reg2hw[30]),
    .Y(\$93y )
  );
  /* src = "rtl/gpio/gpio.sv:155.35-155.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(\$93y ),
    .B(\gen_gpios[4].is_input ),
    .Y(\$94y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(rst_ni),
    .Y(\$96y )
  );
  /* src = "rtl/gpio/gpio.sv:110.26-110.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(\gen_gpios[5].serial_d ),
    .Y(\$98y )
  );
  /* src = "rtl/gpio/gpio.sv:110.25-110.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$99  (
    .A(\$98y ),
    .B(\gen_gpios[5].serial_q ),
    .Y(\$99y )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[0].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[0].serial_d ),
    .Q(\gen_gpios[0].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[10].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[10].serial_d ),
    .Q(\gen_gpios[10].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[11].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[11].serial_d ),
    .Q(\gen_gpios[11].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[12].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[12].serial_d ),
    .Q(\gen_gpios[12].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[13].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[13].serial_d ),
    .Q(\gen_gpios[13].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[14].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[14].serial_d ),
    .Q(\gen_gpios[14].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[15].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[15].serial_d ),
    .Q(\gen_gpios[15].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[16].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[16].serial_d ),
    .Q(\gen_gpios[16].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[17].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[17].serial_d ),
    .Q(\gen_gpios[17].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[18].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[18].serial_d ),
    .Q(\gen_gpios[18].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[19].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[19].serial_d ),
    .Q(\gen_gpios[19].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[1].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[1].serial_d ),
    .Q(\gen_gpios[1].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[20].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[20].serial_d ),
    .Q(\gen_gpios[20].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[21].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[21].serial_d ),
    .Q(\gen_gpios[21].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[22].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[22].serial_d ),
    .Q(\gen_gpios[22].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[23].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[23].serial_d ),
    .Q(\gen_gpios[23].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[24].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[24].serial_d ),
    .Q(\gen_gpios[24].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[25].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[25].serial_d ),
    .Q(\gen_gpios[25].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[26].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[26].serial_d ),
    .Q(\gen_gpios[26].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[27].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[27].serial_d ),
    .Q(\gen_gpios[27].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[28].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[28].serial_d ),
    .Q(\gen_gpios[28].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[29].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[29].serial_d ),
    .Q(\gen_gpios[29].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[2].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[2].serial_d ),
    .Q(\gen_gpios[2].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[30].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[30].serial_d ),
    .Q(\gen_gpios[30].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[31].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[31].serial_d ),
    .Q(\gen_gpios[31].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[3].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[3].serial_d ),
    .Q(\gen_gpios[3].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[4].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[4].serial_d ),
    .Q(\gen_gpios[4].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[5].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[5].serial_d ),
    .Q(\gen_gpios[5].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[6].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[6].serial_d ),
    .Q(\gen_gpios[6].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[7].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[7].serial_d ),
    .Q(\gen_gpios[7].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[8].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[8].serial_d ),
    .Q(\gen_gpios[8].serial_q )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_gpios[9].serial_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\gen_gpios[9].serial_d ),
    .Q(\gen_gpios[9].serial_q )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12430  (
    .A(2'h0),
    .B({ \$300y , 1'h1 }),
    .S(\$procmux$12431_CMP ),
    .Y(\$procmux$12430_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12432  (
    .A(2'h0),
    .B({ \$452y , 1'h1 }),
    .S(\$procmux$12433_CMP ),
    .Y(\$procmux$12432_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12434  (
    .A(2'h0),
    .B({ \$281y , 1'h1 }),
    .S(\$procmux$12435_CMP ),
    .Y(\$procmux$12434_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12436  (
    .A(2'h0),
    .B({ \$528y , 1'h1 }),
    .S(\$procmux$12437_CMP ),
    .Y(\$procmux$12436_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12438  (
    .A(2'h0),
    .B({ \$262y , 1'h1 }),
    .S(\$procmux$12439_CMP ),
    .Y(\$procmux$12438_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12440  (
    .A(2'h0),
    .B({ \$433y , 1'h1 }),
    .S(\$procmux$12441_CMP ),
    .Y(\$procmux$12440_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12442  (
    .A(2'h0),
    .B({ \$243y , 1'h1 }),
    .S(\$procmux$12443_CMP ),
    .Y(\$procmux$12442_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12444  (
    .A(2'h0),
    .B({ \$566y , 1'h1 }),
    .S(\$procmux$12445_CMP ),
    .Y(\$procmux$12444_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12446  (
    .A(2'h0),
    .B({ \$224y , 1'h1 }),
    .S(\$procmux$12447_CMP ),
    .Y(\$procmux$12446_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12448  (
    .A(2'h0),
    .B({ \$414y , 1'h1 }),
    .S(\$procmux$12449_CMP ),
    .Y(\$procmux$12448_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12450  (
    .A(2'h0),
    .B({ \$205y , 1'h1 }),
    .S(\$procmux$12451_CMP ),
    .Y(\$procmux$12450_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12452  (
    .A(2'h0),
    .B({ \$509y , 1'h1 }),
    .S(\$procmux$12453_CMP ),
    .Y(\$procmux$12452_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12454  (
    .A(2'h0),
    .B({ \$186y , 1'h1 }),
    .S(\$procmux$12455_CMP ),
    .Y(\$procmux$12454_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12456  (
    .A(2'h0),
    .B({ \$395y , 1'h1 }),
    .S(\$procmux$12457_CMP ),
    .Y(\$procmux$12456_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12458  (
    .A(2'h0),
    .B({ \$167y , 1'h1 }),
    .S(\$procmux$12459_CMP ),
    .Y(\$procmux$12458_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12460  (
    .A(2'h0),
    .B({ \$585y , 1'h1 }),
    .S(\$procmux$12461_CMP ),
    .Y(\$procmux$12460_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12462  (
    .A(2'h0),
    .B({ \$148y , 1'h1 }),
    .S(\$procmux$12463_CMP ),
    .Y(\$procmux$12462_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12464  (
    .A(2'h0),
    .B({ \$376y , 1'h1 }),
    .S(\$procmux$12465_CMP ),
    .Y(\$procmux$12464_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12466  (
    .A(2'h0),
    .B({ \$129y , 1'h1 }),
    .S(\$procmux$12467_CMP ),
    .Y(\$procmux$12466_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12468  (
    .A(2'h0),
    .B({ \$490y , 1'h1 }),
    .S(\$procmux$12469_CMP ),
    .Y(\$procmux$12468_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12470  (
    .A(2'h0),
    .B({ \$110y , 1'h1 }),
    .S(\$procmux$12471_CMP ),
    .Y(\$procmux$12470_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12472  (
    .A(2'h0),
    .B({ \$357y , 1'h1 }),
    .S(\$procmux$12473_CMP ),
    .Y(\$procmux$12472_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12474  (
    .A(2'h0),
    .B({ \$91y , 1'h1 }),
    .S(\$procmux$12475_CMP ),
    .Y(\$procmux$12474_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12476  (
    .A(2'h0),
    .B({ \$547y , 1'h1 }),
    .S(\$procmux$12477_CMP ),
    .Y(\$procmux$12476_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12478  (
    .A(2'h0),
    .B({ \$72y , 1'h1 }),
    .S(\$procmux$12479_CMP ),
    .Y(\$procmux$12478_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12480  (
    .A(2'h0),
    .B({ \$338y , 1'h1 }),
    .S(\$procmux$12481_CMP ),
    .Y(\$procmux$12480_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12482  (
    .A(2'h0),
    .B({ \$53y , 1'h1 }),
    .S(\$procmux$12483_CMP ),
    .Y(\$procmux$12482_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12484  (
    .A(2'h0),
    .B({ \$471y , 1'h1 }),
    .S(\$procmux$12485_CMP ),
    .Y(\$procmux$12484_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12486  (
    .A(2'h0),
    .B({ \$34y , 1'h1 }),
    .S(\$procmux$12487_CMP ),
    .Y(\$procmux$12486_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12488  (
    .A(2'h0),
    .B({ \$319y , 1'h1 }),
    .S(\$procmux$12489_CMP ),
    .Y(\$procmux$12488_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12490  (
    .A(2'h0),
    .B({ \$15y , 1'h1 }),
    .S(\$procmux$12491_CMP ),
    .Y(\$procmux$12490_Y )
  );
  /* src = "rtl/gpio/gpio.sv:143.49-146.16|rtl/gpio/gpio.sv:143.13-146.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12492  (
    .A(2'h0),
    .B({ \$604y , 1'h1 }),
    .S(\$procmux$12493_CMP ),
    .Y(\$procmux$12492_Y )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[0].i_sync  \gen_gpios[0].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[0]),
    .serial_o(\gen_gpios[0].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[10].i_sync  \gen_gpios[10].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[10]),
    .serial_o(\gen_gpios[10].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[11].i_sync  \gen_gpios[11].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[11]),
    .serial_o(\gen_gpios[11].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[12].i_sync  \gen_gpios[12].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[12]),
    .serial_o(\gen_gpios[12].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[13].i_sync  \gen_gpios[13].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[13]),
    .serial_o(\gen_gpios[13].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[14].i_sync  \gen_gpios[14].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[14]),
    .serial_o(\gen_gpios[14].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[15].i_sync  \gen_gpios[15].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[15]),
    .serial_o(\gen_gpios[15].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[16].i_sync  \gen_gpios[16].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[16]),
    .serial_o(\gen_gpios[16].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[17].i_sync  \gen_gpios[17].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[17]),
    .serial_o(\gen_gpios[17].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[18].i_sync  \gen_gpios[18].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[18]),
    .serial_o(\gen_gpios[18].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[19].i_sync  \gen_gpios[19].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[19]),
    .serial_o(\gen_gpios[19].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[1].i_sync  \gen_gpios[1].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[1]),
    .serial_o(\gen_gpios[1].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[20].i_sync  \gen_gpios[20].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[20]),
    .serial_o(\gen_gpios[20].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[21].i_sync  \gen_gpios[21].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[21]),
    .serial_o(\gen_gpios[21].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[22].i_sync  \gen_gpios[22].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[22]),
    .serial_o(\gen_gpios[22].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[23].i_sync  \gen_gpios[23].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[23]),
    .serial_o(\gen_gpios[23].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[24].i_sync  \gen_gpios[24].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[24]),
    .serial_o(\gen_gpios[24].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[25].i_sync  \gen_gpios[25].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[25]),
    .serial_o(\gen_gpios[25].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[26].i_sync  \gen_gpios[26].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[26]),
    .serial_o(\gen_gpios[26].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[27].i_sync  \gen_gpios[27].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[27]),
    .serial_o(\gen_gpios[27].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[28].i_sync  \gen_gpios[28].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[28]),
    .serial_o(\gen_gpios[28].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[29].i_sync  \gen_gpios[29].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[29]),
    .serial_o(\gen_gpios[29].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[2].i_sync  \gen_gpios[2].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[2]),
    .serial_o(\gen_gpios[2].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[30].i_sync  \gen_gpios[30].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[30]),
    .serial_o(\gen_gpios[30].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[31].i_sync  \gen_gpios[31].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[31]),
    .serial_o(\gen_gpios[31].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[3].i_sync  \gen_gpios[3].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[3]),
    .serial_o(\gen_gpios[3].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[4].i_sync  \gen_gpios[4].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[4]),
    .serial_o(\gen_gpios[4].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[5].i_sync  \gen_gpios[5].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[5]),
    .serial_o(\gen_gpios[5].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[6].i_sync  \gen_gpios[6].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[6]),
    .serial_o(\gen_gpios[6].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[7].i_sync  \gen_gpios[7].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[7]),
    .serial_o(\gen_gpios[7].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[8].i_sync  \gen_gpios[8].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[8]),
    .serial_o(\gen_gpios[8].serial_d )
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/gpio/gpio.sv:101.11" */
  \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[9].i_sync  \gen_gpios[9].i_sync  (
    .clk_i(clk_i),
    .rst_ni(rst_ni),
    .serial_i(gpio_i[9]),
    .serial_o(\gen_gpios[9].serial_d )
  );
  /* src = "rtl/gpio/gpio.sv:74.5" */
  \gpio_reg_top$croc_chip.i_croc_soc.i_croc.i_gpio.i_reg_file  i_reg_file (
    .clk_i(clk_i),
    .hw2reg(hw2reg),
    .obi_req_i(obi_req_i),
    .obi_rsp_o(obi_rsp_o),
    .reg2hw(reg2hw),
    .rst_ni(rst_ni)
  );
  assign gpio_in_sync_o = gpio_in_sync;
  assign \gen_gpios[0].f_edge  = \$4y ;
  assign \gen_gpios[0].r_edge  = \$6y ;
  assign gpio_edge[0] = \$7y ;
  assign gpio_in_sync[0] = \gen_gpios[0].serial_q ;
  assign \gen_gpios[0].is_input  = \$9y ;
  assign \gen_gpios[0].is_output  = \$10y ;
  assign hw2reg[4] = \$11y ;
  assign gpio_o[0] = \$12y ;
  assign gpio_out_en_o[0] = \gen_gpios[0].is_output ;
  assign hw2reg[3:2] = \$hw2reg[3:2]$16 ;
  assign gpio_intrpt[0] = \$18y ;
  assign hw2reg[1] = gpio_intrpt[0];
  assign hw2reg[0] = gpio_intrpt[0];
  assign \gen_gpios[1].f_edge  = \$23y ;
  assign \gen_gpios[1].r_edge  = \$25y ;
  assign gpio_edge[1] = \$26y ;
  assign gpio_in_sync[1] = \gen_gpios[1].serial_q ;
  assign \gen_gpios[1].is_input  = \$28y ;
  assign \gen_gpios[1].is_output  = \$29y ;
  assign hw2reg[9] = \$30y ;
  assign gpio_o[1] = \$31y ;
  assign gpio_out_en_o[1] = \gen_gpios[1].is_output ;
  assign hw2reg[8:7] = \$hw2reg[8:7]$35 ;
  assign gpio_intrpt[1] = \$37y ;
  assign hw2reg[6] = gpio_intrpt[1];
  assign hw2reg[5] = gpio_intrpt[1];
  assign \gen_gpios[2].f_edge  = \$42y ;
  assign \gen_gpios[2].r_edge  = \$44y ;
  assign gpio_edge[2] = \$45y ;
  assign gpio_in_sync[2] = \gen_gpios[2].serial_q ;
  assign \gen_gpios[2].is_input  = \$47y ;
  assign \gen_gpios[2].is_output  = \$48y ;
  assign hw2reg[14] = \$49y ;
  assign gpio_o[2] = \$50y ;
  assign gpio_out_en_o[2] = \gen_gpios[2].is_output ;
  assign hw2reg[13:12] = \$hw2reg[13:12]$54 ;
  assign gpio_intrpt[2] = \$56y ;
  assign hw2reg[11] = gpio_intrpt[2];
  assign hw2reg[10] = gpio_intrpt[2];
  assign \gen_gpios[3].f_edge  = \$61y ;
  assign \gen_gpios[3].r_edge  = \$63y ;
  assign gpio_edge[3] = \$64y ;
  assign gpio_in_sync[3] = \gen_gpios[3].serial_q ;
  assign \gen_gpios[3].is_input  = \$66y ;
  assign \gen_gpios[3].is_output  = \$67y ;
  assign hw2reg[19] = \$68y ;
  assign gpio_o[3] = \$69y ;
  assign gpio_out_en_o[3] = \gen_gpios[3].is_output ;
  assign hw2reg[18:17] = \$hw2reg[18:17]$73 ;
  assign gpio_intrpt[3] = \$75y ;
  assign hw2reg[16] = gpio_intrpt[3];
  assign hw2reg[15] = gpio_intrpt[3];
  assign \gen_gpios[4].f_edge  = \$80y ;
  assign \gen_gpios[4].r_edge  = \$82y ;
  assign gpio_edge[4] = \$83y ;
  assign gpio_in_sync[4] = \gen_gpios[4].serial_q ;
  assign \gen_gpios[4].is_input  = \$85y ;
  assign \gen_gpios[4].is_output  = \$86y ;
  assign hw2reg[24] = \$87y ;
  assign gpio_o[4] = \$88y ;
  assign gpio_out_en_o[4] = \gen_gpios[4].is_output ;
  assign hw2reg[23:22] = \$hw2reg[23:22]$92 ;
  assign gpio_intrpt[4] = \$94y ;
  assign hw2reg[21] = gpio_intrpt[4];
  assign hw2reg[20] = gpio_intrpt[4];
  assign \gen_gpios[5].f_edge  = \$99y ;
  assign \gen_gpios[5].r_edge  = \$101y ;
  assign gpio_edge[5] = \$102y ;
  assign gpio_in_sync[5] = \gen_gpios[5].serial_q ;
  assign \gen_gpios[5].is_input  = \$104y ;
  assign \gen_gpios[5].is_output  = \$105y ;
  assign hw2reg[29] = \$106y ;
  assign gpio_o[5] = \$107y ;
  assign gpio_out_en_o[5] = \gen_gpios[5].is_output ;
  assign hw2reg[28:27] = \$hw2reg[28:27]$111 ;
  assign gpio_intrpt[5] = \$113y ;
  assign hw2reg[26] = gpio_intrpt[5];
  assign hw2reg[25] = gpio_intrpt[5];
  assign \gen_gpios[6].f_edge  = \$118y ;
  assign \gen_gpios[6].r_edge  = \$120y ;
  assign gpio_edge[6] = \$121y ;
  assign gpio_in_sync[6] = \gen_gpios[6].serial_q ;
  assign \gen_gpios[6].is_input  = \$123y ;
  assign \gen_gpios[6].is_output  = \$124y ;
  assign hw2reg[34] = \$125y ;
  assign gpio_o[6] = \$126y ;
  assign gpio_out_en_o[6] = \gen_gpios[6].is_output ;
  assign hw2reg[33:32] = \$hw2reg[33:32]$130 ;
  assign gpio_intrpt[6] = \$132y ;
  assign hw2reg[31] = gpio_intrpt[6];
  assign hw2reg[30] = gpio_intrpt[6];
  assign \gen_gpios[7].f_edge  = \$137y ;
  assign \gen_gpios[7].r_edge  = \$139y ;
  assign gpio_edge[7] = \$140y ;
  assign gpio_in_sync[7] = \gen_gpios[7].serial_q ;
  assign \gen_gpios[7].is_input  = \$142y ;
  assign \gen_gpios[7].is_output  = \$143y ;
  assign hw2reg[39] = \$144y ;
  assign gpio_o[7] = \$145y ;
  assign gpio_out_en_o[7] = \gen_gpios[7].is_output ;
  assign hw2reg[38:37] = \$hw2reg[38:37]$149 ;
  assign gpio_intrpt[7] = \$151y ;
  assign hw2reg[36] = gpio_intrpt[7];
  assign hw2reg[35] = gpio_intrpt[7];
  assign \gen_gpios[8].f_edge  = \$156y ;
  assign \gen_gpios[8].r_edge  = \$158y ;
  assign gpio_edge[8] = \$159y ;
  assign gpio_in_sync[8] = \gen_gpios[8].serial_q ;
  assign \gen_gpios[8].is_input  = \$161y ;
  assign \gen_gpios[8].is_output  = \$162y ;
  assign hw2reg[44] = \$163y ;
  assign gpio_o[8] = \$164y ;
  assign gpio_out_en_o[8] = \gen_gpios[8].is_output ;
  assign hw2reg[43:42] = \$hw2reg[43:42]$168 ;
  assign gpio_intrpt[8] = \$170y ;
  assign hw2reg[41] = gpio_intrpt[8];
  assign hw2reg[40] = gpio_intrpt[8];
  assign \gen_gpios[9].f_edge  = \$175y ;
  assign \gen_gpios[9].r_edge  = \$177y ;
  assign gpio_edge[9] = \$178y ;
  assign gpio_in_sync[9] = \gen_gpios[9].serial_q ;
  assign \gen_gpios[9].is_input  = \$180y ;
  assign \gen_gpios[9].is_output  = \$181y ;
  assign hw2reg[49] = \$182y ;
  assign gpio_o[9] = \$183y ;
  assign gpio_out_en_o[9] = \gen_gpios[9].is_output ;
  assign hw2reg[48:47] = \$hw2reg[48:47]$187 ;
  assign gpio_intrpt[9] = \$189y ;
  assign hw2reg[46] = gpio_intrpt[9];
  assign hw2reg[45] = gpio_intrpt[9];
  assign \gen_gpios[10].f_edge  = \$194y ;
  assign \gen_gpios[10].r_edge  = \$196y ;
  assign gpio_edge[10] = \$197y ;
  assign gpio_in_sync[10] = \gen_gpios[10].serial_q ;
  assign \gen_gpios[10].is_input  = \$199y ;
  assign \gen_gpios[10].is_output  = \$200y ;
  assign hw2reg[54] = \$201y ;
  assign gpio_o[10] = \$202y ;
  assign gpio_out_en_o[10] = \gen_gpios[10].is_output ;
  assign hw2reg[53:52] = \$hw2reg[53:52]$206 ;
  assign gpio_intrpt[10] = \$208y ;
  assign hw2reg[51] = gpio_intrpt[10];
  assign hw2reg[50] = gpio_intrpt[10];
  assign \gen_gpios[11].f_edge  = \$213y ;
  assign \gen_gpios[11].r_edge  = \$215y ;
  assign gpio_edge[11] = \$216y ;
  assign gpio_in_sync[11] = \gen_gpios[11].serial_q ;
  assign \gen_gpios[11].is_input  = \$218y ;
  assign \gen_gpios[11].is_output  = \$219y ;
  assign hw2reg[59] = \$220y ;
  assign gpio_o[11] = \$221y ;
  assign gpio_out_en_o[11] = \gen_gpios[11].is_output ;
  assign hw2reg[58:57] = \$hw2reg[58:57]$225 ;
  assign gpio_intrpt[11] = \$227y ;
  assign hw2reg[56] = gpio_intrpt[11];
  assign hw2reg[55] = gpio_intrpt[11];
  assign \gen_gpios[12].f_edge  = \$232y ;
  assign \gen_gpios[12].r_edge  = \$234y ;
  assign gpio_edge[12] = \$235y ;
  assign gpio_in_sync[12] = \gen_gpios[12].serial_q ;
  assign \gen_gpios[12].is_input  = \$237y ;
  assign \gen_gpios[12].is_output  = \$238y ;
  assign hw2reg[64] = \$239y ;
  assign gpio_o[12] = \$240y ;
  assign gpio_out_en_o[12] = \gen_gpios[12].is_output ;
  assign hw2reg[63:62] = \$hw2reg[63:62]$244 ;
  assign gpio_intrpt[12] = \$246y ;
  assign hw2reg[61] = gpio_intrpt[12];
  assign hw2reg[60] = gpio_intrpt[12];
  assign \gen_gpios[13].f_edge  = \$251y ;
  assign \gen_gpios[13].r_edge  = \$253y ;
  assign gpio_edge[13] = \$254y ;
  assign gpio_in_sync[13] = \gen_gpios[13].serial_q ;
  assign \gen_gpios[13].is_input  = \$256y ;
  assign \gen_gpios[13].is_output  = \$257y ;
  assign hw2reg[69] = \$258y ;
  assign gpio_o[13] = \$259y ;
  assign gpio_out_en_o[13] = \gen_gpios[13].is_output ;
  assign hw2reg[68:67] = \$hw2reg[68:67]$263 ;
  assign gpio_intrpt[13] = \$265y ;
  assign hw2reg[66] = gpio_intrpt[13];
  assign hw2reg[65] = gpio_intrpt[13];
  assign \gen_gpios[14].f_edge  = \$270y ;
  assign \gen_gpios[14].r_edge  = \$272y ;
  assign gpio_edge[14] = \$273y ;
  assign gpio_in_sync[14] = \gen_gpios[14].serial_q ;
  assign \gen_gpios[14].is_input  = \$275y ;
  assign \gen_gpios[14].is_output  = \$276y ;
  assign hw2reg[74] = \$277y ;
  assign gpio_o[14] = \$278y ;
  assign gpio_out_en_o[14] = \gen_gpios[14].is_output ;
  assign hw2reg[73:72] = \$hw2reg[73:72]$282 ;
  assign gpio_intrpt[14] = \$284y ;
  assign hw2reg[71] = gpio_intrpt[14];
  assign hw2reg[70] = gpio_intrpt[14];
  assign \gen_gpios[15].f_edge  = \$289y ;
  assign \gen_gpios[15].r_edge  = \$291y ;
  assign gpio_edge[15] = \$292y ;
  assign gpio_in_sync[15] = \gen_gpios[15].serial_q ;
  assign \gen_gpios[15].is_input  = \$294y ;
  assign \gen_gpios[15].is_output  = \$295y ;
  assign hw2reg[79] = \$296y ;
  assign gpio_o[15] = \$297y ;
  assign gpio_out_en_o[15] = \gen_gpios[15].is_output ;
  assign hw2reg[78:77] = \$hw2reg[78:77]$301 ;
  assign gpio_intrpt[15] = \$303y ;
  assign hw2reg[76] = gpio_intrpt[15];
  assign hw2reg[75] = gpio_intrpt[15];
  assign \gen_gpios[16].f_edge  = \$308y ;
  assign \gen_gpios[16].r_edge  = \$310y ;
  assign gpio_edge[16] = \$311y ;
  assign gpio_in_sync[16] = \gen_gpios[16].serial_q ;
  assign \gen_gpios[16].is_input  = \$313y ;
  assign \gen_gpios[16].is_output  = \$314y ;
  assign hw2reg[84] = \$315y ;
  assign gpio_o[16] = \$316y ;
  assign gpio_out_en_o[16] = \gen_gpios[16].is_output ;
  assign hw2reg[83:82] = \$hw2reg[83:82]$320 ;
  assign gpio_intrpt[16] = \$322y ;
  assign hw2reg[81] = gpio_intrpt[16];
  assign hw2reg[80] = gpio_intrpt[16];
  assign \gen_gpios[17].f_edge  = \$327y ;
  assign \gen_gpios[17].r_edge  = \$329y ;
  assign gpio_edge[17] = \$330y ;
  assign gpio_in_sync[17] = \gen_gpios[17].serial_q ;
  assign \gen_gpios[17].is_input  = \$332y ;
  assign \gen_gpios[17].is_output  = \$333y ;
  assign hw2reg[89] = \$334y ;
  assign gpio_o[17] = \$335y ;
  assign gpio_out_en_o[17] = \gen_gpios[17].is_output ;
  assign hw2reg[88:87] = \$hw2reg[88:87]$339 ;
  assign gpio_intrpt[17] = \$341y ;
  assign hw2reg[86] = gpio_intrpt[17];
  assign hw2reg[85] = gpio_intrpt[17];
  assign \gen_gpios[18].f_edge  = \$346y ;
  assign \gen_gpios[18].r_edge  = \$348y ;
  assign gpio_edge[18] = \$349y ;
  assign gpio_in_sync[18] = \gen_gpios[18].serial_q ;
  assign \gen_gpios[18].is_input  = \$351y ;
  assign \gen_gpios[18].is_output  = \$352y ;
  assign hw2reg[94] = \$353y ;
  assign gpio_o[18] = \$354y ;
  assign gpio_out_en_o[18] = \gen_gpios[18].is_output ;
  assign hw2reg[93:92] = \$hw2reg[93:92]$358 ;
  assign gpio_intrpt[18] = \$360y ;
  assign hw2reg[91] = gpio_intrpt[18];
  assign hw2reg[90] = gpio_intrpt[18];
  assign \gen_gpios[19].f_edge  = \$365y ;
  assign \gen_gpios[19].r_edge  = \$367y ;
  assign gpio_edge[19] = \$368y ;
  assign gpio_in_sync[19] = \gen_gpios[19].serial_q ;
  assign \gen_gpios[19].is_input  = \$370y ;
  assign \gen_gpios[19].is_output  = \$371y ;
  assign hw2reg[99] = \$372y ;
  assign gpio_o[19] = \$373y ;
  assign gpio_out_en_o[19] = \gen_gpios[19].is_output ;
  assign hw2reg[98:97] = \$hw2reg[98:97]$377 ;
  assign gpio_intrpt[19] = \$379y ;
  assign hw2reg[96] = gpio_intrpt[19];
  assign hw2reg[95] = gpio_intrpt[19];
  assign \gen_gpios[20].f_edge  = \$384y ;
  assign \gen_gpios[20].r_edge  = \$386y ;
  assign gpio_edge[20] = \$387y ;
  assign gpio_in_sync[20] = \gen_gpios[20].serial_q ;
  assign \gen_gpios[20].is_input  = \$389y ;
  assign \gen_gpios[20].is_output  = \$390y ;
  assign hw2reg[104] = \$391y ;
  assign gpio_o[20] = \$392y ;
  assign gpio_out_en_o[20] = \gen_gpios[20].is_output ;
  assign hw2reg[103:102] = \$hw2reg[103:102]$396 ;
  assign gpio_intrpt[20] = \$398y ;
  assign hw2reg[101] = gpio_intrpt[20];
  assign hw2reg[100] = gpio_intrpt[20];
  assign \gen_gpios[21].f_edge  = \$403y ;
  assign \gen_gpios[21].r_edge  = \$405y ;
  assign gpio_edge[21] = \$406y ;
  assign gpio_in_sync[21] = \gen_gpios[21].serial_q ;
  assign \gen_gpios[21].is_input  = \$408y ;
  assign \gen_gpios[21].is_output  = \$409y ;
  assign hw2reg[109] = \$410y ;
  assign gpio_o[21] = \$411y ;
  assign gpio_out_en_o[21] = \gen_gpios[21].is_output ;
  assign hw2reg[108:107] = \$hw2reg[108:107]$415 ;
  assign gpio_intrpt[21] = \$417y ;
  assign hw2reg[106] = gpio_intrpt[21];
  assign hw2reg[105] = gpio_intrpt[21];
  assign \gen_gpios[22].f_edge  = \$422y ;
  assign \gen_gpios[22].r_edge  = \$424y ;
  assign gpio_edge[22] = \$425y ;
  assign gpio_in_sync[22] = \gen_gpios[22].serial_q ;
  assign \gen_gpios[22].is_input  = \$427y ;
  assign \gen_gpios[22].is_output  = \$428y ;
  assign hw2reg[114] = \$429y ;
  assign gpio_o[22] = \$430y ;
  assign gpio_out_en_o[22] = \gen_gpios[22].is_output ;
  assign hw2reg[113:112] = \$hw2reg[113:112]$434 ;
  assign gpio_intrpt[22] = \$436y ;
  assign hw2reg[111] = gpio_intrpt[22];
  assign hw2reg[110] = gpio_intrpt[22];
  assign \gen_gpios[23].f_edge  = \$441y ;
  assign \gen_gpios[23].r_edge  = \$443y ;
  assign gpio_edge[23] = \$444y ;
  assign gpio_in_sync[23] = \gen_gpios[23].serial_q ;
  assign \gen_gpios[23].is_input  = \$446y ;
  assign \gen_gpios[23].is_output  = \$447y ;
  assign hw2reg[119] = \$448y ;
  assign gpio_o[23] = \$449y ;
  assign gpio_out_en_o[23] = \gen_gpios[23].is_output ;
  assign hw2reg[118:117] = \$hw2reg[118:117]$453 ;
  assign gpio_intrpt[23] = \$455y ;
  assign hw2reg[116] = gpio_intrpt[23];
  assign hw2reg[115] = gpio_intrpt[23];
  assign \gen_gpios[24].f_edge  = \$460y ;
  assign \gen_gpios[24].r_edge  = \$462y ;
  assign gpio_edge[24] = \$463y ;
  assign gpio_in_sync[24] = \gen_gpios[24].serial_q ;
  assign \gen_gpios[24].is_input  = \$465y ;
  assign \gen_gpios[24].is_output  = \$466y ;
  assign hw2reg[124] = \$467y ;
  assign gpio_o[24] = \$468y ;
  assign gpio_out_en_o[24] = \gen_gpios[24].is_output ;
  assign hw2reg[123:122] = \$hw2reg[123:122]$472 ;
  assign gpio_intrpt[24] = \$474y ;
  assign hw2reg[121] = gpio_intrpt[24];
  assign hw2reg[120] = gpio_intrpt[24];
  assign \gen_gpios[25].f_edge  = \$479y ;
  assign \gen_gpios[25].r_edge  = \$481y ;
  assign gpio_edge[25] = \$482y ;
  assign gpio_in_sync[25] = \gen_gpios[25].serial_q ;
  assign \gen_gpios[25].is_input  = \$484y ;
  assign \gen_gpios[25].is_output  = \$485y ;
  assign hw2reg[129] = \$486y ;
  assign gpio_o[25] = \$487y ;
  assign gpio_out_en_o[25] = \gen_gpios[25].is_output ;
  assign hw2reg[128:127] = \$hw2reg[128:127]$491 ;
  assign gpio_intrpt[25] = \$493y ;
  assign hw2reg[126] = gpio_intrpt[25];
  assign hw2reg[125] = gpio_intrpt[25];
  assign \gen_gpios[26].f_edge  = \$498y ;
  assign \gen_gpios[26].r_edge  = \$500y ;
  assign gpio_edge[26] = \$501y ;
  assign gpio_in_sync[26] = \gen_gpios[26].serial_q ;
  assign \gen_gpios[26].is_input  = \$503y ;
  assign \gen_gpios[26].is_output  = \$504y ;
  assign hw2reg[134] = \$505y ;
  assign gpio_o[26] = \$506y ;
  assign gpio_out_en_o[26] = \gen_gpios[26].is_output ;
  assign hw2reg[133:132] = \$hw2reg[133:132]$510 ;
  assign gpio_intrpt[26] = \$512y ;
  assign hw2reg[131] = gpio_intrpt[26];
  assign hw2reg[130] = gpio_intrpt[26];
  assign \gen_gpios[27].f_edge  = \$517y ;
  assign \gen_gpios[27].r_edge  = \$519y ;
  assign gpio_edge[27] = \$520y ;
  assign gpio_in_sync[27] = \gen_gpios[27].serial_q ;
  assign \gen_gpios[27].is_input  = \$522y ;
  assign \gen_gpios[27].is_output  = \$523y ;
  assign hw2reg[139] = \$524y ;
  assign gpio_o[27] = \$525y ;
  assign gpio_out_en_o[27] = \gen_gpios[27].is_output ;
  assign hw2reg[138:137] = \$hw2reg[138:137]$529 ;
  assign gpio_intrpt[27] = \$531y ;
  assign hw2reg[136] = gpio_intrpt[27];
  assign hw2reg[135] = gpio_intrpt[27];
  assign \gen_gpios[28].f_edge  = \$536y ;
  assign \gen_gpios[28].r_edge  = \$538y ;
  assign gpio_edge[28] = \$539y ;
  assign gpio_in_sync[28] = \gen_gpios[28].serial_q ;
  assign \gen_gpios[28].is_input  = \$541y ;
  assign \gen_gpios[28].is_output  = \$542y ;
  assign hw2reg[144] = \$543y ;
  assign gpio_o[28] = \$544y ;
  assign gpio_out_en_o[28] = \gen_gpios[28].is_output ;
  assign hw2reg[143:142] = \$hw2reg[143:142]$548 ;
  assign gpio_intrpt[28] = \$550y ;
  assign hw2reg[141] = gpio_intrpt[28];
  assign hw2reg[140] = gpio_intrpt[28];
  assign \gen_gpios[29].f_edge  = \$555y ;
  assign \gen_gpios[29].r_edge  = \$557y ;
  assign gpio_edge[29] = \$558y ;
  assign gpio_in_sync[29] = \gen_gpios[29].serial_q ;
  assign \gen_gpios[29].is_input  = \$560y ;
  assign \gen_gpios[29].is_output  = \$561y ;
  assign hw2reg[149] = \$562y ;
  assign gpio_o[29] = \$563y ;
  assign gpio_out_en_o[29] = \gen_gpios[29].is_output ;
  assign hw2reg[148:147] = \$hw2reg[148:147]$567 ;
  assign gpio_intrpt[29] = \$569y ;
  assign hw2reg[146] = gpio_intrpt[29];
  assign hw2reg[145] = gpio_intrpt[29];
  assign \gen_gpios[30].f_edge  = \$574y ;
  assign \gen_gpios[30].r_edge  = \$576y ;
  assign gpio_edge[30] = \$577y ;
  assign gpio_in_sync[30] = \gen_gpios[30].serial_q ;
  assign \gen_gpios[30].is_input  = \$579y ;
  assign \gen_gpios[30].is_output  = \$580y ;
  assign hw2reg[154] = \$581y ;
  assign gpio_o[30] = \$582y ;
  assign gpio_out_en_o[30] = \gen_gpios[30].is_output ;
  assign hw2reg[153:152] = \$hw2reg[153:152]$586 ;
  assign gpio_intrpt[30] = \$588y ;
  assign hw2reg[151] = gpio_intrpt[30];
  assign hw2reg[150] = gpio_intrpt[30];
  assign \gen_gpios[31].f_edge  = \$593y ;
  assign \gen_gpios[31].r_edge  = \$595y ;
  assign gpio_edge[31] = \$596y ;
  assign gpio_in_sync[31] = \gen_gpios[31].serial_q ;
  assign \gen_gpios[31].is_input  = \$598y ;
  assign \gen_gpios[31].is_output  = \$599y ;
  assign hw2reg[159] = \$600y ;
  assign gpio_o[31] = \$601y ;
  assign gpio_out_en_o[31] = \gen_gpios[31].is_output ;
  assign hw2reg[158:157] = \$hw2reg[158:157]$605 ;
  assign gpio_intrpt[31] = \$607y ;
  assign hw2reg[156] = gpio_intrpt[31];
  assign hw2reg[155] = gpio_intrpt[31];
  assign gpio_intrpt_pending = \$640y ;
  assign interrupt_o = gpio_intrpt_pending;
  assign \$procmux$12431_CMP  = \$299y ;
  assign \$hw2reg[78:77]$301  = \$procmux$12430_Y ;
  assign \$procmux$12433_CMP  = \$451y ;
  assign \$hw2reg[118:117]$453  = \$procmux$12432_Y ;
  assign \$procmux$12435_CMP  = \$280y ;
  assign \$hw2reg[73:72]$282  = \$procmux$12434_Y ;
  assign \$procmux$12437_CMP  = \$527y ;
  assign \$hw2reg[138:137]$529  = \$procmux$12436_Y ;
  assign \$procmux$12439_CMP  = \$261y ;
  assign \$hw2reg[68:67]$263  = \$procmux$12438_Y ;
  assign \$procmux$12441_CMP  = \$432y ;
  assign \$hw2reg[113:112]$434  = \$procmux$12440_Y ;
  assign \$procmux$12443_CMP  = \$242y ;
  assign \$hw2reg[63:62]$244  = \$procmux$12442_Y ;
  assign \$procmux$12445_CMP  = \$565y ;
  assign \$hw2reg[148:147]$567  = \$procmux$12444_Y ;
  assign \$procmux$12447_CMP  = \$223y ;
  assign \$hw2reg[58:57]$225  = \$procmux$12446_Y ;
  assign \$procmux$12449_CMP  = \$413y ;
  assign \$hw2reg[108:107]$415  = \$procmux$12448_Y ;
  assign \$procmux$12451_CMP  = \$204y ;
  assign \$hw2reg[53:52]$206  = \$procmux$12450_Y ;
  assign \$procmux$12453_CMP  = \$508y ;
  assign \$hw2reg[133:132]$510  = \$procmux$12452_Y ;
  assign \$procmux$12455_CMP  = \$185y ;
  assign \$hw2reg[48:47]$187  = \$procmux$12454_Y ;
  assign \$procmux$12457_CMP  = \$394y ;
  assign \$hw2reg[103:102]$396  = \$procmux$12456_Y ;
  assign \$procmux$12459_CMP  = \$166y ;
  assign \$hw2reg[43:42]$168  = \$procmux$12458_Y ;
  assign \$procmux$12461_CMP  = \$584y ;
  assign \$hw2reg[153:152]$586  = \$procmux$12460_Y ;
  assign \$procmux$12463_CMP  = \$147y ;
  assign \$hw2reg[38:37]$149  = \$procmux$12462_Y ;
  assign \$procmux$12465_CMP  = \$375y ;
  assign \$hw2reg[98:97]$377  = \$procmux$12464_Y ;
  assign \$procmux$12467_CMP  = \$128y ;
  assign \$hw2reg[33:32]$130  = \$procmux$12466_Y ;
  assign \$procmux$12469_CMP  = \$489y ;
  assign \$hw2reg[128:127]$491  = \$procmux$12468_Y ;
  assign \$procmux$12471_CMP  = \$109y ;
  assign \$hw2reg[28:27]$111  = \$procmux$12470_Y ;
  assign \$procmux$12473_CMP  = \$356y ;
  assign \$hw2reg[93:92]$358  = \$procmux$12472_Y ;
  assign \$procmux$12475_CMP  = \$90y ;
  assign \$hw2reg[23:22]$92  = \$procmux$12474_Y ;
  assign \$procmux$12477_CMP  = \$546y ;
  assign \$hw2reg[143:142]$548  = \$procmux$12476_Y ;
  assign \$procmux$12479_CMP  = \$71y ;
  assign \$hw2reg[18:17]$73  = \$procmux$12478_Y ;
  assign \$procmux$12481_CMP  = \$337y ;
  assign \$hw2reg[88:87]$339  = \$procmux$12480_Y ;
  assign \$procmux$12483_CMP  = \$52y ;
  assign \$hw2reg[13:12]$54  = \$procmux$12482_Y ;
  assign \$procmux$12485_CMP  = \$470y ;
  assign \$hw2reg[123:122]$472  = \$procmux$12484_Y ;
  assign \$procmux$12487_CMP  = \$33y ;
  assign \$hw2reg[8:7]$35  = \$procmux$12486_Y ;
  assign \$procmux$12489_CMP  = \$318y ;
  assign \$hw2reg[83:82]$320  = \$procmux$12488_Y ;
  assign \$procmux$12491_CMP  = \$14y ;
  assign \$hw2reg[3:2]$16  = \$procmux$12490_Y ;
  assign \$procmux$12493_CMP  = \$603y ;
  assign \$hw2reg[158:157]$605  = \$procmux$12492_Y ;
  assign \$2y  = rst_ni;
  assign \$21y  = rst_ni;
  assign \$59y  = rst_ni;
  assign \$78y  = rst_ni;
  assign \$97y  = rst_ni;
  assign \$116y  = rst_ni;
  assign \$154y  = rst_ni;
  assign \$40y  = rst_ni;
  assign \$135y  = rst_ni;
  assign \$173y  = rst_ni;
  assign \$192y  = rst_ni;
  assign \$211y  = rst_ni;
  assign \$230y  = rst_ni;
  assign \$249y  = rst_ni;
  assign \$268y  = rst_ni;
  assign \$287y  = rst_ni;
  assign \$306y  = rst_ni;
  assign \$325y  = rst_ni;
  assign \$344y  = rst_ni;
  assign \$363y  = rst_ni;
  assign \$382y  = rst_ni;
  assign \$401y  = rst_ni;
  assign \$420y  = rst_ni;
  assign \$439y  = rst_ni;
  assign \$458y  = rst_ni;
  assign \$477y  = rst_ni;
  assign \$496y  = rst_ni;
  assign \$515y  = rst_ni;
  assign \$534y  = rst_ni;
  assign \$553y  = rst_ni;
  assign \$572y  = rst_ni;
  assign \$591y  = rst_ni;
  assign \$609y  = reg2hw[1];
endmodule

/* src = "rtl/gpio/gpio_reg_top.sv:12.8" */
module \gpio_reg_top$croc_chip.i_croc_soc.i_croc.i_gpio.i_reg_file (clk_i, rst_ni, obi_req_i, obi_rsp_o, reg2hw, hw2reg);
  wire \$100y ;
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$105y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$109y ;
  wire \$110y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$115y ;
  wire \$116y ;
  wire \$117y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$120y ;
  wire \$121y ;
  wire \$122y ;
  wire [31:0] \$123y ;
  wire [31:0] \$124y ;
  wire [31:0] \$125y ;
  wire [31:0] \$126y ;
  wire [31:0] \$127y ;
  wire [31:0] \$128y ;
  wire [31:0] \$129y ;
  wire \$12y ;
  wire [31:0] \$130y ;
  wire [31:0] \$131y ;
  wire [31:0] \$132y ;
  wire [31:0] \$133y ;
  wire [31:0] \$134y ;
  wire [31:0] \$135y ;
  wire [31:0] \$136y ;
  wire [31:0] \$137y ;
  wire [31:0] \$138y ;
  wire [31:0] \$139y ;
  wire [31:0] \$140y ;
  wire [31:0] \$141y ;
  wire [31:0] \$142y ;
  wire [31:0] \$143y ;
  wire \$14y ;
  wire \$15y ;
  wire \$17y ;
  wire \$18y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$23y ;
  wire \$24y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$70y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$75y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$85y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$95y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire \$9y ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire \$obi_err$150 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire \$obi_err$157 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire \$obi_err$160 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire [31:0] \$obi_rdata$158 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire [31:0] \$obi_rdata$161 ;
  wire [31:0] \$procmux$10984_Y ;
  wire \$procmux$10985_CMP ;
  wire \$procmux$10986_CMP ;
  wire \$procmux$10987_CMP ;
  wire \$procmux$10988_CMP ;
  wire \$procmux$10989_CMP ;
  wire \$procmux$10990_CMP ;
  wire \$procmux$10991_CMP ;
  wire \$procmux$10992_CMP ;
  wire [31:0] \$procmux$10993_Y ;
  wire \$procmux$10994_CMP ;
  wire [31:0] \$procmux$10997_Y ;
  wire \$procmux$10998_CMP ;
  wire [31:0] \$procmux$10999_Y ;
  wire \$procmux$11000_CMP ;
  wire \$procmux$11002_Y ;
  wire \$procmux$11003_CMP ;
  wire \$procmux$11004_CMP ;
  wire \$procmux$11005_CMP ;
  wire \$procmux$11006_CMP ;
  wire \$procmux$11007_CMP ;
  wire \$procmux$11008_CMP ;
  wire \$procmux$11009_CMP ;
  wire \$procmux$11010_CMP ;
  wire \$procmux$11011_Y ;
  wire \$procmux$11012_CMP ;
  wire [31:0] \$procmux$11015_Y ;
  wire \$procmux$11016_CMP ;
  wire [31:0] \$procmux$11019_Y ;
  wire \$procmux$11020_CMP ;
  wire \$procmux$11023_Y ;
  wire \$procmux$11024_CMP ;
  wire [31:0] \$procmux$11031_Y ;
  wire \$procmux$11032_CMP ;
  wire [31:0] \$procmux$11033_Y ;
  wire \$procmux$11034_CMP ;
  wire [31:0] \$procmux$11040_Y ;
  wire \$procmux$11041_CMP ;
  wire [31:0] \$procmux$11042_Y ;
  wire \$procmux$11043_CMP ;
  wire [31:0] \$procmux$11047_Y ;
  wire \$procmux$11048_CMP ;
  wire [31:0] \$procmux$11049_Y ;
  wire \$procmux$11050_CMP ;
  wire [31:0] \$procmux$11055_Y ;
  wire \$procmux$11056_CMP ;
  wire [31:0] \$procmux$11057_Y ;
  wire \$procmux$11058_CMP ;
  wire [31:0] \$procmux$11061_Y ;
  wire \$procmux$11062_CMP ;
  wire [31:0] \$procmux$11063_Y ;
  wire \$procmux$11064_CMP ;
  wire [31:0] \$procmux$11066_Y ;
  wire \$procmux$11067_CMP ;
  wire [31:0] \$procmux$11068_Y ;
  wire \$procmux$11069_CMP ;
  wire \$procmux$11071_Y ;
  wire \$procmux$11072_CMP ;
  wire \$procmux$11073_CMP ;
  wire \$procmux$11074_CMP ;
  wire \$procmux$11075_CMP ;
  wire \$procmux$11076_CMP ;
  wire \$procmux$11077_CMP ;
  wire \$procmux$11078_Y ;
  wire \$procmux$11079_CMP ;
  wire [31:0] \$procmux$11081_Y ;
  wire \$procmux$11082_CMP ;
  wire [63:0] \$procmux$11084_Y ;
  wire \$procmux$11085_CMP ;
  wire [31:0] \$procmux$11087_Y ;
  wire \$procmux$11088_CMP ;
  wire [31:0] \$procmux$11090_Y ;
  wire \$procmux$11091_CMP ;
  wire [31:0] \$procmux$11093_Y ;
  wire \$procmux$11094_CMP ;
  wire \$procmux$11096_Y ;
  wire \$procmux$11097_CMP ;
  wire \$procmux$11099_Y ;
  wire \$procmux$11100_CMP ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$reg_d[159:128]$147 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$reg_d[159:128]$154 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [63:0] \$reg_d[255:192]$148 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [63:0] \$reg_d[255:192]$155 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$reg_d[31:0]$145 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$reg_d[31:0]$152 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  wire [31:0] \$reg_d[63:32]$159 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  wire [31:0] \$reg_d[63:32]$162 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$reg_d[95:64]$146 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$reg_d[95:64]$153 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire [31:0] \$toggle_out$149 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire [31:0] \$toggle_out$156 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  wire \$w_err_d$144 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  wire \$w_err_d$151 ;
  /* src = "rtl/gpio/gpio_reg_top.sv:117.32" */
  wire [31:0] bit_mask;
  /* src = "rtl/gpio/gpio_reg_top.sv:23.18" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/gpio/gpio_reg_top.sv:37.43" */
  input [159:0] hw2reg;
  wire [159:0] hw2reg;
  /* src = "rtl/gpio/gpio_reg_top.sv:50.35" */
  wire id_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:50.41" */
  wire id_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:113.25" */
  wire [31:0] new_intrpt;
  /* src = "rtl/gpio/gpio_reg_top.sv:108.21" */
  wire [255:0] new_reg;
  /* src = "rtl/gpio/gpio_reg_top.sv:51.35" */
  wire obi_err;
  /* src = "rtl/gpio/gpio_reg_top.sv:54.35" */
  wire [31:0] obi_rdata;
  /* src = "rtl/gpio/gpio_reg_top.sv:55.35" */
  wire obi_read_request;
  /* src = "rtl/gpio/gpio_reg_top.sv:29.23" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/gpio/gpio_reg_top.sv:31.22" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/gpio/gpio_reg_top.sv:54.46" */
  wire [31:0] obi_wdata;
  /* src = "rtl/gpio/gpio_reg_top.sv:55.53" */
  wire obi_write_request;
  /* src = "rtl/gpio/gpio_reg_top.sv:49.35" */
  wire [11:0] read_addr_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:49.48" */
  wire [11:0] read_addr_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:35.42" */
  output [223:0] reg2hw;
  wire [223:0] reg2hw;
  /* src = "rtl/gpio/gpio_reg_top.sv:105.21" */
  wire [255:0] reg_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:105.28" */
  wire [255:0] reg_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:47.35" */
  wire req_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:47.42" */
  wire req_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:25.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/gpio/gpio_reg_top.sv:114.25" */
  wire [31:0] toggle_out;
  /* src = "rtl/gpio/gpio_reg_top.sv:45.35" */
  wire valid_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:45.44" */
  wire valid_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:52.35" */
  wire w_err_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:52.44" */
  wire w_err_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:46.35" */
  wire we_d;
  /* src = "rtl/gpio/gpio_reg_top.sv:46.41" */
  wire we_q;
  /* src = "rtl/gpio/gpio_reg_top.sv:48.35" */
  wire [11:0] write_addr;
  /* src = "rtl/gpio/gpio_reg_top.sv:69.38-69.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(we_q),
    .Y(\$1y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$100  (
    .A(reg_q[56]),
    .B(hw2reg[121]),
    .S(hw2reg[120]),
    .Y(\$100y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$101  (
    .A(hw2reg[120]),
    .B(hw2reg[121]),
    .Y(\$101y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$102  (
    .A(reg_q[153]),
    .B(hw2reg[128]),
    .S(hw2reg[127]),
    .Y(\$102y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$103  (
    .A(reg_q[57]),
    .B(hw2reg[126]),
    .S(hw2reg[125]),
    .Y(\$103y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(hw2reg[125]),
    .B(hw2reg[126]),
    .Y(\$104y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$105  (
    .A(reg_q[154]),
    .B(hw2reg[133]),
    .S(hw2reg[132]),
    .Y(\$105y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$106  (
    .A(reg_q[58]),
    .B(hw2reg[131]),
    .S(hw2reg[130]),
    .Y(\$106y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(hw2reg[130]),
    .B(hw2reg[131]),
    .Y(\$107y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$108  (
    .A(reg_q[155]),
    .B(hw2reg[138]),
    .S(hw2reg[137]),
    .Y(\$108y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$109  (
    .A(reg_q[59]),
    .B(hw2reg[136]),
    .S(hw2reg[135]),
    .Y(\$109y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(rst_ni),
    .Y(\$11y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$110  (
    .A(hw2reg[135]),
    .B(hw2reg[136]),
    .Y(\$110y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$111  (
    .A(reg_q[156]),
    .B(hw2reg[143]),
    .S(hw2reg[142]),
    .Y(\$111y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$112  (
    .A(reg_q[60]),
    .B(hw2reg[141]),
    .S(hw2reg[140]),
    .Y(\$112y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(hw2reg[140]),
    .B(hw2reg[141]),
    .Y(\$113y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$114  (
    .A(reg_q[157]),
    .B(hw2reg[148]),
    .S(hw2reg[147]),
    .Y(\$114y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$115  (
    .A(reg_q[61]),
    .B(hw2reg[146]),
    .S(hw2reg[145]),
    .Y(\$115y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$116  (
    .A(hw2reg[145]),
    .B(hw2reg[146]),
    .Y(\$116y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$117  (
    .A(reg_q[158]),
    .B(hw2reg[153]),
    .S(hw2reg[152]),
    .Y(\$117y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$118  (
    .A(reg_q[62]),
    .B(hw2reg[151]),
    .S(hw2reg[150]),
    .Y(\$118y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(hw2reg[150]),
    .B(hw2reg[151]),
    .Y(\$119y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$120  (
    .A(reg_q[159]),
    .B(hw2reg[158]),
    .S(hw2reg[157]),
    .Y(\$120y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$121  (
    .A(reg_q[63]),
    .B(hw2reg[156]),
    .S(hw2reg[155]),
    .Y(\$121y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(hw2reg[155]),
    .B(hw2reg[156]),
    .Y(\$122y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:169.24-169.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$123  (
    .A(bit_mask),
    .Y(\$123y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:169.24-169.47" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$124  (
    .A(\$123y ),
    .B(reg_q[255:224]),
    .Y(\$124y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:169.52-169.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$125  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$125y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:169.23-169.88" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$126  (
    .A(\$124y ),
    .B(\$125y ),
    .Y(\$126y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:173.23-173.32" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$127  (
    .A(bit_mask),
    .Y(\$127y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:173.23-173.45" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$128  (
    .A(\$127y ),
    .B(reg_q[223:192]),
    .Y(\$128y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:173.50-173.85" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$129  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$129y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:173.22-173.86" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$130  (
    .A(\$128y ),
    .B(\$129y ),
    .Y(\$130y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:178.12-178.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$131  (
    .A(bit_mask),
    .Y(\$131y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:178.12-178.35" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$132  (
    .A(\$131y ),
    .B({ \$120y , \$117y , \$114y , \$111y , \$108y , \$105y , \$102y , \$99y , \$96y , \$93y , \$90y , \$87y , \$84y , \$81y , \$78y , \$75y , \$72y , \$69y , \$66y , \$63y , \$60y , \$57y , \$54y , \$51y , \$48y , \$45y , \$42y , \$39y , \$36y , \$33y , \$30y , \$27y  }),
    .Y(\$132y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:178.40-178.75" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$133  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$133y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:178.11-178.76" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$134  (
    .A(\$132y ),
    .B(\$133y ),
    .Y(\$134y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:182.24-182.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$135  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$135y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:187.14-187.23" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$136  (
    .A(bit_mask),
    .Y(\$136y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:187.14-187.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$137  (
    .A(\$136y ),
    .B(reg_q[95:64]),
    .Y(\$137y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:187.48-187.83" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$138  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$138y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:187.13-187.84" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$139  (
    .A(\$137y ),
    .B(\$138y ),
    .Y(\$139y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(rst_ni),
    .Y(\$14y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:192.14-192.23" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$140  (
    .A(bit_mask),
    .Y(\$140y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:192.14-192.45" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$141  (
    .A(\$140y ),
    .B(reg_q[31:0]),
    .Y(\$141y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:192.50-192.85" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$142  (
    .A(bit_mask),
    .B(obi_wdata),
    .Y(\$142y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:192.13-192.86" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$143  (
    .A(\$141y ),
    .B(\$142y ),
    .Y(\$143y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(rst_ni),
    .Y(\$17y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:69.30-69.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(req_q),
    .B(\$1y ),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A(rst_ni),
    .Y(\$20y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(rst_ni),
    .Y(\$23y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$27  (
    .A(reg_q[128]),
    .B(hw2reg[3]),
    .S(hw2reg[2]),
    .Y(\$27y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$28  (
    .A(reg_q[32]),
    .B(hw2reg[1]),
    .S(hw2reg[0]),
    .Y(\$28y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(hw2reg[0]),
    .B(hw2reg[1]),
    .Y(\$29y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:70.30-70.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(obi_req_i[0]),
    .B(obi_req_i[41]),
    .Y(\$3y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$30  (
    .A(reg_q[129]),
    .B(hw2reg[8]),
    .S(hw2reg[7]),
    .Y(\$30y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$31  (
    .A(reg_q[33]),
    .B(hw2reg[6]),
    .S(hw2reg[5]),
    .Y(\$31y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(hw2reg[5]),
    .B(hw2reg[6]),
    .Y(\$32y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$33  (
    .A(reg_q[130]),
    .B(hw2reg[13]),
    .S(hw2reg[12]),
    .Y(\$33y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$34  (
    .A(reg_q[34]),
    .B(hw2reg[11]),
    .S(hw2reg[10]),
    .Y(\$34y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(hw2reg[10]),
    .B(hw2reg[11]),
    .Y(\$35y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$36  (
    .A(reg_q[131]),
    .B(hw2reg[18]),
    .S(hw2reg[17]),
    .Y(\$36y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$37  (
    .A(reg_q[35]),
    .B(hw2reg[16]),
    .S(hw2reg[15]),
    .Y(\$37y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(hw2reg[15]),
    .B(hw2reg[16]),
    .Y(\$38y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$39  (
    .A(reg_q[132]),
    .B(hw2reg[23]),
    .S(hw2reg[22]),
    .Y(\$39y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$40  (
    .A(reg_q[36]),
    .B(hw2reg[21]),
    .S(hw2reg[20]),
    .Y(\$40y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(hw2reg[20]),
    .B(hw2reg[21]),
    .Y(\$41y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$42  (
    .A(reg_q[133]),
    .B(hw2reg[28]),
    .S(hw2reg[27]),
    .Y(\$42y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$43  (
    .A(reg_q[37]),
    .B(hw2reg[26]),
    .S(hw2reg[25]),
    .Y(\$43y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(hw2reg[25]),
    .B(hw2reg[26]),
    .Y(\$44y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$45  (
    .A(reg_q[134]),
    .B(hw2reg[33]),
    .S(hw2reg[32]),
    .Y(\$45y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$46  (
    .A(reg_q[38]),
    .B(hw2reg[31]),
    .S(hw2reg[30]),
    .Y(\$46y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(hw2reg[30]),
    .B(hw2reg[31]),
    .Y(\$47y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$48  (
    .A(reg_q[135]),
    .B(hw2reg[38]),
    .S(hw2reg[37]),
    .Y(\$48y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$49  (
    .A(reg_q[39]),
    .B(hw2reg[36]),
    .S(hw2reg[35]),
    .Y(\$49y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(rst_ni),
    .Y(\$5y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(hw2reg[35]),
    .B(hw2reg[36]),
    .Y(\$50y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$51  (
    .A(reg_q[136]),
    .B(hw2reg[43]),
    .S(hw2reg[42]),
    .Y(\$51y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$52  (
    .A(reg_q[40]),
    .B(hw2reg[41]),
    .S(hw2reg[40]),
    .Y(\$52y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(hw2reg[40]),
    .B(hw2reg[41]),
    .Y(\$53y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$54  (
    .A(reg_q[137]),
    .B(hw2reg[48]),
    .S(hw2reg[47]),
    .Y(\$54y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$55  (
    .A(reg_q[41]),
    .B(hw2reg[46]),
    .S(hw2reg[45]),
    .Y(\$55y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(hw2reg[45]),
    .B(hw2reg[46]),
    .Y(\$56y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$57  (
    .A(reg_q[138]),
    .B(hw2reg[53]),
    .S(hw2reg[52]),
    .Y(\$57y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$58  (
    .A(reg_q[42]),
    .B(hw2reg[51]),
    .S(hw2reg[50]),
    .Y(\$58y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(hw2reg[50]),
    .B(hw2reg[51]),
    .Y(\$59y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$60  (
    .A(reg_q[139]),
    .B(hw2reg[58]),
    .S(hw2reg[57]),
    .Y(\$60y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$61  (
    .A(reg_q[43]),
    .B(hw2reg[56]),
    .S(hw2reg[55]),
    .Y(\$61y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(hw2reg[55]),
    .B(hw2reg[56]),
    .Y(\$62y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$63  (
    .A(reg_q[140]),
    .B(hw2reg[63]),
    .S(hw2reg[62]),
    .Y(\$63y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$64  (
    .A(reg_q[44]),
    .B(hw2reg[61]),
    .S(hw2reg[60]),
    .Y(\$64y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$65  (
    .A(hw2reg[60]),
    .B(hw2reg[61]),
    .Y(\$65y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$66  (
    .A(reg_q[141]),
    .B(hw2reg[68]),
    .S(hw2reg[67]),
    .Y(\$66y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$67  (
    .A(reg_q[45]),
    .B(hw2reg[66]),
    .S(hw2reg[65]),
    .Y(\$67y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(hw2reg[65]),
    .B(hw2reg[66]),
    .Y(\$68y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$69  (
    .A(reg_q[142]),
    .B(hw2reg[73]),
    .S(hw2reg[72]),
    .Y(\$69y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$70  (
    .A(reg_q[46]),
    .B(hw2reg[71]),
    .S(hw2reg[70]),
    .Y(\$70y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(hw2reg[70]),
    .B(hw2reg[71]),
    .Y(\$71y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$72  (
    .A(reg_q[143]),
    .B(hw2reg[78]),
    .S(hw2reg[77]),
    .Y(\$72y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$73  (
    .A(reg_q[47]),
    .B(hw2reg[76]),
    .S(hw2reg[75]),
    .Y(\$73y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(hw2reg[75]),
    .B(hw2reg[76]),
    .Y(\$74y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$75  (
    .A(reg_q[144]),
    .B(hw2reg[83]),
    .S(hw2reg[82]),
    .Y(\$75y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$76  (
    .A(reg_q[48]),
    .B(hw2reg[81]),
    .S(hw2reg[80]),
    .Y(\$76y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(hw2reg[80]),
    .B(hw2reg[81]),
    .Y(\$77y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$78  (
    .A(reg_q[145]),
    .B(hw2reg[88]),
    .S(hw2reg[87]),
    .Y(\$78y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$79  (
    .A(reg_q[49]),
    .B(hw2reg[86]),
    .S(hw2reg[85]),
    .Y(\$79y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(hw2reg[85]),
    .B(hw2reg[86]),
    .Y(\$80y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$81  (
    .A(reg_q[146]),
    .B(hw2reg[93]),
    .S(hw2reg[92]),
    .Y(\$81y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$82  (
    .A(reg_q[50]),
    .B(hw2reg[91]),
    .S(hw2reg[90]),
    .Y(\$82y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(hw2reg[90]),
    .B(hw2reg[91]),
    .Y(\$83y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$84  (
    .A(reg_q[147]),
    .B(hw2reg[98]),
    .S(hw2reg[97]),
    .Y(\$84y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$85  (
    .A(reg_q[51]),
    .B(hw2reg[96]),
    .S(hw2reg[95]),
    .Y(\$85y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(hw2reg[95]),
    .B(hw2reg[96]),
    .Y(\$86y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$87  (
    .A(reg_q[148]),
    .B(hw2reg[103]),
    .S(hw2reg[102]),
    .Y(\$87y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$88  (
    .A(reg_q[52]),
    .B(hw2reg[101]),
    .S(hw2reg[100]),
    .Y(\$88y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(hw2reg[100]),
    .B(hw2reg[101]),
    .Y(\$89y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$90  (
    .A(reg_q[149]),
    .B(hw2reg[108]),
    .S(hw2reg[107]),
    .Y(\$90y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$91  (
    .A(reg_q[53]),
    .B(hw2reg[106]),
    .S(hw2reg[105]),
    .Y(\$91y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(hw2reg[105]),
    .B(hw2reg[106]),
    .Y(\$92y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$93  (
    .A(reg_q[150]),
    .B(hw2reg[113]),
    .S(hw2reg[112]),
    .Y(\$93y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$94  (
    .A(reg_q[54]),
    .B(hw2reg[111]),
    .S(hw2reg[110]),
    .Y(\$94y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$95  (
    .A(hw2reg[110]),
    .B(hw2reg[111]),
    .Y(\$95y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$96  (
    .A(reg_q[151]),
    .B(hw2reg[118]),
    .S(hw2reg[117]),
    .Y(\$96y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:153.29-154.73" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$97  (
    .A(reg_q[55]),
    .B(hw2reg[116]),
    .S(hw2reg[115]),
    .Y(\$97y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:156.29-156.74" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(hw2reg[115]),
    .B(hw2reg[116]),
    .Y(\$98y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:151.29-151.85" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$99  (
    .A(reg_q[152]),
    .B(hw2reg[123]),
    .S(hw2reg[122]),
    .Y(\$99y )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$id_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd12)
  ) \$driver$read_addr_q  (
    .AD(12'h000),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(read_addr_d),
    .Q(read_addr_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.dir  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[255:224]),
    .Q(reg_q[255:224])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.en  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[223:192]),
    .Q(reg_q[223:192])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.in  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[191:160]),
    .Q(reg_q[191:160])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[63:32]),
    .Q(reg_q[63:32])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt_edge  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[31:0]),
    .Q(reg_q[31:0])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.intrpt_en  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[95:64]),
    .Q(reg_q[95:64])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.out  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(reg_d[159:128]),
    .Q(reg_q[159:128])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$reg_q.toggle  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(32'd0),
    .Q(reg_q[127:96])
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_d),
    .Q(req_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(valid_d),
    .Q(valid_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$w_err_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(w_err_d),
    .Q(w_err_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$we_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we_d),
    .Q(we_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:237.11-237.41|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd32)
  ) \$procmux$10984  (
    .A(32'd3135023902),
    .B({ reg_q[255:128], 32'h00000000, reg_q[95:0] }),
    .S({ \$procmux$10992_CMP , \$procmux$10991_CMP , \$procmux$10990_CMP , \$procmux$10989_CMP , \$procmux$10988_CMP , \$procmux$10987_CMP , \$procmux$10986_CMP , \$procmux$10985_CMP  }),
    .Y(\$procmux$10984_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:237.11-237.41|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10985_CMP0  (
    .A(read_addr_q),
    .B(12'h0e0),
    .Y(\$procmux$10985_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:230.36-234.12|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10986_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$10986_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:227.11-227.39|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10987_CMP0  (
    .A(read_addr_q),
    .B(12'h0a0),
    .Y(\$procmux$10987_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:223.11-223.26|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10988_CMP0  (
    .A(read_addr_q),
    .B(12'h080),
    .Y(\$procmux$10988_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:219.11-219.33|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10989_CMP0  (
    .A(read_addr_q),
    .B(12'h060),
    .Y(\$procmux$10989_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:215.11-215.32|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10990_CMP0  (
    .A(read_addr_q),
    .B(12'h040),
    .Y(\$procmux$10990_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:211.11-211.32|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10991_CMP0  (
    .A(read_addr_q),
    .B(12'h020),
    .Y(\$procmux$10991_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:207.11-207.33|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10992_CMP0  (
    .A(read_addr_q),
    .Y(\$procmux$10992_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10993  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10984_Y ),
    .S(\$procmux$10994_CMP ),
    .Y(\$procmux$10993_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:230.36-234.12|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10997  (
    .A({ \$121y , \$118y , \$115y , \$112y , \$109y , \$106y , \$103y , \$100y , \$97y , \$94y , \$91y , \$88y , \$85y , \$82y , \$79y , \$76y , \$73y , \$70y , \$67y , \$64y , \$61y , \$58y , \$55y , \$52y , \$49y , \$46y , \$43y , \$40y , \$37y , \$34y , \$31y , \$28y  }),
    .B({ \$122y , \$119y , \$116y , \$113y , \$110y , \$107y , \$104y , \$101y , \$98y , \$95y , \$92y , \$89y , \$86y , \$83y , \$80y , \$77y , \$74y , \$71y , \$68y , \$65y , \$62y , \$59y , \$56y , \$53y , \$50y , \$47y , \$44y , \$41y , \$38y , \$35y , \$32y , \$29y  }),
    .S(\$procmux$10998_CMP ),
    .Y(\$procmux$10997_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:230.36-234.12|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$10998_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$10998_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10999  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$10997_Y ),
    .S(\$procmux$11000_CMP ),
    .Y(\$procmux$10999_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:237.11-237.41|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$pmux  #(
    .S_WIDTH(32'd8),
    .WIDTH(32'd1)
  ) \$procmux$11002  (
    .A(1'h1),
    .B(8'h00),
    .S({ \$procmux$11010_CMP , \$procmux$11009_CMP , \$procmux$11008_CMP , \$procmux$11007_CMP , \$procmux$11006_CMP , \$procmux$11005_CMP , \$procmux$11004_CMP , \$procmux$11003_CMP  }),
    .Y(\$procmux$11002_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:237.11-237.41|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11003_CMP0  (
    .A(read_addr_q),
    .B(12'h0e0),
    .Y(\$procmux$11003_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:230.36-234.12|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11004_CMP0  (
    .A(read_addr_q),
    .B(12'h0c0),
    .Y(\$procmux$11004_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:227.11-227.39|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11005_CMP0  (
    .A(read_addr_q),
    .B(12'h0a0),
    .Y(\$procmux$11005_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:223.11-223.26|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11006_CMP0  (
    .A(read_addr_q),
    .B(12'h080),
    .Y(\$procmux$11006_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:219.11-219.33|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11007_CMP0  (
    .A(read_addr_q),
    .B(12'h060),
    .Y(\$procmux$11007_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:215.11-215.32|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11008_CMP0  (
    .A(read_addr_q),
    .B(12'h040),
    .Y(\$procmux$11008_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:211.11-211.32|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11009_CMP0  (
    .A(read_addr_q),
    .B(12'h020),
    .Y(\$procmux$11009_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:207.11-207.33|rtl/gpio/gpio_reg_top.sv:205.7-244.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11010_CMP0  (
    .A(read_addr_q),
    .Y(\$procmux$11010_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11011  (
    .A(1'hx),
    .B(\$procmux$11002_Y ),
    .S(\$procmux$11012_CMP ),
    .Y(\$procmux$11011_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11015  (
    .A({ \$121y , \$118y , \$115y , \$112y , \$109y , \$106y , \$103y , \$100y , \$97y , \$94y , \$91y , \$88y , \$85y , \$82y , \$79y , \$76y , \$73y , \$70y , \$67y , \$64y , \$61y , \$58y , \$55y , \$52y , \$49y , \$46y , \$43y , \$40y , \$37y , \$34y , \$31y , \$28y  }),
    .B(\$reg_d[63:32]$159 ),
    .S(\$procmux$11016_CMP ),
    .Y(\$procmux$11015_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11019  (
    .A(32'd0),
    .B(\$obi_rdata$158 ),
    .S(\$procmux$11020_CMP ),
    .Y(\$procmux$11019_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:203.27-245.8|rtl/gpio/gpio_reg_top.sv:203.5-245.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11023  (
    .A(\$obi_err$150 ),
    .B(\$obi_err$157 ),
    .S(\$procmux$11024_CMP ),
    .Y(\$procmux$11023_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:169.11-169.89|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11031  (
    .A(reg_q[255:224]),
    .B(\$126y ),
    .S(\$procmux$11032_CMP ),
    .Y(\$procmux$11031_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:169.11-169.89|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11032_CMP0  (
    .A(write_addr),
    .Y(\$procmux$11032_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11033  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11031_Y ),
    .S(\$procmux$11034_CMP ),
    .Y(\$procmux$11033_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:173.11-173.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11040  (
    .A(reg_q[223:192]),
    .B(\$130y ),
    .S(\$procmux$11041_CMP ),
    .Y(\$procmux$11040_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:173.11-173.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11041_CMP0  (
    .A(write_addr),
    .B(12'h020),
    .Y(\$procmux$11041_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11042  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11040_Y ),
    .S(\$procmux$11043_CMP ),
    .Y(\$procmux$11042_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:182.11-182.60|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11047  (
    .A(32'd0),
    .B(\$135y ),
    .S(\$procmux$11048_CMP ),
    .Y(\$procmux$11047_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:182.11-182.60|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11048_CMP0  (
    .A(write_addr),
    .B(12'h080),
    .Y(\$procmux$11048_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11049  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11047_Y ),
    .S(\$procmux$11050_CMP ),
    .Y(\$procmux$11049_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:177.11-178.77|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11055  (
    .A({ \$120y , \$117y , \$114y , \$111y , \$108y , \$105y , \$102y , \$99y , \$96y , \$93y , \$90y , \$87y , \$84y , \$81y , \$78y , \$75y , \$72y , \$69y , \$66y , \$63y , \$60y , \$57y , \$54y , \$51y , \$48y , \$45y , \$42y , \$39y , \$36y , \$33y , \$30y , \$27y  }),
    .B(\$134y ),
    .S(\$procmux$11056_CMP ),
    .Y(\$procmux$11055_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:177.11-178.77|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11056_CMP0  (
    .A(write_addr),
    .B(12'h060),
    .Y(\$procmux$11056_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11057  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11055_Y ),
    .S(\$procmux$11058_CMP ),
    .Y(\$procmux$11057_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:186.11-187.85|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11061  (
    .A(reg_q[95:64]),
    .B(\$139y ),
    .S(\$procmux$11062_CMP ),
    .Y(\$procmux$11061_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:186.11-187.85|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11062_CMP0  (
    .A(write_addr),
    .B(12'h0a0),
    .Y(\$procmux$11062_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11063  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11061_Y ),
    .S(\$procmux$11064_CMP ),
    .Y(\$procmux$11063_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:191.11-192.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11066  (
    .A(reg_q[31:0]),
    .B(\$143y ),
    .S(\$procmux$11067_CMP ),
    .Y(\$procmux$11066_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:191.11-192.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11067_CMP0  (
    .A(write_addr),
    .B(12'h0e0),
    .Y(\$procmux$11067_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11068  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11066_Y ),
    .S(\$procmux$11069_CMP ),
    .Y(\$procmux$11068_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:191.11-192.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd1)
  ) \$procmux$11071  (
    .A(1'h1),
    .B(6'h00),
    .S({ \$procmux$11077_CMP , \$procmux$11076_CMP , \$procmux$11075_CMP , \$procmux$11074_CMP , \$procmux$11073_CMP , \$procmux$11072_CMP  }),
    .Y(\$procmux$11071_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:191.11-192.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11072_CMP0  (
    .A(write_addr),
    .B(12'h0e0),
    .Y(\$procmux$11072_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:186.11-187.85|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11073_CMP0  (
    .A(write_addr),
    .B(12'h0a0),
    .Y(\$procmux$11073_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:182.11-182.60|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11074_CMP0  (
    .A(write_addr),
    .B(12'h080),
    .Y(\$procmux$11074_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:177.11-178.77|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11075_CMP0  (
    .A(write_addr),
    .B(12'h060),
    .Y(\$procmux$11075_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:173.11-173.87|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11076_CMP0  (
    .A(write_addr),
    .B(12'h020),
    .Y(\$procmux$11076_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/gpio/gpio_reg_top.sv:169.11-169.89|rtl/gpio/gpio_reg_top.sv:167.7-198.14" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd12),
    .Y_WIDTH(32'd1)
  ) \$procmux$11077_CMP0  (
    .A(write_addr),
    .Y(\$procmux$11077_CMP )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11078  (
    .A(1'hx),
    .B(\$procmux$11071_Y ),
    .S(\$procmux$11079_CMP ),
    .Y(\$procmux$11078_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11081  (
    .A(32'd0),
    .B(\$toggle_out$149 ),
    .S(\$procmux$11082_CMP ),
    .Y(\$procmux$11081_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd64)
  ) \$procmux$11084  (
    .A(reg_q[255:192]),
    .B(\$reg_d[255:192]$148 ),
    .S(\$procmux$11085_CMP ),
    .Y(\$procmux$11084_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11087  (
    .A({ \$120y , \$117y , \$114y , \$111y , \$108y , \$105y , \$102y , \$99y , \$96y , \$93y , \$90y , \$87y , \$84y , \$81y , \$78y , \$75y , \$72y , \$69y , \$66y , \$63y , \$60y , \$57y , \$54y , \$51y , \$48y , \$45y , \$42y , \$39y , \$36y , \$33y , \$30y , \$27y  }),
    .B(\$reg_d[159:128]$147 ),
    .S(\$procmux$11088_CMP ),
    .Y(\$procmux$11087_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11090  (
    .A(reg_q[95:64]),
    .B(\$reg_d[95:64]$146 ),
    .S(\$procmux$11091_CMP ),
    .Y(\$procmux$11090_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11093  (
    .A(reg_q[31:0]),
    .B(\$reg_d[31:0]$145 ),
    .S(\$procmux$11094_CMP ),
    .Y(\$procmux$11093_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11096  (
    .A(1'h0),
    .B(\$w_err_d$144 ),
    .S(\$procmux$11097_CMP ),
    .Y(\$procmux$11096_Y )
  );
  /* src = "rtl/gpio/gpio_reg_top.sv:165.28-199.8|rtl/gpio/gpio_reg_top.sv:165.5-199.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11099  (
    .A(w_err_q),
    .B(1'h0),
    .S(\$procmux$11100_CMP ),
    .Y(\$procmux$11099_Y )
  );
  assign obi_rsp_o = { obi_rdata, 2'h0, id_q, obi_err, 1'h0, obi_req_i[0], valid_q };
  assign obi_wdata = obi_req_i[36:5];
  assign obi_read_request = \$2y ;
  assign obi_write_request = \$3y ;
  assign id_d = obi_req_i[2];
  assign valid_d = obi_req_i[0];
  assign write_addr = { 2'h0, obi_req_i[53:44] };
  assign read_addr_d = { 2'h0, obi_req_i[53:44] };
  assign we_d = obi_req_i[41];
  assign req_d = obi_req_i[0];
  assign bit_mask[7:0] = { obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37], obi_req_i[37] };
  assign bit_mask[15:8] = { obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38], obi_req_i[38] };
  assign bit_mask[23:16] = { obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39], obi_req_i[39] };
  assign bit_mask[31:24] = { obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40], obi_req_i[40] };
  assign reg2hw = { reg_q[255], reg_q[223], reg_q[159], toggle_out[31], reg_q[95], reg_q[63], reg_q[31], reg_q[254], reg_q[222], reg_q[158], toggle_out[30], reg_q[94], reg_q[62], reg_q[30], reg_q[253], reg_q[221], reg_q[157], toggle_out[29], reg_q[93], reg_q[61], reg_q[29], reg_q[252], reg_q[220], reg_q[156], toggle_out[28], reg_q[92], reg_q[60], reg_q[28], reg_q[251], reg_q[219], reg_q[155], toggle_out[27], reg_q[91], reg_q[59], reg_q[27], reg_q[250], reg_q[218], reg_q[154], toggle_out[26], reg_q[90], reg_q[58], reg_q[26], reg_q[249], reg_q[217], reg_q[153], toggle_out[25], reg_q[89], reg_q[57], reg_q[25], reg_q[248], reg_q[216], reg_q[152], toggle_out[24], reg_q[88], reg_q[56], reg_q[24], reg_q[247], reg_q[215], reg_q[151], toggle_out[23], reg_q[87], reg_q[55], reg_q[23], reg_q[246], reg_q[214], reg_q[150], toggle_out[22], reg_q[86], reg_q[54], reg_q[22], reg_q[245], reg_q[213], reg_q[149], toggle_out[21], reg_q[85], reg_q[53], reg_q[21], reg_q[244], reg_q[212], reg_q[148], toggle_out[20], reg_q[84], reg_q[52], reg_q[20], reg_q[243], reg_q[211], reg_q[147], toggle_out[19], reg_q[83], reg_q[51], reg_q[19], reg_q[242], reg_q[210], reg_q[146], toggle_out[18], reg_q[82], reg_q[50], reg_q[18], reg_q[241], reg_q[209], reg_q[145], toggle_out[17], reg_q[81], reg_q[49], reg_q[17], reg_q[240], reg_q[208], reg_q[144], toggle_out[16], reg_q[80], reg_q[48], reg_q[16], reg_q[239], reg_q[207], reg_q[143], toggle_out[15], reg_q[79], reg_q[47], reg_q[15], reg_q[238], reg_q[206], reg_q[142], toggle_out[14], reg_q[78], reg_q[46], reg_q[14], reg_q[237], reg_q[205], reg_q[141], toggle_out[13], reg_q[77], reg_q[45], reg_q[13], reg_q[236], reg_q[204], reg_q[140], toggle_out[12], reg_q[76], reg_q[44], reg_q[12], reg_q[235], reg_q[203], reg_q[139], toggle_out[11], reg_q[75], reg_q[43], reg_q[11], reg_q[234], reg_q[202], reg_q[138], toggle_out[10], reg_q[74], reg_q[42], reg_q[10], reg_q[233], reg_q[201], reg_q[137], toggle_out[9], reg_q[73], reg_q[41], reg_q[9], reg_q[232], reg_q[200], reg_q[136], toggle_out[8], reg_q[72], reg_q[40], reg_q[8], reg_q[231], reg_q[199], reg_q[135], toggle_out[7], reg_q[71], reg_q[39], reg_q[7], reg_q[230], reg_q[198], reg_q[134], toggle_out[6], reg_q[70], reg_q[38], reg_q[6], reg_q[229], reg_q[197], reg_q[133], toggle_out[5], reg_q[69], reg_q[37], reg_q[5], reg_q[228], reg_q[196], reg_q[132], toggle_out[4], reg_q[68], reg_q[36], reg_q[4], reg_q[227], reg_q[195], reg_q[131], toggle_out[3], reg_q[67], reg_q[35], reg_q[3], reg_q[226], reg_q[194], reg_q[130], toggle_out[2], reg_q[66], reg_q[34], reg_q[2], reg_q[225], reg_q[193], reg_q[129], toggle_out[1], reg_q[65], reg_q[33], reg_q[1], reg_q[224], reg_q[192], reg_q[128], toggle_out[0], reg_q[64], reg_q[32], reg_q[0] };
  assign obi_err = \$obi_err$160 ;
  assign w_err_d = \$w_err_d$151 ;
  assign obi_rdata = \$obi_rdata$161 ;
  assign reg_d = { \$reg_d[255:192]$155 , hw2reg[159], hw2reg[154], hw2reg[149], hw2reg[144], hw2reg[139], hw2reg[134], hw2reg[129], hw2reg[124], hw2reg[119], hw2reg[114], hw2reg[109], hw2reg[104], hw2reg[99], hw2reg[94], hw2reg[89], hw2reg[84], hw2reg[79], hw2reg[74], hw2reg[69], hw2reg[64], hw2reg[59], hw2reg[54], hw2reg[49], hw2reg[44], hw2reg[39], hw2reg[34], hw2reg[29], hw2reg[24], hw2reg[19], hw2reg[14], hw2reg[9], hw2reg[4], \$reg_d[159:128]$154 , 32'h00000000, \$reg_d[95:64]$153 , \$reg_d[63:32]$162 , \$reg_d[31:0]$152  };
  assign new_reg = { reg_q[255:192], hw2reg[159], hw2reg[154], hw2reg[149], hw2reg[144], hw2reg[139], hw2reg[134], hw2reg[129], hw2reg[124], hw2reg[119], hw2reg[114], hw2reg[109], hw2reg[104], hw2reg[99], hw2reg[94], hw2reg[89], hw2reg[84], hw2reg[79], hw2reg[74], hw2reg[69], hw2reg[64], hw2reg[59], hw2reg[54], hw2reg[49], hw2reg[44], hw2reg[39], hw2reg[34], hw2reg[29], hw2reg[24], hw2reg[19], hw2reg[14], hw2reg[9], hw2reg[4], \$120y , \$117y , \$114y , \$111y , \$108y , \$105y , \$102y , \$99y , \$96y , \$93y , \$90y , \$87y , \$84y , \$81y , \$78y , \$75y , \$72y , \$69y , \$66y , \$63y , \$60y , \$57y , \$54y , \$51y , \$48y , \$45y , \$42y , \$39y , \$36y , \$33y , \$30y , \$27y , 32'h00000000, reg_q[95:64], \$121y , \$118y , \$115y , \$112y , \$109y , \$106y , \$103y , \$100y , \$97y , \$94y , \$91y , \$88y , \$85y , \$82y , \$79y , \$76y , \$73y , \$70y , \$67y , \$64y , \$61y , \$58y , \$55y , \$52y , \$49y , \$46y , \$43y , \$40y , \$37y , \$34y , \$31y , \$28y , reg_q[31:0] };
  assign new_intrpt = { \$122y , \$119y , \$116y , \$113y , \$110y , \$107y , \$104y , \$101y , \$98y , \$95y , \$92y , \$89y , \$86y , \$83y , \$80y , \$77y , \$74y , \$71y , \$68y , \$65y , \$62y , \$59y , \$56y , \$53y , \$50y , \$47y , \$44y , \$41y , \$38y , \$35y , \$32y , \$29y  };
  assign toggle_out = \$toggle_out$156 ;
  assign \$procmux$10994_CMP  = obi_read_request;
  assign \$obi_rdata$158  = \$procmux$10993_Y ;
  assign \$procmux$11000_CMP  = obi_read_request;
  assign \$reg_d[63:32]$159  = \$procmux$10999_Y ;
  assign \$procmux$11012_CMP  = obi_read_request;
  assign \$obi_err$157  = \$procmux$11011_Y ;
  assign \$procmux$11016_CMP  = obi_read_request;
  assign \$reg_d[63:32]$162  = \$procmux$11015_Y ;
  assign \$procmux$11020_CMP  = obi_read_request;
  assign \$obi_rdata$161  = \$procmux$11019_Y ;
  assign \$procmux$11024_CMP  = obi_read_request;
  assign \$obi_err$160  = \$procmux$11023_Y ;
  assign \$procmux$11034_CMP  = obi_write_request;
  assign \$reg_d[255:192]$148 [63:32] = \$procmux$11033_Y ;
  assign \$procmux$11043_CMP  = obi_write_request;
  assign \$reg_d[255:192]$148 [31:0] = \$procmux$11042_Y ;
  assign \$procmux$11050_CMP  = obi_write_request;
  assign \$toggle_out$149  = \$procmux$11049_Y ;
  assign \$procmux$11058_CMP  = obi_write_request;
  assign \$reg_d[159:128]$147  = \$procmux$11057_Y ;
  assign \$procmux$11064_CMP  = obi_write_request;
  assign \$reg_d[95:64]$146  = \$procmux$11063_Y ;
  assign \$procmux$11069_CMP  = obi_write_request;
  assign \$reg_d[31:0]$145  = \$procmux$11068_Y ;
  assign \$procmux$11079_CMP  = obi_write_request;
  assign \$w_err_d$144  = \$procmux$11078_Y ;
  assign \$procmux$11082_CMP  = obi_write_request;
  assign \$toggle_out$156  = \$procmux$11081_Y ;
  assign \$procmux$11085_CMP  = obi_write_request;
  assign \$reg_d[255:192]$155  = \$procmux$11084_Y ;
  assign \$procmux$11088_CMP  = obi_write_request;
  assign \$reg_d[159:128]$154  = \$procmux$11087_Y ;
  assign \$procmux$11091_CMP  = obi_write_request;
  assign \$reg_d[95:64]$153  = \$procmux$11090_Y ;
  assign \$procmux$11094_CMP  = obi_write_request;
  assign \$reg_d[31:0]$152  = \$procmux$11093_Y ;
  assign \$procmux$11097_CMP  = obi_write_request;
  assign \$w_err_d$151  = \$procmux$11096_Y ;
  assign \$procmux$11100_CMP  = obi_write_request;
  assign \$obi_err$150  = \$procmux$11099_Y ;
  assign \$6y  = rst_ni;
  assign \$9y  = rst_ni;
  assign \$12y  = rst_ni;
  assign \$15y  = rst_ni;
  assign \$18y  = rst_ni;
  assign \$21y  = rst_ni;
  assign \$24y  = rst_ni;
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/common_cells/lzc.sv:17.8" */
module \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper (empty_o, in_i, cnt_o);
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire [1:0] \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [1:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [1:0] \$9y ;
  /* src = "rtl/common_cells/lzc.sv:30.32" */
  output [1:0] cnt_o;
  wire [1:0] cnt_o;
  /* src = "rtl/common_cells/lzc.sv:32.32" */
  output empty_o;
  wire empty_o;
  /* src = "rtl/common_cells/lzc.sv:52.23" */
  wire [3:0] \gen_lzc.in_tmp ;
  /* src = "rtl/common_cells/lzc.sv:48.38" */
  wire [7:0] \gen_lzc.index_lut ;
  /* src = "rtl/common_cells/lzc.sv:50.45" */
  wire [7:0] \gen_lzc.index_nodes ;
  /* src = "rtl/common_cells/lzc.sv:49.30" */
  wire [3:0] \gen_lzc.sel_nodes ;
  /* src = "rtl/common_cells/lzc.sv:28.32" */
  input [3:0] in_i;
  wire [3:0] in_i;
  /* src = "rtl/common_cells/lzc.sv:89.15-89.100" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\gen_lzc.sel_nodes [1]),
    .B(\gen_lzc.sel_nodes [2]),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.67-98.72" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(in_i),
    .Y(\$10y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.65-98.73" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/lzc.sv:98.49-98.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\gen_lzc.sel_nodes [0]),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/lzc.sv:90.52-92.60" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$3  (
    .A(\gen_lzc.index_nodes [5:4]),
    .B(\gen_lzc.index_nodes [3:2]),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_lzc.in_tmp [0]),
    .B(\gen_lzc.in_tmp [1]),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$6  (
    .A(2'h1),
    .B(2'h0),
    .S(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/common_cells/lzc.sv:70.52-70.85" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\gen_lzc.in_tmp [2]),
    .B(\gen_lzc.in_tmp [3]),
    .Y(\$7y )
  );
  /* src = "rtl/common_cells/lzc.sv:71.54-73.37" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$9  (
    .A(2'h3),
    .B(2'h2),
    .S(\$8y ),
    .Y(\$9y )
  );
  assign \gen_lzc.in_tmp  = in_i;
  assign \gen_lzc.index_lut [1:0] = 2'h0;
  assign \gen_lzc.index_lut [3:2] = 2'h1;
  assign \gen_lzc.index_lut [5:4] = 2'h2;
  assign \gen_lzc.index_lut [7:6] = 2'h3;
  assign \gen_lzc.sel_nodes [0] = \$1y ;
  assign \gen_lzc.index_nodes [1:0] = \$3y ;
  assign \gen_lzc.sel_nodes [1] = \$4y ;
  assign \gen_lzc.index_nodes [3:2] = \$6y ;
  assign \gen_lzc.sel_nodes [2] = \$7y ;
  assign \gen_lzc.index_nodes [5:4] = \$9y ;
  assign cnt_o = \gen_lzc.index_nodes [1:0];
  assign empty_o = \$12y ;
  assign \$2y  = \gen_lzc.sel_nodes [1];
  assign \$5y  = \gen_lzc.in_tmp [0];
  assign \$8y  = \gen_lzc.in_tmp [2];
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [71:0] \$11y ;
  wire [575:0] \$12y ;
  wire [575:0] \$13y ;
  wire [359:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [71:0] \$18y ;
  wire [575:0] \$19y ;
  wire \$1y ;
  wire [575:0] \$20y ;
  wire [359:0] \$21y ;
  wire \$22y ;
  wire [36:0] \$23y ;
  wire [36:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [71:0] \$30y ;
  wire [71:0] \$31y ;
  wire \$32y ;
  wire [36:0] \$33y ;
  wire [36:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [36:0] \$39y ;
  wire \$3y ;
  wire [36:0] \$40y ;
  wire \$41y ;
  wire [36:0] \$42y ;
  wire [36:0] \$43y ;
  wire \$44y ;
  wire [36:0] \$45y ;
  wire [36:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [359:0] \$auto$rtlil.cc:3004:And$13225 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$mgr_ports_req_o$28 ;
  wire [2:0] \$procmux$11715_Y ;
  wire \$procmux$11716_CMP ;
  wire \$procmux$11718_Y ;
  wire \$procmux$11719_CMP ;
  wire [359:0] \$procmux$11720_Y ;
  wire \$procmux$11721_CMP ;
  wire [359:0] \$procmux$11722_Y ;
  wire \$procmux$11723_CMP ;
  wire \$procmux$11724_Y ;
  wire \$procmux$11725_CMP ;
  wire \$procmux$11726_Y ;
  wire \$procmux$11727_CMP ;
  wire [359:0] \$procmux$11729_Y ;
  wire \$procmux$11730_CMP ;
  wire \$procmux$11732_Y ;
  wire \$procmux$11733_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$11  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$18  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$20y [359:0]),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$23  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$24  (
    .A(37'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$30  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$mgr_ports_req_o$28  }),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$31  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$33  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$34  (
    .A(37'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$39  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$40  (
    .A(37'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$42  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$43  (
    .A(37'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$45  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$46  (
    .A(37'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13224  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y [359:0]),
    .Y(\$auto$rtlil.cc:3004:And$13225 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11715  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$11716_CMP ),
    .Y(\$procmux$11715_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11718  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11719_CMP ),
    .Y(\$procmux$11718_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11720  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$11721_CMP ),
    .Y(\$procmux$11720_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11722  (
    .A(\$procmux$11720_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$11722_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11724  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$11725_CMP ),
    .Y(\$procmux$11724_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11726  (
    .A(\$procmux$11724_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$11726_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11729  (
    .A(\$mgr_ports_req_o$26 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$11729_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11732  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$11732_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$40y [36:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$11716_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$11715_Y ;
  assign \$procmux$11719_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$11718_Y ;
  assign \$procmux$11721_CMP  = \$7y ;
  assign \$procmux$11723_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$11722_Y ;
  assign \$procmux$11725_CMP  = \$7y ;
  assign \$procmux$11727_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$11726_Y ;
  assign \$procmux$11730_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$11729_Y ;
  assign \$procmux$11733_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$11732_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13225 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [71:0] \$11y ;
  wire [575:0] \$12y ;
  wire [575:0] \$13y ;
  wire [359:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [71:0] \$18y ;
  wire [575:0] \$19y ;
  wire \$1y ;
  wire [575:0] \$20y ;
  wire [359:0] \$21y ;
  wire \$22y ;
  wire [36:0] \$23y ;
  wire [36:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [71:0] \$30y ;
  wire [71:0] \$31y ;
  wire \$32y ;
  wire [36:0] \$33y ;
  wire [36:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [36:0] \$39y ;
  wire \$3y ;
  wire [36:0] \$40y ;
  wire \$41y ;
  wire [36:0] \$42y ;
  wire [36:0] \$43y ;
  wire \$44y ;
  wire [36:0] \$45y ;
  wire [36:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [359:0] \$auto$rtlil.cc:3004:And$13223 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$mgr_ports_req_o$28 ;
  wire [2:0] \$procmux$11695_Y ;
  wire \$procmux$11696_CMP ;
  wire \$procmux$11698_Y ;
  wire \$procmux$11699_CMP ;
  wire [359:0] \$procmux$11700_Y ;
  wire \$procmux$11701_CMP ;
  wire [359:0] \$procmux$11702_Y ;
  wire \$procmux$11703_CMP ;
  wire \$procmux$11704_Y ;
  wire \$procmux$11705_CMP ;
  wire \$procmux$11706_Y ;
  wire \$procmux$11707_CMP ;
  wire [359:0] \$procmux$11709_Y ;
  wire \$procmux$11710_CMP ;
  wire \$procmux$11712_Y ;
  wire \$procmux$11713_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$11  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$18  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$20y [359:0]),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$23  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$24  (
    .A(37'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$30  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$mgr_ports_req_o$28  }),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$31  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$33  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$34  (
    .A(37'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$39  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$40  (
    .A(37'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$42  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$43  (
    .A(37'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$45  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$46  (
    .A(37'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13222  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y [359:0]),
    .Y(\$auto$rtlil.cc:3004:And$13223 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11695  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$11696_CMP ),
    .Y(\$procmux$11695_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11698  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11699_CMP ),
    .Y(\$procmux$11698_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11700  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$11701_CMP ),
    .Y(\$procmux$11700_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11702  (
    .A(\$procmux$11700_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$11702_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11704  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$11705_CMP ),
    .Y(\$procmux$11704_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11706  (
    .A(\$procmux$11704_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$11706_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11709  (
    .A(\$mgr_ports_req_o$26 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$11709_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11712  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$11712_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$40y [36:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$11696_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$11695_Y ;
  assign \$procmux$11699_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$11698_Y ;
  assign \$procmux$11701_CMP  = \$7y ;
  assign \$procmux$11703_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$11702_Y ;
  assign \$procmux$11705_CMP  = \$7y ;
  assign \$procmux$11707_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$11706_Y ;
  assign \$procmux$11710_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$11709_Y ;
  assign \$procmux$11713_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$11712_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13223 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [71:0] \$11y ;
  wire [575:0] \$12y ;
  wire [575:0] \$13y ;
  wire [359:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [71:0] \$18y ;
  wire [575:0] \$19y ;
  wire \$1y ;
  wire [575:0] \$20y ;
  wire [359:0] \$21y ;
  wire \$22y ;
  wire [36:0] \$23y ;
  wire [36:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [71:0] \$30y ;
  wire [71:0] \$31y ;
  wire \$32y ;
  wire [36:0] \$33y ;
  wire [36:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [36:0] \$39y ;
  wire \$3y ;
  wire [36:0] \$40y ;
  wire \$41y ;
  wire [36:0] \$42y ;
  wire [36:0] \$43y ;
  wire \$44y ;
  wire [36:0] \$45y ;
  wire [36:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [359:0] \$auto$rtlil.cc:3004:And$13221 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$mgr_ports_req_o$28 ;
  wire [2:0] \$procmux$11675_Y ;
  wire \$procmux$11676_CMP ;
  wire \$procmux$11678_Y ;
  wire \$procmux$11679_CMP ;
  wire [359:0] \$procmux$11680_Y ;
  wire \$procmux$11681_CMP ;
  wire [359:0] \$procmux$11682_Y ;
  wire \$procmux$11683_CMP ;
  wire \$procmux$11684_Y ;
  wire \$procmux$11685_CMP ;
  wire \$procmux$11686_Y ;
  wire \$procmux$11687_CMP ;
  wire [359:0] \$procmux$11689_Y ;
  wire \$procmux$11690_CMP ;
  wire \$procmux$11692_Y ;
  wire \$procmux$11693_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$11  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$18  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$20y [359:0]),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$23  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$24  (
    .A(37'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$30  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$mgr_ports_req_o$28  }),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$31  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$33  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$34  (
    .A(37'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$39  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$40  (
    .A(37'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$42  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$43  (
    .A(37'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$45  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$46  (
    .A(37'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13220  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y [359:0]),
    .Y(\$auto$rtlil.cc:3004:And$13221 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11675  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$11676_CMP ),
    .Y(\$procmux$11675_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11678  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11679_CMP ),
    .Y(\$procmux$11678_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11680  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$11681_CMP ),
    .Y(\$procmux$11680_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11682  (
    .A(\$procmux$11680_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$11682_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11684  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$11685_CMP ),
    .Y(\$procmux$11684_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11686  (
    .A(\$procmux$11684_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$11686_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11689  (
    .A(\$mgr_ports_req_o$26 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$11689_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11692  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$11692_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$40y [36:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$11676_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$11675_Y ;
  assign \$procmux$11679_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$11678_Y ;
  assign \$procmux$11681_CMP  = \$7y ;
  assign \$procmux$11683_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$11682_Y ;
  assign \$procmux$11685_CMP  = \$7y ;
  assign \$procmux$11687_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$11686_Y ;
  assign \$procmux$11690_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$11689_Y ;
  assign \$procmux$11693_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$11692_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13221 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [71:0] \$11y ;
  wire [575:0] \$12y ;
  wire [575:0] \$13y ;
  wire [359:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [71:0] \$18y ;
  wire [575:0] \$19y ;
  wire \$1y ;
  wire [575:0] \$20y ;
  wire [359:0] \$21y ;
  wire \$22y ;
  wire [36:0] \$23y ;
  wire [36:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [71:0] \$30y ;
  wire [71:0] \$31y ;
  wire \$32y ;
  wire [36:0] \$33y ;
  wire [36:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [36:0] \$39y ;
  wire \$3y ;
  wire [36:0] \$40y ;
  wire \$41y ;
  wire [36:0] \$42y ;
  wire [36:0] \$43y ;
  wire \$44y ;
  wire [36:0] \$45y ;
  wire [36:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [359:0] \$auto$rtlil.cc:3004:And$13219 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [359:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [359:0] \$mgr_ports_req_o$28 ;
  wire [2:0] \$procmux$11655_Y ;
  wire \$procmux$11656_CMP ;
  wire \$procmux$11658_Y ;
  wire \$procmux$11659_CMP ;
  wire [359:0] \$procmux$11660_Y ;
  wire \$procmux$11661_CMP ;
  wire [359:0] \$procmux$11662_Y ;
  wire \$procmux$11663_CMP ;
  wire \$procmux$11664_Y ;
  wire \$procmux$11665_CMP ;
  wire \$procmux$11666_Y ;
  wire \$procmux$11667_CMP ;
  wire [359:0] \$procmux$11669_Y ;
  wire \$procmux$11670_CMP ;
  wire \$procmux$11672_Y ;
  wire \$procmux$11673_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [359:0] mgr_ports_req_o;
  wire [359:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [184:0] mgr_ports_rsp_i;
  wire [184:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [71:0] sbr_port_req_i;
  wire [71:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [36:0] sbr_port_rsp_o;
  wire [36:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$11  (
    .A(72'h000000000000000000),
    .B(72'h000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$18  (
    .A(72'h000000000000000000),
    .B(72'hfffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd360)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx, sbr_port_req_i[71:1], 1'hx }),
    .S(\$20y [359:0]),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$23  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$24  (
    .A(37'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd72)
  ) \$30  (
    .A({ 216'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$mgr_ports_req_o$28  }),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd72)
  ) \$31  (
    .A(72'hxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$33  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$34  (
    .A(37'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$39  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$40  (
    .A(37'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$42  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$43  (
    .A(37'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd37)
  ) \$45  (
    .A({ 111'hxxxxxxxxxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd37)
  ) \$46  (
    .A(37'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd360),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd360),
    .Y_WIDTH(32'd360)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13218  (
    .A({ 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 71'hxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y [359:0]),
    .Y(\$auto$rtlil.cc:3004:And$13219 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$11655  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$11656_CMP ),
    .Y(\$procmux$11655_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11658  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11659_CMP ),
    .Y(\$procmux$11658_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11660  (
    .A(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$11661_CMP ),
    .Y(\$procmux$11660_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11662  (
    .A(\$procmux$11660_Y ),
    .B(360'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$11662_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11664  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$11665_CMP ),
    .Y(\$procmux$11664_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11666  (
    .A(\$procmux$11664_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$11666_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd360)
  ) \$procmux$11669  (
    .A(\$mgr_ports_req_o$26 ),
    .B(360'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$11669_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11672  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$11672_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[36:2] = \$40y [36:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$11656_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$11655_Y ;
  assign \$procmux$11659_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$11658_Y ;
  assign \$procmux$11661_CMP  = \$7y ;
  assign \$procmux$11663_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$11662_Y ;
  assign \$procmux$11665_CMP  = \$7y ;
  assign \$procmux$11667_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$11666_Y ;
  assign \$procmux$11670_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$11669_Y ;
  assign \$procmux$11673_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$11672_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13219 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_croc.i_obi_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [73:0] \$11y ;
  wire [591:0] \$12y ;
  wire [591:0] \$13y ;
  wire [443:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [73:0] \$18y ;
  wire [591:0] \$19y ;
  wire \$1y ;
  wire [591:0] \$20y ;
  wire [443:0] \$21y ;
  wire \$22y ;
  wire [38:0] \$23y ;
  wire [38:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [73:0] \$30y ;
  wire [73:0] \$31y ;
  wire \$32y ;
  wire [38:0] \$33y ;
  wire [38:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [38:0] \$39y ;
  wire \$3y ;
  wire [38:0] \$40y ;
  wire \$41y ;
  wire [38:0] \$42y ;
  wire [38:0] \$43y ;
  wire \$44y ;
  wire [38:0] \$45y ;
  wire [38:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [443:0] \$auto$rtlil.cc:3004:And$13229 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [443:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [443:0] \$mgr_ports_req_o$28 ;
  wire [2:0] \$procmux$12509_Y ;
  wire \$procmux$12510_CMP ;
  wire \$procmux$12512_Y ;
  wire \$procmux$12513_CMP ;
  wire [443:0] \$procmux$12514_Y ;
  wire \$procmux$12515_CMP ;
  wire [443:0] \$procmux$12516_Y ;
  wire \$procmux$12517_CMP ;
  wire \$procmux$12518_Y ;
  wire \$procmux$12519_CMP ;
  wire \$procmux$12520_Y ;
  wire \$procmux$12521_CMP ;
  wire [443:0] \$procmux$12523_Y ;
  wire \$procmux$12524_CMP ;
  wire \$procmux$12526_Y ;
  wire \$procmux$12527_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire [2:0] \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [443:0] mgr_ports_req_o;
  wire [443:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [233:0] mgr_ports_rsp_i;
  wire [233:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [73:0] sbr_port_req_i;
  wire [73:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [38:0] sbr_port_rsp_o;
  wire [38:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input [2:0] sbr_port_select_i;
  wire [2:0] sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire [2:0] select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire [2:0] select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$11  (
    .A(74'h0000000000000000000),
    .B(74'h0000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$18  (
    .A(74'h0000000000000000000),
    .B(74'h3fffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd444)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx }),
    .S(\$20y [443:0]),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$23  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$24  (
    .A(39'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd74)
  ) \$30  (
    .A({ 148'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, \$mgr_ports_req_o$28  }),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$31  (
    .A(74'hxxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$33  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$34  (
    .A(39'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$39  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$40  (
    .A(39'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$42  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$43  (
    .A(39'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(5'h08),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd39)
  ) \$45  (
    .A({ 78'hxxxxxxxxxxxxxxxxxxxx, mgr_ports_rsp_i }),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$46  (
    .A(39'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(5'h08),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd444),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd444),
    .Y_WIDTH(32'd444)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13228  (
    .A({ 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y [443:0]),
    .Y(\$auto$rtlil.cc:3004:And$13229 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$select_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$12509  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$12510_CMP ),
    .Y(\$procmux$12509_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12512  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12513_CMP ),
    .Y(\$procmux$12512_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$12514  (
    .A(444'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$12515_CMP ),
    .Y(\$procmux$12514_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$12516  (
    .A(\$procmux$12514_Y ),
    .B(444'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$12516_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12518  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$12519_CMP ),
    .Y(\$procmux$12518_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12520  (
    .A(\$procmux$12518_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$12520_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd444)
  ) \$procmux$12523  (
    .A(\$mgr_ports_req_o$26 ),
    .B(444'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$12523_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12526  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$12526_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_croc.i_obi_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[38:2] = \$40y [38:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$12510_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$12509_Y ;
  assign \$procmux$12513_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$12512_Y ;
  assign \$procmux$12515_CMP  = \$7y ;
  assign \$procmux$12517_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$12516_Y ;
  assign \$procmux$12519_CMP  = \$7y ;
  assign \$procmux$12521_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$12520_Y ;
  assign \$procmux$12524_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$12523_Y ;
  assign \$procmux$12527_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$12526_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13229 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_demux.sv:7.8" */
module \obi_demux$croc_chip.i_croc_soc.i_user.i_obi_demux (clk_i, rst_ni, mgr_ports_req_o, mgr_ports_rsp_i, sbr_port_select_i, sbr_port_req_i, sbr_port_rsp_o);
  wire \$10y ;
  wire [73:0] \$11y ;
  wire [147:0] \$12y ;
  wire [147:0] \$13y ;
  wire [147:0] \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire [73:0] \$18y ;
  wire [147:0] \$19y ;
  wire \$1y ;
  wire [147:0] \$20y ;
  wire [147:0] \$21y ;
  wire \$22y ;
  wire [38:0] \$23y ;
  wire [38:0] \$24y ;
  wire \$29y ;
  wire \$2y ;
  wire [73:0] \$30y ;
  wire [73:0] \$31y ;
  wire \$32y ;
  wire [38:0] \$33y ;
  wire [38:0] \$34y ;
  wire \$35y ;
  wire \$38y ;
  wire [38:0] \$39y ;
  wire \$3y ;
  wire [38:0] \$40y ;
  wire \$41y ;
  wire [38:0] \$42y ;
  wire [38:0] \$43y ;
  wire \$44y ;
  wire [38:0] \$45y ;
  wire [38:0] \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [147:0] \$auto$rtlil.cc:3004:And$13227 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$cnt_up$36 ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire [147:0] \$mgr_ports_req_o$26 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire [147:0] \$mgr_ports_req_o$28 ;
  wire \$procmux$11928_Y ;
  wire \$procmux$11929_CMP ;
  wire \$procmux$11931_Y ;
  wire \$procmux$11932_CMP ;
  wire [147:0] \$procmux$11933_Y ;
  wire \$procmux$11934_CMP ;
  wire [147:0] \$procmux$11935_Y ;
  wire \$procmux$11936_CMP ;
  wire \$procmux$11937_Y ;
  wire \$procmux$11938_CMP ;
  wire \$procmux$11939_Y ;
  wire \$procmux$11940_CMP ;
  wire [147:0] \$procmux$11942_Y ;
  wire \$procmux$11943_CMP ;
  wire \$procmux$11945_Y ;
  wire \$procmux$11946_CMP ;
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10" */
  wire \$sbr_port_gnt$25 ;
  /* src = "rtl/obi/obi_demux.sv:55.5-61.8" */
  wire \$sbr_port_gnt$27 ;
  /* src = "rtl/obi/obi_demux.sv:63.5-66.8" */
  wire \$select_d$37 ;
  /* src = "rtl/obi/obi_demux.sv:21.38" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_demux.sv:39.17" */
  wire cnt_down;
  /* src = "rtl/obi/obi_demux.sv:39.9" */
  wire cnt_up;
  /* src = "rtl/obi/obi_demux.sv:40.28" */
  wire in_flight;
  /* src = "rtl/obi/obi_demux.sv:28.38" */
  output [147:0] mgr_ports_req_o;
  wire [147:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_demux.sv:29.38" */
  input [77:0] mgr_ports_rsp_i;
  wire [77:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_demux.sv:39.27" */
  wire overflow;
  /* src = "rtl/obi/obi_demux.sv:22.38" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_demux.sv:41.9" */
  wire sbr_port_gnt;
  /* src = "rtl/obi/obi_demux.sv:25.38" */
  input [73:0] sbr_port_req_i;
  wire [73:0] sbr_port_req_i;
  /* src = "rtl/obi/obi_demux.sv:42.9" */
  wire sbr_port_rready;
  /* src = "rtl/obi/obi_demux.sv:26.38" */
  output [38:0] sbr_port_rsp_o;
  wire [38:0] sbr_port_rsp_o;
  /* src = "rtl/obi/obi_demux.sv:24.38" */
  input sbr_port_select_i;
  wire sbr_port_select_i;
  /* src = "rtl/obi/obi_demux.sv:44.12" */
  wire select_d;
  /* src = "rtl/obi/obi_demux.sv:44.22" */
  wire select_q;
  /* src = "rtl/obi/obi_demux.sv:55.9-55.18" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(overflow),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$8y ),
    .B(\$9y ),
    .Y(\$10y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$11  (
    .A(74'h0000000000000000000),
    .B(74'h0000000000000000001),
    .S(\$10y ),
    .Y(\$11y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd74)
  ) \$12  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$12y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd74)
  ) \$13  (
    .A(\$11y ),
    .S(sbr_port_select_i),
    .Y(\$13y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$15y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(3'h2),
    .Y(\$16y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(\$15y ),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$18  (
    .A(74'h0000000000000000000),
    .B(74'h3fffffffffffffffffe),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd74)
  ) \$19  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.40" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(sbr_port_select_i),
    .B(select_q),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$demux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd74)
  ) \$20  (
    .A(\$18y ),
    .S(sbr_port_select_i),
    .Y(\$20y )
  );
  /* src = "rtl/obi/obi_demux.sv:58.9-58.66" */
  \$bwmux  #(
    .WIDTH(32'd148)
  ) \$21  (
    .A(\$14y ),
    .B({ sbr_port_req_i[73:1], 1'hx, sbr_port_req_i[73:1], 1'hx }),
    .S(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(3'h2),
    .Y(\$22y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd39)
  ) \$23  (
    .A(mgr_ports_rsp_i),
    .S(sbr_port_select_i),
    .Y(\$23y )
  );
  /* src = "rtl/obi/obi_demux.sv:59.50-59.84" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$24  (
    .A(39'hxxxxxxxxxx),
    .B(\$23y ),
    .S(\$22y ),
    .Y(\$24y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(3'h2),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.44-56.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(in_flight),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd74)
  ) \$30  (
    .A(\$mgr_ports_req_o$28 ),
    .S(sbr_port_select_i),
    .Y(\$30y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.43" */
  \$mux  #(
    .WIDTH(32'd74)
  ) \$31  (
    .A(74'hxxxxxxxxxxxxxxxxxxx),
    .B(\$30y ),
    .S(\$29y ),
    .Y(\$31y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(3'h2),
    .Y(\$32y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd39)
  ) \$33  (
    .A(mgr_ports_rsp_i),
    .S(sbr_port_select_i),
    .Y(\$33y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.51-63.85" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$34  (
    .A(39'hxxxxxxxxxx),
    .B(\$33y ),
    .S(\$32y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.9-63.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$31y [0]),
    .B(\$34y [1]),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A({ 1'h0, select_q }),
    .B(3'h2),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd39)
  ) \$39  (
    .A(mgr_ports_rsp_i),
    .S(select_q),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.59" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/obi/obi_demux.sv:70.34-70.59" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$40  (
    .A(39'hxxxxxxxxxx),
    .B(\$39y ),
    .S(\$38y ),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A({ 1'h0, select_q }),
    .B(3'h2),
    .Y(\$41y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd39)
  ) \$42  (
    .A(mgr_ports_rsp_i),
    .S(select_q),
    .Y(\$42y )
  );
  /* src = "rtl/obi/obi_demux.sv:71.34-71.59" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$43  (
    .A(39'hxxxxxxxxxx),
    .B(\$42y ),
    .S(\$41y ),
    .Y(\$43y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A({ 1'h0, select_q }),
    .B(3'h2),
    .Y(\$44y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$bmux  #(
    .S_WIDTH(32'd1),
    .WIDTH(32'd39)
  ) \$45  (
    .A(mgr_ports_rsp_i),
    .S(select_q),
    .Y(\$45y )
  );
  /* src = "rtl/obi/obi_demux.sv:82.21-82.46" */
  \$mux  #(
    .WIDTH(32'd39)
  ) \$46  (
    .A(39'hxxxxxxxxxx),
    .B(\$45y ),
    .S(\$44y ),
    .Y(\$46y )
  );
  /* src = "rtl/obi/obi_demux.sv:92.18-92.35" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(cnt_up),
    .B(cnt_down),
    .Y(\$48y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(rst_ni),
    .Y(\$50y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.64-56.90" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(cnt_down),
    .Y(\$6y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.11-56.91" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$4y ),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(1'h0),
    .Y(\$8y )
  );
  /* src = "rtl/obi/obi_demux.sv:57.9-57.68" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A({ 1'h0, sbr_port_select_i }),
    .B(3'h2),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd148),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd148),
    .Y_WIDTH(32'd148)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13226  (
    .A({ 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0], 73'hxxxxxxxxxxxxxxxxxxx, sbr_port_req_i[0] }),
    .B(\$13y ),
    .Y(\$auto$rtlil.cc:3004:And$13227 )
  );
  /* src = "rtl/obi/obi_demux.sv:101.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$select_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(select_d),
    .Q(select_q)
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11928  (
    .A(select_q),
    .B(sbr_port_select_i),
    .S(\$procmux$11929_CMP ),
    .Y(\$procmux$11928_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:63.91-66.8|rtl/obi/obi_demux.sv:63.5-66.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11931  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11932_CMP ),
    .Y(\$procmux$11931_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd148)
  ) \$procmux$11933  (
    .A(148'h0000000000000000000000000000000000000),
    .B(\$21y ),
    .S(\$procmux$11934_CMP ),
    .Y(\$procmux$11933_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd148)
  ) \$procmux$11935  (
    .A(\$procmux$11933_Y ),
    .B(148'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx),
    .S(overflow),
    .Y(\$procmux$11935_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.93-60.10|rtl/obi/obi_demux.sv:56.7-60.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11937  (
    .A(1'h0),
    .B(\$24y [1]),
    .S(\$procmux$11938_CMP ),
    .Y(\$procmux$11937_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11939  (
    .A(\$procmux$11937_Y ),
    .B(1'hx),
    .S(overflow),
    .Y(\$procmux$11939_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd148)
  ) \$procmux$11942  (
    .A(\$mgr_ports_req_o$26 ),
    .B(148'h0000000000000000000000000000000000000),
    .S(overflow),
    .Y(\$procmux$11942_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:56.7-60.10|rtl/obi/obi_demux.sv:55.5-61.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11945  (
    .A(\$sbr_port_gnt$25 ),
    .B(1'h0),
    .S(overflow),
    .Y(\$procmux$11945_Y )
  );
  /* src = "rtl/obi/obi_demux.sv:87.5" */
  \delta_counter$croc_chip.i_croc_soc.i_user.i_obi_demux.i_counter  i_counter (
    .clear_i(1'h0),
    .clk_i(clk_i),
    .d_i(1'h0),
    .delta_i(1'h1),
    .down_i(cnt_down),
    .en_i(\$48y ),
    .load_i(1'h0),
    .overflow_o(overflow),
    .q_o(in_flight),
    .rst_ni(rst_ni)
  );
  assign cnt_up = \$cnt_up$36 ;
  assign sbr_port_gnt = \$sbr_port_gnt$27 ;
  assign select_d = \$select_d$37 ;
  assign mgr_ports_req_o = \$mgr_ports_req_o$28 ;
  assign sbr_port_rsp_o[1] = sbr_port_gnt;
  assign sbr_port_rsp_o[38:2] = \$40y [38:2];
  assign sbr_port_rsp_o[0] = \$43y [0];
  assign sbr_port_rready = 1'h1;
  assign cnt_down = \$47y ;
  assign \$procmux$11929_CMP  = \$35y ;
  assign \$select_d$37  = \$procmux$11928_Y ;
  assign \$procmux$11932_CMP  = \$35y ;
  assign \$cnt_up$36  = \$procmux$11931_Y ;
  assign \$procmux$11934_CMP  = \$7y ;
  assign \$procmux$11936_CMP  = \$1y ;
  assign \$mgr_ports_req_o$26  = \$procmux$11935_Y ;
  assign \$procmux$11938_CMP  = \$7y ;
  assign \$procmux$11940_CMP  = \$1y ;
  assign \$sbr_port_gnt$25  = \$procmux$11939_Y ;
  assign \$procmux$11943_CMP  = \$1y ;
  assign \$mgr_ports_req_o$28  = \$procmux$11942_Y ;
  assign \$procmux$11946_CMP  = \$1y ;
  assign \$sbr_port_gnt$27  = \$procmux$11945_Y ;
  assign \$47y  = \$46y [0];
  assign \$5y  = in_flight;
  assign \$14y  = \$auto$rtlil.cc:3004:And$13227 ;
  assign \$51y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_periph_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  /* src = "rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_err_sbr.sv:36.25-36.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(fifo_full),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:37.25-37.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_empty),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:59.18-59.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_periph_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$3y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$1y , \$2y  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_croc.i_xbar_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  /* src = "rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_err_sbr.sv:36.25-36.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(fifo_full),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:37.25-37.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_empty),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:59.18-59.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_xbar_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$3y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$1y , \$2y  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "rtl/obi/obi_err_sbr.sv:7.8" */
module \obi_err_sbr$croc_chip.i_croc_soc.i_user.i_user_err (clk_i, rst_ni, testmode_i, obi_req_i, obi_rsp_o);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  /* src = "rtl/obi/obi_err_sbr.sv:19.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_err_sbr.sv:28.20" */
  wire fifo_empty;
  /* src = "rtl/obi/obi_err_sbr.sv:28.9" */
  wire fifo_full;
  /* src = "rtl/obi/obi_err_sbr.sv:28.32" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_err_sbr.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/obi/obi_err_sbr.sv:24.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/obi/obi_err_sbr.sv:27.30" */
  wire [2:0] rid;
  /* src = "rtl/obi/obi_err_sbr.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_err_sbr.sv:21.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_err_sbr.sv:36.25-36.35" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(fifo_full),
    .Y(\$1y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:37.25-37.36" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_empty),
    .Y(\$2y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:59.18-59.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_err_sbr.sv:50.5" */
  \fifo_v3$croc_chip.i_croc_soc.i_user.i_user_err.i_id_fifo  i_id_fifo (
    .clk_i(clk_i),
    .data_i(obi_req_i[4:2]),
    .data_o(rid),
    .empty_o(fifo_empty),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$3y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  assign obi_rsp_o = { 32'hbadcab1e, rid, 2'h2, \$1y , \$2y  };
  assign fifo_pop = obi_rsp_o[0];
endmodule

/* src = "rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$0y ;
  wire [34:0] \$10y ;
  wire [139:0] \$11y ;
  wire [139:0] \$12y ;
  wire [139:0] \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire [34:0] \$17y ;
  wire [139:0] \$18y ;
  wire [139:0] \$19y ;
  wire \$1y ;
  wire [139:0] \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [34:0] \$24y ;
  wire [139:0] \$25y ;
  wire [139:0] \$26y ;
  wire [139:0] \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire [34:0] \$31y ;
  wire [139:0] \$32y ;
  wire [139:0] \$33y ;
  wire [139:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire [3:0] \$39y ;
  wire \$3y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [139:0] \$auto$rtlil.cc:3004:And$13215 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13217 ;
  /* src = "rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_mux.sv:79.38-79.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(fifo_full),
    .Y(\$0y )
  );
  /* src = "rtl/obi/obi_mux.sv:79.16-79.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mgr_port_rsp_i[1]),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$10  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$11  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$11y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$12  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$12y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$14y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$15y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$17  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$16y ),
    .Y(\$17y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$18  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$18y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$19  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.47-85.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_full),
    .Y(\$2y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$20  (
    .A(\$13y ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$19y ),
    .Y(\$20y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$21y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$22y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$21y ),
    .B(\$22y ),
    .Y(\$23y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$24  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$23y ),
    .Y(\$24y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$25  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$25y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$26  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$26y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$27  (
    .A(\$20y ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$26y ),
    .Y(\$27y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$28y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.31-85.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(mgr_port_req),
    .B(\$2y ),
    .Y(\$3y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$31  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$30y ),
    .Y(\$31y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$32  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$32y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$33  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$33y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$34  (
    .A(\$27y ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$36y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$35y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(1'h1),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$39  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_mux.sv:129.20-129.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$5y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$7y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$8y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13214  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$12y ),
    .Y(\$auto$rtlil.cc:3004:And$13215 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13216  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$40y ),
    .Y(\$auto$rtlil.cc:3004:And$13217 )
  );
  /* src = "rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$5y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$1y ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$3y ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$41y ;
  assign sbr_rsp_r = \$34y ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$13y  = \$auto$rtlil.cc:3004:And$13215 ;
  assign \$41y  = \$auto$rtlil.cc:3004:And$13217 ;
endmodule

/* src = "rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$0y ;
  wire [34:0] \$10y ;
  wire [139:0] \$11y ;
  wire [139:0] \$12y ;
  wire [139:0] \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire [34:0] \$17y ;
  wire [139:0] \$18y ;
  wire [139:0] \$19y ;
  wire \$1y ;
  wire [139:0] \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [34:0] \$24y ;
  wire [139:0] \$25y ;
  wire [139:0] \$26y ;
  wire [139:0] \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire [34:0] \$31y ;
  wire [139:0] \$32y ;
  wire [139:0] \$33y ;
  wire [139:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire [3:0] \$39y ;
  wire \$3y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [139:0] \$auto$rtlil.cc:3004:And$13211 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13213 ;
  /* src = "rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_mux.sv:79.38-79.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(fifo_full),
    .Y(\$0y )
  );
  /* src = "rtl/obi/obi_mux.sv:79.16-79.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mgr_port_rsp_i[1]),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$10  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$11  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$11y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$12  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$12y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$14y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$15y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$17  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$16y ),
    .Y(\$17y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$18  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$18y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$19  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.47-85.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_full),
    .Y(\$2y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$20  (
    .A(\$13y ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$19y ),
    .Y(\$20y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$21y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$22y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$21y ),
    .B(\$22y ),
    .Y(\$23y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$24  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$23y ),
    .Y(\$24y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$25  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$25y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$26  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$26y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$27  (
    .A(\$20y ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$26y ),
    .Y(\$27y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$28y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.31-85.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(mgr_port_req),
    .B(\$2y ),
    .Y(\$3y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$31  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$30y ),
    .Y(\$31y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$32  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$32y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$33  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$33y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$34  (
    .A(\$27y ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$36y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$35y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(1'h1),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$39  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_mux.sv:129.20-129.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$5y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$7y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$8y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13210  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$12y ),
    .Y(\$auto$rtlil.cc:3004:And$13211 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13212  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$40y ),
    .Y(\$auto$rtlil.cc:3004:And$13213 )
  );
  /* src = "rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$5y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$1y ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$3y ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$41y ;
  assign sbr_rsp_r = \$34y ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$13y  = \$auto$rtlil.cc:3004:And$13211 ;
  assign \$41y  = \$auto$rtlil.cc:3004:And$13213 ;
endmodule

/* src = "rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$0y ;
  wire [34:0] \$10y ;
  wire [139:0] \$11y ;
  wire [139:0] \$12y ;
  wire [139:0] \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire [34:0] \$17y ;
  wire [139:0] \$18y ;
  wire [139:0] \$19y ;
  wire \$1y ;
  wire [139:0] \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [34:0] \$24y ;
  wire [139:0] \$25y ;
  wire [139:0] \$26y ;
  wire [139:0] \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire [34:0] \$31y ;
  wire [139:0] \$32y ;
  wire [139:0] \$33y ;
  wire [139:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire [3:0] \$39y ;
  wire \$3y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [139:0] \$auto$rtlil.cc:3004:And$13207 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13209 ;
  /* src = "rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_mux.sv:79.38-79.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(fifo_full),
    .Y(\$0y )
  );
  /* src = "rtl/obi/obi_mux.sv:79.16-79.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mgr_port_rsp_i[1]),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$10  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$11  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$11y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$12  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$12y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$14y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$15y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$17  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$16y ),
    .Y(\$17y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$18  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$18y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$19  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.47-85.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_full),
    .Y(\$2y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$20  (
    .A(\$13y ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$19y ),
    .Y(\$20y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$21y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$22y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$21y ),
    .B(\$22y ),
    .Y(\$23y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$24  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$23y ),
    .Y(\$24y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$25  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$25y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$26  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$26y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$27  (
    .A(\$20y ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$26y ),
    .Y(\$27y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$28y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.31-85.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(mgr_port_req),
    .B(\$2y ),
    .Y(\$3y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$31  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$30y ),
    .Y(\$31y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$32  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$32y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$33  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$33y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$34  (
    .A(\$27y ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$36y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$35y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(1'h1),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$39  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_mux.sv:129.20-129.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$5y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$7y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$8y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13206  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$12y ),
    .Y(\$auto$rtlil.cc:3004:And$13207 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13208  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$40y ),
    .Y(\$auto$rtlil.cc:3004:And$13209 )
  );
  /* src = "rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$5y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$1y ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$3y ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$41y ;
  assign sbr_rsp_r = \$34y ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$13y  = \$auto$rtlil.cc:3004:And$13207 ;
  assign \$41y  = \$auto$rtlil.cc:3004:And$13209 ;
endmodule

/* src = "rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$0y ;
  wire [34:0] \$10y ;
  wire [139:0] \$11y ;
  wire [139:0] \$12y ;
  wire [139:0] \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire [34:0] \$17y ;
  wire [139:0] \$18y ;
  wire [139:0] \$19y ;
  wire \$1y ;
  wire [139:0] \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [34:0] \$24y ;
  wire [139:0] \$25y ;
  wire [139:0] \$26y ;
  wire [139:0] \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire [34:0] \$31y ;
  wire [139:0] \$32y ;
  wire [139:0] \$33y ;
  wire [139:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire [3:0] \$39y ;
  wire \$3y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [139:0] \$auto$rtlil.cc:3004:And$13203 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13205 ;
  /* src = "rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_mux.sv:79.38-79.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(fifo_full),
    .Y(\$0y )
  );
  /* src = "rtl/obi/obi_mux.sv:79.16-79.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mgr_port_rsp_i[1]),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$10  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$11  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$11y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$12  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$12y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$14y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$15y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$17  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$16y ),
    .Y(\$17y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$18  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$18y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$19  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.47-85.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_full),
    .Y(\$2y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$20  (
    .A(\$13y ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$19y ),
    .Y(\$20y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$21y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$22y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$21y ),
    .B(\$22y ),
    .Y(\$23y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$24  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$23y ),
    .Y(\$24y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$25  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$25y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$26  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$26y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$27  (
    .A(\$20y ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$26y ),
    .Y(\$27y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$28y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.31-85.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(mgr_port_req),
    .B(\$2y ),
    .Y(\$3y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$31  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$30y ),
    .Y(\$31y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$32  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$32y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$33  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$33y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$34  (
    .A(\$27y ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$36y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$35y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(1'h1),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$39  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_mux.sv:129.20-129.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$5y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$7y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$8y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13202  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$12y ),
    .Y(\$auto$rtlil.cc:3004:And$13203 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13204  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$40y ),
    .Y(\$auto$rtlil.cc:3004:And$13205 )
  );
  /* src = "rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$5y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$1y ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$3y ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$41y ;
  assign sbr_rsp_r = \$34y ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$13y  = \$auto$rtlil.cc:3004:And$13203 ;
  assign \$41y  = \$auto$rtlil.cc:3004:And$13205 ;
endmodule

/* src = "rtl/obi/obi_mux.sv:10.8" */
module \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_port_req_o, mgr_port_rsp_i);
  wire \$0y ;
  wire [34:0] \$10y ;
  wire [139:0] \$11y ;
  wire [139:0] \$12y ;
  wire [139:0] \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire [34:0] \$17y ;
  wire [139:0] \$18y ;
  wire [139:0] \$19y ;
  wire \$1y ;
  wire [139:0] \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire [34:0] \$24y ;
  wire [139:0] \$25y ;
  wire [139:0] \$26y ;
  wire [139:0] \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$30y ;
  wire [34:0] \$31y ;
  wire [139:0] \$32y ;
  wire [139:0] \$33y ;
  wire [139:0] \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire [3:0] \$39y ;
  wire \$3y ;
  wire [3:0] \$40y ;
  wire [3:0] \$41y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [139:0] \$auto$rtlil.cc:3004:And$13199 ;
  wire [3:0] \$auto$rtlil.cc:3004:And$13201 ;
  /* src = "rtl/obi/obi_mux.sv:34.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_mux.sv:60.23" */
  wire fifo_full;
  /* src = "rtl/obi/obi_mux.sv:60.34" */
  wire fifo_pop;
  /* src = "rtl/obi/obi_mux.sv:58.21" */
  wire [70:0] mgr_port_a_in_sbr;
  /* src = "rtl/obi/obi_mux.sv:60.9" */
  wire mgr_port_req;
  /* src = "rtl/obi/obi_mux.sv:41.47" */
  output [73:0] mgr_port_req_o;
  wire [73:0] mgr_port_req_o;
  /* src = "rtl/obi/obi_mux.sv:42.47" */
  input [38:0] mgr_port_rsp_i;
  wire [38:0] mgr_port_rsp_i;
  /* src = "rtl/obi/obi_mux.sv:59.49" */
  wire [1:0] response_id;
  /* src = "rtl/obi/obi_mux.sv:102.37" */
  wire rsp_rid;
  /* src = "rtl/obi/obi_mux.sv:35.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_mux.sv:51.39" */
  wire [283:0] sbr_ports_a;
  /* src = "rtl/obi/obi_mux.sv:50.42" */
  wire [3:0] sbr_ports_gnt;
  /* src = "rtl/obi/obi_mux.sv:50.27" */
  wire [3:0] sbr_ports_req;
  /* src = "rtl/obi/obi_mux.sv:38.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_mux.sv:39.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_mux.sv:141.39" */
  wire [139:0] sbr_rsp_r;
  /* src = "rtl/obi/obi_mux.sv:140.27" */
  wire [3:0] sbr_rsp_rvalid;
  /* src = "rtl/obi/obi_mux.sv:59.36" */
  wire [1:0] selected_id;
  /* src = "rtl/obi/obi_mux.sv:36.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_mux.sv:79.38-79.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(fifo_full),
    .Y(\$0y )
  );
  /* src = "rtl/obi/obi_mux.sv:79.16-79.48" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(mgr_port_rsp_i[1]),
    .B(\$0y ),
    .Y(\$1y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$10  (
    .A(35'h000000000),
    .B(35'h7fffffff8),
    .S(\$9y ),
    .Y(\$10y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$11  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$11y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$12  (
    .A(\$10y ),
    .S(response_id),
    .Y(\$12y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$14y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$15y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(\$14y ),
    .B(\$15y ),
    .Y(\$16y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$17  (
    .A(35'h000000000),
    .B(35'h000000004),
    .S(\$16y ),
    .Y(\$17y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$18  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$18y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$19  (
    .A(\$17y ),
    .S(response_id),
    .Y(\$19y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.47-85.57" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(fifo_full),
    .Y(\$2y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$20  (
    .A(\$13y ),
    .B({ 32'hxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 34'hxxxxxxxxx, mgr_port_rsp_i[4], 2'hx }),
    .S(\$19y ),
    .Y(\$20y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$21y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$22y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(\$21y ),
    .B(\$22y ),
    .Y(\$23y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$24  (
    .A(35'h000000000),
    .B(35'h000000002),
    .S(\$23y ),
    .Y(\$24y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$25  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$25y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$26  (
    .A(\$24y ),
    .S(response_id),
    .Y(\$26y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$27  (
    .A(\$20y ),
    .B({ 33'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 34'hxxxxxxxxx, mgr_port_rsp_i[3], 1'hx }),
    .S(\$26y ),
    .Y(\$27y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$28y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$29y )
  );
  /* src = "rtl/obi/obi_mux.sv:85.31-85.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(mgr_port_req),
    .B(\$2y ),
    .Y(\$3y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\$28y ),
    .B(\$29y ),
    .Y(\$30y )
  );
  \$mux  #(
    .WIDTH(32'd35)
  ) \$31  (
    .A(35'h000000000),
    .B(35'h000000001),
    .S(\$30y ),
    .Y(\$31y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$32  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$32y )
  );
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd35)
  ) \$33  (
    .A(\$31y ),
    .S(response_id),
    .Y(\$33y )
  );
  \$bwmux  #(
    .WIDTH(32'd140)
  ) \$34  (
    .A(\$27y ),
    .B({ 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2], 34'hxxxxxxxxx, mgr_port_rsp_i[2] }),
    .S(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$35y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$36y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$35y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$38  (
    .A(1'h0),
    .B(1'h1),
    .S(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$39  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$39y )
  );
  /* src = "rtl/obi/obi_mux.sv:148.5-148.56" */
  \$demux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .S(response_id),
    .Y(\$40y )
  );
  /* src = "rtl/obi/obi_mux.sv:129.20-129.60" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(mgr_port_req_o[0]),
    .B(mgr_port_rsp_i[1]),
    .Y(\$5y )
  );
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A({ 1'h0, response_id }),
    .B(1'h0),
    .Y(\$7y )
  );
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A({ 1'h0, response_id }),
    .B(4'h4),
    .Y(\$8y )
  );
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd140),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd140),
    .Y_WIDTH(32'd140)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13198  (
    .A({ mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx, mgr_port_rsp_i[38:7], 3'hx }),
    .B(\$12y ),
    .Y(\$auto$rtlil.cc:3004:And$13199 )
  );
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$auto$opt_expr.cc:785:replace_const_cells$13200  (
    .A({ mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0], mgr_port_rsp_i[0] }),
    .B(\$40y ),
    .Y(\$auto$rtlil.cc:3004:And$13201 )
  );
  /* src = "rtl/obi/obi_mux.sv:119.7" */
  \fifo_v3$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.gen_no_id_assign.i_fifo  \gen_no_id_assign.i_fifo  (
    .clk_i(clk_i),
    .data_i(selected_id),
    .data_o(response_id),
    .flush_i(1'h0),
    .full_o(fifo_full),
    .pop_i(fifo_pop),
    .push_i(\$5y ),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_mux.sv:67.5" */
  \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb  i_rr_arb (
    .clk_i(clk_i),
    .data_i(sbr_ports_a),
    .data_o(mgr_port_a_in_sbr),
    .flush_i(1'h0),
    .gnt_i(\$1y ),
    .gnt_o(sbr_ports_gnt),
    .idx_o(selected_id),
    .req_i(sbr_ports_req),
    .req_o(mgr_port_req),
    .rr_i(2'h0),
    .rst_ni(rst_ni)
  );
  assign sbr_ports_req[0] = sbr_ports_req_i[0];
  assign sbr_ports_a[70:0] = sbr_ports_req_i[71:1];
  assign sbr_ports_rsp_o[1] = sbr_ports_gnt[0];
  assign sbr_ports_req[1] = sbr_ports_req_i[72];
  assign sbr_ports_a[141:71] = sbr_ports_req_i[143:73];
  assign sbr_ports_rsp_o[38] = sbr_ports_gnt[1];
  assign sbr_ports_req[2] = sbr_ports_req_i[144];
  assign sbr_ports_a[212:142] = sbr_ports_req_i[215:145];
  assign sbr_ports_rsp_o[75] = sbr_ports_gnt[2];
  assign sbr_ports_req[3] = sbr_ports_req_i[216];
  assign sbr_ports_a[283:213] = sbr_ports_req_i[287:217];
  assign sbr_ports_rsp_o[112] = sbr_ports_gnt[3];
  assign mgr_port_req_o[0] = \$3y ;
  assign mgr_port_req_o[73:1] = { mgr_port_a_in_sbr[70:2], selected_id, mgr_port_a_in_sbr[1:0] };
  assign sbr_rsp_rvalid = \$41y ;
  assign sbr_rsp_r = \$34y ;
  assign sbr_ports_rsp_o[36:2] = sbr_rsp_r[34:0];
  assign sbr_ports_rsp_o[0] = sbr_rsp_rvalid[0];
  assign sbr_ports_rsp_o[73:39] = sbr_rsp_r[69:35];
  assign sbr_ports_rsp_o[37] = sbr_rsp_rvalid[1];
  assign sbr_ports_rsp_o[110:76] = sbr_rsp_r[104:70];
  assign sbr_ports_rsp_o[74] = sbr_rsp_rvalid[2];
  assign sbr_ports_rsp_o[147:113] = sbr_rsp_r[139:105];
  assign sbr_ports_rsp_o[111] = sbr_rsp_rvalid[3];
  assign fifo_pop = mgr_port_rsp_i[0];
  assign \$13y  = \$auto$rtlil.cc:3004:And$13199 ;
  assign \$41y  = \$auto$rtlil.cc:3004:And$13201 ;
endmodule

/* src = "rtl/obi/obi_sram_shim.sv:7.8" */
module \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram_shim (clk_i, rst_ni, obi_req_i, obi_rsp_o, req_o, we_o, addr_o, wdata_o, be_o, gnt_i, rdata_i);
  wire \$1y ;
  wire \$3y ;
  wire \$4y ;
  /* src = "rtl/obi/obi_sram_shim.sv:23.41" */
  output [31:0] addr_o;
  wire [31:0] addr_o;
  /* src = "rtl/obi/obi_sram_shim.sv:25.41" */
  output [3:0] be_o;
  wire [3:0] be_o;
  /* src = "rtl/obi/obi_sram_shim.sv:15.41" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_sram_shim.sv:27.41" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/obi/obi_sram_shim.sv:38.30" */
  wire [2:0] id_d;
  /* src = "rtl/obi/obi_sram_shim.sv:38.36" */
  wire [2:0] id_q;
  /* src = "rtl/obi/obi_sram_shim.sv:18.41" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/obi/obi_sram_shim.sv:19.41" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/obi/obi_sram_shim.sv:28.41" */
  input [31:0] rdata_i;
  wire [31:0] rdata_i;
  /* src = "rtl/obi/obi_sram_shim.sv:21.41" */
  output req_o;
  wire req_o;
  /* src = "rtl/obi/obi_sram_shim.sv:16.41" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_sram_shim.sv:37.9" */
  wire rvalid_d;
  /* src = "rtl/obi/obi_sram_shim.sv:37.19" */
  wire rvalid_q;
  /* src = "rtl/obi/obi_sram_shim.sv:24.41" */
  output [31:0] wdata_o;
  wire [31:0] wdata_o;
  /* src = "rtl/obi/obi_sram_shim.sv:22.41" */
  output we_o;
  wire we_o;
  /* src = "rtl/obi/obi_sram_shim.sv:55.21-55.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(rst_ni),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  /* src = "rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rvalid_d),
    .Q(rvalid_q)
  );
  assign req_o = obi_req_i[0];
  assign we_o = obi_req_i[41];
  assign addr_o = obi_req_i[73:42];
  assign wdata_o = obi_req_i[36:5];
  assign be_o = obi_req_i[40:37];
  assign obi_rsp_o = { rdata_i, id_q, 2'h0, gnt_i, rvalid_q };
  assign rvalid_d = \$1y ;
  assign id_d = obi_req_i[4:2];
  assign \$4y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_sram_shim.sv:7.8" */
module \obi_sram_shim$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram_shim (clk_i, rst_ni, obi_req_i, obi_rsp_o, req_o, we_o, addr_o, wdata_o, be_o, gnt_i, rdata_i);
  wire \$1y ;
  wire \$3y ;
  wire \$4y ;
  /* src = "rtl/obi/obi_sram_shim.sv:23.41" */
  output [31:0] addr_o;
  wire [31:0] addr_o;
  /* src = "rtl/obi/obi_sram_shim.sv:25.41" */
  output [3:0] be_o;
  wire [3:0] be_o;
  /* src = "rtl/obi/obi_sram_shim.sv:15.41" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_sram_shim.sv:27.41" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/obi/obi_sram_shim.sv:38.30" */
  wire [2:0] id_d;
  /* src = "rtl/obi/obi_sram_shim.sv:38.36" */
  wire [2:0] id_q;
  /* src = "rtl/obi/obi_sram_shim.sv:18.41" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/obi/obi_sram_shim.sv:19.41" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/obi/obi_sram_shim.sv:28.41" */
  input [31:0] rdata_i;
  wire [31:0] rdata_i;
  /* src = "rtl/obi/obi_sram_shim.sv:21.41" */
  output req_o;
  wire req_o;
  /* src = "rtl/obi/obi_sram_shim.sv:16.41" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_sram_shim.sv:37.9" */
  wire rvalid_d;
  /* src = "rtl/obi/obi_sram_shim.sv:37.19" */
  wire rvalid_q;
  /* src = "rtl/obi/obi_sram_shim.sv:24.41" */
  output [31:0] wdata_o;
  wire [31:0] wdata_o;
  /* src = "rtl/obi/obi_sram_shim.sv:22.41" */
  output we_o;
  wire we_o;
  /* src = "rtl/obi/obi_sram_shim.sv:55.21-55.50" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(obi_req_i[0]),
    .B(obi_rsp_o[1]),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(rst_ni),
    .Y(\$3y )
  );
  /* src = "rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  /* src = "rtl/obi/obi_sram_shim.sv:58.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$rvalid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(rvalid_d),
    .Q(rvalid_q)
  );
  assign req_o = obi_req_i[0];
  assign we_o = obi_req_i[41];
  assign addr_o = obi_req_i[73:42];
  assign wdata_o = obi_req_i[36:5];
  assign be_o = obi_req_i[40:37];
  assign obi_rsp_o = { rdata_i, id_q, 2'h0, gnt_i, rvalid_q };
  assign rvalid_d = \$1y ;
  assign id_d = obi_req_i[4:2];
  assign \$4y  = rst_ni;
endmodule

/* src = "rtl/obi/obi_xbar.sv:8.8" */
module \obi_xbar$croc_chip.i_croc_soc.i_croc.i_main_xbar (clk_i, rst_ni, testmode_i, sbr_ports_req_i, sbr_ports_rsp_o, mgr_ports_req_o, mgr_ports_rsp_i, addr_map_i, en_default_idx_i, default_idx_i);
  /* src = "rtl/obi/obi_xbar.sv:50.47" */
  input [383:0] addr_map_i;
  wire [383:0] addr_map_i;
  /* src = "rtl/obi/obi_xbar.sv:40.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/obi/obi_xbar.sv:52.75" */
  input [11:0] default_idx_i;
  wire [11:0] default_idx_i;
  /* src = "rtl/obi/obi_xbar.sv:51.47" */
  input [3:0] en_default_idx_i;
  wire [3:0] en_default_idx_i;
  /* src = "rtl/obi/obi_xbar.sv:47.47" */
  output [369:0] mgr_ports_req_o;
  wire [369:0] mgr_ports_req_o;
  /* src = "rtl/obi/obi_xbar.sv:48.47" */
  input [194:0] mgr_ports_rsp_i;
  wire [194:0] mgr_ports_rsp_i;
  /* src = "rtl/obi/obi_xbar.sv:62.57" */
  wire [1439:0] mgr_reqs;
  /* src = "rtl/obi/obi_xbar.sv:63.57" */
  wire [739:0] mgr_rsps;
  /* src = "rtl/obi/obi_xbar.sv:41.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/obi/obi_xbar.sv:55.68" */
  wire [11:0] sbr_port_select;
  /* src = "rtl/obi/obi_xbar.sv:44.47" */
  input [287:0] sbr_ports_req_i;
  wire [287:0] sbr_ports_req_i;
  /* src = "rtl/obi/obi_xbar.sv:45.47" */
  output [147:0] sbr_ports_rsp_o;
  wire [147:0] sbr_ports_rsp_o;
  /* src = "rtl/obi/obi_xbar.sv:58.57" */
  wire [1439:0] sbr_reqs;
  /* src = "rtl/obi/obi_xbar.sv:59.57" */
  wire [739:0] sbr_rsps;
  /* src = "rtl/obi/obi_xbar.sv:42.16" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_addr_decode  \gen_demux[0].i_addr_decode  (
    .addr_i(sbr_ports_req_i[71:40]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[2:0]),
    .en_default_idx_i(en_default_idx_i[0]),
    .idx_o(sbr_port_select[2:0])
  );
  /* src = "rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[0].i_demux  \gen_demux[0].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[359:0]),
    .mgr_ports_rsp_i(sbr_rsps[184:0]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[71:0]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[36:0]),
    .sbr_port_select_i(sbr_port_select[2:0])
  );
  /* src = "rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_addr_decode  \gen_demux[1].i_addr_decode  (
    .addr_i(sbr_ports_req_i[143:112]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[5:3]),
    .en_default_idx_i(en_default_idx_i[1]),
    .idx_o(sbr_port_select[5:3])
  );
  /* src = "rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[1].i_demux  \gen_demux[1].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[719:360]),
    .mgr_ports_rsp_i(sbr_rsps[369:185]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[143:72]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[73:37]),
    .sbr_port_select_i(sbr_port_select[5:3])
  );
  /* src = "rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_addr_decode  \gen_demux[2].i_addr_decode  (
    .addr_i(sbr_ports_req_i[215:184]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[8:6]),
    .en_default_idx_i(en_default_idx_i[2]),
    .idx_o(sbr_port_select[8:6])
  );
  /* src = "rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[2].i_demux  \gen_demux[2].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[1079:720]),
    .mgr_ports_rsp_i(sbr_rsps[554:370]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[215:144]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[110:74]),
    .sbr_port_select_i(sbr_port_select[8:6])
  );
  /* src = "rtl/obi/obi_xbar.sv:71.7" */
  \addr_decode$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_addr_decode  \gen_demux[3].i_addr_decode  (
    .addr_i(sbr_ports_req_i[287:256]),
    .addr_map_i(addr_map_i),
    .default_idx_i(default_idx_i[11:9]),
    .en_default_idx_i(en_default_idx_i[3]),
    .idx_o(sbr_port_select[11:9])
  );
  /* src = "rtl/obi/obi_xbar.sv:87.7" */
  \obi_demux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_demux[3].i_demux  \gen_demux[3].i_demux  (
    .clk_i(clk_i),
    .mgr_ports_req_o(sbr_reqs[1439:1080]),
    .mgr_ports_rsp_i(sbr_rsps[739:555]),
    .rst_ni(rst_ni),
    .sbr_port_req_i(sbr_ports_req_i[287:216]),
    .sbr_port_rsp_o(sbr_ports_rsp_o[147:111]),
    .sbr_port_select_i(sbr_port_select[11:9])
  );
  /* src = "rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux  \gen_mux[0].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[73:0]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[38:0]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[287:0]),
    .sbr_ports_rsp_o(mgr_rsps[147:0]),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux  \gen_mux[1].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[147:74]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[77:39]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[575:288]),
    .sbr_ports_rsp_o(mgr_rsps[295:148]),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux  \gen_mux[2].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[221:148]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[116:78]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[863:576]),
    .sbr_ports_rsp_o(mgr_rsps[443:296]),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux  \gen_mux[3].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[295:222]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[155:117]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[1151:864]),
    .sbr_ports_rsp_o(mgr_rsps[591:444]),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/obi/obi_xbar.sv:145.7" */
  \obi_mux$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux  \gen_mux[4].i_mux  (
    .clk_i(clk_i),
    .mgr_port_req_o(mgr_ports_req_o[369:296]),
    .mgr_port_rsp_i(mgr_ports_rsp_i[194:156]),
    .rst_ni(rst_ni),
    .sbr_ports_req_i(mgr_reqs[1439:1152]),
    .sbr_ports_rsp_o(mgr_rsps[739:592]),
    .testmode_i(testmode_i)
  );
  assign mgr_reqs[71:0] = sbr_reqs[71:0];
  assign sbr_rsps[36:0] = mgr_rsps[36:0];
  assign mgr_reqs[359:288] = sbr_reqs[143:72];
  assign sbr_rsps[73:37] = mgr_rsps[184:148];
  assign mgr_reqs[647:576] = sbr_reqs[215:144];
  assign sbr_rsps[110:74] = mgr_rsps[332:296];
  assign mgr_reqs[935:864] = sbr_reqs[287:216];
  assign sbr_rsps[147:111] = mgr_rsps[480:444];
  assign mgr_reqs[1223:1152] = sbr_reqs[359:288];
  assign sbr_rsps[184:148] = mgr_rsps[628:592];
  assign mgr_reqs[143:72] = sbr_reqs[431:360];
  assign sbr_rsps[221:185] = mgr_rsps[73:37];
  assign mgr_reqs[431:360] = sbr_reqs[503:432];
  assign sbr_rsps[258:222] = mgr_rsps[221:185];
  assign mgr_reqs[719:648] = sbr_reqs[575:504];
  assign sbr_rsps[295:259] = mgr_rsps[369:333];
  assign mgr_reqs[1007:936] = sbr_reqs[647:576];
  assign sbr_rsps[332:296] = mgr_rsps[517:481];
  assign mgr_reqs[1295:1224] = sbr_reqs[719:648];
  assign sbr_rsps[369:333] = mgr_rsps[665:629];
  assign mgr_reqs[215:144] = sbr_reqs[791:720];
  assign sbr_rsps[406:370] = mgr_rsps[110:74];
  assign mgr_reqs[503:432] = sbr_reqs[863:792];
  assign sbr_rsps[443:407] = mgr_rsps[258:222];
  assign mgr_reqs[791:720] = sbr_reqs[935:864];
  assign sbr_rsps[480:444] = mgr_rsps[406:370];
  assign mgr_reqs[1079:1008] = sbr_reqs[1007:936];
  assign sbr_rsps[517:481] = mgr_rsps[554:518];
  assign mgr_reqs[1367:1296] = sbr_reqs[1079:1008];
  assign sbr_rsps[554:518] = mgr_rsps[702:666];
  assign mgr_reqs[287:216] = sbr_reqs[1151:1080];
  assign sbr_rsps[591:555] = mgr_rsps[147:111];
  assign mgr_reqs[575:504] = sbr_reqs[1223:1152];
  assign sbr_rsps[628:592] = mgr_rsps[295:259];
  assign mgr_reqs[863:792] = sbr_reqs[1295:1224];
  assign sbr_rsps[665:629] = mgr_rsps[443:407];
  assign mgr_reqs[1151:1080] = sbr_reqs[1367:1296];
  assign sbr_rsps[702:666] = mgr_rsps[591:555];
  assign mgr_reqs[1439:1368] = sbr_reqs[1439:1368];
  assign sbr_rsps[739:703] = mgr_rsps[739:703];
endmodule

/* src = "rtl/register_interface/periph_to_reg.sv:13.8" */
module \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl_translate (clk_i, rst_ni, req_i, wdata_i, be_i, add_i, wen_i, id_i, gnt_o, r_rdata_o, r_opc_o, r_id_o, r_valid_o, reg_req_o, reg_rsp_i);
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  /* src = "rtl/register_interface/periph_to_reg.sv:25.28" */
  input [31:0] add_i;
  wire [31:0] add_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:28.28" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:21.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:30.28" */
  output gnt_o;
  wire gnt_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:29.28" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:40.18" */
  wire [2:0] r_id_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:33.28" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:40.26" */
  wire [2:0] r_id_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:41.18" */
  wire r_opc_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:32.28" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:41.27" */
  wire r_opc_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:43.18" */
  wire [31:0] r_rdata_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:31.28" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:43.29" */
  wire [31:0] r_rdata_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:42.18" */
  wire r_valid_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:34.28" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:42.29" */
  wire r_valid_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:36.28" */
  output [69:0] reg_req_o;
  wire [69:0] reg_req_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:37.28" */
  input [33:0] reg_rsp_i;
  wire [33:0] reg_rsp_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:24.28" */
  input req_i;
  wire req_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:22.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/periph_to_reg.sv:27.28" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:26.28" */
  input wen_i;
  wire wen_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(rst_ni),
    .Y(\$2y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:67.28-67.34" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(wen_i),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:72.22-72.45" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(req_i),
    .B(reg_rsp_i[0]),
    .Y(\$5y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$r_id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_id_d),
    .Q(r_id_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_opc_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_opc_d),
    .Q(r_opc_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$r_rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_rdata_d),
    .Q(r_rdata_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_valid_d),
    .Q(r_valid_q)
  );
  assign r_id_d = id_i;
  assign r_opc_d = reg_rsp_i[1];
  assign r_valid_d = gnt_o;
  assign r_rdata_d = reg_rsp_i[33:2];
  assign reg_req_o[69:38] = add_i;
  assign reg_req_o[37] = \$4y ;
  assign reg_req_o[36:5] = wdata_i;
  assign reg_req_o[4:1] = be_i;
  assign reg_req_o[0] = req_i;
  assign gnt_o = \$5y ;
  assign r_rdata_o = r_rdata_q;
  assign r_opc_o = r_opc_q;
  assign r_id_o = r_id_q;
  assign r_valid_o = r_valid_q;
  assign \$3y  = rst_ni;
endmodule

/* src = "rtl/register_interface/periph_to_reg.sv:13.8" */
module \periph_to_reg$croc_chip.i_croc_soc.i_croc.i_uart_translate (clk_i, rst_ni, req_i, wdata_i, be_i, add_i, wen_i, id_i, gnt_o, r_rdata_o, r_opc_o, r_id_o, r_valid_o, reg_req_o, reg_rsp_i);
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  /* src = "rtl/register_interface/periph_to_reg.sv:25.28" */
  input [31:0] add_i;
  wire [31:0] add_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:28.28" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:21.28" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:30.28" */
  output gnt_o;
  wire gnt_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:29.28" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:40.18" */
  wire [2:0] r_id_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:33.28" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:40.26" */
  wire [2:0] r_id_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:41.18" */
  wire r_opc_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:32.28" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:41.27" */
  wire r_opc_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:43.18" */
  wire [31:0] r_rdata_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:31.28" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:43.29" */
  wire [31:0] r_rdata_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:42.18" */
  wire r_valid_d;
  /* src = "rtl/register_interface/periph_to_reg.sv:34.28" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:42.29" */
  wire r_valid_q;
  /* src = "rtl/register_interface/periph_to_reg.sv:36.28" */
  output [69:0] reg_req_o;
  wire [69:0] reg_req_o;
  /* src = "rtl/register_interface/periph_to_reg.sv:37.28" */
  input [33:0] reg_rsp_i;
  wire [33:0] reg_rsp_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:24.28" */
  input req_i;
  wire req_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:22.28" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/periph_to_reg.sv:27.28" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "rtl/register_interface/periph_to_reg.sv:26.28" */
  input wen_i;
  wire wen_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(rst_ni),
    .Y(\$2y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:67.28-67.34" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(wen_i),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:72.22-72.45" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(req_i),
    .B(reg_rsp_i[0]),
    .Y(\$5y )
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$r_id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_id_d),
    .Q(r_id_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_opc_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_opc_d),
    .Q(r_opc_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$r_rdata_q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_rdata_d),
    .Q(r_rdata_q)
  );
  /* src = "rtl/register_interface/periph_to_reg.sv:52.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$r_valid_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(r_valid_d),
    .Q(r_valid_q)
  );
  assign r_id_d = id_i;
  assign r_opc_d = reg_rsp_i[1];
  assign r_valid_d = gnt_o;
  assign r_rdata_d = reg_rsp_i[33:2];
  assign reg_req_o[69:38] = add_i;
  assign reg_req_o[37] = \$4y ;
  assign reg_req_o[36:5] = wdata_i;
  assign reg_req_o[4:1] = be_i;
  assign reg_req_o[0] = req_i;
  assign gnt_o = \$5y ;
  assign r_rdata_o = r_rdata_q;
  assign r_opc_o = r_opc_q;
  assign r_id_o = r_id_q;
  assign r_valid_o = r_valid_q;
  assign \$3y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$procmux$11477_Y ;
  wire \$procmux$11478_CMP ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire [31:0] \$q$6 ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output [31:0] q;
  wire [31:0] q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output [31:0] qs;
  wire [31:0] qs;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire [31:0] wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$q  (
    .AD(32'd268435456),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$q$6 ),
    .Q(q)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11477  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$11478_CMP ),
    .Y(\$procmux$11477_Y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$11478_CMP  = wr_en;
  assign \$q$6  = \$procmux$11477_Y ;
  assign \$2y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire \$procmux$11471_Y ;
  wire \$procmux$11472_CMP ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$q$6 ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$q$6 ),
    .Q(q)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11471  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$11472_CMP ),
    .Y(\$procmux$11471_Y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$11472_CMP  = wr_en;
  assign \$q$6  = \$procmux$11471_Y ;
  assign \$2y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$procmux$11473_Y ;
  wire \$procmux$11474_CMP ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire [31:0] \$q$6 ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output [31:0] q;
  wire [31:0] q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output [31:0] qs;
  wire [31:0] qs;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire [31:0] wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$q  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$q$6 ),
    .Q(q)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11473  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$11474_CMP ),
    .Y(\$procmux$11473_Y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$11474_CMP  = wr_en;
  assign \$q$6  = \$procmux$11473_Y ;
  assign \$2y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire \$procmux$11475_Y ;
  wire \$procmux$11476_CMP ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$q$6 ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$q$6 ),
    .Q(q)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11475  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$11476_CMP ),
    .Y(\$procmux$11475_Y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$11476_CMP  = wr_en;
  assign \$q$6  = \$procmux$11475_Y ;
  assign \$2y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:7.8" */
module \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly (clk_i, rst_ni, we, wd, de, d, q, qs, qe);
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire \$procmux$11469_Y ;
  wire \$procmux$11470_CMP ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  wire \$q$6 ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:12.9" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:22.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:21.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:26.25" */
  output q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:25.25" */
  output qe;
  wire qe;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:27.25" */
  output qs;
  wire qs;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:13.9" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:18.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:17.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:31.18" */
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:30.18" */
  wire wr_en;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:54.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$q  (
    .AD(1'h1),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$q$6 ),
    .Q(q)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:46.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$qe  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we),
    .Q(qe)
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:58.7-58.20|rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:57.14-59.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11469  (
    .A(q),
    .B(wr_data),
    .S(\$procmux$11470_CMP ),
    .Y(\$procmux$11469_Y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg.sv:36.5" */
  \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly.wr_en_data_arb  wr_en_data_arb (
    .d(d),
    .de(de),
    .q(q),
    .wd(wd),
    .we(we),
    .wr_data(wr_data),
    .wr_en(wr_en)
  );
  assign qs = q;
  assign \$procmux$11470_CMP  = wr_en;
  assign \$q$6  = \$procmux$11469_Y ;
  assign \$2y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$0y ;
  wire \$1y ;
  wire [31:0] \$2y ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire [31:0] \gen_w.unused_q ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input [31:0] q;
  wire [31:0] q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output [31:0] wr_data;
  wire [31:0] wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:29.22-29.29" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(we),
    .B(de),
    .Y(\$0y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:30.22-30.43" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$2  (
    .A(d),
    .B(wd),
    .S(\$1y ),
    .Y(\$2y )
  );
  assign wr_en = \$0y ;
  assign wr_data = \$2y ;
  assign \gen_w.unused_q  = q;
  assign \$1y  = we;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$0y ;
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:29.22-29.29" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(we),
    .B(de),
    .Y(\$0y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:30.22-30.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$2  (
    .A(d),
    .B(wd),
    .S(\$1y ),
    .Y(\$2y )
  );
  assign wr_en = \$0y ;
  assign wr_data = \$2y ;
  assign \gen_w.unused_q  = q;
  assign \$1y  = we;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$0y ;
  wire \$1y ;
  wire [31:0] \$2y ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input [31:0] d;
  wire [31:0] d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire [31:0] \gen_w.unused_q ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input [31:0] q;
  wire [31:0] q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input [31:0] wd;
  wire [31:0] wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output [31:0] wr_data;
  wire [31:0] wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:29.22-29.29" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(we),
    .B(de),
    .Y(\$0y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:30.22-30.43" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$2  (
    .A(d),
    .B(wd),
    .S(\$1y ),
    .Y(\$2y )
  );
  assign wr_en = \$0y ;
  assign wr_data = \$2y ;
  assign \gen_w.unused_q  = q;
  assign \$1y  = we;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$0y ;
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:29.22-29.29" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(we),
    .B(de),
    .Y(\$0y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:30.22-30.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$2  (
    .A(d),
    .B(wd),
    .S(\$1y ),
    .Y(\$2y )
  );
  assign wr_en = \$0y ;
  assign wr_data = \$2y ;
  assign \gen_w.unused_q  = q;
  assign \$1y  = we;
endmodule

/* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:7.8" */
module \prim_subreg_arb$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly.wr_en_data_arb (we, wd, de, d, q, wr_en, wr_data);
  wire \$0y ;
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:18.18" */
  input d;
  wire d;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:17.18" */
  input de;
  wire de;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:32.20" */
  wire \gen_w.unused_q ;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:21.18" */
  input q;
  wire q;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:14.18" */
  input wd;
  wire wd;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:13.18" */
  input we;
  wire we;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:25.25" */
  output wr_data;
  wire wr_data;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:24.25" */
  output wr_en;
  wire wr_en;
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:29.22-29.29" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(we),
    .B(de),
    .Y(\$0y )
  );
  /* src = "rtl/register_interface/lowrisc_opentitan/prim_subreg_arb.sv:30.22-30.43" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$2  (
    .A(d),
    .B(wd),
    .S(\$1y ),
    .Y(\$2y )
  );
  assign wr_en = \$0y ;
  assign wr_data = \$2y ;
  assign \gen_w.unused_q  = q;
  assign \$1y  = we;
endmodule

/* src = "rtl/register_interface/reg_to_apb.sv:7.8" */
module \reg_to_apb$croc_chip.i_croc_soc.i_croc.i_uart.i_reg_uart_reg_to_apb (clk_i, rst_ni, reg_req_i, reg_rsp_o, apb_req_o, apb_rsp_i);
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$apb_req_o[37]$5 ;
  wire \$procmux$11449_Y ;
  wire \$procmux$11450_CMP ;
  wire \$procmux$11451_Y ;
  wire \$procmux$11452_CMP ;
  wire \$procmux$11454_Y ;
  wire \$procmux$11455_CMP ;
  wire \$procmux$11457_CMP ;
  wire \$procmux$11459_Y ;
  wire \$procmux$11460_CMP ;
  wire \$procmux$11461_Y ;
  wire \$procmux$11462_CMP ;
  wire \$procmux$11464_Y ;
  wire \$procmux$11465_CMP ;
  wire \$procmux$11467_Y ;
  wire \$procmux$11468_CMP ;
  /* src = "rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$reg_rsp_o[0]$4 ;
  /* src = "rtl/register_interface/reg_to_apb.sv:54.14-54.52" */
  wire \$state_d$1 ;
  /* src = "rtl/register_interface/reg_to_apb.sv:59.9-59.47" */
  wire \$state_d$2 ;
  /* src = "rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  wire \$state_d$3 ;
  /* src = "rtl/register_interface/reg_to_apb.sv:26.20" */
  output [73:0] apb_req_o;
  wire [73:0] apb_req_o;
  /* src = "rtl/register_interface/reg_to_apb.sv:27.20" */
  input [33:0] apb_rsp_i;
  wire [33:0] apb_rsp_i;
  /* src = "rtl/register_interface/reg_to_apb.sv:18.20" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/register_interface/reg_to_apb.sv:22.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "rtl/register_interface/reg_to_apb.sv:23.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "rtl/register_interface/reg_to_apb.sv:19.20" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/register_interface/reg_to_apb.sv:32.11" */
  wire state_d;
  /* src = "rtl/register_interface/reg_to_apb.sv:32.20" */
  wire state_q;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(rst_ni),
    .Y(\$7y )
  );
  /* src = "rtl/register_interface/reg_to_apb.sv:66.3" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$state_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(state_d),
    .Q(state_q)
  );
  /* src = "rtl/register_interface/reg_to_apb.sv:59.31-59.47|rtl/register_interface/reg_to_apb.sv:59.9-59.47" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11449  (
    .A(state_q),
    .B(1'h0),
    .S(\$procmux$11450_CMP ),
    .Y(\$procmux$11449_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:56.15-60.10|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11451  (
    .A(1'hx),
    .B(\$procmux$11449_Y ),
    .S(\$procmux$11452_CMP ),
    .Y(\$procmux$11451_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:56.15-60.10|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$11454  (
    .A(1'hx),
    .B({ \$state_d$1 , \$state_d$2  }),
    .S({ \$procmux$11457_CMP , \$procmux$11455_CMP  }),
    .Y(\$procmux$11454_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:54.14-54.52|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11457_CMP0  (
    .A(state_q),
    .Y(\$procmux$11457_CMP )
  );
  /* src = "rtl/register_interface/reg_to_apb.sv:54.35-54.52|rtl/register_interface/reg_to_apb.sv:54.14-54.52" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11459  (
    .A(state_q),
    .B(1'h1),
    .S(\$procmux$11460_CMP ),
    .Y(\$procmux$11459_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:54.14-54.52|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11461  (
    .A(\$procmux$11459_Y ),
    .B(1'hx),
    .S(state_q),
    .Y(\$procmux$11461_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:54.14-54.52|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$procmux$11462_CMP0  (
    .A(state_q),
    .Y(\$procmux$11462_CMP )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:56.15-60.10|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11464  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$11465_CMP ),
    .Y(\$procmux$11464_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/register_interface/reg_to_apb.sv:56.15-60.10|rtl/register_interface/reg_to_apb.sv:52.5-63.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11467  (
    .A(1'h0),
    .B(apb_rsp_i[33]),
    .S(\$procmux$11468_CMP ),
    .Y(\$procmux$11467_Y )
  );
  assign apb_req_o[73:42] = reg_req_i[69:38];
  assign apb_req_o[36] = reg_req_i[37];
  assign apb_req_o[35:4] = reg_req_i[36:5];
  assign apb_req_o[38] = reg_req_i[0];
  assign apb_req_o[3:0] = reg_req_i[4:1];
  assign reg_rsp_o[1] = apb_rsp_i[0];
  assign reg_rsp_o[33:2] = apb_rsp_i[32:1];
  assign apb_req_o[41:39] = 3'h2;
  assign state_d = \$state_d$3 ;
  assign reg_rsp_o[0] = \$reg_rsp_o[0]$4 ;
  assign apb_req_o[37] = \$apb_req_o[37]$5 ;
  assign \$procmux$11450_CMP  = apb_rsp_i[33];
  assign \$procmux$11452_CMP  = state_q;
  assign \$state_d$2  = \$procmux$11451_Y ;
  assign \$procmux$11455_CMP  = state_q;
  assign \$state_d$3  = \$procmux$11454_Y ;
  assign \$procmux$11460_CMP  = reg_req_i[0];
  assign \$state_d$1  = \$procmux$11461_Y ;
  assign \$procmux$11465_CMP  = state_q;
  assign \$apb_req_o[37]$5  = \$procmux$11464_Y ;
  assign \$procmux$11468_CMP  = state_q;
  assign \$reg_rsp_o[0]$4  = \$procmux$11467_Y ;
  assign \$8y  = rst_ni;
endmodule

/* src = "rtl/apb_uart/reg_uart_wrap.sv:31.8" */
module \reg_uart_wrap$croc_chip.i_croc_soc.i_croc.i_uart (clk_i, rst_ni, reg_req_i, reg_rsp_o, intr_o, cts_ni, dsr_ni, dcd_ni, rin_ni, sin_i, sout_o, out1_no, out2_no, rts_no, dtr_no);
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:36.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:49.16" */
  input cts_ni;
  wire cts_ni;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:51.16" */
  input dcd_ni;
  wire dcd_ni;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:50.16" */
  input dsr_ni;
  wire dsr_ni;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:48.16" */
  output dtr_no;
  wire dtr_no;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:44.16" */
  output intr_o;
  wire intr_o;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:45.16" */
  output out1_no;
  wire out1_no;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:46.16" */
  output out2_no;
  wire out2_no;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:40.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:41.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:52.16" */
  input rin_ni;
  wire rin_ni;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:37.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:47.16" */
  output rts_no;
  wire rts_no;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:53.16" */
  input sin_i;
  wire sin_i;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:54.16" */
  output sout_o;
  wire sout_o;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:59.22" */
  wire [73:0] uart_apb_req;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:60.22" */
  wire [33:0] uart_apb_rsp;
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:76.12" */
  \apb_uart$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart  i_apb_uart (
    .CLK(clk_i),
    .CTSN(cts_ni),
    .DCDN(dcd_ni),
    .DSRN(dsr_ni),
    .DTRN(dtr_no),
    .INT(intr_o),
    .OUT1N(out1_no),
    .OUT2N(out2_no),
    .PADDR(uart_apb_req[46:44]),
    .PENABLE(uart_apb_req[37]),
    .PRDATA(uart_apb_rsp[32:1]),
    .PREADY(uart_apb_rsp[33]),
    .PSEL(uart_apb_req[38]),
    .PSLVERR(uart_apb_rsp[0]),
    .PWDATA(uart_apb_req[35:4]),
    .PWRITE(uart_apb_req[36]),
    .RIN(rin_ni),
    .RSTN(rst_ni),
    .RTSN(rts_no),
    .SIN(sin_i),
    .SOUT(sout_o)
  );
  /* src = "rtl/apb_uart/reg_uart_wrap.sv:67.5" */
  \reg_to_apb$croc_chip.i_croc_soc.i_croc.i_uart.i_reg_uart_reg_to_apb  i_reg_uart_reg_to_apb (
    .apb_req_o(uart_apb_req),
    .apb_rsp_i(uart_apb_rsp),
    .clk_i(clk_i),
    .reg_req_i(reg_req_i),
    .reg_rsp_o(reg_rsp_o),
    .rst_ni(rst_ni)
  );
endmodule

/* src = "rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb (clk_i, rst_ni, req_o, gnt_i, req_i, idx_o, gnt_o, flush_i, data_i, data_o, rr_i);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [1:0] \$23y ;
  wire \$24y ;
  wire [1:0] \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire [3:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire [1:0] \$34y ;
  wire [70:0] \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire [70:0] \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [70:0] \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$gen_arbiter.rr_q$29 ;
  wire [1:0] \$procmux$6171_Y ;
  wire \$procmux$6172_CMP ;
  wire [3:0] \$procmux$6174_Y ;
  wire \$procmux$6175_CMP ;
  wire \$procmux$6177_Y ;
  wire \$procmux$6178_CMP ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.37-149.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(gnt_i),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.29-149.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(req_o),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:150.29-150.53" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$2  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\gen_arbiter.gen_int_rr.gen_lock.lock_q ),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:218.27-218.67" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$23  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.28-219.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.27-219.62" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$25  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$24y ),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:280.38-280.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$30y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.44-283.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.87" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:285.38-287.78" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$34  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:289.38-289.83" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$35  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.56-290.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.38-290.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:291.38-291.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$39y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$43  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$43y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$46y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$45y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$51y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$55  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$55y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$58y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.rr_q$29 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:231.13-231.26|rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6171  (
    .A(\$25y ),
    .B(2'h0),
    .S(\$procmux$6172_CMP ),
    .Y(\$procmux$6171_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:180.15-180.28|rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6174  (
    .A(\$2y ),
    .B(4'h0),
    .S(\$procmux$6175_CMP ),
    .Y(\$procmux$6174_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:157.15-157.28|rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6177  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6178_CMP ),
    .Y(\$procmux$6177_Y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[0].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$1y ;
  assign \gen_arbiter.req_d  = \$2y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \gen_arbiter.req_d [0];
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$12y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$14y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$16y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$18y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$20y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$22y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$23y ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$25y ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$30y ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$33y ;
  assign \gen_arbiter.index_nodes [1:0] = \$34y ;
  assign \gen_arbiter.data_nodes [70:0] = \$35y ;
  assign \gen_arbiter.gnt_nodes [1] = \$37y ;
  assign \gen_arbiter.gnt_nodes [2] = \$38y ;
  assign \gen_arbiter.req_nodes [1] = \$39y ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$42y ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$43y ;
  assign gnt_o[0] = \$47y ;
  assign gnt_o[1] = \$50y ;
  assign \gen_arbiter.req_nodes [2] = \$51y ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$54y ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$55y ;
  assign gnt_o[2] = \$59y ;
  assign gnt_o[3] = \$62y ;
  assign \$procmux$6172_CMP  = flush_i;
  assign \$gen_arbiter.rr_q$29  = \$procmux$6171_Y ;
  assign \$procmux$6175_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.req_q$10  = \$procmux$6174_Y ;
  assign \$procmux$6178_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6  = \$procmux$6177_Y ;
  assign \$9y  = rst_ni;
  assign \$44y  = 1'h1;
  assign \$45y  = \$37y ;
  assign \$48y  = 1'h1;
  assign \$49y  = \$37y ;
  assign \$56y  = 1'h1;
  assign \$57y  = \$38y ;
  assign \$60y  = 1'h1;
  assign \$61y  = \$38y ;
  assign \$28y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb (clk_i, rst_ni, req_o, gnt_i, req_i, idx_o, gnt_o, flush_i, data_i, data_o, rr_i);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [1:0] \$23y ;
  wire \$24y ;
  wire [1:0] \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire [3:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire [1:0] \$34y ;
  wire [70:0] \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire [70:0] \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [70:0] \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$gen_arbiter.rr_q$29 ;
  wire [1:0] \$procmux$6118_Y ;
  wire \$procmux$6119_CMP ;
  wire [3:0] \$procmux$6121_Y ;
  wire \$procmux$6122_CMP ;
  wire \$procmux$6124_Y ;
  wire \$procmux$6125_CMP ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.37-149.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(gnt_i),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.29-149.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(req_o),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:150.29-150.53" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$2  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\gen_arbiter.gen_int_rr.gen_lock.lock_q ),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:218.27-218.67" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$23  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.28-219.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.27-219.62" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$25  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$24y ),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:280.38-280.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$30y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.44-283.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.87" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:285.38-287.78" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$34  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:289.38-289.83" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$35  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.56-290.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.38-290.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:291.38-291.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$39y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$43  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$43y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$46y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$45y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$51y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$55  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$55y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$58y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.rr_q$29 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:231.13-231.26|rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6118  (
    .A(\$25y ),
    .B(2'h0),
    .S(\$procmux$6119_CMP ),
    .Y(\$procmux$6118_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:180.15-180.28|rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6121  (
    .A(\$2y ),
    .B(4'h0),
    .S(\$procmux$6122_CMP ),
    .Y(\$procmux$6121_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:157.15-157.28|rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6124  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6125_CMP ),
    .Y(\$procmux$6124_Y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[1].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$1y ;
  assign \gen_arbiter.req_d  = \$2y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \gen_arbiter.req_d [0];
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$12y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$14y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$16y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$18y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$20y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$22y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$23y ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$25y ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$30y ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$33y ;
  assign \gen_arbiter.index_nodes [1:0] = \$34y ;
  assign \gen_arbiter.data_nodes [70:0] = \$35y ;
  assign \gen_arbiter.gnt_nodes [1] = \$37y ;
  assign \gen_arbiter.gnt_nodes [2] = \$38y ;
  assign \gen_arbiter.req_nodes [1] = \$39y ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$42y ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$43y ;
  assign gnt_o[0] = \$47y ;
  assign gnt_o[1] = \$50y ;
  assign \gen_arbiter.req_nodes [2] = \$51y ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$54y ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$55y ;
  assign gnt_o[2] = \$59y ;
  assign gnt_o[3] = \$62y ;
  assign \$procmux$6119_CMP  = flush_i;
  assign \$gen_arbiter.rr_q$29  = \$procmux$6118_Y ;
  assign \$procmux$6122_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.req_q$10  = \$procmux$6121_Y ;
  assign \$procmux$6125_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6  = \$procmux$6124_Y ;
  assign \$9y  = rst_ni;
  assign \$44y  = 1'h1;
  assign \$45y  = \$37y ;
  assign \$48y  = 1'h1;
  assign \$49y  = \$37y ;
  assign \$56y  = 1'h1;
  assign \$57y  = \$38y ;
  assign \$60y  = 1'h1;
  assign \$61y  = \$38y ;
  assign \$28y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb (clk_i, rst_ni, req_o, gnt_i, req_i, idx_o, gnt_o, flush_i, data_i, data_o, rr_i);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [1:0] \$23y ;
  wire \$24y ;
  wire [1:0] \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire [3:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire [1:0] \$34y ;
  wire [70:0] \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire [70:0] \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [70:0] \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$gen_arbiter.rr_q$29 ;
  wire [1:0] \$procmux$6065_Y ;
  wire \$procmux$6066_CMP ;
  wire [3:0] \$procmux$6068_Y ;
  wire \$procmux$6069_CMP ;
  wire \$procmux$6071_Y ;
  wire \$procmux$6072_CMP ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.37-149.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(gnt_i),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.29-149.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(req_o),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:150.29-150.53" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$2  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\gen_arbiter.gen_int_rr.gen_lock.lock_q ),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:218.27-218.67" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$23  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.28-219.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.27-219.62" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$25  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$24y ),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:280.38-280.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$30y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.44-283.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.87" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:285.38-287.78" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$34  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:289.38-289.83" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$35  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.56-290.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.38-290.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:291.38-291.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$39y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$43  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$43y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$46y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$45y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$51y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$55  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$55y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$58y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.rr_q$29 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:231.13-231.26|rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6065  (
    .A(\$25y ),
    .B(2'h0),
    .S(\$procmux$6066_CMP ),
    .Y(\$procmux$6065_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:180.15-180.28|rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6068  (
    .A(\$2y ),
    .B(4'h0),
    .S(\$procmux$6069_CMP ),
    .Y(\$procmux$6068_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:157.15-157.28|rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6071  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6072_CMP ),
    .Y(\$procmux$6071_Y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[2].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$1y ;
  assign \gen_arbiter.req_d  = \$2y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \gen_arbiter.req_d [0];
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$12y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$14y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$16y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$18y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$20y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$22y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$23y ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$25y ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$30y ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$33y ;
  assign \gen_arbiter.index_nodes [1:0] = \$34y ;
  assign \gen_arbiter.data_nodes [70:0] = \$35y ;
  assign \gen_arbiter.gnt_nodes [1] = \$37y ;
  assign \gen_arbiter.gnt_nodes [2] = \$38y ;
  assign \gen_arbiter.req_nodes [1] = \$39y ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$42y ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$43y ;
  assign gnt_o[0] = \$47y ;
  assign gnt_o[1] = \$50y ;
  assign \gen_arbiter.req_nodes [2] = \$51y ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$54y ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$55y ;
  assign gnt_o[2] = \$59y ;
  assign gnt_o[3] = \$62y ;
  assign \$procmux$6066_CMP  = flush_i;
  assign \$gen_arbiter.rr_q$29  = \$procmux$6065_Y ;
  assign \$procmux$6069_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.req_q$10  = \$procmux$6068_Y ;
  assign \$procmux$6072_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6  = \$procmux$6071_Y ;
  assign \$9y  = rst_ni;
  assign \$44y  = 1'h1;
  assign \$45y  = \$37y ;
  assign \$48y  = 1'h1;
  assign \$49y  = \$37y ;
  assign \$56y  = 1'h1;
  assign \$57y  = \$38y ;
  assign \$60y  = 1'h1;
  assign \$61y  = \$38y ;
  assign \$28y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb (clk_i, rst_ni, req_o, gnt_i, req_i, idx_o, gnt_o, flush_i, data_i, data_o, rr_i);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [1:0] \$23y ;
  wire \$24y ;
  wire [1:0] \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire [3:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire [1:0] \$34y ;
  wire [70:0] \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire [70:0] \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [70:0] \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$gen_arbiter.rr_q$29 ;
  wire [1:0] \$procmux$6012_Y ;
  wire \$procmux$6013_CMP ;
  wire [3:0] \$procmux$6015_Y ;
  wire \$procmux$6016_CMP ;
  wire \$procmux$6018_Y ;
  wire \$procmux$6019_CMP ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.37-149.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(gnt_i),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.29-149.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(req_o),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:150.29-150.53" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$2  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\gen_arbiter.gen_int_rr.gen_lock.lock_q ),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:218.27-218.67" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$23  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.28-219.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.27-219.62" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$25  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$24y ),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:280.38-280.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$30y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.44-283.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.87" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:285.38-287.78" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$34  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:289.38-289.83" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$35  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.56-290.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.38-290.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:291.38-291.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$39y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$43  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$43y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$46y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$45y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$51y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$55  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$55y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$58y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.rr_q$29 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:231.13-231.26|rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$6012  (
    .A(\$25y ),
    .B(2'h0),
    .S(\$procmux$6013_CMP ),
    .Y(\$procmux$6012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:180.15-180.28|rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$6015  (
    .A(\$2y ),
    .B(4'h0),
    .S(\$procmux$6016_CMP ),
    .Y(\$procmux$6015_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:157.15-157.28|rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$6018  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$6019_CMP ),
    .Y(\$procmux$6018_Y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[3].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$1y ;
  assign \gen_arbiter.req_d  = \$2y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \gen_arbiter.req_d [0];
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$12y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$14y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$16y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$18y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$20y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$22y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$23y ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$25y ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$30y ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$33y ;
  assign \gen_arbiter.index_nodes [1:0] = \$34y ;
  assign \gen_arbiter.data_nodes [70:0] = \$35y ;
  assign \gen_arbiter.gnt_nodes [1] = \$37y ;
  assign \gen_arbiter.gnt_nodes [2] = \$38y ;
  assign \gen_arbiter.req_nodes [1] = \$39y ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$42y ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$43y ;
  assign gnt_o[0] = \$47y ;
  assign gnt_o[1] = \$50y ;
  assign \gen_arbiter.req_nodes [2] = \$51y ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$54y ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$55y ;
  assign gnt_o[2] = \$59y ;
  assign gnt_o[3] = \$62y ;
  assign \$procmux$6013_CMP  = flush_i;
  assign \$gen_arbiter.rr_q$29  = \$procmux$6012_Y ;
  assign \$procmux$6016_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.req_q$10  = \$procmux$6015_Y ;
  assign \$procmux$6019_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6  = \$procmux$6018_Y ;
  assign \$9y  = rst_ni;
  assign \$44y  = 1'h1;
  assign \$45y  = \$37y ;
  assign \$48y  = 1'h1;
  assign \$49y  = \$37y ;
  assign \$56y  = 1'h1;
  assign \$57y  = \$38y ;
  assign \$60y  = 1'h1;
  assign \$61y  = \$38y ;
  assign \$28y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/common_cells/rr_arb_tree.sv:49.8" */
module \rr_arb_tree$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb (clk_i, rst_ni, req_o, gnt_i, req_i, idx_o, gnt_o, flush_i, data_i, data_o, rr_i);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [1:0] \$23y ;
  wire \$24y ;
  wire [1:0] \$25y ;
  wire \$27y ;
  wire \$28y ;
  wire [3:0] \$2y ;
  wire \$30y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire [1:0] \$34y ;
  wire [70:0] \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire [70:0] \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire [70:0] \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  wire \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  wire [3:0] \$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  wire [1:0] \$gen_arbiter.rr_q$29 ;
  wire [1:0] \$procmux$5959_Y ;
  wire \$procmux$5960_CMP ;
  wire [3:0] \$procmux$5962_Y ;
  wire \$procmux$5963_CMP ;
  wire \$procmux$5965_Y ;
  wire \$procmux$5966_CMP ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:89.31" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:103.31" */
  input [283:0] data_i;
  wire [283:0] data_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:109.31" */
  output [70:0] data_o;
  wire [70:0] data_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:93.31" */
  input flush_i;
  wire flush_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:126.33" */
  wire [212:0] \gen_arbiter.data_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.40" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.lower_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.40" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.40" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.53" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:193.27" */
  wire \gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:192.27" */
  wire [1:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:191.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.16" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:146.24" */
  wire \gen_arbiter.gen_int_rr.gen_lock.lock_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:147.27" */
  wire [3:0] \gen_arbiter.gen_int_rr.gen_lock.req_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:142.13" */
  wire [1:0] \gen_arbiter.gen_int_rr.rr_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[0].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[0].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:245.15" */
  wire \gen_arbiter.gen_levels[1].gen_level[1].sel ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:127.33" */
  wire [2:0] \gen_arbiter.gnt_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:125.33" */
  wire [5:0] \gen_arbiter.index_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:131.33" */
  wire [3:0] \gen_arbiter.req_d ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:128.33" */
  wire [2:0] \gen_arbiter.req_nodes ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:130.33" */
  wire [1:0] \gen_arbiter.rr_q ;
  /* src = "rtl/common_cells/rr_arb_tree.sv:107.31" */
  input gnt_i;
  wire gnt_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:100.31" */
  output [3:0] gnt_o;
  wire [3:0] gnt_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:111.31" */
  output [1:0] idx_o;
  wire [1:0] idx_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:97.31" */
  input [3:0] req_i;
  wire [3:0] req_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:105.31" */
  output req_o;
  wire req_o;
  /* src = "rtl/common_cells/rr_arb_tree.sv:95.31" */
  input [1:0] rr_i;
  wire [1:0] rr_i;
  /* src = "rtl/common_cells/rr_arb_tree.sv:91.31" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.37-149.43" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(gnt_i),
    .Y(\$0y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:149.29-149.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(req_o),
    .B(\$0y ),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$11y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$12  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(32'd1),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$13y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [1]),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$15y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$16  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$15y ),
    .Y(\$16y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(32'd2),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$17y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$18  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [2]),
    .S(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.35-196.44" */
  \$gt  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$19y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:150.29-150.53" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$2  (
    .A(req_i),
    .B(\gen_arbiter.gen_int_rr.gen_lock.req_q ),
    .S(\gen_arbiter.gen_int_rr.gen_lock.lock_q ),
    .Y(\$2y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:196.34-196.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$20  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$19y ),
    .Y(\$20y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.35-197.44" */
  \$le  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(32'd3),
    .B({ 30'h00000000, \gen_arbiter.rr_q  }),
    .Y(\$21y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:197.34-197.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(\gen_arbiter.req_d [3]),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:218.27-218.67" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$23  (
    .A(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .S(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .Y(\$23y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.28-219.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(gnt_i),
    .B(req_o),
    .Y(\$24y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:219.27-219.62" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$25  (
    .A(\gen_arbiter.rr_q ),
    .B(\gen_arbiter.gen_int_rr.gen_fair_arb.next_idx ),
    .S(\$24y ),
    .Y(\$25y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(rst_ni),
    .Y(\$27y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:280.38-280.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$30  (
    .A(\gen_arbiter.req_nodes [1]),
    .B(\gen_arbiter.req_nodes [2]),
    .Y(\$30y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(\gen_arbiter.req_nodes [1]),
    .Y(\$31y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.44-283.87" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(\gen_arbiter.req_nodes [2]),
    .B(\gen_arbiter.rr_q [1]),
    .Y(\$32y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:283.25-283.87" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:285.38-287.78" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$34  (
    .A({ 1'h0, \gen_arbiter.index_nodes [2] }),
    .B({ 1'h1, \gen_arbiter.index_nodes [4] }),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$34y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:289.38-289.83" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$35  (
    .A(\gen_arbiter.data_nodes [141:71]),
    .B(\gen_arbiter.data_nodes [212:142]),
    .S(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$35y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.56-290.60" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$36y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:290.38-290.60" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:291.38-291.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\gen_arbiter.gnt_nodes [0]),
    .B(\gen_arbiter.gen_levels[0].gen_level[0].sel ),
    .Y(\$38y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_arbiter.req_d [0]),
    .B(\gen_arbiter.req_d [1]),
    .Y(\$39y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\gen_arbiter.req_d [0]),
    .Y(\$40y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\gen_arbiter.req_d [1]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$41y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(\$40y ),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$43  (
    .A(data_i[70:0]),
    .B(data_i[141:71]),
    .S(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$43y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$46y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(\$45y ),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[0].sel ),
    .Y(\$50y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:254.40-254.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\gen_arbiter.req_d [2]),
    .B(\gen_arbiter.req_d [3]),
    .Y(\$51y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\gen_arbiter.req_d [2]),
    .Y(\$52y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.41-257.79" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\gen_arbiter.req_d [3]),
    .B(\gen_arbiter.rr_q [0]),
    .Y(\$53y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:257.27-257.79" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\$52y ),
    .B(\$53y ),
    .Y(\$54y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:260.40-260.75" */
  \$mux  #(
    .WIDTH(32'd71)
  ) \$55  (
    .A(data_i[212:142]),
    .B(data_i[283:213]),
    .S(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$55y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.87-261.91" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$58y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:261.40-261.91" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\$57y ),
    .B(\$58y ),
    .Y(\$59y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:262.40-262.90" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(\$61y ),
    .B(\gen_arbiter.gen_levels[1].gen_level[1].sel ),
    .Y(\$62y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(rst_ni),
    .Y(\$8y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:152.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.lock_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.lock_q$6 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.lock_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:175.9" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$gen_arbiter.gen_int_rr.gen_lock.req_q  (
    .AD(4'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.gen_int_rr.gen_lock.req_q$10 ),
    .Q(\gen_arbiter.gen_int_rr.gen_lock.req_q )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:226.7" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$gen_arbiter.rr_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_arbiter.rr_q$29 ),
    .Q(\gen_arbiter.rr_q )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:231.13-231.26|rtl/common_cells/rr_arb_tree.sv:230.11-234.14" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5959  (
    .A(\$25y ),
    .B(2'h0),
    .S(\$procmux$5960_CMP ),
    .Y(\$procmux$5959_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:180.15-180.28|rtl/common_cells/rr_arb_tree.sv:179.13-183.16" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5962  (
    .A(\$2y ),
    .B(4'h0),
    .S(\$procmux$5963_CMP ),
    .Y(\$procmux$5962_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/common_cells/rr_arb_tree.sv:157.15-157.28|rtl/common_cells/rr_arb_tree.sv:156.13-160.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5965  (
    .A(\$1y ),
    .B(1'h0),
    .S(\$procmux$5966_CMP ),
    .Y(\$procmux$5965_Y )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:212.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_lower  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_idx ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask )
  );
  /* src = "rtl/common_cells/rr_arb_tree.sv:203.11" */
  \lzc$croc_chip.i_croc_soc.i_croc.i_main_xbar.gen_mux[4].i_mux.i_rr_arb.gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  \gen_arbiter.gen_int_rr.gen_fair_arb.i_lzc_upper  (
    .cnt_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_idx ),
    .empty_o(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_empty ),
    .in_i(\gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask )
  );
  assign req_o = \gen_arbiter.req_nodes [0];
  assign data_o = \gen_arbiter.data_nodes [70:0];
  assign idx_o = \gen_arbiter.index_nodes [1:0];
  assign \gen_arbiter.gen_int_rr.gen_lock.lock_d  = \$1y ;
  assign \gen_arbiter.req_d  = \$2y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [0] = 1'h0;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [0] = \gen_arbiter.req_d [0];
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [1] = \$12y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [1] = \$14y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [2] = \$16y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [2] = \$18y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.upper_mask [3] = \$20y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.lower_mask [3] = \$22y ;
  assign \gen_arbiter.gen_int_rr.gen_fair_arb.next_idx  = \$23y ;
  assign \gen_arbiter.gen_int_rr.rr_d  = \$25y ;
  assign \gen_arbiter.gnt_nodes [0] = gnt_i;
  assign \gen_arbiter.req_nodes [0] = \$30y ;
  assign \gen_arbiter.gen_levels[0].gen_level[0].sel  = \$33y ;
  assign \gen_arbiter.index_nodes [1:0] = \$34y ;
  assign \gen_arbiter.data_nodes [70:0] = \$35y ;
  assign \gen_arbiter.gnt_nodes [1] = \$37y ;
  assign \gen_arbiter.gnt_nodes [2] = \$38y ;
  assign \gen_arbiter.req_nodes [1] = \$39y ;
  assign \gen_arbiter.gen_levels[1].gen_level[0].sel  = \$42y ;
  assign \gen_arbiter.index_nodes [3:2] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[0].sel  };
  assign \gen_arbiter.data_nodes [141:71] = \$43y ;
  assign gnt_o[0] = \$47y ;
  assign gnt_o[1] = \$50y ;
  assign \gen_arbiter.req_nodes [2] = \$51y ;
  assign \gen_arbiter.gen_levels[1].gen_level[1].sel  = \$54y ;
  assign \gen_arbiter.index_nodes [5:4] = { 1'h0, \gen_arbiter.gen_levels[1].gen_level[1].sel  };
  assign \gen_arbiter.data_nodes [212:142] = \$55y ;
  assign gnt_o[2] = \$59y ;
  assign gnt_o[3] = \$62y ;
  assign \$procmux$5960_CMP  = flush_i;
  assign \$gen_arbiter.rr_q$29  = \$procmux$5959_Y ;
  assign \$procmux$5963_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.req_q$10  = \$procmux$5962_Y ;
  assign \$procmux$5966_CMP  = flush_i;
  assign \$gen_arbiter.gen_int_rr.gen_lock.lock_q$6  = \$procmux$5965_Y ;
  assign \$9y  = rst_ni;
  assign \$44y  = 1'h1;
  assign \$45y  = \$37y ;
  assign \$48y  = 1'h1;
  assign \$49y  = \$37y ;
  assign \$56y  = 1'h1;
  assign \$57y  = \$38y ;
  assign \$60y  = 1'h1;
  assign \$61y  = \$38y ;
  assign \$28y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule

/* src = "rtl/common_cells/rstgen.sv:13.8" */
module \rstgen$croc_chip.i_croc_soc.i_rstgen (clk_i, rst_ni, test_mode_i, rst_no, init_no);
  /* src = "rtl/common_cells/rstgen.sv:14.18" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rstgen.sv:18.18" */
  output init_no;
  wire init_no;
  /* src = "rtl/common_cells/rstgen.sv:15.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rstgen.sv:17.18" */
  output rst_no;
  wire rst_no;
  /* src = "rtl/common_cells/rstgen.sv:16.18" */
  input test_mode_i;
  wire test_mode_i;
  /* src = "rtl/common_cells/rstgen.sv:21.19" */
  \rstgen_bypass$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass  i_rstgen_bypass (
    .clk_i(clk_i),
    .init_no(init_no),
    .rst_ni(rst_ni),
    .rst_no(rst_no),
    .rst_test_mode_ni(rst_ni),
    .test_mode_i(test_mode_i)
  );
endmodule

/* src = "rtl/common_cells/rstgen_bypass.sv:15.8" */
module \rstgen_bypass$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass (clk_i, rst_ni, test_mode_i, rst_no, init_no, rst_test_mode_ni);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/rstgen_bypass.sv:18.18" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/common_cells/rstgen_bypass.sv:23.18" */
  output init_no;
  wire init_no;
  /* src = "rtl/common_cells/rstgen_bypass.sv:27.11" */
  wire rst_n;
  /* src = "rtl/common_cells/rstgen_bypass.sv:19.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/rstgen_bypass.sv:22.18" */
  output rst_no;
  wire rst_no;
  /* src = "rtl/common_cells/rstgen_bypass.sv:20.18" */
  input rst_test_mode_ni;
  wire rst_test_mode_ni;
  /* src = "rtl/common_cells/rstgen_bypass.sv:29.25" */
  wire [3:0] synch_regs_q;
  /* src = "rtl/common_cells/rstgen_bypass.sv:21.18" */
  input test_mode_i;
  wire test_mode_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_n),
    .Y(\$1y )
  );
  /* src = "rtl/common_cells/rstgen_bypass.sv:53.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$synch_regs_q  (
    .AD(4'h0),
    .ALOAD(rst_n),
    .CLK(clk_i),
    .D({ synch_regs_q[2:0], 1'h1 }),
    .Q(synch_regs_q)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/rstgen_bypass.sv:46.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_init_no  i_tc_clk_mux2_init_no (
    .clk0_i(synch_regs_q[3]),
    .clk1_i(1'h1),
    .clk_o(init_no),
    .clk_sel_i(test_mode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/rstgen_bypass.sv:32.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_n  i_tc_clk_mux2_rst_n (
    .clk0_i(rst_ni),
    .clk1_i(rst_test_mode_ni),
    .clk_o(rst_n),
    .clk_sel_i(test_mode_i)
  );
  /* keep_hierarchy = 32'd1 */
  /* src = "rtl/common_cells/rstgen_bypass.sv:39.17" */
  \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_no  i_tc_clk_mux2_rst_no (
    .clk0_i(synch_regs_q[3]),
    .clk1_i(rst_test_mode_ni),
    .clk_o(rst_no),
    .clk_sel_i(test_mode_i)
  );
  assign \$2y  = rst_n;
endmodule

/* src = "rtl/apb_uart/slib_clock_div.sv:35.8" */
module \slib_clock_div$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG2 (CLK, Q, RST, CE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire [31:0] \$4y ;
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  wire [2:0] \$iCounter$6 ;
  /* src = "rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  wire [2:0] \$iCounter$8 ;
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  wire \$iQ$5 ;
  /* src = "rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  wire \$iQ$7 ;
  wire [2:0] \$procmux$5735_Y ;
  wire \$procmux$5736_CMP ;
  wire [2:0] \$procmux$5737_Y ;
  wire \$procmux$5738_CMP ;
  wire \$procmux$5740_Y ;
  wire \$procmux$5741_CMP ;
  wire \$procmux$5742_Y ;
  wire \$procmux$5743_CMP ;
  wire [2:0] \$procmux$5745_Y ;
  wire \$procmux$5746_CMP ;
  wire \$procmux$5748_Y ;
  wire \$procmux$5749_CMP ;
  /* src = "rtl/apb_uart/slib_clock_div.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_clock_div.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_clock_div.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_clock_div.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_clock_div.sv:44.27" */
  wire [2:0] iCounter;
  /* src = "rtl/apb_uart/slib_clock_div.sv:43.5" */
  wire iQ;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.12-58.35" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(iCounter),
    .B(3'h7),
    .Y(\$3y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:65.23-65.35" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$4  (
    .A({ 29'h00000000, iCounter }),
    .B(32'd1),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$iCounter  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCounter$8 ),
    .Q(iCounter)
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iQ  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iQ$7 ),
    .Q(iQ)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_clock_div.sv:59.19-62.26|rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5735  (
    .A(\$4y [2:0]),
    .B(3'h0),
    .S(\$procmux$5736_CMP ),
    .Y(\$procmux$5735_Y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26|rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5737  (
    .A(3'hx),
    .B(\$procmux$5735_Y ),
    .S(\$procmux$5738_CMP ),
    .Y(\$procmux$5737_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_clock_div.sv:59.19-62.26|rtl/apb_uart/slib_clock_div.sv:58.7-66.26" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5740  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5741_CMP ),
    .Y(\$procmux$5740_Y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26|rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5742  (
    .A(1'hx),
    .B(\$procmux$5740_Y ),
    .S(\$procmux$5743_CMP ),
    .Y(\$procmux$5742_Y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26|rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5745  (
    .A(iCounter),
    .B(\$iCounter$6 ),
    .S(\$procmux$5746_CMP ),
    .Y(\$procmux$5745_Y )
  );
  /* src = "rtl/apb_uart/slib_clock_div.sv:58.7-66.26|rtl/apb_uart/slib_clock_div.sv:56.5-67.20" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5748  (
    .A(1'h0),
    .B(\$iQ$5 ),
    .S(\$procmux$5749_CMP ),
    .Y(\$procmux$5748_Y )
  );
  assign Q = iQ;
  assign \$procmux$5736_CMP  = \$3y ;
  assign \$procmux$5738_CMP  = \$2y ;
  assign \$iCounter$6  = \$procmux$5737_Y ;
  assign \$procmux$5741_CMP  = \$3y ;
  assign \$procmux$5743_CMP  = \$2y ;
  assign \$iQ$5  = \$procmux$5742_Y ;
  assign \$procmux$5746_CMP  = \$2y ;
  assign \$iCounter$8  = \$procmux$5745_Y ;
  assign \$procmux$5749_CMP  = \$2y ;
  assign \$iQ$7  = \$procmux$5748_Y ;
  assign \$2y  = CE;
endmodule

/* src = "rtl/apb_uart/slib_counter.sv:35.8" */
module \slib_counter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_BRC (CLK, D, Q, RST, CLEAR, LOAD, ENABLE, DOWN, OVERFLOW);
  wire \$12y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire [31:0] \$7y ;
  /* src = "rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  wire [4:0] \$iCounter$10 ;
  /* src = "rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  wire [4:0] \$iCounter$11 ;
  /* src = "rtl/apb_uart/slib_counter.sv:70.11-77.16" */
  wire [4:0] \$iCounter$8 ;
  /* src = "rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  wire [4:0] \$iCounter$9 ;
  /* src = "rtl/apb_uart/slib_counter.sv:80.6-83.11" */
  wire \$iCounter[4]$13 ;
  wire \$procmux$1861_Y ;
  wire \$procmux$1862_CMP ;
  wire [4:0] \$procmux$1864_Y ;
  wire \$procmux$1865_CMP ;
  wire [4:0] \$procmux$1866_Y ;
  wire \$procmux$1867_CMP ;
  wire [4:0] \$procmux$1869_Y ;
  wire \$procmux$1870_CMP ;
  wire [4:0] \$procmux$1872_Y ;
  wire \$procmux$1873_CMP ;
  wire [4:0] \$procmux$1875_Y ;
  wire \$procmux$1876_CMP ;
  wire [4:0] \$procmux$1878_Y ;
  wire \$procmux$1879_CMP ;
  wire [4:0] \$procmux$1881_Y ;
  wire \$procmux$1882_CMP ;
  wire [4:0] \$procmux$1885_Y ;
  wire \$procmux$1886_CMP ;
  wire [4:0] \$procmux$1888_Y ;
  wire \$procmux$1889_CMP ;
  wire [4:0] \$procmux$1892_Y ;
  wire \$procmux$1893_CMP ;
  /* src = "rtl/apb_uart/slib_counter.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/slib_counter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_counter.sv:42.28" */
  input [3:0] D;
  wire [3:0] D;
  /* src = "rtl/apb_uart/slib_counter.sv:41.14" */
  input DOWN;
  wire DOWN;
  /* src = "rtl/apb_uart/slib_counter.sv:40.14" */
  input ENABLE;
  wire ENABLE;
  /* src = "rtl/apb_uart/slib_counter.sv:39.14" */
  input LOAD;
  wire LOAD;
  /* src = "rtl/apb_uart/slib_counter.sv:44.16" */
  output OVERFLOW;
  wire OVERFLOW;
  /* src = "rtl/apb_uart/slib_counter.sv:43.30" */
  output [3:0] Q;
  wire [3:0] Q;
  /* src = "rtl/apb_uart/slib_counter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_counter.sv:48.15" */
  wire [4:0] iCounter;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:70.16-70.29" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(DOWN),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:72.28-72.40" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:76.28-76.40" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$7  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:50.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$iCounter  (
    .AD(5'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ \$iCounter[4]$13 , \$iCounter$11 [3:0] }),
    .Q(iCounter)
  );
  /* src = "rtl/apb_uart/slib_counter.sv:82.11-82.32|rtl/apb_uart/slib_counter.sv:80.6-83.11" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1861  (
    .A(\$iCounter$11 [4]),
    .B(1'h0),
    .S(\$procmux$1862_CMP ),
    .Y(\$procmux$1861_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:72.16-72.41|rtl/apb_uart/slib_counter.sv:70.11-77.16" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1864  (
    .A(\$6y [4:0]),
    .B(\$7y [4:0]),
    .S(DOWN),
    .Y(\$procmux$1864_Y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:70.11-77.16|rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1866  (
    .A(5'hxx),
    .B(\$procmux$1864_Y ),
    .S(\$procmux$1867_CMP ),
    .Y(\$procmux$1866_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:65.11-65.45|rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1869  (
    .A(\$procmux$1866_Y ),
    .B(5'hxx),
    .S(\$procmux$1870_CMP ),
    .Y(\$procmux$1869_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:61.11-61.25|rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1872  (
    .A(\$procmux$1869_Y ),
    .B(5'hxx),
    .S(\$procmux$1873_CMP ),
    .Y(\$procmux$1872_Y )
  );
  /* src = "rtl/apb_uart/slib_counter.sv:70.11-77.16|rtl/apb_uart/slib_counter.sv:68.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1875  (
    .A(iCounter),
    .B(\$iCounter$8 ),
    .S(\$procmux$1876_CMP ),
    .Y(\$procmux$1875_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:65.11-65.45|rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1878  (
    .A(\$procmux$1875_Y ),
    .B(5'hxx),
    .S(\$procmux$1879_CMP ),
    .Y(\$procmux$1878_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:61.11-61.25|rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1881  (
    .A(\$procmux$1878_Y ),
    .B(5'hxx),
    .S(\$procmux$1882_CMP ),
    .Y(\$procmux$1881_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:65.11-65.45|rtl/apb_uart/slib_counter.sv:63.11-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1885  (
    .A(\$iCounter$9 ),
    .B({ 1'h0, D }),
    .S(\$procmux$1886_CMP ),
    .Y(\$procmux$1885_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:61.11-61.25|rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1888  (
    .A(\$procmux$1885_Y ),
    .B(5'hxx),
    .S(\$procmux$1889_CMP ),
    .Y(\$procmux$1888_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_counter.sv:61.11-61.25|rtl/apb_uart/slib_counter.sv:58.6-78.11" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1892  (
    .A(\$iCounter$10 ),
    .B(5'h00),
    .S(\$procmux$1893_CMP ),
    .Y(\$procmux$1892_Y )
  );
  assign Q = iCounter[3:0];
  assign OVERFLOW = iCounter[4];
  assign \$procmux$1862_CMP  = \$12y ;
  assign \$iCounter[4]$13  = \$procmux$1861_Y ;
  assign \$procmux$1865_CMP  = \$5y ;
  assign \$procmux$1867_CMP  = \$4y ;
  assign \$procmux$1870_CMP  = \$3y ;
  assign \$procmux$1873_CMP  = \$2y ;
  assign \$iCounter$8  = \$procmux$1872_Y ;
  assign \$procmux$1876_CMP  = \$4y ;
  assign \$procmux$1879_CMP  = \$3y ;
  assign \$procmux$1882_CMP  = \$2y ;
  assign \$iCounter$9  = \$procmux$1881_Y ;
  assign \$procmux$1886_CMP  = \$3y ;
  assign \$procmux$1889_CMP  = \$2y ;
  assign \$iCounter$10  = \$procmux$1888_Y ;
  assign \$procmux$1893_CMP  = \$2y ;
  assign \$iCounter$11  = \$procmux$1892_Y ;
  assign \$2y  = CLEAR;
  assign \$3y  = LOAD;
  assign \$4y  = ENABLE;
  assign \$12y  = iCounter[4];
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BIDET (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_CTS (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DCD (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_DSR (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_ED_RI (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_FEDET (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC_THRE_ED (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_PEDET (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_edge_detect.sv:35.8" */
module \slib_edge_detect$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RCLK (CLK, D, RST, RE, FE);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:40.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:39.16" */
  output RE;
  wire RE;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_edge_detect.sv:44.5" */
  wire iDd;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.33" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iDd),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$2y ),
    .B(\$3y ),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:59.21-59.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$5  (
    .A(1'h0),
    .B(1'h1),
    .S(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.37-60.47" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:60.21-60.64" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$9  (
    .A(1'h0),
    .B(1'h1),
    .S(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_edge_detect.sv:46.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iDd  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(D),
    .Q(iDd)
  );
  assign RE = \$5y ;
  assign FE = \$9y ;
  assign \$3y  = D;
  assign \$6y  = iDd;
endmodule

/* src = "rtl/apb_uart/slib_fifo.sv:35.8" */
module \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RXFF (CLK, D, FULL, Q, RST, CLEAR, WRITE, READ, EMPTY, USAGE);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [31:0] \$14y ;
  wire \$16y ;
  wire \$19y ;
  wire \$1y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [6:0] \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire [10:0] \$30y ;
  wire [703:0] \$31y ;
  wire [703:0] \$32y ;
  wire [6:0] \$34y ;
  wire \$35y ;
  wire [10:0] \$36y ;
  wire [10:0] \$37y ;
  wire [10:0] \$38y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire [31:0] \$47y ;
  wire \$49y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [31:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [31:0] \$9y ;
  /* src = "rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  wire \$iEMPTY$20 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  wire [703:0] \$iFIFOMem$33 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  wire [6:0] \$iRDAddr$15 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$iRDAddr$18 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  wire [5:0] \$iUSAGE$48 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  wire [5:0] \$iUSAGE$55 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  wire [5:0] \$iUSAGE$56 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  wire [6:0] \$iWRAddr$10 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$iWRAddr$17 ;
  wire [5:0] \$procmux$5673_Y ;
  wire \$procmux$5674_CMP ;
  wire [5:0] \$procmux$5676_Y ;
  wire \$procmux$5677_CMP ;
  wire [5:0] \$procmux$5678_Y ;
  wire \$procmux$5679_CMP ;
  wire [5:0] \$procmux$5681_Y ;
  wire \$procmux$5682_CMP ;
  wire [5:0] \$procmux$5685_Y ;
  wire \$procmux$5686_CMP ;
  wire [703:0] \$procmux$5687_Y ;
  wire \$procmux$5688_CMP ;
  wire \$procmux$5690_Y ;
  wire \$procmux$5691_CMP ;
  wire [6:0] \$procmux$5693_Y ;
  wire \$procmux$5694_CMP ;
  wire [6:0] \$procmux$5696_Y ;
  wire \$procmux$5697_CMP ;
  wire [6:0] \$procmux$5699_Y ;
  wire \$procmux$5700_CMP ;
  wire [6:0] \$procmux$5701_Y ;
  wire \$procmux$5702_CMP ;
  /* src = "rtl/apb_uart/slib_fifo.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/slib_fifo.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_fifo.sv:41.28" */
  input [10:0] D;
  wire [10:0] D;
  /* src = "rtl/apb_uart/slib_fifo.sv:43.16" */
  output EMPTY;
  wire EMPTY;
  /* src = "rtl/apb_uart/slib_fifo.sv:44.16" */
  output FULL;
  wire FULL;
  /* src = "rtl/apb_uart/slib_fifo.sv:42.30" */
  output [10:0] Q;
  wire [10:0] Q;
  /* src = "rtl/apb_uart/slib_fifo.sv:40.14" */
  input READ;
  wire READ;
  /* src = "rtl/apb_uart/slib_fifo.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_fifo.sv:45.31" */
  output [5:0] USAGE;
  wire [5:0] USAGE;
  /* src = "rtl/apb_uart/slib_fifo.sv:39.14" */
  input WRITE;
  wire WRITE;
  /* src = "rtl/apb_uart/slib_fifo.sv:49.5" */
  wire iEMPTY;
  /* src = "rtl/apb_uart/slib_fifo.sv:55.17" */
  wire [703:0] iFIFOMem;
  /* src = "rtl/apb_uart/slib_fifo.sv:50.5" */
  wire iFULL;
  /* src = "rtl/apb_uart/slib_fifo.sv:52.16" */
  wire [6:0] iRDAddr;
  /* src = "rtl/apb_uart/slib_fifo.sv:54.20" */
  wire [5:0] iUSAGE;
  /* src = "rtl/apb_uart/slib_fifo.sv:51.16" */
  wire [6:0] iWRAddr;
  /* src = "rtl/apb_uart/slib_fifo.sv:53.16" */
  wire [6:0] init;
  /* src = "rtl/apb_uart/slib_fifo.sv:57.25-57.72" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(iRDAddr[5:0]),
    .B(iWRAddr[5:0]),
    .Y(\$0y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.79-57.113" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(iRDAddr[6]),
    .B(iWRAddr[6]),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:76.23-76.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(iEMPTY),
    .Y(\$12y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:76.6-76.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:78.18-78.29" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$14  (
    .A({ 25'h0000000, iRDAddr }),
    .B(32'd1),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:89.6-89.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(iRDAddr),
    .B(iWRAddr),
    .Y(\$19y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.24-57.114" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$0y ),
    .B(\$1y ),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(RST),
    .Y(\$22y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:113.26-113.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(iFULL),
    .Y(\$24y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:113.8-113.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(\$23y ),
    .B(\$24y ),
    .Y(\$25y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$26  (
    .A({ 1'h0, iWRAddr[5:0] }),
    .Y(\$26y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(\$26y ),
    .B(7'h40),
    .Y(\$27y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(\$26y ),
    .B(1'h0),
    .Y(\$28y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(\$27y ),
    .B(\$28y ),
    .Y(\$29y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.24-57.131" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$3  (
    .A(1'h0),
    .B(1'h1),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$30  (
    .A(11'h000),
    .B(11'h7ff),
    .S(\$29y ),
    .Y(\$30y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$demux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd11)
  ) \$31  (
    .A(\$30y ),
    .S(\$26y [5:0]),
    .Y(\$31y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$bwmux  #(
    .WIDTH(32'd704)
  ) \$32  (
    .A(iFIFOMem),
    .B({ D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D }),
    .S(\$31y ),
    .Y(\$32y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$34  (
    .A({ 1'h0, iRDAddr[5:0] }),
    .Y(\$34y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$34y ),
    .B(7'h40),
    .Y(\$35y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$bmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd11)
  ) \$36  (
    .A(iFIFOMem),
    .S(\$34y [5:0]),
    .Y(\$36y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$37  (
    .A(11'hxxx),
    .B(\$36y ),
    .S(\$35y ),
    .Y(\$37y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$mux  #(
    .WIDTH(32'd11)
  ) \$38  (
    .A(11'hxxx),
    .B(\$37y ),
    .S(\$34y [6]),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(RST),
    .Y(\$40y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.13-140.26" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(READ),
    .Y(\$42y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.13-140.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$42y ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.49-140.63" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(iFULL),
    .Y(\$45y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.12-140.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$44y ),
    .B(\$45y ),
    .Y(\$46y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:142.21-142.31" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$47  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$47y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.7-145.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(WRITE),
    .Y(\$49y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(RST),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.7-145.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\$49y ),
    .B(\$50y ),
    .Y(\$51y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.43-145.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(iEMPTY),
    .Y(\$52y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.6-145.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\$51y ),
    .B(\$52y ),
    .Y(\$53y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:147.21-147.31" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$54  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$54y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:71.26-71.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(iFULL),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:71.8-71.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:73.18-73.29" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$9  (
    .A({ 25'h0000000, iWRAddr }),
    .B(32'd1),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$Q  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$38y ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iEMPTY  (
    .AD(1'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iEMPTY$20 ),
    .Q(iEMPTY)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[0]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [703:693]),
    .Q(iFIFOMem[703:693])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[10]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [593:583]),
    .Q(iFIFOMem[593:583])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[11]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [582:572]),
    .Q(iFIFOMem[582:572])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[12]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [571:561]),
    .Q(iFIFOMem[571:561])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[13]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [560:550]),
    .Q(iFIFOMem[560:550])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[14]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [549:539]),
    .Q(iFIFOMem[549:539])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[15]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [538:528]),
    .Q(iFIFOMem[538:528])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[16]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [527:517]),
    .Q(iFIFOMem[527:517])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[17]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [516:506]),
    .Q(iFIFOMem[516:506])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[18]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [505:495]),
    .Q(iFIFOMem[505:495])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[19]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [494:484]),
    .Q(iFIFOMem[494:484])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[1]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [692:682]),
    .Q(iFIFOMem[692:682])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[20]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [483:473]),
    .Q(iFIFOMem[483:473])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[21]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [472:462]),
    .Q(iFIFOMem[472:462])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[22]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [461:451]),
    .Q(iFIFOMem[461:451])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[23]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [450:440]),
    .Q(iFIFOMem[450:440])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[24]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [439:429]),
    .Q(iFIFOMem[439:429])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[25]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [428:418]),
    .Q(iFIFOMem[428:418])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[26]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [417:407]),
    .Q(iFIFOMem[417:407])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[27]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [406:396]),
    .Q(iFIFOMem[406:396])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[28]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [395:385]),
    .Q(iFIFOMem[395:385])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[29]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [384:374]),
    .Q(iFIFOMem[384:374])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[2]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [681:671]),
    .Q(iFIFOMem[681:671])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[30]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [373:363]),
    .Q(iFIFOMem[373:363])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[31]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [362:352]),
    .Q(iFIFOMem[362:352])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[32]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [351:341]),
    .Q(iFIFOMem[351:341])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[33]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [340:330]),
    .Q(iFIFOMem[340:330])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[34]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [329:319]),
    .Q(iFIFOMem[329:319])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[35]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [318:308]),
    .Q(iFIFOMem[318:308])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[36]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [307:297]),
    .Q(iFIFOMem[307:297])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[37]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [296:286]),
    .Q(iFIFOMem[296:286])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[38]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [285:275]),
    .Q(iFIFOMem[285:275])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[39]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [274:264]),
    .Q(iFIFOMem[274:264])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[3]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [670:660]),
    .Q(iFIFOMem[670:660])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[40]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [263:253]),
    .Q(iFIFOMem[263:253])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[41]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [252:242]),
    .Q(iFIFOMem[252:242])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[42]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [241:231]),
    .Q(iFIFOMem[241:231])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[43]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [230:220]),
    .Q(iFIFOMem[230:220])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[44]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [219:209]),
    .Q(iFIFOMem[219:209])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[45]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [208:198]),
    .Q(iFIFOMem[208:198])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[46]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [197:187]),
    .Q(iFIFOMem[197:187])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[47]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [186:176]),
    .Q(iFIFOMem[186:176])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[48]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [175:165]),
    .Q(iFIFOMem[175:165])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[49]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [164:154]),
    .Q(iFIFOMem[164:154])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[4]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [659:649]),
    .Q(iFIFOMem[659:649])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[50]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [153:143]),
    .Q(iFIFOMem[153:143])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[51]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [142:132]),
    .Q(iFIFOMem[142:132])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[52]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [131:121]),
    .Q(iFIFOMem[131:121])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[53]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [120:110]),
    .Q(iFIFOMem[120:110])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[54]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [109:99]),
    .Q(iFIFOMem[109:99])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[55]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [98:88]),
    .Q(iFIFOMem[98:88])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[56]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [87:77]),
    .Q(iFIFOMem[87:77])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[57]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [76:66]),
    .Q(iFIFOMem[76:66])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[58]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [65:55]),
    .Q(iFIFOMem[65:55])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[59]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [54:44]),
    .Q(iFIFOMem[54:44])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[5]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [648:638]),
    .Q(iFIFOMem[648:638])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[60]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [43:33]),
    .Q(iFIFOMem[43:33])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[61]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [32:22]),
    .Q(iFIFOMem[32:22])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[62]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [21:11]),
    .Q(iFIFOMem[21:11])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[63]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [10:0]),
    .Q(iFIFOMem[10:0])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[6]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [637:627]),
    .Q(iFIFOMem[637:627])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[7]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [626:616]),
    .Q(iFIFOMem[626:616])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[8]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [615:605]),
    .Q(iFIFOMem[615:605])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd11)
  ) \$driver$iFIFOMem[9]  (
    .AD(11'h000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [604:594]),
    .Q(iFIFOMem[604:594])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iRDAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iRDAddr$18 ),
    .Q(iRDAddr)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:124.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iUSAGE  (
    .AD(6'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iUSAGE$56 ),
    .Q(iUSAGE)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iWRAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iWRAddr$17 ),
    .Q(iWRAddr)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:147.11-147.32|rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5673  (
    .A(\$iUSAGE$48 ),
    .B(\$54y [5:0]),
    .S(\$procmux$5674_CMP ),
    .Y(\$procmux$5673_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5676  (
    .A(\$procmux$5673_Y ),
    .B(6'hxx),
    .S(\$procmux$5677_CMP ),
    .Y(\$procmux$5676_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:142.11-142.32|rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5678  (
    .A(iUSAGE),
    .B(\$47y [5:0]),
    .S(\$procmux$5679_CMP ),
    .Y(\$procmux$5678_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5681  (
    .A(\$procmux$5678_Y ),
    .B(6'hxx),
    .S(\$procmux$5682_CMP ),
    .Y(\$procmux$5681_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5685  (
    .A(\$iUSAGE$55 ),
    .B(6'h00),
    .S(\$procmux$5686_CMP ),
    .Y(\$procmux$5685_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.43|rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  \$mux  #(
    .WIDTH(32'd704)
  ) \$procmux$5687  (
    .A(iFIFOMem),
    .B(\$32y ),
    .S(\$procmux$5688_CMP ),
    .Y(\$procmux$5687_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:91.7-91.23|rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5690  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5691_CMP ),
    .Y(\$procmux$5690_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:82.11-87.10|rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5693  (
    .A(\$iRDAddr$15 ),
    .B(7'h00),
    .S(\$procmux$5694_CMP ),
    .Y(\$procmux$5693_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:82.11-87.10|rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5696  (
    .A(\$iWRAddr$10 ),
    .B(7'h00),
    .S(\$procmux$5697_CMP ),
    .Y(\$procmux$5696_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:78.7-78.30|rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5699  (
    .A(iRDAddr),
    .B(\$14y [6:0]),
    .S(\$procmux$5700_CMP ),
    .Y(\$procmux$5699_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:73.7-73.30|rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5701  (
    .A(iWRAddr),
    .B(\$9y [6:0]),
    .S(\$procmux$5702_CMP ),
    .Y(\$procmux$5701_Y )
  );
  assign iFULL = \$3y ;
  assign EMPTY = iEMPTY;
  assign FULL = iFULL;
  assign USAGE = iUSAGE;
  assign \$procmux$5674_CMP  = \$53y ;
  assign \$procmux$5677_CMP  = \$41y ;
  assign \$iUSAGE$55  = \$procmux$5676_Y ;
  assign \$procmux$5679_CMP  = \$46y ;
  assign \$procmux$5682_CMP  = \$41y ;
  assign \$iUSAGE$48  = \$procmux$5681_Y ;
  assign \$procmux$5686_CMP  = \$41y ;
  assign \$iUSAGE$56  = \$procmux$5685_Y ;
  assign \$procmux$5688_CMP  = \$25y ;
  assign \$iFIFOMem$33  = \$procmux$5687_Y ;
  assign \$procmux$5691_CMP  = \$19y ;
  assign \$iEMPTY$20  = \$procmux$5690_Y ;
  assign \$procmux$5694_CMP  = \$16y ;
  assign \$iRDAddr$18  = \$procmux$5693_Y ;
  assign \$procmux$5697_CMP  = \$16y ;
  assign \$iWRAddr$17  = \$procmux$5696_Y ;
  assign \$procmux$5700_CMP  = \$13y ;
  assign \$iRDAddr$15  = \$procmux$5699_Y ;
  assign \$procmux$5702_CMP  = \$8y ;
  assign \$iWRAddr$10  = \$procmux$5701_Y ;
  assign \$6y  = WRITE;
  assign \$11y  = READ;
  assign \$16y  = CLEAR;
  assign \$43y  = WRITE;
  assign \$50y  = READ;
  assign \$23y  = WRITE;
  assign \$41y  = CLEAR;
endmodule

/* src = "rtl/apb_uart/slib_fifo.sv:35.8" */
module \slib_fifo$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TXFF (CLK, D, FULL, Q, RST, CLEAR, WRITE, READ, EMPTY, USAGE);
  wire \$0y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire [31:0] \$14y ;
  wire \$16y ;
  wire \$19y ;
  wire \$1y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$25y ;
  wire [6:0] \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire [7:0] \$30y ;
  wire [511:0] \$31y ;
  wire [511:0] \$32y ;
  wire [6:0] \$34y ;
  wire \$35y ;
  wire [7:0] \$36y ;
  wire [7:0] \$37y ;
  wire [7:0] \$38y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire [31:0] \$47y ;
  wire \$49y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire [31:0] \$54y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire [31:0] \$9y ;
  /* src = "rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  wire \$iEMPTY$20 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  wire [511:0] \$iFIFOMem$33 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  wire [6:0] \$iRDAddr$15 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$iRDAddr$18 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  wire [5:0] \$iUSAGE$48 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  wire [5:0] \$iUSAGE$55 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  wire [5:0] \$iUSAGE$56 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  wire [6:0] \$iWRAddr$10 ;
  /* src = "rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  wire [6:0] \$iWRAddr$17 ;
  wire [5:0] \$procmux$5704_Y ;
  wire \$procmux$5705_CMP ;
  wire [5:0] \$procmux$5707_Y ;
  wire \$procmux$5708_CMP ;
  wire [5:0] \$procmux$5709_Y ;
  wire \$procmux$5710_CMP ;
  wire [5:0] \$procmux$5712_Y ;
  wire \$procmux$5713_CMP ;
  wire [5:0] \$procmux$5716_Y ;
  wire \$procmux$5717_CMP ;
  wire [511:0] \$procmux$5718_Y ;
  wire \$procmux$5719_CMP ;
  wire \$procmux$5721_Y ;
  wire \$procmux$5722_CMP ;
  wire [6:0] \$procmux$5724_Y ;
  wire \$procmux$5725_CMP ;
  wire [6:0] \$procmux$5727_Y ;
  wire \$procmux$5728_CMP ;
  wire [6:0] \$procmux$5730_Y ;
  wire \$procmux$5731_CMP ;
  wire [6:0] \$procmux$5732_Y ;
  wire \$procmux$5733_CMP ;
  /* src = "rtl/apb_uart/slib_fifo.sv:38.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/slib_fifo.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_fifo.sv:41.28" */
  input [7:0] D;
  wire [7:0] D;
  /* src = "rtl/apb_uart/slib_fifo.sv:43.16" */
  output EMPTY;
  wire EMPTY;
  /* src = "rtl/apb_uart/slib_fifo.sv:44.16" */
  output FULL;
  wire FULL;
  /* src = "rtl/apb_uart/slib_fifo.sv:42.30" */
  output [7:0] Q;
  wire [7:0] Q;
  /* src = "rtl/apb_uart/slib_fifo.sv:40.14" */
  input READ;
  wire READ;
  /* src = "rtl/apb_uart/slib_fifo.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_fifo.sv:45.31" */
  output [5:0] USAGE;
  wire [5:0] USAGE;
  /* src = "rtl/apb_uart/slib_fifo.sv:39.14" */
  input WRITE;
  wire WRITE;
  /* src = "rtl/apb_uart/slib_fifo.sv:49.5" */
  wire iEMPTY;
  /* src = "rtl/apb_uart/slib_fifo.sv:55.17" */
  wire [511:0] iFIFOMem;
  /* src = "rtl/apb_uart/slib_fifo.sv:50.5" */
  wire iFULL;
  /* src = "rtl/apb_uart/slib_fifo.sv:52.16" */
  wire [6:0] iRDAddr;
  /* src = "rtl/apb_uart/slib_fifo.sv:54.20" */
  wire [5:0] iUSAGE;
  /* src = "rtl/apb_uart/slib_fifo.sv:51.16" */
  wire [6:0] iWRAddr;
  /* src = "rtl/apb_uart/slib_fifo.sv:53.16" */
  wire [6:0] init;
  /* src = "rtl/apb_uart/slib_fifo.sv:57.25-57.72" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(iRDAddr[5:0]),
    .B(iWRAddr[5:0]),
    .Y(\$0y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.79-57.113" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(iRDAddr[6]),
    .B(iWRAddr[6]),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:76.23-76.38" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(iEMPTY),
    .Y(\$12y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:76.6-76.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(\$11y ),
    .B(\$12y ),
    .Y(\$13y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:78.18-78.29" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$14  (
    .A({ 25'h0000000, iRDAddr }),
    .B(32'd1),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:89.6-89.24" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(iRDAddr),
    .B(iWRAddr),
    .Y(\$19y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.24-57.114" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$0y ),
    .B(\$1y ),
    .Y(\$2y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(RST),
    .Y(\$22y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:113.26-113.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(iFULL),
    .Y(\$24y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:113.8-113.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(\$23y ),
    .B(\$24y ),
    .Y(\$25y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$26  (
    .A({ 1'h0, iWRAddr[5:0] }),
    .Y(\$26y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(\$26y ),
    .B(7'h40),
    .Y(\$27y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(\$26y ),
    .B(1'h0),
    .Y(\$28y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(\$27y ),
    .B(\$28y ),
    .Y(\$29y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:57.24-57.131" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$3  (
    .A(1'h0),
    .B(1'h1),
    .S(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$30  (
    .A(8'h00),
    .B(8'hff),
    .S(\$29y ),
    .Y(\$30y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$demux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd8)
  ) \$31  (
    .A(\$30y ),
    .S(\$26y [5:0]),
    .Y(\$31y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.42" */
  \$bwmux  #(
    .WIDTH(32'd512)
  ) \$32  (
    .A(iFIFOMem),
    .B({ D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D, D }),
    .S(\$31y ),
    .Y(\$32y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd7),
    .Y_WIDTH(32'd7)
  ) \$34  (
    .A({ 1'h0, iRDAddr[5:0] }),
    .Y(\$34y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd7),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd7),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(\$34y ),
    .B(7'h40),
    .Y(\$35y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$bmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd8)
  ) \$36  (
    .A(iFIFOMem),
    .S(\$34y [5:0]),
    .Y(\$36y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$37  (
    .A(8'hxx),
    .B(\$36y ),
    .S(\$35y ),
    .Y(\$37y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:118.6-118.37" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$38  (
    .A(8'hxx),
    .B(\$37y ),
    .S(\$34y [6]),
    .Y(\$38y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(RST),
    .Y(\$40y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.13-140.26" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(READ),
    .Y(\$42y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.13-140.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$42y ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.49-140.63" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(iFULL),
    .Y(\$45y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:140.12-140.63" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$44y ),
    .B(\$45y ),
    .Y(\$46y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:142.21-142.31" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$47  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$47y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.7-145.21" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(WRITE),
    .Y(\$49y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(RST),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.7-145.38" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\$49y ),
    .B(\$50y ),
    .Y(\$51y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.43-145.58" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(iEMPTY),
    .Y(\$52y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:145.6-145.58" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(\$51y ),
    .B(\$52y ),
    .Y(\$53y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:147.21-147.31" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$54  (
    .A({ 26'h0000000, iUSAGE }),
    .B(32'd1),
    .Y(\$54y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:71.26-71.40" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(iFULL),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:71.8-71.40" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:73.18-73.29" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$9  (
    .A({ 25'h0000000, iWRAddr }),
    .B(32'd1),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$Q  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$38y ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iEMPTY  (
    .AD(1'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iEMPTY$20 ),
    .Q(iEMPTY)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[0]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [511:504]),
    .Q(iFIFOMem[511:504])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[10]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [431:424]),
    .Q(iFIFOMem[431:424])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[11]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [423:416]),
    .Q(iFIFOMem[423:416])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[12]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [415:408]),
    .Q(iFIFOMem[415:408])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[13]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [407:400]),
    .Q(iFIFOMem[407:400])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[14]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [399:392]),
    .Q(iFIFOMem[399:392])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[15]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [391:384]),
    .Q(iFIFOMem[391:384])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[16]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [383:376]),
    .Q(iFIFOMem[383:376])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[17]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [375:368]),
    .Q(iFIFOMem[375:368])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[18]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [367:360]),
    .Q(iFIFOMem[367:360])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[19]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [359:352]),
    .Q(iFIFOMem[359:352])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[1]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [503:496]),
    .Q(iFIFOMem[503:496])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[20]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [351:344]),
    .Q(iFIFOMem[351:344])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[21]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [343:336]),
    .Q(iFIFOMem[343:336])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[22]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [335:328]),
    .Q(iFIFOMem[335:328])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[23]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [327:320]),
    .Q(iFIFOMem[327:320])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[24]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [319:312]),
    .Q(iFIFOMem[319:312])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[25]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [311:304]),
    .Q(iFIFOMem[311:304])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[26]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [303:296]),
    .Q(iFIFOMem[303:296])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[27]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [295:288]),
    .Q(iFIFOMem[295:288])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[28]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [287:280]),
    .Q(iFIFOMem[287:280])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[29]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [279:272]),
    .Q(iFIFOMem[279:272])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[2]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [495:488]),
    .Q(iFIFOMem[495:488])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[30]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [271:264]),
    .Q(iFIFOMem[271:264])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[31]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [263:256]),
    .Q(iFIFOMem[263:256])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[32]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [255:248]),
    .Q(iFIFOMem[255:248])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[33]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [247:240]),
    .Q(iFIFOMem[247:240])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[34]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [239:232]),
    .Q(iFIFOMem[239:232])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[35]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [231:224]),
    .Q(iFIFOMem[231:224])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[36]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [223:216]),
    .Q(iFIFOMem[223:216])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[37]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [215:208]),
    .Q(iFIFOMem[215:208])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[38]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [207:200]),
    .Q(iFIFOMem[207:200])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[39]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [199:192]),
    .Q(iFIFOMem[199:192])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[3]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [487:480]),
    .Q(iFIFOMem[487:480])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[40]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [191:184]),
    .Q(iFIFOMem[191:184])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[41]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [183:176]),
    .Q(iFIFOMem[183:176])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[42]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [175:168]),
    .Q(iFIFOMem[175:168])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[43]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [167:160]),
    .Q(iFIFOMem[167:160])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[44]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [159:152]),
    .Q(iFIFOMem[159:152])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[45]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [151:144]),
    .Q(iFIFOMem[151:144])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[46]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [143:136]),
    .Q(iFIFOMem[143:136])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[47]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [135:128]),
    .Q(iFIFOMem[135:128])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[48]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [127:120]),
    .Q(iFIFOMem[127:120])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[49]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [119:112]),
    .Q(iFIFOMem[119:112])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[4]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [479:472]),
    .Q(iFIFOMem[479:472])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[50]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [111:104]),
    .Q(iFIFOMem[111:104])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[51]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [103:96]),
    .Q(iFIFOMem[103:96])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[52]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [95:88]),
    .Q(iFIFOMem[95:88])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[53]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [87:80]),
    .Q(iFIFOMem[87:80])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[54]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [79:72]),
    .Q(iFIFOMem[79:72])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[55]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [71:64]),
    .Q(iFIFOMem[71:64])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[56]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [63:56]),
    .Q(iFIFOMem[63:56])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[57]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [55:48]),
    .Q(iFIFOMem[55:48])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[58]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [47:40]),
    .Q(iFIFOMem[47:40])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[59]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [39:32]),
    .Q(iFIFOMem[39:32])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[5]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [471:464]),
    .Q(iFIFOMem[471:464])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[60]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [31:24]),
    .Q(iFIFOMem[31:24])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[61]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [23:16]),
    .Q(iFIFOMem[23:16])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[62]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [15:8]),
    .Q(iFIFOMem[15:8])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[63]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [7:0]),
    .Q(iFIFOMem[7:0])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[6]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [463:456]),
    .Q(iFIFOMem[463:456])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[7]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [455:448]),
    .Q(iFIFOMem[455:448])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[8]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [447:440]),
    .Q(iFIFOMem[447:440])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iFIFOMem[9]  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFIFOMem$33 [439:432]),
    .Q(iFIFOMem[439:432])
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iRDAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iRDAddr$18 ),
    .Q(iRDAddr)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:124.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd6)
  ) \$driver$iUSAGE  (
    .AD(6'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iUSAGE$56 ),
    .Q(iUSAGE)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:59.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd7)
  ) \$driver$iWRAddr  (
    .AD(7'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iWRAddr$17 ),
    .Q(iWRAddr)
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:147.11-147.32|rtl/apb_uart/slib_fifo.sv:145.1-148.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5704  (
    .A(\$iUSAGE$48 ),
    .B(\$54y [5:0]),
    .S(\$procmux$5705_CMP ),
    .Y(\$procmux$5704_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5707  (
    .A(\$procmux$5704_Y ),
    .B(6'hxx),
    .S(\$procmux$5708_CMP ),
    .Y(\$procmux$5707_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:142.11-142.32|rtl/apb_uart/slib_fifo.sv:140.7-143.26" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5709  (
    .A(iUSAGE),
    .B(\$47y [5:0]),
    .S(\$procmux$5710_CMP ),
    .Y(\$procmux$5709_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5712  (
    .A(\$procmux$5709_Y ),
    .B(6'hxx),
    .S(\$procmux$5713_CMP ),
    .Y(\$procmux$5712_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:136.1-136.13|rtl/apb_uart/slib_fifo.sv:133.3-150.10" */
  \$mux  #(
    .WIDTH(32'd6)
  ) \$procmux$5716  (
    .A(\$iUSAGE$55 ),
    .B(6'h00),
    .S(\$procmux$5717_CMP ),
    .Y(\$procmux$5716_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:115.8-115.43|rtl/apb_uart/slib_fifo.sv:113.3-116.8" */
  \$mux  #(
    .WIDTH(32'd512)
  ) \$procmux$5718  (
    .A(iFIFOMem),
    .B(\$32y ),
    .S(\$procmux$5719_CMP ),
    .Y(\$procmux$5718_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_fifo.sv:91.7-91.23|rtl/apb_uart/slib_fifo.sv:89.1-96.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5721  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5722_CMP ),
    .Y(\$procmux$5721_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:82.11-87.10|rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5724  (
    .A(\$iRDAddr$15 ),
    .B(7'h00),
    .S(\$procmux$5725_CMP ),
    .Y(\$procmux$5724_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:82.11-87.10|rtl/apb_uart/slib_fifo.sv:81.1-87.10" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5727  (
    .A(\$iWRAddr$10 ),
    .B(7'h00),
    .S(\$procmux$5728_CMP ),
    .Y(\$procmux$5727_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:78.7-78.30|rtl/apb_uart/slib_fifo.sv:76.1-79.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5730  (
    .A(iRDAddr),
    .B(\$14y [6:0]),
    .S(\$procmux$5731_CMP ),
    .Y(\$procmux$5730_Y )
  );
  /* src = "rtl/apb_uart/slib_fifo.sv:73.7-73.30|rtl/apb_uart/slib_fifo.sv:71.3-74.18" */
  \$mux  #(
    .WIDTH(32'd7)
  ) \$procmux$5732  (
    .A(iWRAddr),
    .B(\$9y [6:0]),
    .S(\$procmux$5733_CMP ),
    .Y(\$procmux$5732_Y )
  );
  assign iFULL = \$3y ;
  assign EMPTY = iEMPTY;
  assign FULL = iFULL;
  assign USAGE = iUSAGE;
  assign \$procmux$5705_CMP  = \$53y ;
  assign \$procmux$5708_CMP  = \$41y ;
  assign \$iUSAGE$55  = \$procmux$5707_Y ;
  assign \$procmux$5710_CMP  = \$46y ;
  assign \$procmux$5713_CMP  = \$41y ;
  assign \$iUSAGE$48  = \$procmux$5712_Y ;
  assign \$procmux$5717_CMP  = \$41y ;
  assign \$iUSAGE$56  = \$procmux$5716_Y ;
  assign \$procmux$5719_CMP  = \$25y ;
  assign \$iFIFOMem$33  = \$procmux$5718_Y ;
  assign \$procmux$5722_CMP  = \$19y ;
  assign \$iEMPTY$20  = \$procmux$5721_Y ;
  assign \$procmux$5725_CMP  = \$16y ;
  assign \$iRDAddr$18  = \$procmux$5724_Y ;
  assign \$procmux$5728_CMP  = \$16y ;
  assign \$iWRAddr$17  = \$procmux$5727_Y ;
  assign \$procmux$5731_CMP  = \$13y ;
  assign \$iRDAddr$15  = \$procmux$5730_Y ;
  assign \$procmux$5733_CMP  = \$8y ;
  assign \$iWRAddr$10  = \$procmux$5732_Y ;
  assign \$6y  = WRITE;
  assign \$11y  = READ;
  assign \$16y  = CLEAR;
  assign \$43y  = WRITE;
  assign \$50y  = READ;
  assign \$23y  = WRITE;
  assign \$41y  = CLEAR;
endmodule

/* src = "rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_CTS (CLK, D, Q, RST, CE);
  wire [31:0] \$10y ;
  wire \$14y ;
  wire \$15y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$Q$16 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$Q$17 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$iCount$11 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$iCount$12 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$iCount$13 ;
  wire \$procmux$5889_Y ;
  wire \$procmux$5890_CMP ;
  wire \$procmux$5892_Y ;
  wire \$procmux$5893_CMP ;
  wire \$procmux$5896_Y ;
  wire \$procmux$5897_CMP ;
  wire [1:0] \$procmux$5898_Y ;
  wire \$procmux$5899_CMP ;
  wire [1:0] \$procmux$5901_Y ;
  wire \$procmux$5902_CMP ;
  wire [1:0] \$procmux$5903_Y ;
  wire \$procmux$5904_CMP ;
  wire [1:0] \$procmux$5907_Y ;
  wire \$procmux$5908_CMP ;
  wire [1:0] \$procmux$5909_Y ;
  wire \$procmux$5910_CMP ;
  wire [1:0] \$procmux$5912_Y ;
  wire \$procmux$5913_CMP ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.31-64.41" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$10  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.16-68.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(iCount),
    .B(2'h2),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.25-72.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(iCount),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.37-58.51" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iCount),
    .B(2'h2),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.20-58.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.31-60.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.34-62.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.50-62.61" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(iCount),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.33-62.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$Q$17 ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCount$13 ),
    .Q(iCount)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:74.16-74.27|rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5889  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$5890_CMP ),
    .Y(\$procmux$5889_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5892  (
    .A(\$procmux$5889_Y ),
    .B(1'hx),
    .S(\$procmux$5893_CMP ),
    .Y(\$procmux$5892_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5896  (
    .A(\$Q$16 ),
    .B(1'h1),
    .S(\$procmux$5897_CMP ),
    .Y(\$procmux$5896_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.21-64.42|rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5898  (
    .A(iCount),
    .B(\$10y [1:0]),
    .S(\$procmux$5899_CMP ),
    .Y(\$procmux$5898_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5901  (
    .A(\$procmux$5898_Y ),
    .B(2'hx),
    .S(\$procmux$5902_CMP ),
    .Y(\$procmux$5901_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5903  (
    .A(2'hx),
    .B(\$procmux$5901_Y ),
    .S(\$procmux$5904_CMP ),
    .Y(\$procmux$5903_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5907  (
    .A(\$iCount$11 ),
    .B(\$6y [1:0]),
    .S(\$procmux$5908_CMP ),
    .Y(\$procmux$5907_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5909  (
    .A(2'hx),
    .B(\$procmux$5907_Y ),
    .S(\$procmux$5910_CMP ),
    .Y(\$procmux$5909_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5912  (
    .A(iCount),
    .B(\$iCount$12 ),
    .S(\$procmux$5913_CMP ),
    .Y(\$procmux$5912_Y )
  );
  assign \$procmux$5890_CMP  = \$15y ;
  assign \$procmux$5893_CMP  = \$14y ;
  assign \$Q$16  = \$procmux$5892_Y ;
  assign \$procmux$5897_CMP  = \$14y ;
  assign \$Q$17  = \$procmux$5896_Y ;
  assign \$procmux$5899_CMP  = \$9y ;
  assign \$procmux$5902_CMP  = \$5y ;
  assign \$procmux$5904_CMP  = \$2y ;
  assign \$iCount$11  = \$procmux$5903_Y ;
  assign \$procmux$5908_CMP  = \$5y ;
  assign \$procmux$5910_CMP  = \$2y ;
  assign \$iCount$12  = \$procmux$5909_Y ;
  assign \$procmux$5913_CMP  = \$2y ;
  assign \$iCount$13  = \$procmux$5912_Y ;
  assign \$2y  = CE;
  assign \$3y  = D;
endmodule

/* src = "rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DCD (CLK, D, Q, RST, CE);
  wire [31:0] \$10y ;
  wire \$14y ;
  wire \$15y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$Q$16 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$Q$17 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$iCount$11 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$iCount$12 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$iCount$13 ;
  wire \$procmux$5839_Y ;
  wire \$procmux$5840_CMP ;
  wire \$procmux$5842_Y ;
  wire \$procmux$5843_CMP ;
  wire \$procmux$5846_Y ;
  wire \$procmux$5847_CMP ;
  wire [1:0] \$procmux$5848_Y ;
  wire \$procmux$5849_CMP ;
  wire [1:0] \$procmux$5851_Y ;
  wire \$procmux$5852_CMP ;
  wire [1:0] \$procmux$5853_Y ;
  wire \$procmux$5854_CMP ;
  wire [1:0] \$procmux$5857_Y ;
  wire \$procmux$5858_CMP ;
  wire [1:0] \$procmux$5859_Y ;
  wire \$procmux$5860_CMP ;
  wire [1:0] \$procmux$5862_Y ;
  wire \$procmux$5863_CMP ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.31-64.41" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$10  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.16-68.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(iCount),
    .B(2'h2),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.25-72.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(iCount),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.37-58.51" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iCount),
    .B(2'h2),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.20-58.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.31-60.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.34-62.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.50-62.61" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(iCount),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.33-62.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$Q$17 ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCount$13 ),
    .Q(iCount)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:74.16-74.27|rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5839  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$5840_CMP ),
    .Y(\$procmux$5839_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5842  (
    .A(\$procmux$5839_Y ),
    .B(1'hx),
    .S(\$procmux$5843_CMP ),
    .Y(\$procmux$5842_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5846  (
    .A(\$Q$16 ),
    .B(1'h1),
    .S(\$procmux$5847_CMP ),
    .Y(\$procmux$5846_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.21-64.42|rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5848  (
    .A(iCount),
    .B(\$10y [1:0]),
    .S(\$procmux$5849_CMP ),
    .Y(\$procmux$5848_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5851  (
    .A(\$procmux$5848_Y ),
    .B(2'hx),
    .S(\$procmux$5852_CMP ),
    .Y(\$procmux$5851_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5853  (
    .A(2'hx),
    .B(\$procmux$5851_Y ),
    .S(\$procmux$5854_CMP ),
    .Y(\$procmux$5853_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5857  (
    .A(\$iCount$11 ),
    .B(\$6y [1:0]),
    .S(\$procmux$5858_CMP ),
    .Y(\$procmux$5857_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5859  (
    .A(2'hx),
    .B(\$procmux$5857_Y ),
    .S(\$procmux$5860_CMP ),
    .Y(\$procmux$5859_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5862  (
    .A(iCount),
    .B(\$iCount$12 ),
    .S(\$procmux$5863_CMP ),
    .Y(\$procmux$5862_Y )
  );
  assign \$procmux$5840_CMP  = \$15y ;
  assign \$procmux$5843_CMP  = \$14y ;
  assign \$Q$16  = \$procmux$5842_Y ;
  assign \$procmux$5847_CMP  = \$14y ;
  assign \$Q$17  = \$procmux$5846_Y ;
  assign \$procmux$5849_CMP  = \$9y ;
  assign \$procmux$5852_CMP  = \$5y ;
  assign \$procmux$5854_CMP  = \$2y ;
  assign \$iCount$11  = \$procmux$5853_Y ;
  assign \$procmux$5858_CMP  = \$5y ;
  assign \$procmux$5860_CMP  = \$2y ;
  assign \$iCount$12  = \$procmux$5859_Y ;
  assign \$procmux$5863_CMP  = \$2y ;
  assign \$iCount$13  = \$procmux$5862_Y ;
  assign \$2y  = CE;
  assign \$3y  = D;
endmodule

/* src = "rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_DSR (CLK, D, Q, RST, CE);
  wire [31:0] \$10y ;
  wire \$14y ;
  wire \$15y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$Q$16 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$Q$17 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$iCount$11 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$iCount$12 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$iCount$13 ;
  wire \$procmux$5864_Y ;
  wire \$procmux$5865_CMP ;
  wire \$procmux$5867_Y ;
  wire \$procmux$5868_CMP ;
  wire \$procmux$5871_Y ;
  wire \$procmux$5872_CMP ;
  wire [1:0] \$procmux$5873_Y ;
  wire \$procmux$5874_CMP ;
  wire [1:0] \$procmux$5876_Y ;
  wire \$procmux$5877_CMP ;
  wire [1:0] \$procmux$5878_Y ;
  wire \$procmux$5879_CMP ;
  wire [1:0] \$procmux$5882_Y ;
  wire \$procmux$5883_CMP ;
  wire [1:0] \$procmux$5884_Y ;
  wire \$procmux$5885_CMP ;
  wire [1:0] \$procmux$5887_Y ;
  wire \$procmux$5888_CMP ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.31-64.41" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$10  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.16-68.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(iCount),
    .B(2'h2),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.25-72.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(iCount),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.37-58.51" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iCount),
    .B(2'h2),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.20-58.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.31-60.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.34-62.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.50-62.61" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(iCount),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.33-62.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$Q$17 ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCount$13 ),
    .Q(iCount)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:74.16-74.27|rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5864  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$5865_CMP ),
    .Y(\$procmux$5864_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5867  (
    .A(\$procmux$5864_Y ),
    .B(1'hx),
    .S(\$procmux$5868_CMP ),
    .Y(\$procmux$5867_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5871  (
    .A(\$Q$16 ),
    .B(1'h1),
    .S(\$procmux$5872_CMP ),
    .Y(\$procmux$5871_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.21-64.42|rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5873  (
    .A(iCount),
    .B(\$10y [1:0]),
    .S(\$procmux$5874_CMP ),
    .Y(\$procmux$5873_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5876  (
    .A(\$procmux$5873_Y ),
    .B(2'hx),
    .S(\$procmux$5877_CMP ),
    .Y(\$procmux$5876_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5878  (
    .A(2'hx),
    .B(\$procmux$5876_Y ),
    .S(\$procmux$5879_CMP ),
    .Y(\$procmux$5878_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5882  (
    .A(\$iCount$11 ),
    .B(\$6y [1:0]),
    .S(\$procmux$5883_CMP ),
    .Y(\$procmux$5882_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5884  (
    .A(2'hx),
    .B(\$procmux$5882_Y ),
    .S(\$procmux$5885_CMP ),
    .Y(\$procmux$5884_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5887  (
    .A(iCount),
    .B(\$iCount$12 ),
    .S(\$procmux$5888_CMP ),
    .Y(\$procmux$5887_Y )
  );
  assign \$procmux$5865_CMP  = \$15y ;
  assign \$procmux$5868_CMP  = \$14y ;
  assign \$Q$16  = \$procmux$5867_Y ;
  assign \$procmux$5872_CMP  = \$14y ;
  assign \$Q$17  = \$procmux$5871_Y ;
  assign \$procmux$5874_CMP  = \$9y ;
  assign \$procmux$5877_CMP  = \$5y ;
  assign \$procmux$5879_CMP  = \$2y ;
  assign \$iCount$11  = \$procmux$5878_Y ;
  assign \$procmux$5883_CMP  = \$5y ;
  assign \$procmux$5885_CMP  = \$2y ;
  assign \$iCount$12  = \$procmux$5884_Y ;
  assign \$procmux$5888_CMP  = \$2y ;
  assign \$iCount$13  = \$procmux$5887_Y ;
  assign \$2y  = CE;
  assign \$3y  = D;
endmodule

/* src = "rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IF_RI (CLK, D, Q, RST, CE);
  wire [31:0] \$10y ;
  wire \$14y ;
  wire \$15y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$Q$16 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$Q$17 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [1:0] \$iCount$11 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [1:0] \$iCount$12 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [1:0] \$iCount$13 ;
  wire \$procmux$5814_Y ;
  wire \$procmux$5815_CMP ;
  wire \$procmux$5817_Y ;
  wire \$procmux$5818_CMP ;
  wire \$procmux$5821_Y ;
  wire \$procmux$5822_CMP ;
  wire [1:0] \$procmux$5823_Y ;
  wire \$procmux$5824_CMP ;
  wire [1:0] \$procmux$5826_Y ;
  wire \$procmux$5827_CMP ;
  wire [1:0] \$procmux$5828_Y ;
  wire \$procmux$5829_CMP ;
  wire [1:0] \$procmux$5832_Y ;
  wire \$procmux$5833_CMP ;
  wire [1:0] \$procmux$5834_Y ;
  wire \$procmux$5835_CMP ;
  wire [1:0] \$procmux$5837_Y ;
  wire \$procmux$5838_CMP ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [1:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.31-64.41" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$10  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.16-68.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(iCount),
    .B(2'h2),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.25-72.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(iCount),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.37-58.51" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iCount),
    .B(2'h2),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.20-58.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.31-60.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 30'h00000000, iCount }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.34-62.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.50-62.61" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(iCount),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.33-62.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$Q$17 ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iCount  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCount$13 ),
    .Q(iCount)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:74.16-74.27|rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5814  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$5815_CMP ),
    .Y(\$procmux$5814_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5817  (
    .A(\$procmux$5814_Y ),
    .B(1'hx),
    .S(\$procmux$5818_CMP ),
    .Y(\$procmux$5817_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5821  (
    .A(\$Q$16 ),
    .B(1'h1),
    .S(\$procmux$5822_CMP ),
    .Y(\$procmux$5821_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.21-64.42|rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5823  (
    .A(iCount),
    .B(\$10y [1:0]),
    .S(\$procmux$5824_CMP ),
    .Y(\$procmux$5823_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5826  (
    .A(\$procmux$5823_Y ),
    .B(2'hx),
    .S(\$procmux$5827_CMP ),
    .Y(\$procmux$5826_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5828  (
    .A(2'hx),
    .B(\$procmux$5826_Y ),
    .S(\$procmux$5829_CMP ),
    .Y(\$procmux$5828_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5832  (
    .A(\$iCount$11 ),
    .B(\$6y [1:0]),
    .S(\$procmux$5833_CMP ),
    .Y(\$procmux$5832_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5834  (
    .A(2'hx),
    .B(\$procmux$5832_Y ),
    .S(\$procmux$5835_CMP ),
    .Y(\$procmux$5834_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$5837  (
    .A(iCount),
    .B(\$iCount$12 ),
    .S(\$procmux$5838_CMP ),
    .Y(\$procmux$5837_Y )
  );
  assign \$procmux$5815_CMP  = \$15y ;
  assign \$procmux$5818_CMP  = \$14y ;
  assign \$Q$16  = \$procmux$5817_Y ;
  assign \$procmux$5822_CMP  = \$14y ;
  assign \$Q$17  = \$procmux$5821_Y ;
  assign \$procmux$5824_CMP  = \$9y ;
  assign \$procmux$5827_CMP  = \$5y ;
  assign \$procmux$5829_CMP  = \$2y ;
  assign \$iCount$11  = \$procmux$5828_Y ;
  assign \$procmux$5833_CMP  = \$5y ;
  assign \$procmux$5835_CMP  = \$2y ;
  assign \$iCount$12  = \$procmux$5834_Y ;
  assign \$procmux$5838_CMP  = \$2y ;
  assign \$iCount$13  = \$procmux$5837_Y ;
  assign \$2y  = CE;
  assign \$3y  = D;
endmodule

/* src = "rtl/apb_uart/slib_input_filter.sv:35.8" */
module \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_IFSB (CLK, D, Q, RST, CE);
  wire [31:0] \$10y ;
  wire \$14y ;
  wire \$15y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  wire \$Q$16 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  wire \$Q$17 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  wire [2:0] \$iCount$11 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  wire [2:0] \$iCount$12 ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  wire [2:0] \$iCount$13 ;
  wire \$procmux$1817_Y ;
  wire \$procmux$1818_CMP ;
  wire \$procmux$1820_Y ;
  wire \$procmux$1821_CMP ;
  wire \$procmux$1824_Y ;
  wire \$procmux$1825_CMP ;
  wire [2:0] \$procmux$1826_Y ;
  wire \$procmux$1827_CMP ;
  wire [2:0] \$procmux$1829_Y ;
  wire \$procmux$1830_CMP ;
  wire [2:0] \$procmux$1831_Y ;
  wire \$procmux$1832_CMP ;
  wire [2:0] \$procmux$1835_Y ;
  wire \$procmux$1836_CMP ;
  wire [2:0] \$procmux$1837_Y ;
  wire \$procmux$1838_CMP ;
  wire [2:0] \$procmux$1840_Y ;
  wire \$procmux$1841_CMP ;
  /* src = "rtl/apb_uart/slib_input_filter.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/slib_input_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_filter.sv:39.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_filter.sv:40.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_filter.sv:45.26" */
  wire [2:0] iCount;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.31-64.41" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$10  (
    .A({ 29'h00000000, iCount }),
    .B(32'd1),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:68.16-68.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(iCount),
    .B(3'h4),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:72.25-72.36" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(iCount),
    .Y(\$15y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.37-58.51" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iCount),
    .B(3'h4),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.20-58.52" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.31-60.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 29'h00000000, iCount }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.34-62.44" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(D),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.50-62.61" */
  \$reduce_bool  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(iCount),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:62.33-62.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$7y ),
    .B(\$8y ),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$Q  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$Q$17 ),
    .Q(Q)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$iCount  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCount$13 ),
    .Q(iCount)
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:74.16-74.27|rtl/apb_uart/slib_input_filter.sv:72.16-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1817  (
    .A(Q),
    .B(1'h0),
    .S(\$procmux$1818_CMP ),
    .Y(\$procmux$1817_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1820  (
    .A(\$procmux$1817_Y ),
    .B(1'hx),
    .S(\$procmux$1821_CMP ),
    .Y(\$procmux$1820_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:70.16-70.27|rtl/apb_uart/slib_input_filter.sv:68.11-75.16" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1824  (
    .A(\$Q$16 ),
    .B(1'h1),
    .S(\$procmux$1825_CMP ),
    .Y(\$procmux$1824_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:64.21-64.42|rtl/apb_uart/slib_input_filter.sv:62.21-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1826  (
    .A(iCount),
    .B(\$10y [2:0]),
    .S(\$procmux$1827_CMP ),
    .Y(\$procmux$1826_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1829  (
    .A(\$procmux$1826_Y ),
    .B(3'hx),
    .S(\$procmux$1830_CMP ),
    .Y(\$procmux$1829_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1831  (
    .A(3'hx),
    .B(\$procmux$1829_Y ),
    .S(\$procmux$1832_CMP ),
    .Y(\$procmux$1831_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_input_filter.sv:60.21-60.42|rtl/apb_uart/slib_input_filter.sv:58.16-65.21" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1835  (
    .A(\$iCount$11 ),
    .B(\$6y [2:0]),
    .S(\$procmux$1836_CMP ),
    .Y(\$procmux$1835_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1837  (
    .A(3'hx),
    .B(\$procmux$1835_Y ),
    .S(\$procmux$1838_CMP ),
    .Y(\$procmux$1837_Y )
  );
  /* src = "rtl/apb_uart/slib_input_filter.sv:58.16-65.21|rtl/apb_uart/slib_input_filter.sv:56.11-66.16" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$1840  (
    .A(iCount),
    .B(\$iCount$12 ),
    .S(\$procmux$1841_CMP ),
    .Y(\$procmux$1840_Y )
  );
  assign \$procmux$1818_CMP  = \$15y ;
  assign \$procmux$1821_CMP  = \$14y ;
  assign \$Q$16  = \$procmux$1820_Y ;
  assign \$procmux$1825_CMP  = \$14y ;
  assign \$Q$17  = \$procmux$1824_Y ;
  assign \$procmux$1827_CMP  = \$9y ;
  assign \$procmux$1830_CMP  = \$5y ;
  assign \$procmux$1832_CMP  = \$2y ;
  assign \$iCount$11  = \$procmux$1831_Y ;
  assign \$procmux$1836_CMP  = \$5y ;
  assign \$procmux$1838_CMP  = \$2y ;
  assign \$iCount$12  = \$procmux$1837_Y ;
  assign \$procmux$1841_CMP  = \$2y ;
  assign \$iCount$13  = \$procmux$1840_Y ;
  assign \$2y  = CE;
  assign \$3y  = D;
endmodule

/* src = "rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_CTS (CLK, D, Q, RST);
  wire \$1y ;
  /* src = "rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DCD (CLK, D, Q, RST);
  wire \$1y ;
  /* src = "rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_DSR (CLK, D, Q, RST);
  wire \$1y ;
  /* src = "rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_RI (CLK, D, Q, RST);
  wire \$1y ;
  /* src = "rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "rtl/apb_uart/slib_input_sync.sv:35.8" */
module \slib_input_sync$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IS_SIN (CLK, D, Q, RST);
  wire \$1y ;
  /* src = "rtl/apb_uart/slib_input_sync.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_input_sync.sv:38.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_input_sync.sv:39.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_input_sync.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_input_sync.sv:43.11" */
  wire [1:0] iD;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_input_sync.sv:45.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$iD  (
    .AD(2'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D({ iD[0], D }),
    .Q(iD)
  );
  assign Q = iD[1];
endmodule

/* src = "rtl/apb_uart/slib_mv_filter.sv:35.8" */
module \slib_mv_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_MVF (CLK, D, Q, RST, CLEAR, SAMPLE);
  wire \$10y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  wire [4:0] \$iCounter$11 ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:63.13-66.18" */
  wire [4:0] \$iCounter$7 ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  wire [4:0] \$iCounter$8 ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  wire \$iQ$12 ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  wire \$iQ$9 ;
  wire \$procmux$1843_Y ;
  wire \$procmux$1844_CMP ;
  wire [4:0] \$procmux$1846_Y ;
  wire \$procmux$1847_CMP ;
  wire [4:0] \$procmux$1848_Y ;
  wire \$procmux$1849_CMP ;
  wire [4:0] \$procmux$1851_Y ;
  wire \$procmux$1852_CMP ;
  wire \$procmux$1854_Y ;
  wire \$procmux$1855_CMP ;
  wire [4:0] \$procmux$1858_Y ;
  wire \$procmux$1859_CMP ;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:39.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:40.14" */
  input D;
  wire D;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:41.16" */
  output Q;
  wire Q;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:38.14" */
  input SAMPLE;
  wire SAMPLE;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:45.15" */
  wire [4:0] iCounter;
  /* src = "rtl/apb_uart/slib_mv_filter.sv:46.5" */
  wire iQ;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:57.12-57.33" */
  \$ge  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd10),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:63.18-63.47" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$3y ),
    .B(\$4y ),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:65.30-65.42" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A({ 27'h0000000, iCounter }),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:48.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd5)
  ) \$driver$iCounter  (
    .AD(5'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCounter$11 ),
    .Q(iCounter)
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:48.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iQ  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iQ$12 ),
    .Q(iQ)
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:69.10-73.13|rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1843  (
    .A(\$iQ$9 ),
    .B(1'h0),
    .S(\$procmux$1844_CMP ),
    .Y(\$procmux$1843_Y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:69.10-73.13|rtl/apb_uart/slib_mv_filter.sv:68.8-73.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1846  (
    .A(\$iCounter$8 ),
    .B(5'h00),
    .S(\$procmux$1847_CMP ),
    .Y(\$procmux$1846_Y )
  );
  /* src = "rtl/apb_uart/slib_mv_filter.sv:65.18-65.43|rtl/apb_uart/slib_mv_filter.sv:63.13-66.18" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1848  (
    .A(iCounter),
    .B(\$6y [4:0]),
    .S(\$procmux$1849_CMP ),
    .Y(\$procmux$1848_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1851  (
    .A(\$procmux$1848_Y ),
    .B(5'hxx),
    .S(\$procmux$1852_CMP ),
    .Y(\$procmux$1851_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$1854  (
    .A(iQ),
    .B(1'h1),
    .S(\$procmux$1855_CMP ),
    .Y(\$procmux$1854_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/slib_mv_filter.sv:59.13-59.25|rtl/apb_uart/slib_mv_filter.sv:57.8-67.13" */
  \$mux  #(
    .WIDTH(32'd5)
  ) \$procmux$1858  (
    .A(\$iCounter$7 ),
    .B(iCounter),
    .S(\$procmux$1859_CMP ),
    .Y(\$procmux$1858_Y )
  );
  assign Q = iQ;
  assign \$procmux$1844_CMP  = \$10y ;
  assign \$iQ$12  = \$procmux$1843_Y ;
  assign \$procmux$1847_CMP  = \$10y ;
  assign \$iCounter$11  = \$procmux$1846_Y ;
  assign \$procmux$1849_CMP  = \$5y ;
  assign \$procmux$1852_CMP  = \$2y ;
  assign \$iCounter$7  = \$procmux$1851_Y ;
  assign \$procmux$1855_CMP  = \$2y ;
  assign \$iQ$9  = \$procmux$1854_Y ;
  assign \$procmux$1859_CMP  = \$2y ;
  assign \$iCounter$8  = \$procmux$1858_Y ;
  assign \$3y  = SAMPLE;
  assign \$4y  = D;
  assign \$10y  = CLEAR;
endmodule

/* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:10.8" */
module \soc_ctrl_reg_top$croc_chip.i_croc_soc.i_croc.i_soc_ctrl (clk_i, rst_ni, reg_req_i, reg_rsp_o, reg2hw, hw2reg, devmode_i);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire [3:0] \$16y ;
  wire [3:0] \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire [3:0] \$20y ;
  wire [3:0] \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire [3:0] \$25y ;
  wire [3:0] \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire [3:0] \$30y ;
  wire [3:0] \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire [3:0] \$35y ;
  wire [3:0] \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$55y ;
  wire \$58y ;
  wire \$59y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  wire [30:0] \$procmux$12495_Y ;
  wire \$procmux$12496_CMP ;
  wire \$procmux$12497_CMP ;
  wire \$procmux$12498_CMP ;
  wire \$procmux$12499_CMP ;
  wire \$procmux$12500_CMP ;
  wire \$procmux$12502_Y ;
  wire \$procmux$12503_CMP ;
  wire \$procmux$12504_CMP ;
  wire \$procmux$12505_CMP ;
  wire \$procmux$12506_CMP ;
  wire \$procmux$12507_CMP ;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:266.5-290.12" */
  wire [31:0] \$reg_rdata_next$57 ;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:226.15" */
  wire [4:0] addr_hit;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:43.18" */
  wire addrmiss;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:72.16" */
  wire [31:0] bootaddr_qs;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:73.16" */
  wire [31:0] bootaddr_wd;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:74.9" */
  wire bootaddr_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:81.9" */
  wire bootmode_qs;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:82.9" */
  wire bootmode_wd;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:83.9" */
  wire bootmode_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:16.15" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:78.16" */
  wire [31:0] corestatus_qs;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:79.16" */
  wire [31:0] corestatus_wd;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:80.9" */
  wire corestatus_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:26.9" */
  input devmode_i;
  wire devmode_i;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:75.9" */
  wire fetchen_qs;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:76.9" */
  wire fetchen_wd;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:77.9" */
  wire fetchen_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:22.46" */
  input [3:0] hw2reg;
  wire [3:0] hw2reg;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:21.46" */
  output [66:0] reg2hw;
  wire [66:0] reg2hw;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:37.24" */
  wire [4:0] reg_addr;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:39.19" */
  wire [3:0] reg_be;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:41.19" */
  wire reg_error;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:48.14" */
  wire [69:0] reg_intf_req;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:49.14" */
  wire [33:0] reg_intf_rsp;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:40.19" */
  wire [31:0] reg_rdata;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:45.18" */
  wire [31:0] reg_rdata_next;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:36.19" */
  wire reg_re;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:18.20" */
  input [69:0] reg_req_i;
  wire [69:0] reg_req_i;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:19.20" */
  output [33:0] reg_rsp_o;
  wire [33:0] reg_rsp_o;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:38.19" */
  wire [31:0] reg_wdata;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:35.19" */
  wire reg_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:17.15" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:84.9" */
  wire sram_dly_qs;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:85.9" */
  wire sram_dly_wd;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:86.9" */
  wire sram_dly_we;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:298.9" */
  wire unused_be;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:297.9" */
  wire unused_wdata;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:43.28" */
  wire wr_err;
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:56.19-56.58" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(reg_intf_req[0]),
    .B(reg_intf_req[37]),
    .Y(\$0y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:57.40-57.59" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(reg_intf_req[37]),
    .Y(\$1y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:233.20-233.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(reg_addr),
    .B(5'h10),
    .Y(\$10y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:236.42-236.52" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(addr_hit),
    .Y(\$11y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:236.42-236.52" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$11y ),
    .Y(\$12y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:236.22-236.38" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(reg_re),
    .B(reg_we),
    .Y(\$13y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:236.21-236.59" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$14  (
    .A(1'h0),
    .B(\$12y ),
    .S(\$13y ),
    .Y(\$14y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.55-241.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$16  (
    .A(reg_be),
    .Y(\$16y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.32-241.63" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.17-241.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(addr_hit[0]),
    .B(\$18y ),
    .Y(\$19y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:57.19-57.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(reg_intf_req[0]),
    .B(\$1y ),
    .Y(\$2y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:242.55-242.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$20  (
    .A(reg_be),
    .Y(\$20y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:242.17-242.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(addr_hit[1]),
    .B(\$22y ),
    .Y(\$23y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.16-242.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\$19y ),
    .B(\$23y ),
    .Y(\$24y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:243.55-243.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$25  (
    .A(reg_be),
    .Y(\$25y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:243.32-243.63" */
  \$reduce_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(\$26y ),
    .Y(\$27y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:243.17-243.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(addr_hit[2]),
    .B(\$27y ),
    .Y(\$28y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.16-243.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(\$24y ),
    .B(\$28y ),
    .Y(\$29y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:66.23-66.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(devmode_i),
    .B(addrmiss),
    .Y(\$3y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:244.55-244.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$30  (
    .A(reg_be),
    .Y(\$30y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:244.17-244.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(addr_hit[3]),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.16-244.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(\$29y ),
    .B(\$33y ),
    .Y(\$34y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:245.55-245.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd4)
  ) \$35  (
    .A(reg_be),
    .Y(\$35y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:245.17-245.64" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(addr_hit[4]),
    .B(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:241.16-245.65" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\$34y ),
    .B(\$38y ),
    .Y(\$39y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:66.22-66.53" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\$3y ),
    .B(wr_err),
    .Y(\$4y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:240.15-245.66" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(reg_we),
    .B(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:248.24-248.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(addr_hit[0]),
    .B(reg_we),
    .Y(\$41y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:248.47-248.57" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(reg_error),
    .Y(\$42y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:248.24-248.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(\$41y ),
    .B(\$42y ),
    .Y(\$43y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:251.23-251.43" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(addr_hit[1]),
    .B(reg_we),
    .Y(\$44y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:251.46-251.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(reg_error),
    .Y(\$45y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:251.23-251.56" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(\$44y ),
    .B(\$45y ),
    .Y(\$46y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:254.26-254.46" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(addr_hit[2]),
    .B(reg_we),
    .Y(\$47y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:254.49-254.59" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(reg_error),
    .Y(\$48y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:254.26-254.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$47y ),
    .B(\$48y ),
    .Y(\$49y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:257.24-257.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(addr_hit[3]),
    .B(reg_we),
    .Y(\$50y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:257.47-257.57" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(reg_error),
    .Y(\$51y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:257.24-257.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(\$50y ),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:260.24-260.44" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(addr_hit[4]),
    .B(reg_we),
    .Y(\$53y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:260.47-260.57" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(reg_error),
    .Y(\$54y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:260.24-260.57" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$55  (
    .A(\$53y ),
    .B(\$54y ),
    .Y(\$55y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:299.25-299.35" */
  \$reduce_xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(reg_wdata),
    .Y(\$58y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:300.22-300.29" */
  \$reduce_xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(reg_be),
    .Y(\$59y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:229.20-229.56" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(reg_addr),
    .Y(\$6y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:230.20-230.55" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(reg_addr),
    .B(5'h04),
    .Y(\$7y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:231.20-231.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(reg_addr),
    .B(5'h08),
    .Y(\$8y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:232.20-232.56" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(reg_addr),
    .B(5'h0c),
    .Y(\$9y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:284.9-284.41|rtl/soc_ctrl/soc_ctrl_reg_top.sv:266.5-290.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd31)
  ) \$procmux$12495  (
    .A(31'h7fffffff),
    .B({ bootaddr_qs[31:1], 31'h00000000, corestatus_qs[31:1], 62'h0000000000000000 }),
    .S({ \$procmux$12500_CMP , \$procmux$12499_CMP , \$procmux$12498_CMP , \$procmux$12497_CMP , \$procmux$12496_CMP  }),
    .Y(\$procmux$12495_Y )
  );
  /* full_case = 32'd1 */
  /* parallel_case = 32'd1 */
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:284.9-284.41|rtl/soc_ctrl/soc_ctrl_reg_top.sv:266.5-290.12" */
  \$pmux  #(
    .S_WIDTH(32'd5),
    .WIDTH(32'd1)
  ) \$procmux$12502  (
    .A(1'h1),
    .B({ bootaddr_qs[0], fetchen_qs, corestatus_qs[0], bootmode_qs, sram_dly_qs }),
    .S({ \$procmux$12507_CMP , \$procmux$12506_CMP , \$procmux$12505_CMP , \$procmux$12504_CMP , \$procmux$12503_CMP  }),
    .Y(\$procmux$12502_Y )
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:95.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootaddr  u_bootaddr (
    .clk_i(clk_i),
    .d(32'd0),
    .de(1'h0),
    .q(reg2hw[66:35]),
    .qs(bootaddr_qs),
    .rst_ni(rst_ni),
    .wd(bootaddr_wd),
    .we(bootaddr_we)
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:176.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_bootmode  u_bootmode (
    .clk_i(clk_i),
    .d(hw2reg[1]),
    .de(hw2reg[0]),
    .q(reg2hw[1]),
    .qs(bootmode_qs),
    .rst_ni(rst_ni),
    .wd(bootmode_wd),
    .we(bootmode_we)
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:149.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_corestatus  u_corestatus (
    .clk_i(clk_i),
    .d(32'd0),
    .de(1'h0),
    .q(reg2hw[33:2]),
    .qs(corestatus_qs),
    .rst_ni(rst_ni),
    .wd(corestatus_wd),
    .we(corestatus_we)
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:122.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_fetchen  u_fetchen (
    .clk_i(clk_i),
    .d(hw2reg[3]),
    .de(hw2reg[2]),
    .q(reg2hw[34]),
    .qs(fetchen_qs),
    .rst_ni(rst_ni),
    .wd(fetchen_wd),
    .we(fetchen_we)
  );
  /* src = "rtl/soc_ctrl/soc_ctrl_reg_top.sv:203.5" */
  \prim_subreg$croc_chip.i_croc_soc.i_croc.i_soc_ctrl.u_sram_dly  u_sram_dly (
    .clk_i(clk_i),
    .d(1'h0),
    .de(1'h0),
    .q(reg2hw[0]),
    .qs(sram_dly_qs),
    .rst_ni(rst_ni),
    .wd(sram_dly_wd),
    .we(sram_dly_we)
  );
  assign reg_intf_req = reg_req_i;
  assign reg_rsp_o = reg_intf_rsp;
  assign reg_we = \$0y ;
  assign reg_re = \$2y ;
  assign reg_addr = reg_intf_req[42:38];
  assign reg_wdata = reg_intf_req[36:5];
  assign reg_be = reg_intf_req[4:1];
  assign reg_intf_rsp[33:2] = reg_rdata;
  assign reg_intf_rsp[1] = reg_error;
  assign reg_intf_rsp[0] = 1'h1;
  assign reg_rdata = reg_rdata_next;
  assign reg_error = \$4y ;
  assign addr_hit = { \$10y , \$9y , \$8y , \$7y , \$6y  };
  assign addrmiss = \$14y ;
  assign wr_err = \$40y ;
  assign bootaddr_we = \$43y ;
  assign bootaddr_wd = reg_wdata;
  assign fetchen_we = \$46y ;
  assign fetchen_wd = reg_wdata[0];
  assign corestatus_we = \$49y ;
  assign corestatus_wd = reg_wdata;
  assign bootmode_we = \$52y ;
  assign bootmode_wd = reg_wdata[0];
  assign sram_dly_we = \$55y ;
  assign sram_dly_wd = reg_wdata[0];
  assign reg_rdata_next = \$reg_rdata_next$57 ;
  assign unused_wdata = \$58y ;
  assign unused_be = \$59y ;
  assign \$reg_rdata_next$57 [31:1] = \$procmux$12495_Y ;
  assign \$reg_rdata_next$57 [0] = \$procmux$12502_Y ;
  assign \$17y  = \$16y ;
  assign \$21y [3:1] = 3'h0;
  assign \$21y [0] = \$20y [0];
  assign \$22y  = \$20y [0];
  assign \$26y  = \$25y ;
  assign \$31y [3:1] = 3'h0;
  assign \$31y [0] = \$30y [0];
  assign \$32y  = \$30y [0];
  assign \$36y [3:1] = 3'h0;
  assign \$36y [0] = \$35y [0];
  assign \$37y  = \$35y [0];
  assign \$procmux$12496_CMP  = \$10y ;
  assign \$procmux$12497_CMP  = \$9y ;
  assign \$procmux$12498_CMP  = \$8y ;
  assign \$procmux$12499_CMP  = \$7y ;
  assign \$procmux$12500_CMP  = \$6y ;
  assign \$procmux$12503_CMP  = \$10y ;
  assign \$procmux$12504_CMP  = \$9y ;
  assign \$procmux$12505_CMP  = \$8y ;
  assign \$procmux$12506_CMP  = \$7y ;
  assign \$procmux$12507_CMP  = \$6y ;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_req.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_a.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_cdc_reset_ctrlr.i_cdc_reset_ctrlr_half_b.i_state_transition_cdc_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_dst.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_cdc.i_cdc_resp.i_src.i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [2:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$reg_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[1:0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[2];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[0].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[10].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[11].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[12].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[13].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[14].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[15].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[16].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[17].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[18].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[19].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[1].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[20].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[21].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[22].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[23].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[24].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[25].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[26].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[27].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[28].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[29].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[2].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[30].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[31].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[3].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[4].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[5].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[6].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[7].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[8].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_croc.i_gpio.gen_gpios[9].i_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "rtl/common_cells/sync.sv:13.8" */
module \sync$croc_chip.i_croc_soc.i_ext_intr_sync (clk_i, rst_ni, serial_i, serial_o);
  wire \$1y ;
  wire \$2y ;
  /* src = "rtl/common_cells/sync.sv:17.18" */
  input clk_i;
  wire clk_i;
  /* async_reg = "true" */
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:25.23" */
  wire [1:0] reg_q;
  /* src = "rtl/common_cells/sync.sv:18.18" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/common_cells/sync.sv:19.18" */
  input serial_i;
  wire serial_i;
  /* src = "rtl/common_cells/sync.sv:20.18" */
  output serial_o;
  wire serial_o;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* keep = "true" */
  /* src = "rtl/common_cells/sync.sv:27.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$reg_q  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D({ reg_q[0], serial_i }),
    .Q(reg_q)
  );
  assign serial_o = reg_q[1];
  assign \$2y  = rst_ni;
endmodule

/* src = "ihp13/tc_clk.sv:9.8" */
module \tc_clk_inverter$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_tck_inv (clk_i, clk_o);
  /* src = "ihp13/tc_clk.sv:10.18" */
  input clk_i;
  wire clk_i;
  /* src = "ihp13/tc_clk.sv:11.18" */
  output clk_o;
  wire clk_o;
  /* keep = 1'h1 */
  /* src = "ihp13/tc_clk.sv:14.16" */
  sg13g2_inv_1 i_inv (
    .A(clk_i),
    .Y(clk_o)
  );
endmodule

/* src = "ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_croc.i_dmi_jtag.i_dmi_jtag_tap.i_dft_tck_mux (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_init_no (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_n (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "ihp13/tc_clk.sv:33.8" */
module \tc_clk_mux2$croc_chip.i_croc_soc.i_rstgen.i_rstgen_bypass.i_tc_clk_mux2_rst_no (clk0_i, clk1_i, clk_sel_i, clk_o);
  /* src = "ihp13/tc_clk.sv:34.18" */
  input clk0_i;
  wire clk0_i;
  /* src = "ihp13/tc_clk.sv:35.18" */
  input clk1_i;
  wire clk1_i;
  /* src = "ihp13/tc_clk.sv:37.18" */
  output clk_o;
  wire clk_o;
  /* src = "ihp13/tc_clk.sv:36.18" */
  input clk_sel_i;
  wire clk_sel_i;
  /* keep = 1'h1 */
  /* src = "ihp13/tc_clk.sv:40.17" */
  sg13g2_mux2_1 i_mux (
    .A0(clk0_i),
    .A1(clk1_i),
    .S(clk_sel_i),
    .X(clk_o)
  );
endmodule

/* src = "ihp13/tc_sram_impl.sv:73.8" */
module \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[0].i_sram (clk_i, rst_ni, impl_i, req_i, we_i, addr_i, wdata_i, be_i, rdata_o, impl_o);
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$109y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$116y ;
  wire \$117y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$121y ;
  wire \$122y ;
  wire \$123y ;
  wire \$124y ;
  wire \$126y ;
  wire \$127y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$131y ;
  wire \$132y ;
  wire \$133y ;
  wire \$134y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$13y ;
  wire \$141y ;
  wire \$142y ;
  wire \$143y ;
  wire \$144y ;
  wire \$146y ;
  wire \$147y ;
  wire \$148y ;
  wire \$149y ;
  wire \$14y ;
  wire \$151y ;
  wire \$152y ;
  wire \$153y ;
  wire \$154y ;
  wire \$156y ;
  wire \$157y ;
  wire \$158y ;
  wire \$159y ;
  wire \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$165y ;
  wire \$167y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$7y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$91y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire \$9y ;
  /* src = "ihp13/tc_sram_impl.sv:248.12-248.46" */
  wire \$gen_512x32xBx1.sel_q$166 ;
  wire \$procmux$12626_Y ;
  wire \$procmux$12627_CMP ;
  wire \$procmux$12629_Y ;
  wire \$procmux$12630_CMP ;
  wire \$procmux$12632_Y ;
  wire \$procmux$12633_CMP ;
  wire \$procmux$12635_Y ;
  wire \$procmux$12636_CMP ;
  wire \$procmux$12638_Y ;
  wire \$procmux$12639_CMP ;
  wire \$procmux$12641_Y ;
  wire \$procmux$12642_CMP ;
  wire \$procmux$12644_Y ;
  wire \$procmux$12645_CMP ;
  wire \$procmux$12647_Y ;
  wire \$procmux$12648_CMP ;
  wire \$procmux$12650_Y ;
  wire \$procmux$12651_CMP ;
  wire \$procmux$12653_Y ;
  wire \$procmux$12654_CMP ;
  wire \$procmux$12656_Y ;
  wire \$procmux$12657_CMP ;
  wire \$procmux$12659_Y ;
  wire \$procmux$12660_CMP ;
  wire \$procmux$12662_Y ;
  wire \$procmux$12663_CMP ;
  wire \$procmux$12665_Y ;
  wire \$procmux$12666_CMP ;
  wire \$procmux$12668_Y ;
  wire \$procmux$12669_CMP ;
  wire \$procmux$12671_Y ;
  wire \$procmux$12672_CMP ;
  wire \$procmux$12674_Y ;
  wire \$procmux$12675_CMP ;
  wire \$procmux$12677_Y ;
  wire \$procmux$12678_CMP ;
  wire \$procmux$12680_Y ;
  wire \$procmux$12681_CMP ;
  wire \$procmux$12683_Y ;
  wire \$procmux$12684_CMP ;
  wire \$procmux$12686_Y ;
  wire \$procmux$12687_CMP ;
  wire \$procmux$12689_Y ;
  wire \$procmux$12690_CMP ;
  wire \$procmux$12692_Y ;
  wire \$procmux$12693_CMP ;
  wire \$procmux$12695_Y ;
  wire \$procmux$12696_CMP ;
  wire \$procmux$12698_Y ;
  wire \$procmux$12699_CMP ;
  wire \$procmux$12701_Y ;
  wire \$procmux$12702_CMP ;
  wire \$procmux$12704_Y ;
  wire \$procmux$12705_CMP ;
  wire \$procmux$12707_Y ;
  wire \$procmux$12708_CMP ;
  wire \$procmux$12710_Y ;
  wire \$procmux$12711_CMP ;
  wire \$procmux$12713_Y ;
  wire \$procmux$12714_CMP ;
  wire \$procmux$12716_Y ;
  wire \$procmux$12717_CMP ;
  wire \$procmux$12719_Y ;
  wire \$procmux$12720_CMP ;
  wire \$procmux$12722_Y ;
  wire \$procmux$12723_CMP ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[0]$5 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[10]$55 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[11]$60 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[12]$65 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[13]$70 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[14]$75 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[15]$80 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[16]$85 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[17]$90 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[18]$95 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[19]$100 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[1]$10 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[20]$105 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[21]$110 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[22]$115 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[23]$120 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[24]$125 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[25]$130 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[26]$135 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[27]$140 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[28]$145 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[29]$150 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[2]$15 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[30]$155 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[31]$160 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[3]$20 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[4]$25 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[5]$30 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[6]$35 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[7]$40 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[8]$45 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[9]$50 ;
  /* src = "ihp13/tc_sram_impl.sv:100.32" */
  input [8:0] addr_i;
  wire [8:0] addr_i;
  /* src = "ihp13/tc_sram_impl.sv:102.32" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "ihp13/tc_sram_impl.sv:110.25" */
  wire [31:0] bm;
  /* src = "ihp13/tc_sram_impl.sv:92.32" */
  input clk_i;
  wire clk_i;
  /* src = "ihp13/tc_sram_impl.sv:223.36" */
  wire [63:0] \gen_512x32xBx1.bm64 ;
  /* src = "ihp13/tc_sram_impl.sv:223.27" */
  wire [63:0] \gen_512x32xBx1.rdata64 ;
  /* src = "ihp13/tc_sram_impl.sv:224.11" */
  wire \gen_512x32xBx1.sel_d ;
  /* src = "ihp13/tc_sram_impl.sv:224.18" */
  wire \gen_512x32xBx1.sel_q ;
  /* src = "ihp13/tc_sram_impl.sv:223.18" */
  wire [63:0] \gen_512x32xBx1.wdata64 ;
  /* src = "ihp13/tc_sram_impl.sv:95.32" */
  input impl_i;
  wire impl_i;
  /* src = "ihp13/tc_sram_impl.sv:96.32" */
  output impl_o;
  wire impl_o;
  /* src = "ihp13/tc_sram_impl.sv:104.32" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "ihp13/tc_sram_impl.sv:98.32" */
  input req_i;
  wire req_i;
  /* src = "ihp13/tc_sram_impl.sv:93.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "ihp13/tc_sram_impl.sv:101.32" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "ihp13/tc_sram_impl.sv:99.32" */
  input we_i;
  wire we_i;
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(addr_i[0]),
    .Y(\$1y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$101  (
    .A(addr_i[0]),
    .Y(\$101y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$102  (
    .A(bm[20]),
    .B(\$101y ),
    .Y(\$102y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(bm[20]),
    .B(addr_i[0]),
    .Y(\$103y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$104y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(addr_i[0]),
    .Y(\$106y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(bm[21]),
    .B(\$106y ),
    .Y(\$107y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$108  (
    .A(bm[21]),
    .B(addr_i[0]),
    .Y(\$108y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$109  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$109y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(addr_i[0]),
    .Y(\$11y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(addr_i[0]),
    .Y(\$111y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$112  (
    .A(bm[22]),
    .B(\$111y ),
    .Y(\$112y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(bm[22]),
    .B(addr_i[0]),
    .Y(\$113y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$114  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$114y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$116  (
    .A(addr_i[0]),
    .Y(\$116y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$117  (
    .A(bm[23]),
    .B(\$116y ),
    .Y(\$117y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$118  (
    .A(bm[23]),
    .B(addr_i[0]),
    .Y(\$118y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$119y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(bm[2]),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$121  (
    .A(addr_i[0]),
    .Y(\$121y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(bm[24]),
    .B(\$121y ),
    .Y(\$122y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$123  (
    .A(bm[24]),
    .B(addr_i[0]),
    .Y(\$123y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$124y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(addr_i[0]),
    .Y(\$126y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$127  (
    .A(bm[25]),
    .B(\$126y ),
    .Y(\$127y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(bm[25]),
    .B(addr_i[0]),
    .Y(\$128y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$129y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(bm[2]),
    .B(addr_i[0]),
    .Y(\$13y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(addr_i[0]),
    .Y(\$131y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(bm[26]),
    .B(\$131y ),
    .Y(\$132y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$133  (
    .A(bm[26]),
    .B(addr_i[0]),
    .Y(\$133y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$134y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(addr_i[0]),
    .Y(\$136y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(bm[27]),
    .B(\$136y ),
    .Y(\$137y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(bm[27]),
    .B(addr_i[0]),
    .Y(\$138y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$139y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$14y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(addr_i[0]),
    .Y(\$141y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(bm[28]),
    .B(\$141y ),
    .Y(\$142y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(bm[28]),
    .B(addr_i[0]),
    .Y(\$143y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$144y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$146  (
    .A(addr_i[0]),
    .Y(\$146y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$147  (
    .A(bm[29]),
    .B(\$146y ),
    .Y(\$147y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(bm[29]),
    .B(addr_i[0]),
    .Y(\$148y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$149y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(addr_i[0]),
    .Y(\$151y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(bm[30]),
    .B(\$151y ),
    .Y(\$152y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(bm[30]),
    .B(addr_i[0]),
    .Y(\$153y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$154  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$154y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A(addr_i[0]),
    .Y(\$156y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A(bm[31]),
    .B(\$156y ),
    .Y(\$157y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(bm[31]),
    .B(addr_i[0]),
    .Y(\$158y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$159  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$159y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(addr_i[0]),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$162  (
    .A(rst_ni),
    .Y(\$162y )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.24-248.29" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(we_i),
    .Y(\$164y )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.16-248.29" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$165  (
    .A(req_i),
    .B(\$164y ),
    .Y(\$165y )
  );
  /* src = "ihp13/tc_sram_impl.sv:258.17-258.22" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(we_i),
    .Y(\$167y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(bm[3]),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(bm[3]),
    .B(addr_i[0]),
    .Y(\$18y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$19y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(bm[0]),
    .B(\$1y ),
    .Y(\$2y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(addr_i[0]),
    .Y(\$21y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(bm[4]),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(bm[4]),
    .B(addr_i[0]),
    .Y(\$23y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$24y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(addr_i[0]),
    .Y(\$26y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(bm[5]),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(bm[5]),
    .B(addr_i[0]),
    .Y(\$28y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$29y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(bm[0]),
    .B(addr_i[0]),
    .Y(\$3y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i[0]),
    .Y(\$31y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(bm[6]),
    .B(\$31y ),
    .Y(\$32y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(bm[6]),
    .B(addr_i[0]),
    .Y(\$33y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$34y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(addr_i[0]),
    .Y(\$36y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(bm[7]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(bm[7]),
    .B(addr_i[0]),
    .Y(\$38y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$39y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$4y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(addr_i[0]),
    .Y(\$41y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(bm[8]),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(bm[8]),
    .B(addr_i[0]),
    .Y(\$43y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$44y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(addr_i[0]),
    .Y(\$46y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(bm[9]),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(bm[9]),
    .B(addr_i[0]),
    .Y(\$48y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$49y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(addr_i[0]),
    .Y(\$51y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(bm[10]),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(bm[10]),
    .B(addr_i[0]),
    .Y(\$53y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$54y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(addr_i[0]),
    .Y(\$56y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(bm[11]),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(bm[11]),
    .B(addr_i[0]),
    .Y(\$58y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$59y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_i[0]),
    .Y(\$6y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(addr_i[0]),
    .Y(\$61y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(bm[12]),
    .B(\$61y ),
    .Y(\$62y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(bm[12]),
    .B(addr_i[0]),
    .Y(\$63y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$64y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(addr_i[0]),
    .Y(\$66y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(bm[13]),
    .B(\$66y ),
    .Y(\$67y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(bm[13]),
    .B(addr_i[0]),
    .Y(\$68y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$69y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(bm[1]),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(addr_i[0]),
    .Y(\$71y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(bm[14]),
    .B(\$71y ),
    .Y(\$72y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$73  (
    .A(bm[14]),
    .B(addr_i[0]),
    .Y(\$73y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$74y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(addr_i[0]),
    .Y(\$76y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(bm[15]),
    .B(\$76y ),
    .Y(\$77y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$78  (
    .A(bm[15]),
    .B(addr_i[0]),
    .Y(\$78y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$79y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(bm[1]),
    .B(addr_i[0]),
    .Y(\$8y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(addr_i[0]),
    .Y(\$81y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(bm[16]),
    .B(\$81y ),
    .Y(\$82y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(bm[16]),
    .B(addr_i[0]),
    .Y(\$83y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$84y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(addr_i[0]),
    .Y(\$86y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(bm[17]),
    .B(\$86y ),
    .Y(\$87y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(bm[17]),
    .B(addr_i[0]),
    .Y(\$88y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$89y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$9y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(addr_i[0]),
    .Y(\$91y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(bm[18]),
    .B(\$91y ),
    .Y(\$92y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$93  (
    .A(bm[18]),
    .B(addr_i[0]),
    .Y(\$93y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$94y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(addr_i[0]),
    .Y(\$96y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(bm[19]),
    .B(\$96y ),
    .Y(\$97y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(bm[19]),
    .B(addr_i[0]),
    .Y(\$98y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$99  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$99y )
  );
  /* src = "ihp13/tc_sram_impl.sv:246.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_512x32xBx1.sel_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_512x32xBx1.sel_q$166 ),
    .Q(\gen_512x32xBx1.sel_q )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.31-248.46|ihp13/tc_sram_impl.sv:248.12-248.46" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12626  (
    .A(\gen_512x32xBx1.sel_q ),
    .B(addr_i[0]),
    .S(\$procmux$12627_CMP ),
    .Y(\$procmux$12626_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12629  (
    .A(\gen_512x32xBx1.rdata64 [62]),
    .B(\gen_512x32xBx1.rdata64 [63]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12629_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12632  (
    .A(\gen_512x32xBx1.rdata64 [60]),
    .B(\gen_512x32xBx1.rdata64 [61]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12632_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12635  (
    .A(\gen_512x32xBx1.rdata64 [58]),
    .B(\gen_512x32xBx1.rdata64 [59]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12635_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12638  (
    .A(\gen_512x32xBx1.rdata64 [56]),
    .B(\gen_512x32xBx1.rdata64 [57]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12638_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12641  (
    .A(\gen_512x32xBx1.rdata64 [54]),
    .B(\gen_512x32xBx1.rdata64 [55]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12641_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12644  (
    .A(\gen_512x32xBx1.rdata64 [52]),
    .B(\gen_512x32xBx1.rdata64 [53]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12644_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12647  (
    .A(\gen_512x32xBx1.rdata64 [50]),
    .B(\gen_512x32xBx1.rdata64 [51]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12647_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12650  (
    .A(\gen_512x32xBx1.rdata64 [48]),
    .B(\gen_512x32xBx1.rdata64 [49]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12650_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12653  (
    .A(\gen_512x32xBx1.rdata64 [46]),
    .B(\gen_512x32xBx1.rdata64 [47]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12653_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12656  (
    .A(\gen_512x32xBx1.rdata64 [44]),
    .B(\gen_512x32xBx1.rdata64 [45]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12656_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12659  (
    .A(\gen_512x32xBx1.rdata64 [42]),
    .B(\gen_512x32xBx1.rdata64 [43]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12659_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12662  (
    .A(\gen_512x32xBx1.rdata64 [40]),
    .B(\gen_512x32xBx1.rdata64 [41]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12662_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12665  (
    .A(\gen_512x32xBx1.rdata64 [38]),
    .B(\gen_512x32xBx1.rdata64 [39]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12665_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12668  (
    .A(\gen_512x32xBx1.rdata64 [36]),
    .B(\gen_512x32xBx1.rdata64 [37]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12668_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12671  (
    .A(\gen_512x32xBx1.rdata64 [34]),
    .B(\gen_512x32xBx1.rdata64 [35]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12671_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12674  (
    .A(\gen_512x32xBx1.rdata64 [32]),
    .B(\gen_512x32xBx1.rdata64 [33]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12674_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12677  (
    .A(\gen_512x32xBx1.rdata64 [30]),
    .B(\gen_512x32xBx1.rdata64 [31]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12677_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12680  (
    .A(\gen_512x32xBx1.rdata64 [28]),
    .B(\gen_512x32xBx1.rdata64 [29]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12680_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12683  (
    .A(\gen_512x32xBx1.rdata64 [26]),
    .B(\gen_512x32xBx1.rdata64 [27]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12683_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12686  (
    .A(\gen_512x32xBx1.rdata64 [24]),
    .B(\gen_512x32xBx1.rdata64 [25]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12686_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12689  (
    .A(\gen_512x32xBx1.rdata64 [22]),
    .B(\gen_512x32xBx1.rdata64 [23]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12689_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12692  (
    .A(\gen_512x32xBx1.rdata64 [20]),
    .B(\gen_512x32xBx1.rdata64 [21]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12692_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12695  (
    .A(\gen_512x32xBx1.rdata64 [18]),
    .B(\gen_512x32xBx1.rdata64 [19]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12695_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12698  (
    .A(\gen_512x32xBx1.rdata64 [16]),
    .B(\gen_512x32xBx1.rdata64 [17]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12698_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12701  (
    .A(\gen_512x32xBx1.rdata64 [14]),
    .B(\gen_512x32xBx1.rdata64 [15]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12701_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12704  (
    .A(\gen_512x32xBx1.rdata64 [12]),
    .B(\gen_512x32xBx1.rdata64 [13]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12704_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12707  (
    .A(\gen_512x32xBx1.rdata64 [10]),
    .B(\gen_512x32xBx1.rdata64 [11]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12707_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12710  (
    .A(\gen_512x32xBx1.rdata64 [8]),
    .B(\gen_512x32xBx1.rdata64 [9]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12710_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12713  (
    .A(\gen_512x32xBx1.rdata64 [6]),
    .B(\gen_512x32xBx1.rdata64 [7]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12713_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12716  (
    .A(\gen_512x32xBx1.rdata64 [4]),
    .B(\gen_512x32xBx1.rdata64 [5]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12716_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12719  (
    .A(\gen_512x32xBx1.rdata64 [2]),
    .B(\gen_512x32xBx1.rdata64 [3]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12719_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12722  (
    .A(\gen_512x32xBx1.rdata64 [0]),
    .B(\gen_512x32xBx1.rdata64 [1]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12722_Y )
  );
  /* src = "ihp13/tc_sram_impl.sv:251.37" */
  RM_IHPSG13_1P_256x64_c2_bm_bist \gen_512x32xBx1.i_cut  (
    .A_ADDR(addr_i[8:1]),
    .A_BIST_ADDR(8'h00),
    .A_BIST_BM(64'h0000000000000000),
    .A_BIST_CLK(1'h0),
    .A_BIST_DIN(64'h0000000000000000),
    .A_BIST_EN(1'h0),
    .A_BIST_MEN(1'h0),
    .A_BIST_REN(1'h0),
    .A_BIST_WEN(1'h0),
    .A_BM(\gen_512x32xBx1.bm64 ),
    .A_CLK(clk_i),
    .A_DIN(\gen_512x32xBx1.wdata64 ),
    .A_DLY(impl_i),
    .A_DOUT(\gen_512x32xBx1.rdata64 ),
    .A_MEN(req_i),
    .A_REN(\$167y ),
    .A_WEN(we_i)
  );
  assign bm[0] = be_i[0];
  assign bm[1] = be_i[0];
  assign bm[2] = be_i[0];
  assign bm[3] = be_i[0];
  assign bm[4] = be_i[0];
  assign bm[5] = be_i[0];
  assign bm[6] = be_i[0];
  assign bm[7] = be_i[0];
  assign bm[8] = be_i[1];
  assign bm[9] = be_i[1];
  assign bm[10] = be_i[1];
  assign bm[11] = be_i[1];
  assign bm[12] = be_i[1];
  assign bm[13] = be_i[1];
  assign bm[14] = be_i[1];
  assign bm[15] = be_i[1];
  assign bm[16] = be_i[2];
  assign bm[17] = be_i[2];
  assign bm[18] = be_i[2];
  assign bm[19] = be_i[2];
  assign bm[20] = be_i[2];
  assign bm[21] = be_i[2];
  assign bm[22] = be_i[2];
  assign bm[23] = be_i[2];
  assign bm[24] = be_i[3];
  assign bm[25] = be_i[3];
  assign bm[26] = be_i[3];
  assign bm[27] = be_i[3];
  assign bm[28] = be_i[3];
  assign bm[29] = be_i[3];
  assign bm[30] = be_i[3];
  assign bm[31] = be_i[3];
  assign impl_o = 1'hx;
  assign rdata_o = { \$rdata_o[31]$160 , \$rdata_o[30]$155 , \$rdata_o[29]$150 , \$rdata_o[28]$145 , \$rdata_o[27]$140 , \$rdata_o[26]$135 , \$rdata_o[25]$130 , \$rdata_o[24]$125 , \$rdata_o[23]$120 , \$rdata_o[22]$115 , \$rdata_o[21]$110 , \$rdata_o[20]$105 , \$rdata_o[19]$100 , \$rdata_o[18]$95 , \$rdata_o[17]$90 , \$rdata_o[16]$85 , \$rdata_o[15]$80 , \$rdata_o[14]$75 , \$rdata_o[13]$70 , \$rdata_o[12]$65 , \$rdata_o[11]$60 , \$rdata_o[10]$55 , \$rdata_o[9]$50 , \$rdata_o[8]$45 , \$rdata_o[7]$40 , \$rdata_o[6]$35 , \$rdata_o[5]$30 , \$rdata_o[4]$25 , \$rdata_o[3]$20 , \$rdata_o[2]$15 , \$rdata_o[1]$10 , \$rdata_o[0]$5  };
  assign \gen_512x32xBx1.wdata64  = { wdata_i[31], wdata_i[31:30], wdata_i[30:29], wdata_i[29:28], wdata_i[28:27], wdata_i[27:26], wdata_i[26:25], wdata_i[25:24], wdata_i[24:23], wdata_i[23:22], wdata_i[22:21], wdata_i[21:20], wdata_i[20:19], wdata_i[19:18], wdata_i[18:17], wdata_i[17:16], wdata_i[16:15], wdata_i[15:14], wdata_i[14:13], wdata_i[13:12], wdata_i[12:11], wdata_i[11:10], wdata_i[10:9], wdata_i[9:8], wdata_i[8:7], wdata_i[7:6], wdata_i[6:5], wdata_i[5:4], wdata_i[4:3], wdata_i[3:2], wdata_i[2:1], wdata_i[1:0], wdata_i[0] };
  assign \gen_512x32xBx1.bm64  = { \$158y , \$157y , \$153y , \$152y , \$148y , \$147y , \$143y , \$142y , \$138y , \$137y , \$133y , \$132y , \$128y , \$127y , \$123y , \$122y , \$118y , \$117y , \$113y , \$112y , \$108y , \$107y , \$103y , \$102y , \$98y , \$97y , \$93y , \$92y , \$88y , \$87y , \$83y , \$82y , \$78y , \$77y , \$73y , \$72y , \$68y , \$67y , \$63y , \$62y , \$58y , \$57y , \$53y , \$52y , \$48y , \$47y , \$43y , \$42y , \$38y , \$37y , \$33y , \$32y , \$28y , \$27y , \$23y , \$22y , \$18y , \$17y , \$13y , \$12y , \$8y , \$7y , \$3y , \$2y  };
  assign \gen_512x32xBx1.sel_d  = addr_i[0];
  assign \$procmux$12627_CMP  = \$165y ;
  assign \$gen_512x32xBx1.sel_q$166  = \$procmux$12626_Y ;
  assign \$procmux$12630_CMP  = \$159y ;
  assign \$rdata_o[31]$160  = \$procmux$12629_Y ;
  assign \$procmux$12633_CMP  = \$154y ;
  assign \$rdata_o[30]$155  = \$procmux$12632_Y ;
  assign \$procmux$12636_CMP  = \$149y ;
  assign \$rdata_o[29]$150  = \$procmux$12635_Y ;
  assign \$procmux$12639_CMP  = \$144y ;
  assign \$rdata_o[28]$145  = \$procmux$12638_Y ;
  assign \$procmux$12642_CMP  = \$139y ;
  assign \$rdata_o[27]$140  = \$procmux$12641_Y ;
  assign \$procmux$12645_CMP  = \$134y ;
  assign \$rdata_o[26]$135  = \$procmux$12644_Y ;
  assign \$procmux$12648_CMP  = \$129y ;
  assign \$rdata_o[25]$130  = \$procmux$12647_Y ;
  assign \$procmux$12651_CMP  = \$124y ;
  assign \$rdata_o[24]$125  = \$procmux$12650_Y ;
  assign \$procmux$12654_CMP  = \$119y ;
  assign \$rdata_o[23]$120  = \$procmux$12653_Y ;
  assign \$procmux$12657_CMP  = \$114y ;
  assign \$rdata_o[22]$115  = \$procmux$12656_Y ;
  assign \$procmux$12660_CMP  = \$109y ;
  assign \$rdata_o[21]$110  = \$procmux$12659_Y ;
  assign \$procmux$12663_CMP  = \$104y ;
  assign \$rdata_o[20]$105  = \$procmux$12662_Y ;
  assign \$procmux$12666_CMP  = \$99y ;
  assign \$rdata_o[19]$100  = \$procmux$12665_Y ;
  assign \$procmux$12669_CMP  = \$94y ;
  assign \$rdata_o[18]$95  = \$procmux$12668_Y ;
  assign \$procmux$12672_CMP  = \$89y ;
  assign \$rdata_o[17]$90  = \$procmux$12671_Y ;
  assign \$procmux$12675_CMP  = \$84y ;
  assign \$rdata_o[16]$85  = \$procmux$12674_Y ;
  assign \$procmux$12678_CMP  = \$79y ;
  assign \$rdata_o[15]$80  = \$procmux$12677_Y ;
  assign \$procmux$12681_CMP  = \$74y ;
  assign \$rdata_o[14]$75  = \$procmux$12680_Y ;
  assign \$procmux$12684_CMP  = \$69y ;
  assign \$rdata_o[13]$70  = \$procmux$12683_Y ;
  assign \$procmux$12687_CMP  = \$64y ;
  assign \$rdata_o[12]$65  = \$procmux$12686_Y ;
  assign \$procmux$12690_CMP  = \$59y ;
  assign \$rdata_o[11]$60  = \$procmux$12689_Y ;
  assign \$procmux$12693_CMP  = \$54y ;
  assign \$rdata_o[10]$55  = \$procmux$12692_Y ;
  assign \$procmux$12696_CMP  = \$49y ;
  assign \$rdata_o[9]$50  = \$procmux$12695_Y ;
  assign \$procmux$12699_CMP  = \$44y ;
  assign \$rdata_o[8]$45  = \$procmux$12698_Y ;
  assign \$procmux$12702_CMP  = \$39y ;
  assign \$rdata_o[7]$40  = \$procmux$12701_Y ;
  assign \$procmux$12705_CMP  = \$34y ;
  assign \$rdata_o[6]$35  = \$procmux$12704_Y ;
  assign \$procmux$12708_CMP  = \$29y ;
  assign \$rdata_o[5]$30  = \$procmux$12707_Y ;
  assign \$procmux$12711_CMP  = \$24y ;
  assign \$rdata_o[4]$25  = \$procmux$12710_Y ;
  assign \$procmux$12714_CMP  = \$19y ;
  assign \$rdata_o[3]$20  = \$procmux$12713_Y ;
  assign \$procmux$12717_CMP  = \$14y ;
  assign \$rdata_o[2]$15  = \$procmux$12716_Y ;
  assign \$procmux$12720_CMP  = \$9y ;
  assign \$rdata_o[1]$10  = \$procmux$12719_Y ;
  assign \$procmux$12723_CMP  = \$4y ;
  assign \$rdata_o[0]$5  = \$procmux$12722_Y ;
  assign \$163y  = rst_ni;
endmodule

/* src = "ihp13/tc_sram_impl.sv:73.8" */
module \tc_sram_impl$croc_chip.i_croc_soc.i_croc.gen_sram_bank[1].i_sram (clk_i, rst_ni, impl_i, req_i, we_i, addr_i, wdata_i, be_i, rdata_o, impl_o);
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$106y ;
  wire \$107y ;
  wire \$108y ;
  wire \$109y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$114y ;
  wire \$116y ;
  wire \$117y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$121y ;
  wire \$122y ;
  wire \$123y ;
  wire \$124y ;
  wire \$126y ;
  wire \$127y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$131y ;
  wire \$132y ;
  wire \$133y ;
  wire \$134y ;
  wire \$136y ;
  wire \$137y ;
  wire \$138y ;
  wire \$139y ;
  wire \$13y ;
  wire \$141y ;
  wire \$142y ;
  wire \$143y ;
  wire \$144y ;
  wire \$146y ;
  wire \$147y ;
  wire \$148y ;
  wire \$149y ;
  wire \$14y ;
  wire \$151y ;
  wire \$152y ;
  wire \$153y ;
  wire \$154y ;
  wire \$156y ;
  wire \$157y ;
  wire \$158y ;
  wire \$159y ;
  wire \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$165y ;
  wire \$167y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$21y ;
  wire \$22y ;
  wire \$23y ;
  wire \$24y ;
  wire \$26y ;
  wire \$27y ;
  wire \$28y ;
  wire \$29y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$3y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$69y ;
  wire \$6y ;
  wire \$71y ;
  wire \$72y ;
  wire \$73y ;
  wire \$74y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$79y ;
  wire \$7y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$84y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$8y ;
  wire \$91y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire \$9y ;
  /* src = "ihp13/tc_sram_impl.sv:248.12-248.46" */
  wire \$gen_512x32xBx1.sel_q$166 ;
  wire \$procmux$12528_Y ;
  wire \$procmux$12529_CMP ;
  wire \$procmux$12531_Y ;
  wire \$procmux$12532_CMP ;
  wire \$procmux$12534_Y ;
  wire \$procmux$12535_CMP ;
  wire \$procmux$12537_Y ;
  wire \$procmux$12538_CMP ;
  wire \$procmux$12540_Y ;
  wire \$procmux$12541_CMP ;
  wire \$procmux$12543_Y ;
  wire \$procmux$12544_CMP ;
  wire \$procmux$12546_Y ;
  wire \$procmux$12547_CMP ;
  wire \$procmux$12549_Y ;
  wire \$procmux$12550_CMP ;
  wire \$procmux$12552_Y ;
  wire \$procmux$12553_CMP ;
  wire \$procmux$12555_Y ;
  wire \$procmux$12556_CMP ;
  wire \$procmux$12558_Y ;
  wire \$procmux$12559_CMP ;
  wire \$procmux$12561_Y ;
  wire \$procmux$12562_CMP ;
  wire \$procmux$12564_Y ;
  wire \$procmux$12565_CMP ;
  wire \$procmux$12567_Y ;
  wire \$procmux$12568_CMP ;
  wire \$procmux$12570_Y ;
  wire \$procmux$12571_CMP ;
  wire \$procmux$12573_Y ;
  wire \$procmux$12574_CMP ;
  wire \$procmux$12576_Y ;
  wire \$procmux$12577_CMP ;
  wire \$procmux$12579_Y ;
  wire \$procmux$12580_CMP ;
  wire \$procmux$12582_Y ;
  wire \$procmux$12583_CMP ;
  wire \$procmux$12585_Y ;
  wire \$procmux$12586_CMP ;
  wire \$procmux$12588_Y ;
  wire \$procmux$12589_CMP ;
  wire \$procmux$12591_Y ;
  wire \$procmux$12592_CMP ;
  wire \$procmux$12594_Y ;
  wire \$procmux$12595_CMP ;
  wire \$procmux$12597_Y ;
  wire \$procmux$12598_CMP ;
  wire \$procmux$12600_Y ;
  wire \$procmux$12601_CMP ;
  wire \$procmux$12603_Y ;
  wire \$procmux$12604_CMP ;
  wire \$procmux$12606_Y ;
  wire \$procmux$12607_CMP ;
  wire \$procmux$12609_Y ;
  wire \$procmux$12610_CMP ;
  wire \$procmux$12612_Y ;
  wire \$procmux$12613_CMP ;
  wire \$procmux$12615_Y ;
  wire \$procmux$12616_CMP ;
  wire \$procmux$12618_Y ;
  wire \$procmux$12619_CMP ;
  wire \$procmux$12621_Y ;
  wire \$procmux$12622_CMP ;
  wire \$procmux$12624_Y ;
  wire \$procmux$12625_CMP ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[0]$5 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[10]$55 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[11]$60 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[12]$65 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[13]$70 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[14]$75 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[15]$80 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[16]$85 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[17]$90 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[18]$95 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[19]$100 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[1]$10 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[20]$105 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[21]$110 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[22]$115 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[23]$120 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[24]$125 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[25]$130 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[26]$135 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[27]$140 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[28]$145 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[29]$150 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[2]$15 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[30]$155 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[31]$160 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[3]$20 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[4]$25 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[5]$30 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[6]$35 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[7]$40 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[8]$45 ;
  /* src = "ihp13/tc_sram_impl.sv:235.11-239.14" */
  wire \$rdata_o[9]$50 ;
  /* src = "ihp13/tc_sram_impl.sv:100.32" */
  input [8:0] addr_i;
  wire [8:0] addr_i;
  /* src = "ihp13/tc_sram_impl.sv:102.32" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "ihp13/tc_sram_impl.sv:110.25" */
  wire [31:0] bm;
  /* src = "ihp13/tc_sram_impl.sv:92.32" */
  input clk_i;
  wire clk_i;
  /* src = "ihp13/tc_sram_impl.sv:223.36" */
  wire [63:0] \gen_512x32xBx1.bm64 ;
  /* src = "ihp13/tc_sram_impl.sv:223.27" */
  wire [63:0] \gen_512x32xBx1.rdata64 ;
  /* src = "ihp13/tc_sram_impl.sv:224.11" */
  wire \gen_512x32xBx1.sel_d ;
  /* src = "ihp13/tc_sram_impl.sv:224.18" */
  wire \gen_512x32xBx1.sel_q ;
  /* src = "ihp13/tc_sram_impl.sv:223.18" */
  wire [63:0] \gen_512x32xBx1.wdata64 ;
  /* src = "ihp13/tc_sram_impl.sv:95.32" */
  input impl_i;
  wire impl_i;
  /* src = "ihp13/tc_sram_impl.sv:96.32" */
  output impl_o;
  wire impl_o;
  /* src = "ihp13/tc_sram_impl.sv:104.32" */
  output [31:0] rdata_o;
  wire [31:0] rdata_o;
  /* src = "ihp13/tc_sram_impl.sv:98.32" */
  input req_i;
  wire req_i;
  /* src = "ihp13/tc_sram_impl.sv:93.32" */
  input rst_ni;
  wire rst_ni;
  /* src = "ihp13/tc_sram_impl.sv:101.32" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "ihp13/tc_sram_impl.sv:99.32" */
  input we_i;
  wire we_i;
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(addr_i[0]),
    .Y(\$1y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$101  (
    .A(addr_i[0]),
    .Y(\$101y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$102  (
    .A(bm[20]),
    .B(\$101y ),
    .Y(\$102y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(bm[20]),
    .B(addr_i[0]),
    .Y(\$103y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$104y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$106  (
    .A(addr_i[0]),
    .Y(\$106y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(bm[21]),
    .B(\$106y ),
    .Y(\$107y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$108  (
    .A(bm[21]),
    .B(addr_i[0]),
    .Y(\$108y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$109  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$109y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(addr_i[0]),
    .Y(\$11y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(addr_i[0]),
    .Y(\$111y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$112  (
    .A(bm[22]),
    .B(\$111y ),
    .Y(\$112y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(bm[22]),
    .B(addr_i[0]),
    .Y(\$113y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$114  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$114y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$116  (
    .A(addr_i[0]),
    .Y(\$116y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$117  (
    .A(bm[23]),
    .B(\$116y ),
    .Y(\$117y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$118  (
    .A(bm[23]),
    .B(addr_i[0]),
    .Y(\$118y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$119y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(bm[2]),
    .B(\$11y ),
    .Y(\$12y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$121  (
    .A(addr_i[0]),
    .Y(\$121y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(bm[24]),
    .B(\$121y ),
    .Y(\$122y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$123  (
    .A(bm[24]),
    .B(addr_i[0]),
    .Y(\$123y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$124  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$124y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(addr_i[0]),
    .Y(\$126y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$127  (
    .A(bm[25]),
    .B(\$126y ),
    .Y(\$127y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(bm[25]),
    .B(addr_i[0]),
    .Y(\$128y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$129y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$13  (
    .A(bm[2]),
    .B(addr_i[0]),
    .Y(\$13y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(addr_i[0]),
    .Y(\$131y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$132  (
    .A(bm[26]),
    .B(\$131y ),
    .Y(\$132y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$133  (
    .A(bm[26]),
    .B(addr_i[0]),
    .Y(\$133y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$134y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$136  (
    .A(addr_i[0]),
    .Y(\$136y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$137  (
    .A(bm[27]),
    .B(\$136y ),
    .Y(\$137y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$138  (
    .A(bm[27]),
    .B(addr_i[0]),
    .Y(\$138y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$139  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$139y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$14y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$141  (
    .A(addr_i[0]),
    .Y(\$141y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$142  (
    .A(bm[28]),
    .B(\$141y ),
    .Y(\$142y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$143  (
    .A(bm[28]),
    .B(addr_i[0]),
    .Y(\$143y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$144y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$146  (
    .A(addr_i[0]),
    .Y(\$146y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$147  (
    .A(bm[29]),
    .B(\$146y ),
    .Y(\$147y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$148  (
    .A(bm[29]),
    .B(addr_i[0]),
    .Y(\$148y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$149y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$151  (
    .A(addr_i[0]),
    .Y(\$151y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(bm[30]),
    .B(\$151y ),
    .Y(\$152y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$153  (
    .A(bm[30]),
    .B(addr_i[0]),
    .Y(\$153y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$154  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$154y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$156  (
    .A(addr_i[0]),
    .Y(\$156y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$157  (
    .A(bm[31]),
    .B(\$156y ),
    .Y(\$157y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$158  (
    .A(bm[31]),
    .B(addr_i[0]),
    .Y(\$158y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$159  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$159y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(addr_i[0]),
    .Y(\$16y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$162  (
    .A(rst_ni),
    .Y(\$162y )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.24-248.29" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(we_i),
    .Y(\$164y )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.16-248.29" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$165  (
    .A(req_i),
    .B(\$164y ),
    .Y(\$165y )
  );
  /* src = "ihp13/tc_sram_impl.sv:258.17-258.22" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(we_i),
    .Y(\$167y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(bm[3]),
    .B(\$16y ),
    .Y(\$17y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(bm[3]),
    .B(addr_i[0]),
    .Y(\$18y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$19y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(bm[0]),
    .B(\$1y ),
    .Y(\$2y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(addr_i[0]),
    .Y(\$21y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(bm[4]),
    .B(\$21y ),
    .Y(\$22y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$23  (
    .A(bm[4]),
    .B(addr_i[0]),
    .Y(\$23y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$24  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$24y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(addr_i[0]),
    .Y(\$26y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$27  (
    .A(bm[5]),
    .B(\$26y ),
    .Y(\$27y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$28  (
    .A(bm[5]),
    .B(addr_i[0]),
    .Y(\$28y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$29  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$29y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(bm[0]),
    .B(addr_i[0]),
    .Y(\$3y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(addr_i[0]),
    .Y(\$31y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(bm[6]),
    .B(\$31y ),
    .Y(\$32y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(bm[6]),
    .B(addr_i[0]),
    .Y(\$33y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$34y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(addr_i[0]),
    .Y(\$36y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(bm[7]),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(bm[7]),
    .B(addr_i[0]),
    .Y(\$38y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$39y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$4y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(addr_i[0]),
    .Y(\$41y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(bm[8]),
    .B(\$41y ),
    .Y(\$42y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(bm[8]),
    .B(addr_i[0]),
    .Y(\$43y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$44y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$46  (
    .A(addr_i[0]),
    .Y(\$46y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$47  (
    .A(bm[9]),
    .B(\$46y ),
    .Y(\$47y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(bm[9]),
    .B(addr_i[0]),
    .Y(\$48y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$49y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(addr_i[0]),
    .Y(\$51y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(bm[10]),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(bm[10]),
    .B(addr_i[0]),
    .Y(\$53y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$54y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(addr_i[0]),
    .Y(\$56y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(bm[11]),
    .B(\$56y ),
    .Y(\$57y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(bm[11]),
    .B(addr_i[0]),
    .Y(\$58y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$59y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(addr_i[0]),
    .Y(\$6y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(addr_i[0]),
    .Y(\$61y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(bm[12]),
    .B(\$61y ),
    .Y(\$62y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(bm[12]),
    .B(addr_i[0]),
    .Y(\$63y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$64y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(addr_i[0]),
    .Y(\$66y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$67  (
    .A(bm[13]),
    .B(\$66y ),
    .Y(\$67y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(bm[13]),
    .B(addr_i[0]),
    .Y(\$68y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$69  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$69y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(bm[1]),
    .B(\$6y ),
    .Y(\$7y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$71  (
    .A(addr_i[0]),
    .Y(\$71y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$72  (
    .A(bm[14]),
    .B(\$71y ),
    .Y(\$72y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$73  (
    .A(bm[14]),
    .B(addr_i[0]),
    .Y(\$73y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$74  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$74y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(addr_i[0]),
    .Y(\$76y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(bm[15]),
    .B(\$76y ),
    .Y(\$77y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$78  (
    .A(bm[15]),
    .B(addr_i[0]),
    .Y(\$78y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$79  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$79y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(bm[1]),
    .B(addr_i[0]),
    .Y(\$8y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$81  (
    .A(addr_i[0]),
    .Y(\$81y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(bm[16]),
    .B(\$81y ),
    .Y(\$82y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(bm[16]),
    .B(addr_i[0]),
    .Y(\$83y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$84  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$84y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(addr_i[0]),
    .Y(\$86y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(bm[17]),
    .B(\$86y ),
    .Y(\$87y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$88  (
    .A(bm[17]),
    .B(addr_i[0]),
    .Y(\$88y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$89  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$89y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$9y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(addr_i[0]),
    .Y(\$91y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(bm[18]),
    .B(\$91y ),
    .Y(\$92y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$93  (
    .A(bm[18]),
    .B(addr_i[0]),
    .Y(\$93y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$94y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.39-231.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(addr_i[0]),
    .Y(\$96y )
  );
  /* src = "ihp13/tc_sram_impl.sv:231.28-231.52" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$97  (
    .A(bm[19]),
    .B(\$96y ),
    .Y(\$97y )
  );
  /* src = "ihp13/tc_sram_impl.sv:233.28-233.51" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(bm[19]),
    .B(addr_i[0]),
    .Y(\$98y )
  );
  /* src = "ihp13/tc_sram_impl.sv:235.14-235.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$99  (
    .A(\gen_512x32xBx1.sel_q ),
    .Y(\$99y )
  );
  /* src = "ihp13/tc_sram_impl.sv:246.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$gen_512x32xBx1.sel_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$gen_512x32xBx1.sel_q$166 ),
    .Q(\gen_512x32xBx1.sel_q )
  );
  /* src = "ihp13/tc_sram_impl.sv:248.31-248.46|ihp13/tc_sram_impl.sv:248.12-248.46" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12528  (
    .A(\gen_512x32xBx1.sel_q ),
    .B(addr_i[0]),
    .S(\$procmux$12529_CMP ),
    .Y(\$procmux$12528_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12531  (
    .A(\gen_512x32xBx1.rdata64 [62]),
    .B(\gen_512x32xBx1.rdata64 [63]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12531_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12534  (
    .A(\gen_512x32xBx1.rdata64 [60]),
    .B(\gen_512x32xBx1.rdata64 [61]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12534_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12537  (
    .A(\gen_512x32xBx1.rdata64 [58]),
    .B(\gen_512x32xBx1.rdata64 [59]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12537_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12540  (
    .A(\gen_512x32xBx1.rdata64 [56]),
    .B(\gen_512x32xBx1.rdata64 [57]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12540_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12543  (
    .A(\gen_512x32xBx1.rdata64 [54]),
    .B(\gen_512x32xBx1.rdata64 [55]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12543_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12546  (
    .A(\gen_512x32xBx1.rdata64 [52]),
    .B(\gen_512x32xBx1.rdata64 [53]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12546_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12549  (
    .A(\gen_512x32xBx1.rdata64 [50]),
    .B(\gen_512x32xBx1.rdata64 [51]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12549_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12552  (
    .A(\gen_512x32xBx1.rdata64 [48]),
    .B(\gen_512x32xBx1.rdata64 [49]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12552_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12555  (
    .A(\gen_512x32xBx1.rdata64 [46]),
    .B(\gen_512x32xBx1.rdata64 [47]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12555_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12558  (
    .A(\gen_512x32xBx1.rdata64 [44]),
    .B(\gen_512x32xBx1.rdata64 [45]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12558_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12561  (
    .A(\gen_512x32xBx1.rdata64 [42]),
    .B(\gen_512x32xBx1.rdata64 [43]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12561_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12564  (
    .A(\gen_512x32xBx1.rdata64 [40]),
    .B(\gen_512x32xBx1.rdata64 [41]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12564_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12567  (
    .A(\gen_512x32xBx1.rdata64 [38]),
    .B(\gen_512x32xBx1.rdata64 [39]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12567_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12570  (
    .A(\gen_512x32xBx1.rdata64 [36]),
    .B(\gen_512x32xBx1.rdata64 [37]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12570_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12573  (
    .A(\gen_512x32xBx1.rdata64 [34]),
    .B(\gen_512x32xBx1.rdata64 [35]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12573_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12576  (
    .A(\gen_512x32xBx1.rdata64 [32]),
    .B(\gen_512x32xBx1.rdata64 [33]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12576_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12579  (
    .A(\gen_512x32xBx1.rdata64 [30]),
    .B(\gen_512x32xBx1.rdata64 [31]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12579_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12582  (
    .A(\gen_512x32xBx1.rdata64 [28]),
    .B(\gen_512x32xBx1.rdata64 [29]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12582_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12585  (
    .A(\gen_512x32xBx1.rdata64 [26]),
    .B(\gen_512x32xBx1.rdata64 [27]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12585_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12588  (
    .A(\gen_512x32xBx1.rdata64 [24]),
    .B(\gen_512x32xBx1.rdata64 [25]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12588_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12591  (
    .A(\gen_512x32xBx1.rdata64 [22]),
    .B(\gen_512x32xBx1.rdata64 [23]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12591_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12594  (
    .A(\gen_512x32xBx1.rdata64 [20]),
    .B(\gen_512x32xBx1.rdata64 [21]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12594_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12597  (
    .A(\gen_512x32xBx1.rdata64 [18]),
    .B(\gen_512x32xBx1.rdata64 [19]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12597_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12600  (
    .A(\gen_512x32xBx1.rdata64 [16]),
    .B(\gen_512x32xBx1.rdata64 [17]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12600_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12603  (
    .A(\gen_512x32xBx1.rdata64 [14]),
    .B(\gen_512x32xBx1.rdata64 [15]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12603_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12606  (
    .A(\gen_512x32xBx1.rdata64 [12]),
    .B(\gen_512x32xBx1.rdata64 [13]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12606_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12609  (
    .A(\gen_512x32xBx1.rdata64 [10]),
    .B(\gen_512x32xBx1.rdata64 [11]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12609_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12612  (
    .A(\gen_512x32xBx1.rdata64 [8]),
    .B(\gen_512x32xBx1.rdata64 [9]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12612_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12615  (
    .A(\gen_512x32xBx1.rdata64 [6]),
    .B(\gen_512x32xBx1.rdata64 [7]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12615_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12618  (
    .A(\gen_512x32xBx1.rdata64 [4]),
    .B(\gen_512x32xBx1.rdata64 [5]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12618_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12621  (
    .A(\gen_512x32xBx1.rdata64 [2]),
    .B(\gen_512x32xBx1.rdata64 [3]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12621_Y )
  );
  /* full_case = 32'd1 */
  /* src = "ihp13/tc_sram_impl.sv:236.13-236.42|ihp13/tc_sram_impl.sv:235.11-239.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12624  (
    .A(\gen_512x32xBx1.rdata64 [0]),
    .B(\gen_512x32xBx1.rdata64 [1]),
    .S(\gen_512x32xBx1.sel_q ),
    .Y(\$procmux$12624_Y )
  );
  /* src = "ihp13/tc_sram_impl.sv:251.37" */
  RM_IHPSG13_1P_256x64_c2_bm_bist \gen_512x32xBx1.i_cut  (
    .A_ADDR(addr_i[8:1]),
    .A_BIST_ADDR(8'h00),
    .A_BIST_BM(64'h0000000000000000),
    .A_BIST_CLK(1'h0),
    .A_BIST_DIN(64'h0000000000000000),
    .A_BIST_EN(1'h0),
    .A_BIST_MEN(1'h0),
    .A_BIST_REN(1'h0),
    .A_BIST_WEN(1'h0),
    .A_BM(\gen_512x32xBx1.bm64 ),
    .A_CLK(clk_i),
    .A_DIN(\gen_512x32xBx1.wdata64 ),
    .A_DLY(impl_i),
    .A_DOUT(\gen_512x32xBx1.rdata64 ),
    .A_MEN(req_i),
    .A_REN(\$167y ),
    .A_WEN(we_i)
  );
  assign bm[0] = be_i[0];
  assign bm[1] = be_i[0];
  assign bm[2] = be_i[0];
  assign bm[3] = be_i[0];
  assign bm[4] = be_i[0];
  assign bm[5] = be_i[0];
  assign bm[6] = be_i[0];
  assign bm[7] = be_i[0];
  assign bm[8] = be_i[1];
  assign bm[9] = be_i[1];
  assign bm[10] = be_i[1];
  assign bm[11] = be_i[1];
  assign bm[12] = be_i[1];
  assign bm[13] = be_i[1];
  assign bm[14] = be_i[1];
  assign bm[15] = be_i[1];
  assign bm[16] = be_i[2];
  assign bm[17] = be_i[2];
  assign bm[18] = be_i[2];
  assign bm[19] = be_i[2];
  assign bm[20] = be_i[2];
  assign bm[21] = be_i[2];
  assign bm[22] = be_i[2];
  assign bm[23] = be_i[2];
  assign bm[24] = be_i[3];
  assign bm[25] = be_i[3];
  assign bm[26] = be_i[3];
  assign bm[27] = be_i[3];
  assign bm[28] = be_i[3];
  assign bm[29] = be_i[3];
  assign bm[30] = be_i[3];
  assign bm[31] = be_i[3];
  assign impl_o = 1'hx;
  assign rdata_o = { \$rdata_o[31]$160 , \$rdata_o[30]$155 , \$rdata_o[29]$150 , \$rdata_o[28]$145 , \$rdata_o[27]$140 , \$rdata_o[26]$135 , \$rdata_o[25]$130 , \$rdata_o[24]$125 , \$rdata_o[23]$120 , \$rdata_o[22]$115 , \$rdata_o[21]$110 , \$rdata_o[20]$105 , \$rdata_o[19]$100 , \$rdata_o[18]$95 , \$rdata_o[17]$90 , \$rdata_o[16]$85 , \$rdata_o[15]$80 , \$rdata_o[14]$75 , \$rdata_o[13]$70 , \$rdata_o[12]$65 , \$rdata_o[11]$60 , \$rdata_o[10]$55 , \$rdata_o[9]$50 , \$rdata_o[8]$45 , \$rdata_o[7]$40 , \$rdata_o[6]$35 , \$rdata_o[5]$30 , \$rdata_o[4]$25 , \$rdata_o[3]$20 , \$rdata_o[2]$15 , \$rdata_o[1]$10 , \$rdata_o[0]$5  };
  assign \gen_512x32xBx1.wdata64  = { wdata_i[31], wdata_i[31:30], wdata_i[30:29], wdata_i[29:28], wdata_i[28:27], wdata_i[27:26], wdata_i[26:25], wdata_i[25:24], wdata_i[24:23], wdata_i[23:22], wdata_i[22:21], wdata_i[21:20], wdata_i[20:19], wdata_i[19:18], wdata_i[18:17], wdata_i[17:16], wdata_i[16:15], wdata_i[15:14], wdata_i[14:13], wdata_i[13:12], wdata_i[12:11], wdata_i[11:10], wdata_i[10:9], wdata_i[9:8], wdata_i[8:7], wdata_i[7:6], wdata_i[6:5], wdata_i[5:4], wdata_i[4:3], wdata_i[3:2], wdata_i[2:1], wdata_i[1:0], wdata_i[0] };
  assign \gen_512x32xBx1.bm64  = { \$158y , \$157y , \$153y , \$152y , \$148y , \$147y , \$143y , \$142y , \$138y , \$137y , \$133y , \$132y , \$128y , \$127y , \$123y , \$122y , \$118y , \$117y , \$113y , \$112y , \$108y , \$107y , \$103y , \$102y , \$98y , \$97y , \$93y , \$92y , \$88y , \$87y , \$83y , \$82y , \$78y , \$77y , \$73y , \$72y , \$68y , \$67y , \$63y , \$62y , \$58y , \$57y , \$53y , \$52y , \$48y , \$47y , \$43y , \$42y , \$38y , \$37y , \$33y , \$32y , \$28y , \$27y , \$23y , \$22y , \$18y , \$17y , \$13y , \$12y , \$8y , \$7y , \$3y , \$2y  };
  assign \gen_512x32xBx1.sel_d  = addr_i[0];
  assign \$procmux$12529_CMP  = \$165y ;
  assign \$gen_512x32xBx1.sel_q$166  = \$procmux$12528_Y ;
  assign \$procmux$12532_CMP  = \$159y ;
  assign \$rdata_o[31]$160  = \$procmux$12531_Y ;
  assign \$procmux$12535_CMP  = \$154y ;
  assign \$rdata_o[30]$155  = \$procmux$12534_Y ;
  assign \$procmux$12538_CMP  = \$149y ;
  assign \$rdata_o[29]$150  = \$procmux$12537_Y ;
  assign \$procmux$12541_CMP  = \$144y ;
  assign \$rdata_o[28]$145  = \$procmux$12540_Y ;
  assign \$procmux$12544_CMP  = \$139y ;
  assign \$rdata_o[27]$140  = \$procmux$12543_Y ;
  assign \$procmux$12547_CMP  = \$134y ;
  assign \$rdata_o[26]$135  = \$procmux$12546_Y ;
  assign \$procmux$12550_CMP  = \$129y ;
  assign \$rdata_o[25]$130  = \$procmux$12549_Y ;
  assign \$procmux$12553_CMP  = \$124y ;
  assign \$rdata_o[24]$125  = \$procmux$12552_Y ;
  assign \$procmux$12556_CMP  = \$119y ;
  assign \$rdata_o[23]$120  = \$procmux$12555_Y ;
  assign \$procmux$12559_CMP  = \$114y ;
  assign \$rdata_o[22]$115  = \$procmux$12558_Y ;
  assign \$procmux$12562_CMP  = \$109y ;
  assign \$rdata_o[21]$110  = \$procmux$12561_Y ;
  assign \$procmux$12565_CMP  = \$104y ;
  assign \$rdata_o[20]$105  = \$procmux$12564_Y ;
  assign \$procmux$12568_CMP  = \$99y ;
  assign \$rdata_o[19]$100  = \$procmux$12567_Y ;
  assign \$procmux$12571_CMP  = \$94y ;
  assign \$rdata_o[18]$95  = \$procmux$12570_Y ;
  assign \$procmux$12574_CMP  = \$89y ;
  assign \$rdata_o[17]$90  = \$procmux$12573_Y ;
  assign \$procmux$12577_CMP  = \$84y ;
  assign \$rdata_o[16]$85  = \$procmux$12576_Y ;
  assign \$procmux$12580_CMP  = \$79y ;
  assign \$rdata_o[15]$80  = \$procmux$12579_Y ;
  assign \$procmux$12583_CMP  = \$74y ;
  assign \$rdata_o[14]$75  = \$procmux$12582_Y ;
  assign \$procmux$12586_CMP  = \$69y ;
  assign \$rdata_o[13]$70  = \$procmux$12585_Y ;
  assign \$procmux$12589_CMP  = \$64y ;
  assign \$rdata_o[12]$65  = \$procmux$12588_Y ;
  assign \$procmux$12592_CMP  = \$59y ;
  assign \$rdata_o[11]$60  = \$procmux$12591_Y ;
  assign \$procmux$12595_CMP  = \$54y ;
  assign \$rdata_o[10]$55  = \$procmux$12594_Y ;
  assign \$procmux$12598_CMP  = \$49y ;
  assign \$rdata_o[9]$50  = \$procmux$12597_Y ;
  assign \$procmux$12601_CMP  = \$44y ;
  assign \$rdata_o[8]$45  = \$procmux$12600_Y ;
  assign \$procmux$12604_CMP  = \$39y ;
  assign \$rdata_o[7]$40  = \$procmux$12603_Y ;
  assign \$procmux$12607_CMP  = \$34y ;
  assign \$rdata_o[6]$35  = \$procmux$12606_Y ;
  assign \$procmux$12610_CMP  = \$29y ;
  assign \$rdata_o[5]$30  = \$procmux$12609_Y ;
  assign \$procmux$12613_CMP  = \$24y ;
  assign \$rdata_o[4]$25  = \$procmux$12612_Y ;
  assign \$procmux$12616_CMP  = \$19y ;
  assign \$rdata_o[3]$20  = \$procmux$12615_Y ;
  assign \$procmux$12619_CMP  = \$14y ;
  assign \$rdata_o[2]$15  = \$procmux$12618_Y ;
  assign \$procmux$12622_CMP  = \$9y ;
  assign \$rdata_o[1]$10  = \$procmux$12621_Y ;
  assign \$procmux$12625_CMP  = \$4y ;
  assign \$rdata_o[0]$5  = \$procmux$12624_Y ;
  assign \$163y  = rst_ni;
endmodule

/* src = "rtl/timer_unit/timer_unit.sv:37.8" */
module \timer_unit$croc_chip.i_croc_soc.i_croc.i_timer (clk_i, rst_ni, ref_clk_i, req_i, addr_i, wdata_i, be_i, wen_i, id_i, gnt_o, r_rdata_o, r_opc_o, r_id_o, r_valid_o, event_lo_i, event_hi_i, irq_lo_o, irq_hi_o, busy_o);
  wire \$101y ;
  wire \$102y ;
  wire \$103y ;
  wire \$104y ;
  wire \$105y ;
  wire \$106y ;
  wire \$107y ;
  wire \$109y ;
  wire \$110y ;
  wire \$111y ;
  wire \$112y ;
  wire \$113y ;
  wire \$118y ;
  wire \$119y ;
  wire \$11y ;
  wire \$121y ;
  wire \$122y ;
  wire \$125y ;
  wire \$126y ;
  wire \$127y ;
  wire \$128y ;
  wire \$129y ;
  wire \$12y ;
  wire \$130y ;
  wire \$131y ;
  wire \$132y ;
  wire \$133y ;
  wire \$134y ;
  wire \$143y ;
  wire \$144y ;
  wire \$145y ;
  wire \$146y ;
  wire \$147y ;
  wire \$148y ;
  wire \$149y ;
  wire \$14y ;
  wire \$150y ;
  wire \$151y ;
  wire \$152y ;
  wire \$15y ;
  wire \$161y ;
  wire \$162y ;
  wire \$163y ;
  wire \$164y ;
  wire \$165y ;
  wire \$166y ;
  wire \$167y ;
  wire \$168y ;
  wire \$169y ;
  wire \$170y ;
  wire \$171y ;
  wire \$172y ;
  wire \$173y ;
  wire \$174y ;
  wire \$175y ;
  wire \$176y ;
  wire \$177y ;
  wire \$178y ;
  wire \$179y ;
  wire \$180y ;
  wire \$194y ;
  wire \$195y ;
  wire \$196y ;
  wire \$197y ;
  wire \$198y ;
  wire \$1y ;
  wire \$202y ;
  wire \$203y ;
  wire \$204y ;
  wire \$205y ;
  wire \$206y ;
  wire \$207y ;
  wire \$208y ;
  wire \$209y ;
  wire \$210y ;
  wire \$211y ;
  wire \$212y ;
  wire \$2y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$46y ;
  wire \$47y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$54y ;
  wire \$55y ;
  wire \$56y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$60y ;
  wire \$61y ;
  wire \$62y ;
  wire \$63y ;
  wire \$64y ;
  wire \$65y ;
  wire \$66y ;
  wire \$67y ;
  wire \$68y ;
  wire \$6y ;
  wire \$72y ;
  wire \$74y ;
  wire \$77y ;
  wire \$78y ;
  wire \$80y ;
  wire \$84y ;
  wire \$85y ;
  wire \$86y ;
  wire \$87y ;
  wire \$88y ;
  wire \$89y ;
  wire \$90y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$95y ;
  wire \$96y ;
  /* src = "rtl/timer_unit/timer_unit.sv:116.9-119.20" */
  wire [1:0] \$NS$5 ;
  /* src = "rtl/timer_unit/timer_unit.sv:125.9-128.20" */
  wire [1:0] \$NS$7 ;
  /* src = "rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  wire [1:0] \$NS$8 ;
  /* src = "rtl/timer_unit/timer_unit.sv:473.2-481.7" */
  wire \$irq_hi_o$200 ;
  /* src = "rtl/timer_unit/timer_unit.sv:473.2-481.7" */
  wire \$irq_lo_o$199 ;
  wire [31:0] \$procmux$11947_Y ;
  wire \$procmux$11948_CMP ;
  wire \$procmux$11949_CMP ;
  wire \$procmux$11950_CMP ;
  wire \$procmux$11951_CMP ;
  wire \$procmux$11952_CMP ;
  wire \$procmux$11953_CMP ;
  wire [31:0] \$procmux$11954_Y ;
  wire \$procmux$11955_CMP ;
  wire [31:0] \$procmux$11957_Y ;
  wire \$procmux$11958_CMP ;
  wire \$procmux$11960_Y ;
  wire \$procmux$11961_CMP ;
  wire \$procmux$11963_Y ;
  wire \$procmux$11964_CMP ;
  wire \$procmux$11966_Y ;
  wire \$procmux$11967_CMP ;
  wire \$procmux$11969_Y ;
  wire \$procmux$11970_CMP ;
  wire \$procmux$11971_Y ;
  wire \$procmux$11972_CMP ;
  wire \$procmux$11974_Y ;
  wire \$procmux$11975_CMP ;
  wire \$procmux$11977_Y ;
  wire \$procmux$11978_CMP ;
  wire \$procmux$11981_Y ;
  wire \$procmux$11982_CMP ;
  wire \$procmux$11984_Y ;
  wire \$procmux$11985_CMP ;
  wire \$procmux$11988_Y ;
  wire \$procmux$11989_CMP ;
  wire \$procmux$11990_Y ;
  wire \$procmux$11991_CMP ;
  wire \$procmux$11993_Y ;
  wire \$procmux$11994_CMP ;
  wire \$procmux$11996_Y ;
  wire \$procmux$11997_CMP ;
  wire \$procmux$12001_Y ;
  wire \$procmux$12002_CMP ;
  wire \$procmux$12004_Y ;
  wire \$procmux$12005_CMP ;
  wire \$procmux$12007_Y ;
  wire \$procmux$12008_CMP ;
  wire \$procmux$12009_Y ;
  wire \$procmux$12010_CMP ;
  wire \$procmux$12012_Y ;
  wire \$procmux$12013_CMP ;
  wire \$procmux$12016_Y ;
  wire \$procmux$12017_CMP ;
  wire [31:0] \$procmux$12022_Y ;
  wire \$procmux$12023_CMP ;
  wire [31:0] \$procmux$12024_Y ;
  wire \$procmux$12025_CMP ;
  wire [31:0] \$procmux$12031_Y ;
  wire \$procmux$12032_CMP ;
  wire [31:0] \$procmux$12033_Y ;
  wire \$procmux$12034_CMP ;
  wire [31:0] \$procmux$12043_Y ;
  wire \$procmux$12044_CMP ;
  wire [31:0] \$procmux$12045_Y ;
  wire \$procmux$12046_CMP ;
  wire [31:0] \$procmux$12056_Y ;
  wire \$procmux$12057_CMP ;
  wire [31:0] \$procmux$12058_Y ;
  wire \$procmux$12059_CMP ;
  wire \$procmux$12060_Y ;
  wire \$procmux$12061_CMP ;
  wire \$procmux$12062_Y ;
  wire \$procmux$12063_CMP ;
  wire \$procmux$12065_Y ;
  wire \$procmux$12066_CMP ;
  wire \$procmux$12067_Y ;
  wire \$procmux$12068_CMP ;
  wire \$procmux$12071_Y ;
  wire \$procmux$12072_CMP ;
  wire \$procmux$12073_Y ;
  wire \$procmux$12074_CMP ;
  wire \$procmux$12078_Y ;
  wire \$procmux$12079_CMP ;
  wire \$procmux$12080_Y ;
  wire \$procmux$12081_CMP ;
  wire \$procmux$12088_Y ;
  wire \$procmux$12089_CMP ;
  wire \$procmux$12090_Y ;
  wire \$procmux$12091_CMP ;
  wire \$procmux$12099_Y ;
  wire \$procmux$12100_CMP ;
  wire \$procmux$12101_Y ;
  wire \$procmux$12102_CMP ;
  wire [31:0] \$procmux$12104_Y ;
  wire \$procmux$12105_CMP ;
  wire [31:0] \$procmux$12107_Y ;
  wire \$procmux$12108_CMP ;
  wire [31:0] \$procmux$12110_Y ;
  wire \$procmux$12111_CMP ;
  wire [31:0] \$procmux$12113_Y ;
  wire \$procmux$12114_CMP ;
  wire \$procmux$12116_Y ;
  wire \$procmux$12117_CMP ;
  wire \$procmux$12119_Y ;
  wire \$procmux$12120_CMP ;
  wire \$procmux$12122_Y ;
  wire \$procmux$12123_CMP ;
  wire \$procmux$12125_Y ;
  wire \$procmux$12126_CMP ;
  wire \$procmux$12128_Y ;
  wire \$procmux$12129_CMP ;
  wire \$procmux$12131_Y ;
  wire \$procmux$12132_CMP ;
  wire \$procmux$12134_Y ;
  wire \$procmux$12135_CMP ;
  wire \$procmux$12137_Y ;
  wire \$procmux$12138_CMP ;
  wire \$procmux$12140_Y ;
  wire \$procmux$12141_CMP ;
  wire \$procmux$12142_Y ;
  wire \$procmux$12143_CMP ;
  wire \$procmux$12145_Y ;
  wire \$procmux$12146_CMP ;
  wire \$procmux$12148_Y ;
  wire \$procmux$12149_CMP ;
  wire \$procmux$12151_Y ;
  wire \$procmux$12152_CMP ;
  wire \$procmux$12153_Y ;
  wire \$procmux$12154_CMP ;
  wire \$procmux$12158_Y ;
  wire \$procmux$12159_CMP ;
  wire \$procmux$12161_Y ;
  wire \$procmux$12162_CMP ;
  wire \$procmux$12163_Y ;
  wire \$procmux$12164_CMP ;
  wire \$procmux$12167_Y ;
  wire \$procmux$12168_CMP ;
  wire \$procmux$12170_Y ;
  wire \$procmux$12171_CMP ;
  wire \$procmux$12172_Y ;
  wire \$procmux$12173_CMP ;
  wire \$procmux$12176_Y ;
  wire \$procmux$12177_CMP ;
  wire \$procmux$12179_Y ;
  wire \$procmux$12180_CMP ;
  wire \$procmux$12181_Y ;
  wire \$procmux$12182_CMP ;
  wire \$procmux$12185_Y ;
  wire \$procmux$12186_CMP ;
  wire \$procmux$12188_Y ;
  wire \$procmux$12189_CMP ;
  wire \$procmux$12190_Y ;
  wire \$procmux$12191_CMP ;
  wire \$procmux$12194_Y ;
  wire \$procmux$12195_CMP ;
  wire \$procmux$12196_Y ;
  wire \$procmux$12197_CMP ;
  wire \$procmux$12200_Y ;
  wire \$procmux$12201_CMP ;
  wire \$procmux$12202_Y ;
  wire \$procmux$12203_CMP ;
  wire \$procmux$12206_Y ;
  wire \$procmux$12207_CMP ;
  wire \$procmux$12208_Y ;
  wire \$procmux$12209_CMP ;
  wire \$procmux$12212_Y ;
  wire \$procmux$12213_CMP ;
  wire \$procmux$12216_Y ;
  wire \$procmux$12217_CMP ;
  wire \$procmux$12220_Y ;
  wire \$procmux$12221_CMP ;
  wire \$procmux$12223_Y ;
  wire \$procmux$12224_CMP ;
  wire \$procmux$12226_Y ;
  wire \$procmux$12227_CMP ;
  wire \$procmux$12229_Y ;
  wire \$procmux$12230_CMP ;
  wire \$procmux$12231_Y ;
  wire \$procmux$12232_CMP ;
  wire \$procmux$12236_Y ;
  wire \$procmux$12237_CMP ;
  wire \$procmux$12239_Y ;
  wire \$procmux$12240_CMP ;
  wire \$procmux$12241_Y ;
  wire \$procmux$12242_CMP ;
  wire \$procmux$12245_Y ;
  wire \$procmux$12246_CMP ;
  wire \$procmux$12248_Y ;
  wire \$procmux$12249_CMP ;
  wire \$procmux$12250_Y ;
  wire \$procmux$12251_CMP ;
  wire \$procmux$12254_Y ;
  wire \$procmux$12255_CMP ;
  wire \$procmux$12257_Y ;
  wire \$procmux$12258_CMP ;
  wire \$procmux$12259_Y ;
  wire \$procmux$12260_CMP ;
  wire \$procmux$12263_Y ;
  wire \$procmux$12264_CMP ;
  wire \$procmux$12265_Y ;
  wire \$procmux$12266_CMP ;
  wire \$procmux$12269_Y ;
  wire \$procmux$12270_CMP ;
  wire \$procmux$12271_Y ;
  wire \$procmux$12272_CMP ;
  wire \$procmux$12275_Y ;
  wire \$procmux$12276_CMP ;
  wire \$procmux$12279_Y ;
  wire \$procmux$12280_CMP ;
  wire \$procmux$12282_Y ;
  wire \$procmux$12283_CMP ;
  wire \$procmux$12285_Y ;
  wire \$procmux$12286_CMP ;
  wire \$procmux$12288_Y ;
  wire \$procmux$12289_CMP ;
  wire \$procmux$12290_Y ;
  wire \$procmux$12291_CMP ;
  wire \$procmux$12295_Y ;
  wire \$procmux$12296_CMP ;
  wire \$procmux$12298_Y ;
  wire \$procmux$12299_CMP ;
  wire \$procmux$12300_Y ;
  wire \$procmux$12301_CMP ;
  wire \$procmux$12304_Y ;
  wire \$procmux$12305_CMP ;
  wire \$procmux$12307_Y ;
  wire \$procmux$12308_CMP ;
  wire \$procmux$12309_Y ;
  wire \$procmux$12310_CMP ;
  wire \$procmux$12313_Y ;
  wire \$procmux$12314_CMP ;
  wire \$procmux$12316_Y ;
  wire \$procmux$12317_CMP ;
  wire \$procmux$12318_Y ;
  wire \$procmux$12319_CMP ;
  wire \$procmux$12322_Y ;
  wire \$procmux$12323_CMP ;
  wire \$procmux$12324_Y ;
  wire \$procmux$12325_CMP ;
  wire \$procmux$12328_Y ;
  wire \$procmux$12329_CMP ;
  wire \$procmux$12330_Y ;
  wire \$procmux$12331_CMP ;
  wire \$procmux$12333_Y ;
  wire \$procmux$12334_CMP ;
  wire \$procmux$12336_Y ;
  wire \$procmux$12337_CMP ;
  wire [1:0] \$procmux$12340_Y ;
  wire \$procmux$12341_CMP ;
  wire [1:0] \$procmux$12342_Y ;
  wire \$procmux$12343_CMP ;
  wire [1:0] \$procmux$12346_Y ;
  wire \$procmux$12347_CMP ;
  wire \$procmux$12349_CMP ;
  wire [1:0] \$procmux$12353_Y ;
  wire \$procmux$12354_CMP ;
  wire [1:0] \$procmux$12355_Y ;
  wire \$procmux$12356_CMP ;
  wire \$procmux$12359_Y ;
  wire \$procmux$12360_CMP ;
  wire \$procmux$12362_Y ;
  wire \$procmux$12363_CMP ;
  wire \$procmux$12365_Y ;
  wire \$procmux$12366_CMP ;
  wire \$procmux$12367_Y ;
  wire \$procmux$12368_CMP ;
  wire \$procmux$12370_Y ;
  wire \$procmux$12371_CMP ;
  wire \$procmux$12373_Y ;
  wire \$procmux$12374_CMP ;
  wire \$procmux$12378_Y ;
  wire \$procmux$12379_CMP ;
  wire \$procmux$12381_Y ;
  wire \$procmux$12382_CMP ;
  wire \$procmux$12384_Y ;
  wire \$procmux$12385_CMP ;
  wire \$procmux$12386_Y ;
  wire \$procmux$12387_CMP ;
  wire \$procmux$12389_Y ;
  wire \$procmux$12390_CMP ;
  wire \$procmux$12393_Y ;
  wire \$procmux$12394_CMP ;
  wire \$procmux$12397_Y ;
  wire \$procmux$12398_CMP ;
  wire \$procmux$12399_Y ;
  wire \$procmux$12400_CMP ;
  wire \$procmux$12402_Y ;
  wire \$procmux$12403_CMP ;
  wire \$procmux$12405_Y ;
  wire \$procmux$12406_CMP ;
  wire \$procmux$12410_Y ;
  wire \$procmux$12411_CMP ;
  wire \$procmux$12413_Y ;
  wire \$procmux$12414_CMP ;
  wire \$procmux$12416_Y ;
  wire \$procmux$12417_CMP ;
  wire \$procmux$12418_Y ;
  wire \$procmux$12419_CMP ;
  wire \$procmux$12421_Y ;
  wire \$procmux$12422_CMP ;
  wire \$procmux$12425_Y ;
  wire \$procmux$12426_CMP ;
  wire \$procmux$12428_Y ;
  wire \$procmux$12429_CMP ;
  /* src = "rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  wire [31:0] \$r_rdata_o$81 ;
  /* src = "rtl/timer_unit/timer_unit.sv:282.9-307.14" */
  wire [31:0] \$r_rdata_o$82 ;
  /* src = "rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  wire \$r_valid_o$9 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire [31:0] \$s_cfg_hi$23 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire [31:0] \$s_cfg_hi$33 ;
  /* src = "rtl/timer_unit/timer_unit.sv:243.7-244.37" */
  wire \$s_cfg_hi[0]$69 ;
  /* src = "rtl/timer_unit/timer_unit.sv:240.7-245.9" */
  wire \$s_cfg_hi[0]$70 ;
  /* src = "rtl/timer_unit/timer_unit.sv:236.2-246.7" */
  wire \$s_cfg_hi[0]$71 ;
  /* src = "rtl/timer_unit/timer_unit.sv:253.2-254.32" */
  wire \$s_cfg_hi[1]$75 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire [31:0] \$s_cfg_lo$22 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire [31:0] \$s_cfg_lo$32 ;
  /* src = "rtl/timer_unit/timer_unit.sv:225.5-226.33" */
  wire \$s_cfg_lo[0]$45 ;
  /* src = "rtl/timer_unit/timer_unit.sv:230.6-231.33" */
  wire \$s_cfg_lo[0]$51 ;
  /* src = "rtl/timer_unit/timer_unit.sv:223.7-232.12" */
  wire \$s_cfg_lo[0]$52 ;
  /* src = "rtl/timer_unit/timer_unit.sv:219.2-233.7" */
  wire \$s_cfg_lo[0]$53 ;
  /* src = "rtl/timer_unit/timer_unit.sv:249.2-250.32" */
  wire \$s_cfg_lo[1]$73 ;
  /* src = "rtl/timer_unit/timer_unit.sv:427.4-436.9" */
  wire \$s_enable_count_hi$153 ;
  /* src = "rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  wire \$s_enable_count_hi$155 ;
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  wire \$s_enable_count_hi$157 ;
  /* src = "rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  wire \$s_enable_count_hi$159 ;
  /* src = "rtl/timer_unit/timer_unit.sv:452.14-463.6" */
  wire \$s_enable_count_hi$182 ;
  /* src = "rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  wire \$s_enable_count_hi$185 ;
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  wire \$s_enable_count_hi$188 ;
  /* src = "rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  wire \$s_enable_count_hi$191 ;
  /* src = "rtl/timer_unit/timer_unit.sv:402.4-411.9" */
  wire \$s_enable_count_lo$135 ;
  /* src = "rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  wire \$s_enable_count_lo$137 ;
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  wire \$s_enable_count_lo$139 ;
  /* src = "rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  wire \$s_enable_count_lo$141 ;
  /* src = "rtl/timer_unit/timer_unit.sv:452.14-463.6" */
  wire \$s_enable_count_lo$181 ;
  /* src = "rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  wire \$s_enable_count_lo$184 ;
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  wire \$s_enable_count_lo$187 ;
  /* src = "rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  wire \$s_enable_count_lo$190 ;
  /* src = "rtl/timer_unit/timer_unit.sv:427.4-436.9" */
  wire \$s_enable_count_prescaler_hi$154 ;
  /* src = "rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  wire \$s_enable_count_prescaler_hi$156 ;
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  wire \$s_enable_count_prescaler_hi$158 ;
  /* src = "rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  wire \$s_enable_count_prescaler_hi$160 ;
  /* src = "rtl/timer_unit/timer_unit.sv:402.4-411.9" */
  wire \$s_enable_count_prescaler_lo$136 ;
  /* src = "rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  wire \$s_enable_count_prescaler_lo$138 ;
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  wire \$s_enable_count_prescaler_lo$140 ;
  /* src = "rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  wire \$s_enable_count_prescaler_lo$142 ;
  /* src = "rtl/timer_unit/timer_unit.sv:452.14-463.6" */
  wire \$s_enable_count_prescaler_lo$183 ;
  /* src = "rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  wire \$s_enable_count_prescaler_lo$186 ;
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  wire \$s_enable_count_prescaler_lo$189 ;
  /* src = "rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  wire \$s_enable_count_prescaler_lo$192 ;
  /* src = "rtl/timer_unit/timer_unit.sv:355.5-358.10" */
  wire \$s_reset_count_hi$108 ;
  /* src = "rtl/timer_unit/timer_unit.sv:362.5-365.10" */
  wire \$s_reset_count_hi$114 ;
  /* src = "rtl/timer_unit/timer_unit.sv:353.7-366.12" */
  wire \$s_reset_count_hi$115 ;
  /* src = "rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  wire \$s_reset_count_hi$116 ;
  /* src = "rtl/timer_unit/timer_unit.sv:332.5-335.10" */
  wire \$s_reset_count_lo$91 ;
  /* src = "rtl/timer_unit/timer_unit.sv:339.6-342.10" */
  wire \$s_reset_count_lo$97 ;
  /* src = "rtl/timer_unit/timer_unit.sv:330.7-343.12" */
  wire \$s_reset_count_lo$98 ;
  /* src = "rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  wire \$s_reset_count_lo$99 ;
  /* src = "rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  wire \$s_reset_count_prescaler_hi$117 ;
  /* src = "rtl/timer_unit/timer_unit.sv:374.2-377.7" */
  wire \$s_reset_count_prescaler_hi$123 ;
  /* src = "rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  wire \$s_reset_count_prescaler_lo$100 ;
  /* src = "rtl/timer_unit/timer_unit.sv:369.2-372.7" */
  wire \$s_reset_count_prescaler_lo$120 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_reset_timer_hi$21 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_reset_timer_hi$31 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_reset_timer_lo$20 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_reset_timer_lo$30 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_start_timer_hi$19 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_start_timer_hi$29 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_start_timer_lo$18 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_start_timer_lo$28 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire [31:0] \$s_timer_cmp_hi$25 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire [31:0] \$s_timer_cmp_hi$35 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire [31:0] \$s_timer_cmp_lo$24 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire [31:0] \$s_timer_cmp_lo$34 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_write_counter_hi$17 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_write_counter_hi$27 ;
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  wire \$s_write_counter_lo$16 ;
  /* src = "rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  wire \$s_write_counter_lo$26 ;
  /* src = "rtl/timer_unit/timer_unit.sv:91.56" */
  wire [1:0] CS;
  /* src = "rtl/timer_unit/timer_unit.sv:91.60" */
  wire [1:0] NS;
  /* src = "rtl/timer_unit/timer_unit.sv:48.39" */
  input [31:0] addr_i;
  wire [31:0] addr_i;
  /* src = "rtl/timer_unit/timer_unit.sv:51.39" */
  input [3:0] be_i;
  wire [3:0] be_i;
  /* src = "rtl/timer_unit/timer_unit.sv:66.39" */
  output busy_o;
  wire busy_o;
  /* src = "rtl/timer_unit/timer_unit.sv:42.39" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/timer_unit/timer_unit.sv:61.39" */
  input event_hi_i;
  wire event_hi_i;
  /* src = "rtl/timer_unit/timer_unit.sv:60.39" */
  input event_lo_i;
  wire event_lo_i;
  /* src = "rtl/timer_unit/timer_unit.sv:53.39" */
  output gnt_o;
  wire gnt_o;
  /* src = "rtl/timer_unit/timer_unit.sv:52.39" */
  input [2:0] id_i;
  wire [2:0] id_i;
  /* src = "rtl/timer_unit/timer_unit.sv:64.39" */
  output irq_hi_o;
  wire irq_hi_o;
  /* src = "rtl/timer_unit/timer_unit.sv:63.39" */
  output irq_lo_o;
  wire irq_lo_o;
  /* src = "rtl/timer_unit/timer_unit.sv:57.39" */
  output [2:0] r_id_o;
  wire [2:0] r_id_o;
  /* src = "rtl/timer_unit/timer_unit.sv:56.39" */
  output r_opc_o;
  wire r_opc_o;
  /* src = "rtl/timer_unit/timer_unit.sv:58.39" */
  output [31:0] r_rdata_o;
  wire [31:0] r_rdata_o;
  /* src = "rtl/timer_unit/timer_unit.sv:55.39" */
  output r_valid_o;
  wire r_valid_o;
  /* src = "rtl/timer_unit/timer_unit.sv:45.39" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/timer_unit/timer_unit.sv:47.39" */
  input req_i;
  wire req_i;
  /* src = "rtl/timer_unit/timer_unit.sv:43.39" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/timer_unit/timer_unit.sv:70.25" */
  wire [31:0] s_addr;
  /* src = "rtl/timer_unit/timer_unit.sv:80.25" */
  wire [31:0] s_cfg_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:80.35" */
  wire [31:0] s_cfg_hi_reg;
  /* src = "rtl/timer_unit/timer_unit.sv:79.25" */
  wire [31:0] s_cfg_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:79.35" */
  wire [31:0] s_cfg_lo_reg;
  /* src = "rtl/timer_unit/timer_unit.sv:89.37" */
  wire s_clear_reset_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:89.19" */
  wire s_clear_reset_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:77.43" */
  wire [31:0] s_counter_val_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:77.25" */
  wire [31:0] s_counter_val_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:86.37" */
  wire s_enable_count_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:86.19" */
  wire s_enable_count_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:86.83" */
  wire s_enable_count_prescaler_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:86.55" */
  wire s_enable_count_prescaler_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:75.19" */
  wire s_ref_clk0;
  /* src = "rtl/timer_unit/timer_unit.sv:75.31" */
  wire s_ref_clk1;
  /* src = "rtl/timer_unit/timer_unit.sv:75.43" */
  wire s_ref_clk2;
  /* src = "rtl/timer_unit/timer_unit.sv:75.55" */
  wire s_ref_clk3;
  /* src = "rtl/timer_unit/timer_unit.sv:75.67" */
  wire s_ref_clk_edge;
  /* src = "rtl/timer_unit/timer_unit.sv:75.83" */
  wire s_ref_clk_edge_del;
  /* src = "rtl/timer_unit/timer_unit.sv:69.19" */
  wire s_req;
  /* src = "rtl/timer_unit/timer_unit.sv:87.36" */
  wire s_reset_count_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:87.19" */
  wire s_reset_count_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:87.80" */
  wire s_reset_count_prescaler_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:87.53" */
  wire s_reset_count_prescaler_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:73.70" */
  wire s_reset_timer_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:73.53" */
  wire s_reset_timer_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:73.36" */
  wire s_start_timer_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:73.19" */
  wire s_start_timer_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:88.39" */
  wire s_target_reached_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:88.19" */
  wire s_target_reached_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:88.90" */
  wire s_target_reached_prescaler_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:88.59" */
  wire s_target_reached_prescaler_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:84.25" */
  wire [31:0] s_timer_cmp_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:84.41" */
  wire [31:0] s_timer_cmp_hi_reg;
  /* src = "rtl/timer_unit/timer_unit.sv:83.25" */
  wire [31:0] s_timer_cmp_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:83.41" */
  wire [31:0] s_timer_cmp_lo_reg;
  /* src = "rtl/timer_unit/timer_unit.sv:82.25" */
  wire [31:0] s_timer_val_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:81.25" */
  wire [31:0] s_timer_val_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:69.25" */
  wire s_wen;
  /* src = "rtl/timer_unit/timer_unit.sv:72.39" */
  wire s_write_counter_hi;
  /* src = "rtl/timer_unit/timer_unit.sv:72.19" */
  wire s_write_counter_lo;
  /* src = "rtl/timer_unit/timer_unit.sv:50.39" */
  input [31:0] wdata_i;
  wire [31:0] wdata_i;
  /* src = "rtl/timer_unit/timer_unit.sv:49.39" */
  input wen_i;
  wire wen_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:346.7-346.66" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$103  (
    .A(\$101y ),
    .B(\$102y ),
    .Y(\$103y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:353.12-353.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$104  (
    .A(s_cfg_lo_reg[31]),
    .Y(\$104y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:355.10-355.83" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$107  (
    .A(\$105y ),
    .B(\$106y ),
    .Y(\$107y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(rst_ni),
    .Y(\$11y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:362.10-362.83" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$111  (
    .A(\$109y ),
    .B(\$110y ),
    .Y(\$111y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:362.10-362.119" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$113  (
    .A(\$111y ),
    .B(\$112y ),
    .Y(\$113y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:369.7-369.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$119  (
    .A(s_cfg_lo_reg[6]),
    .B(\$118y ),
    .Y(\$119y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:374.7-374.87" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$122  (
    .A(s_cfg_hi_reg[6]),
    .B(\$121y ),
    .Y(\$122y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.12-392.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$126  (
    .A(s_cfg_lo_reg[6]),
    .Y(\$126y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.55-392.92" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$127  (
    .A(s_cfg_lo_reg[7]),
    .Y(\$127y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.12-392.92" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$128  (
    .A(\$126y ),
    .B(\$127y ),
    .Y(\$128y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:397.14-397.53" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$129  (
    .A(s_cfg_lo_reg[6]),
    .Y(\$129y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:397.14-397.94" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$131  (
    .A(\$129y ),
    .B(\$130y ),
    .Y(\$131y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:402.9-402.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$134  (
    .A(\$132y ),
    .B(\$133y ),
    .Y(\$134y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:180.22-180.28" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(wen_i),
    .Y(\$14y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.12-417.51" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$144  (
    .A(s_cfg_hi_reg[6]),
    .Y(\$144y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.55-417.92" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$145  (
    .A(s_cfg_hi_reg[7]),
    .Y(\$145y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.12-417.92" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$146  (
    .A(\$144y ),
    .B(\$145y ),
    .Y(\$146y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:422.14-422.53" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$147  (
    .A(s_cfg_hi_reg[6]),
    .Y(\$147y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:422.14-422.94" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$149  (
    .A(\$147y ),
    .B(\$148y ),
    .Y(\$149y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:180.13-180.28" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$15  (
    .A(req_i),
    .B(\$14y ),
    .Y(\$15y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:427.9-427.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$152  (
    .A(\$150y ),
    .B(\$151y ),
    .Y(\$152y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:440.7-440.86" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$163  (
    .A(\$161y ),
    .B(\$162y ),
    .Y(\$163y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.13-442.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$164  (
    .A(s_cfg_lo_reg[6]),
    .Y(\$164y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.58-442.95" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$165  (
    .A(s_cfg_lo_reg[7]),
    .Y(\$165y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.11-442.95" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$166  (
    .A(\$164y ),
    .B(\$165y ),
    .Y(\$166y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:445.28-445.58" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$167  (
    .A(s_timer_val_lo),
    .B(32'd4294967295),
    .Y(\$167y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:447.16-447.55" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$168  (
    .A(s_cfg_lo_reg[6]),
    .Y(\$168y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:447.16-447.96" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$170  (
    .A(\$168y ),
    .B(\$169y ),
    .Y(\$170y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:450.50-450.80" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$171  (
    .A(s_timer_val_lo),
    .B(32'd4294967295),
    .Y(\$171y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:450.26-450.82" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$172  (
    .A(s_ref_clk_edge_del),
    .B(\$171y ),
    .Y(\$172y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:452.19-452.99" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$175  (
    .A(\$173y ),
    .B(\$174y ),
    .Y(\$175y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:456.30-456.81" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$176  (
    .A(s_target_reached_prescaler_lo),
    .B(s_ref_clk_edge_del),
    .Y(\$176y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:456.87-456.117" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$177  (
    .A(s_timer_val_lo),
    .B(32'd4294967295),
    .Y(\$177y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:456.30-456.119" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$178  (
    .A(\$176y ),
    .B(\$177y ),
    .Y(\$178y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:462.62-462.92" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$179  (
    .A(s_timer_val_lo),
    .B(32'd4294967295),
    .Y(\$179y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:462.27-462.94" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$180  (
    .A(s_target_reached_prescaler_lo),
    .B(\$179y ),
    .Y(\$180y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:473.7-473.41" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$194  (
    .A(s_cfg_lo_reg[31]),
    .Y(\$194y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:475.18-475.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$195  (
    .A(s_target_reached_lo),
    .B(s_cfg_lo_reg[2]),
    .Y(\$195y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:476.18-476.62" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$196  (
    .A(s_target_reached_hi),
    .B(s_cfg_hi_reg[2]),
    .Y(\$196y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:480.18-480.59" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$197  (
    .A(s_target_reached_lo),
    .B(s_target_reached_hi),
    .Y(\$197y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:480.18-480.84" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$198  (
    .A(\$197y ),
    .B(s_cfg_lo_reg[2]),
    .Y(\$198y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$202  (
    .A(rst_ni),
    .Y(\$202y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:506.57-506.75" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$205  (
    .A(s_ref_clk2),
    .Y(\$205y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:506.30-506.77" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$206  (
    .A(\$204y ),
    .B(\$205y ),
    .Y(\$206y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:506.28-506.94" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$207  (
    .A(1'h0),
    .B(1'h1),
    .S(\$206y ),
    .Y(\$207y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:507.61-507.79" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$209  (
    .A(s_ref_clk3),
    .Y(\$209y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:507.34-507.81" */
  \$and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$210  (
    .A(\$208y ),
    .B(\$209y ),
    .Y(\$210y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:507.32-507.98" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$211  (
    .A(1'h0),
    .B(1'h1),
    .S(\$210y ),
    .Y(\$211y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:577.20-577.73" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$212  (
    .A(s_cfg_hi_reg[0]),
    .B(s_cfg_lo_reg[0]),
    .Y(\$212y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:219.8-219.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(\$36y ),
    .B(\$37y ),
    .Y(\$38y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:219.7-219.82" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .B(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:223.12-223.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(s_cfg_lo_reg[31]),
    .Y(\$41y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:225.10-225.80" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$42y ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:230.11-230.81" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(\$46y ),
    .B(\$47y ),
    .Y(\$48y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:230.11-230.116" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$48y ),
    .B(\$49y ),
    .Y(\$50y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:236.8-236.57" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$56  (
    .A(\$54y ),
    .B(\$55y ),
    .Y(\$56y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:236.7-236.82" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(\$56y ),
    .B(\$57y ),
    .Y(\$58y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:240.14-240.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(s_cfg_hi_reg[31]),
    .Y(\$59y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:240.12-240.89" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$61  (
    .A(\$59y ),
    .B(\$60y ),
    .Y(\$61y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:240.12-240.124" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(\$61y ),
    .B(\$62y ),
    .Y(\$63y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:243.12-243.82" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$66  (
    .A(\$64y ),
    .B(\$65y ),
    .Y(\$66y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:243.12-243.117" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(\$66y ),
    .B(\$67y ),
    .Y(\$68y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$77  (
    .A(rst_ni),
    .Y(\$77y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:282.13-282.27" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$80  (
    .A(s_req),
    .B(s_wen),
    .Y(\$80y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:323.7-323.66" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$86  (
    .A(\$84y ),
    .B(\$85y ),
    .Y(\$86y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:330.12-330.46" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$87  (
    .A(s_cfg_lo_reg[31]),
    .Y(\$87y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:332.10-332.83" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(\$88y ),
    .B(\$89y ),
    .Y(\$90y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:339.11-339.84" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(\$92y ),
    .B(\$93y ),
    .Y(\$94y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:339.11-339.120" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(\$94y ),
    .B(\$95y ),
    .Y(\$96y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:98.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd2)
  ) \$driver$CS  (
    .AD(2'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(NS),
    .Q(CS)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:142.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$r_id_o  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_i),
    .Q(r_id_o)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:142.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_addr  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(addr_i),
    .Q(s_addr)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:259.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_cfg_hi_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_cfg_hi),
    .Q(s_cfg_hi_reg)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:259.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_cfg_lo_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_cfg_lo),
    .Q(s_cfg_lo_reg)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:488.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_ref_clk0  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(ref_clk_i),
    .Q(s_ref_clk0)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:488.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_ref_clk1  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_ref_clk0),
    .Q(s_ref_clk1)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:488.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_ref_clk2  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_ref_clk1),
    .Q(s_ref_clk2)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:488.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_ref_clk3  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_ref_clk2),
    .Q(s_ref_clk3)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:142.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_req  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_i),
    .Q(s_req)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:259.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_timer_cmp_hi_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_timer_cmp_hi),
    .Q(s_timer_cmp_hi_reg)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:259.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_timer_cmp_lo_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_timer_cmp_lo),
    .Q(s_timer_cmp_lo_reg)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:142.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$s_wen  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(wen_i),
    .Q(s_wen)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:303.18-303.49|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd32)
  ) \$procmux$11947  (
    .A(32'd0),
    .B({ s_cfg_lo_reg, s_cfg_hi_reg, s_timer_val_lo, s_timer_val_hi, s_timer_cmp_lo_reg, s_timer_cmp_hi_reg }),
    .S({ \$procmux$11953_CMP , \$procmux$11952_CMP , \$procmux$11951_CMP , \$procmux$11950_CMP , \$procmux$11949_CMP , \$procmux$11948_CMP  }),
    .Y(\$procmux$11947_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:303.18-303.49|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11948_CMP0  (
    .A(s_addr[5:0]),
    .B(6'h14),
    .Y(\$procmux$11948_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:300.18-300.49|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11949_CMP0  (
    .A(s_addr[5:0]),
    .B(6'h10),
    .Y(\$procmux$11949_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:297.18-297.45|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11950_CMP0  (
    .A(s_addr[5:0]),
    .B(6'h0c),
    .Y(\$procmux$11950_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:294.18-294.45|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11951_CMP0  (
    .A(s_addr[5:0]),
    .B(6'h08),
    .Y(\$procmux$11951_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:291.18-291.43|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11952_CMP0  (
    .A(s_addr[5:0]),
    .B(6'h04),
    .Y(\$procmux$11952_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:288.18-288.43|rtl/timer_unit/timer_unit.sv:285.14-305.21" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$11953_CMP0  (
    .A(s_addr[5:0]),
    .Y(\$procmux$11953_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:285.14-305.21|rtl/timer_unit/timer_unit.sv:282.9-307.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11954  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11947_Y ),
    .S(\$procmux$11955_CMP ),
    .Y(\$procmux$11954_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:285.14-305.21|rtl/timer_unit/timer_unit.sv:282.9-307.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11957  (
    .A(32'd0),
    .B(\$r_rdata_o$81 ),
    .S(\$procmux$11958_CMP ),
    .Y(\$procmux$11957_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:474.4-477.7|rtl/timer_unit/timer_unit.sv:473.2-481.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11960  (
    .A(\$195y ),
    .B(\$198y ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$11960_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:474.4-477.7|rtl/timer_unit/timer_unit.sv:473.2-481.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11963  (
    .A(\$196y ),
    .B(1'h0),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$11963_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:254.4-254.32|rtl/timer_unit/timer_unit.sv:253.2-254.32" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11966  (
    .A(\$s_cfg_hi$33 [1]),
    .B(1'h0),
    .S(\$procmux$11967_CMP ),
    .Y(\$procmux$11966_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:250.4-250.32|rtl/timer_unit/timer_unit.sv:249.2-250.32" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11969  (
    .A(\$s_cfg_lo$32 [1]),
    .B(1'h0),
    .S(\$procmux$11970_CMP ),
    .Y(\$procmux$11969_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:244.11-244.37|rtl/timer_unit/timer_unit.sv:243.7-244.37" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11971  (
    .A(\$s_cfg_hi$33 [0]),
    .B(1'h0),
    .S(\$procmux$11972_CMP ),
    .Y(\$procmux$11971_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:241.9-241.35|rtl/timer_unit/timer_unit.sv:240.7-245.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11974  (
    .A(\$procmux$11971_Y ),
    .B(1'hx),
    .S(\$procmux$11975_CMP ),
    .Y(\$procmux$11974_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:237.4-237.30|rtl/timer_unit/timer_unit.sv:236.2-246.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11977  (
    .A(\$procmux$11974_Y ),
    .B(1'hx),
    .S(\$procmux$11978_CMP ),
    .Y(\$procmux$11977_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:241.9-241.35|rtl/timer_unit/timer_unit.sv:240.7-245.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11981  (
    .A(\$s_cfg_hi[0]$69 ),
    .B(1'h0),
    .S(\$procmux$11982_CMP ),
    .Y(\$procmux$11981_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:237.4-237.30|rtl/timer_unit/timer_unit.sv:236.2-246.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11984  (
    .A(\$procmux$11981_Y ),
    .B(1'hx),
    .S(\$procmux$11985_CMP ),
    .Y(\$procmux$11984_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:237.4-237.30|rtl/timer_unit/timer_unit.sv:236.2-246.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11988  (
    .A(\$s_cfg_hi[0]$70 ),
    .B(1'h1),
    .S(\$procmux$11989_CMP ),
    .Y(\$procmux$11988_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:231.7-231.33|rtl/timer_unit/timer_unit.sv:230.6-231.33" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11990  (
    .A(\$s_cfg_lo$32 [0]),
    .B(1'h0),
    .S(\$procmux$11991_CMP ),
    .Y(\$procmux$11990_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:225.5-226.33|rtl/timer_unit/timer_unit.sv:223.7-232.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11993  (
    .A(1'hx),
    .B(\$procmux$11990_Y ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$11993_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:220.4-220.30|rtl/timer_unit/timer_unit.sv:219.2-233.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11996  (
    .A(\$procmux$11993_Y ),
    .B(1'hx),
    .S(\$procmux$11997_CMP ),
    .Y(\$procmux$11996_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:225.5-226.33|rtl/timer_unit/timer_unit.sv:223.7-232.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12001  (
    .A(\$s_cfg_lo[0]$45 ),
    .B(\$s_cfg_lo[0]$51 ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12001_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:220.4-220.30|rtl/timer_unit/timer_unit.sv:219.2-233.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12004  (
    .A(\$procmux$12001_Y ),
    .B(1'hx),
    .S(\$procmux$12005_CMP ),
    .Y(\$procmux$12004_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:226.7-226.33|rtl/timer_unit/timer_unit.sv:225.5-226.33" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12007  (
    .A(\$s_cfg_lo$32 [0]),
    .B(1'h0),
    .S(\$procmux$12008_CMP ),
    .Y(\$procmux$12007_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:225.5-226.33|rtl/timer_unit/timer_unit.sv:223.7-232.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12009  (
    .A(\$procmux$12007_Y ),
    .B(1'hx),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12009_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:220.4-220.30|rtl/timer_unit/timer_unit.sv:219.2-233.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12012  (
    .A(\$procmux$12009_Y ),
    .B(1'hx),
    .S(\$procmux$12013_CMP ),
    .Y(\$procmux$12012_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:220.4-220.30|rtl/timer_unit/timer_unit.sv:219.2-233.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12016  (
    .A(\$s_cfg_lo[0]$52 ),
    .B(1'h1),
    .S(\$procmux$12017_CMP ),
    .Y(\$procmux$12016_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:201.18-201.47|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12022  (
    .A(s_timer_cmp_hi_reg),
    .B(wdata_i),
    .S(\$procmux$12023_CMP ),
    .Y(\$procmux$12022_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:201.18-201.47|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12023_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h14),
    .Y(\$procmux$12023_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12024  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12022_Y ),
    .S(\$procmux$12025_CMP ),
    .Y(\$procmux$12024_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:198.18-198.47|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12031  (
    .A(s_timer_cmp_lo_reg),
    .B(wdata_i),
    .S(\$procmux$12032_CMP ),
    .Y(\$procmux$12031_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:198.18-198.47|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12032_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h10),
    .Y(\$procmux$12032_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12033  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12031_Y ),
    .S(\$procmux$12034_CMP ),
    .Y(\$procmux$12033_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:189.4-189.33|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12043  (
    .A(s_cfg_hi_reg),
    .B(wdata_i),
    .S(\$procmux$12044_CMP ),
    .Y(\$procmux$12043_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:189.4-189.33|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12044_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h04),
    .Y(\$procmux$12044_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12045  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12043_Y ),
    .S(\$procmux$12046_CMP ),
    .Y(\$procmux$12045_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:186.4-186.33|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12056  (
    .A(s_cfg_lo_reg),
    .B(wdata_i),
    .S(\$procmux$12057_CMP ),
    .Y(\$procmux$12056_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:186.4-186.33|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12057_CMP0  (
    .A(addr_i[5:0]),
    .Y(\$procmux$12057_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12058  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$12056_Y ),
    .S(\$procmux$12059_CMP ),
    .Y(\$procmux$12058_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:213.4-213.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12060  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12061_CMP ),
    .Y(\$procmux$12060_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:213.4-213.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12061_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h24),
    .Y(\$procmux$12061_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12062  (
    .A(1'hx),
    .B(\$procmux$12060_Y ),
    .S(\$procmux$12063_CMP ),
    .Y(\$procmux$12062_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:210.4-210.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12065  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12066_CMP ),
    .Y(\$procmux$12065_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:210.4-210.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12066_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h20),
    .Y(\$procmux$12066_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12067  (
    .A(1'hx),
    .B(\$procmux$12065_Y ),
    .S(\$procmux$12068_CMP ),
    .Y(\$procmux$12067_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:207.4-207.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12071  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12072_CMP ),
    .Y(\$procmux$12071_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:207.4-207.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12072_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h1c),
    .Y(\$procmux$12072_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12073  (
    .A(1'hx),
    .B(\$procmux$12071_Y ),
    .S(\$procmux$12074_CMP ),
    .Y(\$procmux$12073_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:204.4-204.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12078  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12079_CMP ),
    .Y(\$procmux$12078_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:204.4-204.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12079_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h18),
    .Y(\$procmux$12079_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12080  (
    .A(1'hx),
    .B(\$procmux$12078_Y ),
    .S(\$procmux$12081_CMP ),
    .Y(\$procmux$12080_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:195.4-195.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12088  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12089_CMP ),
    .Y(\$procmux$12088_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:195.4-195.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12089_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h0c),
    .Y(\$procmux$12089_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12090  (
    .A(1'hx),
    .B(\$procmux$12088_Y ),
    .S(\$procmux$12091_CMP ),
    .Y(\$procmux$12090_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:192.4-192.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12099  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12100_CMP ),
    .Y(\$procmux$12099_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:192.4-192.30|rtl/timer_unit/timer_unit.sv:183.14-215.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd6),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd6),
    .Y_WIDTH(32'd1)
  ) \$procmux$12100_CMP0  (
    .A(addr_i[5:0]),
    .B(6'h08),
    .Y(\$procmux$12100_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12101  (
    .A(1'hx),
    .B(\$procmux$12099_Y ),
    .S(\$procmux$12102_CMP ),
    .Y(\$procmux$12101_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12104  (
    .A(s_timer_cmp_hi_reg),
    .B(\$s_timer_cmp_hi$25 ),
    .S(\$procmux$12105_CMP ),
    .Y(\$procmux$12104_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12107  (
    .A(s_timer_cmp_lo_reg),
    .B(\$s_timer_cmp_lo$24 ),
    .S(\$procmux$12108_CMP ),
    .Y(\$procmux$12107_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12110  (
    .A(s_cfg_hi_reg),
    .B(\$s_cfg_hi$23 ),
    .S(\$procmux$12111_CMP ),
    .Y(\$procmux$12110_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$12113  (
    .A(s_cfg_lo_reg),
    .B(\$s_cfg_lo$22 ),
    .S(\$procmux$12114_CMP ),
    .Y(\$procmux$12113_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12116  (
    .A(1'h0),
    .B(\$s_reset_timer_hi$21 ),
    .S(\$procmux$12117_CMP ),
    .Y(\$procmux$12116_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12119  (
    .A(1'h0),
    .B(\$s_reset_timer_lo$20 ),
    .S(\$procmux$12120_CMP ),
    .Y(\$procmux$12119_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12122  (
    .A(1'h0),
    .B(\$s_start_timer_hi$19 ),
    .S(\$procmux$12123_CMP ),
    .Y(\$procmux$12122_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12125  (
    .A(1'h0),
    .B(\$s_start_timer_lo$18 ),
    .S(\$procmux$12126_CMP ),
    .Y(\$procmux$12125_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12128  (
    .A(1'h0),
    .B(\$s_write_counter_hi$17 ),
    .S(\$procmux$12129_CMP ),
    .Y(\$procmux$12128_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:183.14-215.21|rtl/timer_unit/timer_unit.sv:180.9-216.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12131  (
    .A(1'h0),
    .B(\$s_write_counter_lo$16 ),
    .S(\$procmux$12132_CMP ),
    .Y(\$procmux$12131_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:453.3-457.6|rtl/timer_unit/timer_unit.sv:452.14-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12134  (
    .A(1'h1),
    .B(\$207y ),
    .S(\$procmux$12135_CMP ),
    .Y(\$procmux$12134_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12137  (
    .A(\$procmux$12134_Y ),
    .B(1'hx),
    .S(\$procmux$12138_CMP ),
    .Y(\$procmux$12137_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12140  (
    .A(\$procmux$12137_Y ),
    .B(1'hx),
    .S(\$procmux$12141_CMP ),
    .Y(\$procmux$12140_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12142  (
    .A(1'hx),
    .B(\$procmux$12140_Y ),
    .S(\$procmux$12143_CMP ),
    .Y(\$procmux$12142_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:453.3-457.6|rtl/timer_unit/timer_unit.sv:452.14-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12145  (
    .A(\$180y ),
    .B(\$178y ),
    .S(\$procmux$12146_CMP ),
    .Y(\$procmux$12145_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12148  (
    .A(\$procmux$12145_Y ),
    .B(1'hx),
    .S(\$procmux$12149_CMP ),
    .Y(\$procmux$12148_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12151  (
    .A(\$procmux$12148_Y ),
    .B(1'hx),
    .S(\$procmux$12152_CMP ),
    .Y(\$procmux$12151_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12153  (
    .A(1'hx),
    .B(\$procmux$12151_Y ),
    .S(\$procmux$12154_CMP ),
    .Y(\$procmux$12153_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12158  (
    .A(s_target_reached_prescaler_lo),
    .B(1'hx),
    .S(\$procmux$12159_CMP ),
    .Y(\$procmux$12158_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12161  (
    .A(\$procmux$12158_Y ),
    .B(1'hx),
    .S(\$procmux$12162_CMP ),
    .Y(\$procmux$12161_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12163  (
    .A(1'hx),
    .B(\$procmux$12161_Y ),
    .S(\$procmux$12164_CMP ),
    .Y(\$procmux$12163_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12167  (
    .A(\$s_enable_count_hi$182 ),
    .B(\$172y ),
    .S(\$procmux$12168_CMP ),
    .Y(\$procmux$12167_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12170  (
    .A(\$procmux$12167_Y ),
    .B(1'hx),
    .S(\$procmux$12171_CMP ),
    .Y(\$procmux$12170_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12172  (
    .A(1'hx),
    .B(\$procmux$12170_Y ),
    .S(\$procmux$12173_CMP ),
    .Y(\$procmux$12172_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12176  (
    .A(\$s_enable_count_lo$181 ),
    .B(\$207y ),
    .S(\$procmux$12177_CMP ),
    .Y(\$procmux$12176_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12179  (
    .A(\$procmux$12176_Y ),
    .B(1'hx),
    .S(\$procmux$12180_CMP ),
    .Y(\$procmux$12179_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12181  (
    .A(1'hx),
    .B(\$procmux$12179_Y ),
    .S(\$procmux$12182_CMP ),
    .Y(\$procmux$12181_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:448.3-451.6|rtl/timer_unit/timer_unit.sv:447.11-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12185  (
    .A(\$s_enable_count_prescaler_lo$183 ),
    .B(\$s_enable_count_prescaler_lo$142 ),
    .S(\$procmux$12186_CMP ),
    .Y(\$procmux$12185_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12188  (
    .A(\$procmux$12185_Y ),
    .B(1'hx),
    .S(\$procmux$12189_CMP ),
    .Y(\$procmux$12188_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12190  (
    .A(1'hx),
    .B(\$procmux$12188_Y ),
    .S(\$procmux$12191_CMP ),
    .Y(\$procmux$12190_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12194  (
    .A(\$s_enable_count_hi$185 ),
    .B(\$167y ),
    .S(\$procmux$12195_CMP ),
    .Y(\$procmux$12194_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12196  (
    .A(1'hx),
    .B(\$procmux$12194_Y ),
    .S(\$procmux$12197_CMP ),
    .Y(\$procmux$12196_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12200  (
    .A(\$s_enable_count_lo$184 ),
    .B(1'h1),
    .S(\$procmux$12201_CMP ),
    .Y(\$procmux$12200_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12202  (
    .A(1'hx),
    .B(\$procmux$12200_Y ),
    .S(\$procmux$12203_CMP ),
    .Y(\$procmux$12202_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:443.6-446.9|rtl/timer_unit/timer_unit.sv:442.6-463.6" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12206  (
    .A(\$s_enable_count_prescaler_lo$186 ),
    .B(\$s_enable_count_prescaler_lo$142 ),
    .S(\$procmux$12207_CMP ),
    .Y(\$procmux$12206_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12208  (
    .A(1'hx),
    .B(\$procmux$12206_Y ),
    .S(\$procmux$12209_CMP ),
    .Y(\$procmux$12208_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12212  (
    .A(\$s_enable_count_prescaler_lo$142 ),
    .B(\$s_enable_count_prescaler_lo$189 ),
    .S(\$procmux$12213_CMP ),
    .Y(\$procmux$12212_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12216  (
    .A(\$s_enable_count_hi$159 ),
    .B(\$s_enable_count_hi$188 ),
    .S(\$procmux$12217_CMP ),
    .Y(\$procmux$12216_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:442.6-463.6|rtl/timer_unit/timer_unit.sv:440.2-464.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12220  (
    .A(\$s_enable_count_lo$141 ),
    .B(\$s_enable_count_lo$187 ),
    .S(\$procmux$12221_CMP ),
    .Y(\$procmux$12220_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:428.6-431.9|rtl/timer_unit/timer_unit.sv:427.4-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12223  (
    .A(1'h1),
    .B(\$207y ),
    .S(\$procmux$12224_CMP ),
    .Y(\$procmux$12223_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:424.7-424.42|rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12226  (
    .A(\$procmux$12223_Y ),
    .B(1'hx),
    .S(\$procmux$12227_CMP ),
    .Y(\$procmux$12226_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12229  (
    .A(\$procmux$12226_Y ),
    .B(1'hx),
    .S(\$procmux$12230_CMP ),
    .Y(\$procmux$12229_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12231  (
    .A(1'hx),
    .B(\$procmux$12229_Y ),
    .S(\$procmux$12232_CMP ),
    .Y(\$procmux$12231_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:424.7-424.42|rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12236  (
    .A(s_target_reached_prescaler_hi),
    .B(1'hx),
    .S(\$procmux$12237_CMP ),
    .Y(\$procmux$12236_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12239  (
    .A(\$procmux$12236_Y ),
    .B(1'hx),
    .S(\$procmux$12240_CMP ),
    .Y(\$procmux$12239_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12241  (
    .A(1'hx),
    .B(\$procmux$12239_Y ),
    .S(\$procmux$12242_CMP ),
    .Y(\$procmux$12241_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:424.7-424.42|rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12245  (
    .A(\$s_enable_count_hi$153 ),
    .B(\$207y ),
    .S(\$procmux$12246_CMP ),
    .Y(\$procmux$12245_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12248  (
    .A(\$procmux$12245_Y ),
    .B(1'hx),
    .S(\$procmux$12249_CMP ),
    .Y(\$procmux$12248_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12250  (
    .A(1'hx),
    .B(\$procmux$12248_Y ),
    .S(\$procmux$12251_CMP ),
    .Y(\$procmux$12250_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:424.7-424.42|rtl/timer_unit/timer_unit.sv:422.9-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12254  (
    .A(\$s_enable_count_prescaler_hi$154 ),
    .B(1'h0),
    .S(\$procmux$12255_CMP ),
    .Y(\$procmux$12254_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12257  (
    .A(\$procmux$12254_Y ),
    .B(1'hx),
    .S(\$procmux$12258_CMP ),
    .Y(\$procmux$12257_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12259  (
    .A(1'hx),
    .B(\$procmux$12257_Y ),
    .S(\$procmux$12260_CMP ),
    .Y(\$procmux$12259_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12263  (
    .A(\$s_enable_count_hi$155 ),
    .B(1'h1),
    .S(\$procmux$12264_CMP ),
    .Y(\$procmux$12263_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12265  (
    .A(1'hx),
    .B(\$procmux$12263_Y ),
    .S(\$procmux$12266_CMP ),
    .Y(\$procmux$12265_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:419.5-419.30|rtl/timer_unit/timer_unit.sv:417.7-436.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12269  (
    .A(\$s_enable_count_prescaler_hi$156 ),
    .B(1'h0),
    .S(\$procmux$12270_CMP ),
    .Y(\$procmux$12269_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12271  (
    .A(1'hx),
    .B(\$procmux$12269_Y ),
    .S(\$procmux$12272_CMP ),
    .Y(\$procmux$12271_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12275  (
    .A(1'h0),
    .B(\$s_enable_count_prescaler_hi$158 ),
    .S(\$procmux$12276_CMP ),
    .Y(\$procmux$12275_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:417.7-436.9|rtl/timer_unit/timer_unit.sv:415.2-437.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12279  (
    .A(1'h0),
    .B(\$s_enable_count_hi$157 ),
    .S(\$procmux$12280_CMP ),
    .Y(\$procmux$12279_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:403.6-406.9|rtl/timer_unit/timer_unit.sv:402.4-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12282  (
    .A(1'h1),
    .B(\$207y ),
    .S(\$procmux$12283_CMP ),
    .Y(\$procmux$12282_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:399.7-399.42|rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12285  (
    .A(\$procmux$12282_Y ),
    .B(1'hx),
    .S(\$procmux$12286_CMP ),
    .Y(\$procmux$12285_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12288  (
    .A(\$procmux$12285_Y ),
    .B(1'hx),
    .S(\$procmux$12289_CMP ),
    .Y(\$procmux$12288_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12290  (
    .A(1'hx),
    .B(\$procmux$12288_Y ),
    .S(\$procmux$12291_CMP ),
    .Y(\$procmux$12290_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:399.7-399.42|rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12295  (
    .A(s_target_reached_prescaler_lo),
    .B(1'hx),
    .S(\$procmux$12296_CMP ),
    .Y(\$procmux$12295_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12298  (
    .A(\$procmux$12295_Y ),
    .B(1'hx),
    .S(\$procmux$12299_CMP ),
    .Y(\$procmux$12298_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12300  (
    .A(1'hx),
    .B(\$procmux$12298_Y ),
    .S(\$procmux$12301_CMP ),
    .Y(\$procmux$12300_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:399.7-399.42|rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12304  (
    .A(\$s_enable_count_lo$135 ),
    .B(\$207y ),
    .S(\$procmux$12305_CMP ),
    .Y(\$procmux$12304_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12307  (
    .A(\$procmux$12304_Y ),
    .B(1'hx),
    .S(\$procmux$12308_CMP ),
    .Y(\$procmux$12307_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12309  (
    .A(1'hx),
    .B(\$procmux$12307_Y ),
    .S(\$procmux$12310_CMP ),
    .Y(\$procmux$12309_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:399.7-399.42|rtl/timer_unit/timer_unit.sv:397.9-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12313  (
    .A(\$s_enable_count_prescaler_lo$136 ),
    .B(1'h0),
    .S(\$procmux$12314_CMP ),
    .Y(\$procmux$12313_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12316  (
    .A(\$procmux$12313_Y ),
    .B(1'hx),
    .S(\$procmux$12317_CMP ),
    .Y(\$procmux$12316_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12318  (
    .A(1'hx),
    .B(\$procmux$12316_Y ),
    .S(\$procmux$12319_CMP ),
    .Y(\$procmux$12318_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12322  (
    .A(\$s_enable_count_lo$137 ),
    .B(1'h1),
    .S(\$procmux$12323_CMP ),
    .Y(\$procmux$12322_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12324  (
    .A(1'hx),
    .B(\$procmux$12322_Y ),
    .S(\$procmux$12325_CMP ),
    .Y(\$procmux$12324_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:394.5-394.30|rtl/timer_unit/timer_unit.sv:392.7-411.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12328  (
    .A(\$s_enable_count_prescaler_lo$138 ),
    .B(1'h0),
    .S(\$procmux$12329_CMP ),
    .Y(\$procmux$12328_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12330  (
    .A(1'hx),
    .B(\$procmux$12328_Y ),
    .S(\$procmux$12331_CMP ),
    .Y(\$procmux$12330_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12333  (
    .A(1'h0),
    .B(\$s_enable_count_prescaler_lo$140 ),
    .S(\$procmux$12334_CMP ),
    .Y(\$procmux$12333_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:392.7-411.9|rtl/timer_unit/timer_unit.sv:390.2-412.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12336  (
    .A(1'h0),
    .B(\$s_enable_count_lo$139 ),
    .S(\$procmux$12337_CMP ),
    .Y(\$procmux$12336_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:126.4-126.19|rtl/timer_unit/timer_unit.sv:125.9-128.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12340  (
    .A(2'h0),
    .B(2'h1),
    .S(\$procmux$12341_CMP ),
    .Y(\$procmux$12340_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12342  (
    .A(2'hx),
    .B(\$procmux$12340_Y ),
    .S(\$procmux$12343_CMP ),
    .Y(\$procmux$12342_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12343_CMP0  (
    .A(CS),
    .B(2'h1),
    .Y(\$procmux$12343_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd2)
  ) \$procmux$12346  (
    .A(2'h0),
    .B({ \$NS$5 , \$NS$7  }),
    .S({ \$procmux$12349_CMP , \$procmux$12347_CMP  }),
    .Y(\$procmux$12346_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12347_CMP0  (
    .A(CS),
    .B(2'h1),
    .Y(\$procmux$12347_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:116.9-119.20|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12349_CMP0  (
    .A(CS),
    .Y(\$procmux$12349_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:117.4-117.19|rtl/timer_unit/timer_unit.sv:116.9-119.20" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12353  (
    .A(2'h0),
    .B(2'h1),
    .S(\$procmux$12354_CMP ),
    .Y(\$procmux$12353_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:116.9-119.20|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$mux  #(
    .WIDTH(32'd2)
  ) \$procmux$12355  (
    .A(2'hx),
    .B(\$procmux$12353_Y ),
    .S(\$procmux$12356_CMP ),
    .Y(\$procmux$12355_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:116.9-119.20|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12356_CMP0  (
    .A(CS),
    .Y(\$procmux$12356_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12359  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12360_CMP ),
    .Y(\$procmux$12359_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:123.6-129.9|rtl/timer_unit/timer_unit.sv:112.2-134.9" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$12360_CMP0  (
    .A(CS),
    .B(2'h1),
    .Y(\$procmux$12360_CMP )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:376.7-376.41|rtl/timer_unit/timer_unit.sv:374.2-377.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12362  (
    .A(\$s_reset_count_prescaler_hi$117 ),
    .B(1'h1),
    .S(\$procmux$12363_CMP ),
    .Y(\$procmux$12362_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:371.7-371.41|rtl/timer_unit/timer_unit.sv:369.2-372.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12365  (
    .A(\$s_reset_count_prescaler_lo$100 ),
    .B(1'h1),
    .S(\$procmux$12366_CMP ),
    .Y(\$procmux$12365_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:364.10-364.31|rtl/timer_unit/timer_unit.sv:362.5-365.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12367  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12368_CMP ),
    .Y(\$procmux$12367_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:355.5-358.10|rtl/timer_unit/timer_unit.sv:353.7-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12370  (
    .A(1'hx),
    .B(\$procmux$12367_Y ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12370_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:347.4-350.7|rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12373  (
    .A(\$procmux$12370_Y ),
    .B(1'hx),
    .S(\$procmux$12374_CMP ),
    .Y(\$procmux$12373_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:355.5-358.10|rtl/timer_unit/timer_unit.sv:353.7-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12378  (
    .A(\$s_reset_count_hi$108 ),
    .B(\$s_reset_count_hi$114 ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12378_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:347.4-350.7|rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12381  (
    .A(\$procmux$12378_Y ),
    .B(1'hx),
    .S(\$procmux$12382_CMP ),
    .Y(\$procmux$12381_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:357.10-357.31|rtl/timer_unit/timer_unit.sv:355.5-358.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12384  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12385_CMP ),
    .Y(\$procmux$12384_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:355.5-358.10|rtl/timer_unit/timer_unit.sv:353.7-366.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12386  (
    .A(\$procmux$12384_Y ),
    .B(1'hx),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12386_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:347.4-350.7|rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12389  (
    .A(\$procmux$12386_Y ),
    .B(1'hx),
    .S(\$procmux$12390_CMP ),
    .Y(\$procmux$12389_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:347.4-350.7|rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12393  (
    .A(\$s_reset_count_hi$115 ),
    .B(1'h1),
    .S(\$procmux$12394_CMP ),
    .Y(\$procmux$12393_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:347.4-350.7|rtl/timer_unit/timer_unit.sv:346.2-367.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12397  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12398_CMP ),
    .Y(\$procmux$12397_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:341.10-341.31|rtl/timer_unit/timer_unit.sv:339.6-342.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12399  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12400_CMP ),
    .Y(\$procmux$12399_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:332.5-335.10|rtl/timer_unit/timer_unit.sv:330.7-343.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12402  (
    .A(1'hx),
    .B(\$procmux$12399_Y ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12402_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:324.4-327.7|rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12405  (
    .A(\$procmux$12402_Y ),
    .B(1'hx),
    .S(\$procmux$12406_CMP ),
    .Y(\$procmux$12405_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:332.5-335.10|rtl/timer_unit/timer_unit.sv:330.7-343.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12410  (
    .A(\$s_reset_count_lo$91 ),
    .B(\$s_reset_count_lo$97 ),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12410_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:324.4-327.7|rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12413  (
    .A(\$procmux$12410_Y ),
    .B(1'hx),
    .S(\$procmux$12414_CMP ),
    .Y(\$procmux$12413_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:334.10-334.32|rtl/timer_unit/timer_unit.sv:332.5-335.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12416  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12417_CMP ),
    .Y(\$procmux$12416_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:332.5-335.10|rtl/timer_unit/timer_unit.sv:330.7-343.12" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12418  (
    .A(\$procmux$12416_Y ),
    .B(1'hx),
    .S(s_cfg_lo_reg[31]),
    .Y(\$procmux$12418_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:324.4-327.7|rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12421  (
    .A(\$procmux$12418_Y ),
    .B(1'hx),
    .S(\$procmux$12422_CMP ),
    .Y(\$procmux$12421_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:324.4-327.7|rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12425  (
    .A(\$s_reset_count_lo$98 ),
    .B(1'h1),
    .S(\$procmux$12426_CMP ),
    .Y(\$procmux$12425_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit.sv:324.4-327.7|rtl/timer_unit/timer_unit.sv:323.2-344.7" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$12428  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$12429_CMP ),
    .Y(\$procmux$12428_Y )
  );
  /* src = "rtl/timer_unit/timer_unit.sv:561.23" */
  \timer_unit_counter$croc_chip.i_croc_soc.i_croc.i_timer.counter_hi_i  counter_hi_i (
    .clk_i(clk_i),
    .compare_value_i(s_timer_cmp_hi_reg),
    .counter_value_i(wdata_i),
    .counter_value_o(s_timer_val_hi),
    .enable_count_i(s_enable_count_hi),
    .reset_count_i(s_reset_count_hi),
    .rst_ni(rst_ni),
    .target_reached_o(s_target_reached_hi),
    .write_counter_i(s_write_counter_hi)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:545.23" */
  \timer_unit_counter$croc_chip.i_croc_soc.i_croc.i_timer.counter_lo_i  counter_lo_i (
    .clk_i(clk_i),
    .compare_value_i(s_timer_cmp_lo_reg),
    .counter_value_i(wdata_i),
    .counter_value_o(s_timer_val_lo),
    .enable_count_i(s_enable_count_lo),
    .reset_count_i(s_reset_count_lo),
    .rst_ni(rst_ni),
    .target_reached_o(s_target_reached_lo),
    .write_counter_i(s_write_counter_lo)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:529.29" */
  \timer_unit_counter_presc$croc_chip.i_croc_soc.i_croc.i_timer.prescaler_hi_i  prescaler_hi_i (
    .clk_i(clk_i),
    .compare_value_i({ 24'h000000, s_cfg_hi_reg[15:8] }),
    .counter_value_i(32'd0),
    .enable_count_i(s_enable_count_prescaler_hi),
    .reset_count_i(s_reset_count_prescaler_hi),
    .rst_ni(rst_ni),
    .target_reached_o(s_target_reached_prescaler_hi),
    .write_counter_i(1'h0)
  );
  /* src = "rtl/timer_unit/timer_unit.sv:513.29" */
  \timer_unit_counter_presc$croc_chip.i_croc_soc.i_croc.i_timer.prescaler_lo_i  prescaler_lo_i (
    .clk_i(clk_i),
    .compare_value_i({ 24'h000000, s_cfg_lo_reg[15:8] }),
    .counter_value_i(32'd0),
    .enable_count_i(s_enable_count_prescaler_lo),
    .reset_count_i(s_reset_count_prescaler_lo),
    .rst_ni(rst_ni),
    .target_reached_o(s_target_reached_prescaler_lo),
    .write_counter_i(1'h0)
  );
  assign r_opc_o = 1'h0;
  assign NS = \$NS$8 ;
  assign gnt_o = 1'h1;
  assign r_valid_o = \$r_valid_o$9 ;
  assign s_write_counter_lo = \$s_write_counter_lo$26 ;
  assign s_write_counter_hi = \$s_write_counter_hi$27 ;
  assign s_start_timer_lo = \$s_start_timer_lo$28 ;
  assign s_start_timer_hi = \$s_start_timer_hi$29 ;
  assign s_reset_timer_lo = \$s_reset_timer_lo$30 ;
  assign s_reset_timer_hi = \$s_reset_timer_hi$31 ;
  assign s_cfg_lo = { \$s_cfg_lo$32 [31:2], \$s_cfg_lo[1]$73 , \$s_cfg_lo[0]$53  };
  assign s_cfg_hi = { \$s_cfg_hi$33 [31:2], \$s_cfg_hi[1]$75 , \$s_cfg_hi[0]$71  };
  assign s_timer_cmp_lo = \$s_timer_cmp_lo$34 ;
  assign s_timer_cmp_hi = \$s_timer_cmp_hi$35 ;
  assign r_rdata_o = \$r_rdata_o$82 ;
  assign s_reset_count_lo = \$s_reset_count_lo$99 ;
  assign s_reset_count_hi = \$s_reset_count_hi$116 ;
  assign s_reset_count_prescaler_lo = \$s_reset_count_prescaler_lo$120 ;
  assign s_reset_count_prescaler_hi = \$s_reset_count_prescaler_hi$123 ;
  assign s_enable_count_lo = \$s_enable_count_lo$190 ;
  assign s_enable_count_hi = \$s_enable_count_hi$191 ;
  assign s_enable_count_prescaler_lo = \$s_enable_count_prescaler_lo$192 ;
  assign s_enable_count_prescaler_hi = \$s_enable_count_prescaler_hi$160 ;
  assign irq_lo_o = \$irq_lo_o$199 ;
  assign irq_hi_o = \$irq_hi_o$200 ;
  assign s_ref_clk_edge = \$207y ;
  assign s_ref_clk_edge_del = \$211y ;
  assign busy_o = \$212y ;
  assign \$procmux$11955_CMP  = \$80y ;
  assign \$r_rdata_o$81  = \$procmux$11954_Y ;
  assign \$procmux$11958_CMP  = \$80y ;
  assign \$r_rdata_o$82  = \$procmux$11957_Y ;
  assign \$procmux$11961_CMP  = \$194y ;
  assign \$irq_lo_o$199  = \$procmux$11960_Y ;
  assign \$procmux$11964_CMP  = \$194y ;
  assign \$irq_hi_o$200  = \$procmux$11963_Y ;
  assign \$procmux$11967_CMP  = \$74y ;
  assign \$s_cfg_hi[1]$75  = \$procmux$11966_Y ;
  assign \$procmux$11970_CMP  = \$72y ;
  assign \$s_cfg_lo[1]$73  = \$procmux$11969_Y ;
  assign \$procmux$11972_CMP  = \$68y ;
  assign \$procmux$11975_CMP  = \$63y ;
  assign \$procmux$11978_CMP  = \$58y ;
  assign \$s_cfg_hi[0]$69  = \$procmux$11977_Y ;
  assign \$procmux$11982_CMP  = \$63y ;
  assign \$procmux$11985_CMP  = \$58y ;
  assign \$s_cfg_hi[0]$70  = \$procmux$11984_Y ;
  assign \$procmux$11989_CMP  = \$58y ;
  assign \$s_cfg_hi[0]$71  = \$procmux$11988_Y ;
  assign \$procmux$11991_CMP  = \$50y ;
  assign \$procmux$11994_CMP  = \$41y ;
  assign \$procmux$11997_CMP  = \$40y ;
  assign \$s_cfg_lo[0]$51  = \$procmux$11996_Y ;
  assign \$procmux$12002_CMP  = \$41y ;
  assign \$procmux$12005_CMP  = \$40y ;
  assign \$s_cfg_lo[0]$52  = \$procmux$12004_Y ;
  assign \$procmux$12008_CMP  = \$44y ;
  assign \$procmux$12010_CMP  = \$41y ;
  assign \$procmux$12013_CMP  = \$40y ;
  assign \$s_cfg_lo[0]$45  = \$procmux$12012_Y ;
  assign \$procmux$12017_CMP  = \$40y ;
  assign \$s_cfg_lo[0]$53  = \$procmux$12016_Y ;
  assign \$procmux$12025_CMP  = \$15y ;
  assign \$s_timer_cmp_hi$25  = \$procmux$12024_Y ;
  assign \$procmux$12034_CMP  = \$15y ;
  assign \$s_timer_cmp_lo$24  = \$procmux$12033_Y ;
  assign \$procmux$12046_CMP  = \$15y ;
  assign \$s_cfg_hi$23  = \$procmux$12045_Y ;
  assign \$procmux$12059_CMP  = \$15y ;
  assign \$s_cfg_lo$22  = \$procmux$12058_Y ;
  assign \$procmux$12063_CMP  = \$15y ;
  assign \$s_reset_timer_hi$21  = \$procmux$12062_Y ;
  assign \$procmux$12068_CMP  = \$15y ;
  assign \$s_reset_timer_lo$20  = \$procmux$12067_Y ;
  assign \$procmux$12074_CMP  = \$15y ;
  assign \$s_start_timer_hi$19  = \$procmux$12073_Y ;
  assign \$procmux$12081_CMP  = \$15y ;
  assign \$s_start_timer_lo$18  = \$procmux$12080_Y ;
  assign \$procmux$12091_CMP  = \$15y ;
  assign \$s_write_counter_hi$17  = \$procmux$12090_Y ;
  assign \$procmux$12102_CMP  = \$15y ;
  assign \$s_write_counter_lo$16  = \$procmux$12101_Y ;
  assign \$procmux$12105_CMP  = \$15y ;
  assign \$s_timer_cmp_hi$35  = \$procmux$12104_Y ;
  assign \$procmux$12108_CMP  = \$15y ;
  assign \$s_timer_cmp_lo$34  = \$procmux$12107_Y ;
  assign \$procmux$12111_CMP  = \$15y ;
  assign \$s_cfg_hi$33  = \$procmux$12110_Y ;
  assign \$procmux$12114_CMP  = \$15y ;
  assign \$s_cfg_lo$32  = \$procmux$12113_Y ;
  assign \$procmux$12117_CMP  = \$15y ;
  assign \$s_reset_timer_hi$31  = \$procmux$12116_Y ;
  assign \$procmux$12120_CMP  = \$15y ;
  assign \$s_reset_timer_lo$30  = \$procmux$12119_Y ;
  assign \$procmux$12123_CMP  = \$15y ;
  assign \$s_start_timer_hi$29  = \$procmux$12122_Y ;
  assign \$procmux$12126_CMP  = \$15y ;
  assign \$s_start_timer_lo$28  = \$procmux$12125_Y ;
  assign \$procmux$12129_CMP  = \$15y ;
  assign \$s_write_counter_hi$27  = \$procmux$12128_Y ;
  assign \$procmux$12132_CMP  = \$15y ;
  assign \$s_write_counter_lo$26  = \$procmux$12131_Y ;
  assign \$procmux$12135_CMP  = \$175y ;
  assign \$procmux$12138_CMP  = \$170y ;
  assign \$procmux$12141_CMP  = \$166y ;
  assign \$procmux$12143_CMP  = \$163y ;
  assign \$s_enable_count_prescaler_lo$183  = \$procmux$12142_Y ;
  assign \$procmux$12146_CMP  = \$175y ;
  assign \$procmux$12149_CMP  = \$170y ;
  assign \$procmux$12152_CMP  = \$166y ;
  assign \$procmux$12154_CMP  = \$163y ;
  assign \$s_enable_count_hi$182  = \$procmux$12153_Y ;
  assign \$procmux$12159_CMP  = \$170y ;
  assign \$procmux$12162_CMP  = \$166y ;
  assign \$procmux$12164_CMP  = \$163y ;
  assign \$s_enable_count_lo$181  = \$procmux$12163_Y ;
  assign \$procmux$12168_CMP  = \$170y ;
  assign \$procmux$12171_CMP  = \$166y ;
  assign \$procmux$12173_CMP  = \$163y ;
  assign \$s_enable_count_hi$185  = \$procmux$12172_Y ;
  assign \$procmux$12177_CMP  = \$170y ;
  assign \$procmux$12180_CMP  = \$166y ;
  assign \$procmux$12182_CMP  = \$163y ;
  assign \$s_enable_count_lo$184  = \$procmux$12181_Y ;
  assign \$procmux$12186_CMP  = \$170y ;
  assign \$procmux$12189_CMP  = \$166y ;
  assign \$procmux$12191_CMP  = \$163y ;
  assign \$s_enable_count_prescaler_lo$186  = \$procmux$12190_Y ;
  assign \$procmux$12195_CMP  = \$166y ;
  assign \$procmux$12197_CMP  = \$163y ;
  assign \$s_enable_count_hi$188  = \$procmux$12196_Y ;
  assign \$procmux$12201_CMP  = \$166y ;
  assign \$procmux$12203_CMP  = \$163y ;
  assign \$s_enable_count_lo$187  = \$procmux$12202_Y ;
  assign \$procmux$12207_CMP  = \$166y ;
  assign \$procmux$12209_CMP  = \$163y ;
  assign \$s_enable_count_prescaler_lo$189  = \$procmux$12208_Y ;
  assign \$procmux$12213_CMP  = \$163y ;
  assign \$s_enable_count_prescaler_lo$192  = \$procmux$12212_Y ;
  assign \$procmux$12217_CMP  = \$163y ;
  assign \$s_enable_count_hi$191  = \$procmux$12216_Y ;
  assign \$procmux$12221_CMP  = \$163y ;
  assign \$s_enable_count_lo$190  = \$procmux$12220_Y ;
  assign \$procmux$12224_CMP  = \$152y ;
  assign \$procmux$12227_CMP  = \$149y ;
  assign \$procmux$12230_CMP  = \$146y ;
  assign \$procmux$12232_CMP  = \$143y ;
  assign \$s_enable_count_prescaler_hi$154  = \$procmux$12231_Y ;
  assign \$procmux$12237_CMP  = \$149y ;
  assign \$procmux$12240_CMP  = \$146y ;
  assign \$procmux$12242_CMP  = \$143y ;
  assign \$s_enable_count_hi$153  = \$procmux$12241_Y ;
  assign \$procmux$12246_CMP  = \$149y ;
  assign \$procmux$12249_CMP  = \$146y ;
  assign \$procmux$12251_CMP  = \$143y ;
  assign \$s_enable_count_hi$155  = \$procmux$12250_Y ;
  assign \$procmux$12255_CMP  = \$149y ;
  assign \$procmux$12258_CMP  = \$146y ;
  assign \$procmux$12260_CMP  = \$143y ;
  assign \$s_enable_count_prescaler_hi$156  = \$procmux$12259_Y ;
  assign \$procmux$12264_CMP  = \$146y ;
  assign \$procmux$12266_CMP  = \$143y ;
  assign \$s_enable_count_hi$157  = \$procmux$12265_Y ;
  assign \$procmux$12270_CMP  = \$146y ;
  assign \$procmux$12272_CMP  = \$143y ;
  assign \$s_enable_count_prescaler_hi$158  = \$procmux$12271_Y ;
  assign \$procmux$12276_CMP  = \$143y ;
  assign \$s_enable_count_prescaler_hi$160  = \$procmux$12275_Y ;
  assign \$procmux$12280_CMP  = \$143y ;
  assign \$s_enable_count_hi$159  = \$procmux$12279_Y ;
  assign \$procmux$12283_CMP  = \$134y ;
  assign \$procmux$12286_CMP  = \$131y ;
  assign \$procmux$12289_CMP  = \$128y ;
  assign \$procmux$12291_CMP  = \$125y ;
  assign \$s_enable_count_prescaler_lo$136  = \$procmux$12290_Y ;
  assign \$procmux$12296_CMP  = \$131y ;
  assign \$procmux$12299_CMP  = \$128y ;
  assign \$procmux$12301_CMP  = \$125y ;
  assign \$s_enable_count_lo$135  = \$procmux$12300_Y ;
  assign \$procmux$12305_CMP  = \$131y ;
  assign \$procmux$12308_CMP  = \$128y ;
  assign \$procmux$12310_CMP  = \$125y ;
  assign \$s_enable_count_lo$137  = \$procmux$12309_Y ;
  assign \$procmux$12314_CMP  = \$131y ;
  assign \$procmux$12317_CMP  = \$128y ;
  assign \$procmux$12319_CMP  = \$125y ;
  assign \$s_enable_count_prescaler_lo$138  = \$procmux$12318_Y ;
  assign \$procmux$12323_CMP  = \$128y ;
  assign \$procmux$12325_CMP  = \$125y ;
  assign \$s_enable_count_lo$139  = \$procmux$12324_Y ;
  assign \$procmux$12329_CMP  = \$128y ;
  assign \$procmux$12331_CMP  = \$125y ;
  assign \$s_enable_count_prescaler_lo$140  = \$procmux$12330_Y ;
  assign \$procmux$12334_CMP  = \$125y ;
  assign \$s_enable_count_prescaler_lo$142  = \$procmux$12333_Y ;
  assign \$procmux$12337_CMP  = \$125y ;
  assign \$s_enable_count_lo$141  = \$procmux$12336_Y ;
  assign \$procmux$12341_CMP  = \$6y ;
  assign \$NS$7  = \$procmux$12342_Y ;
  assign \$NS$8  = \$procmux$12346_Y ;
  assign \$procmux$12354_CMP  = \$4y ;
  assign \$NS$5  = \$procmux$12355_Y ;
  assign \$r_valid_o$9  = \$procmux$12359_Y ;
  assign \$procmux$12363_CMP  = \$122y ;
  assign \$s_reset_count_prescaler_hi$123  = \$procmux$12362_Y ;
  assign \$procmux$12366_CMP  = \$119y ;
  assign \$s_reset_count_prescaler_lo$120  = \$procmux$12365_Y ;
  assign \$procmux$12368_CMP  = \$113y ;
  assign \$procmux$12371_CMP  = \$104y ;
  assign \$procmux$12374_CMP  = \$103y ;
  assign \$s_reset_count_hi$114  = \$procmux$12373_Y ;
  assign \$procmux$12379_CMP  = \$104y ;
  assign \$procmux$12382_CMP  = \$103y ;
  assign \$s_reset_count_hi$115  = \$procmux$12381_Y ;
  assign \$procmux$12385_CMP  = \$107y ;
  assign \$procmux$12387_CMP  = \$104y ;
  assign \$procmux$12390_CMP  = \$103y ;
  assign \$s_reset_count_hi$108  = \$procmux$12389_Y ;
  assign \$procmux$12394_CMP  = \$103y ;
  assign \$s_reset_count_hi$116  = \$procmux$12393_Y ;
  assign \$procmux$12398_CMP  = \$103y ;
  assign \$s_reset_count_prescaler_hi$117  = \$procmux$12397_Y ;
  assign \$procmux$12400_CMP  = \$96y ;
  assign \$procmux$12403_CMP  = \$87y ;
  assign \$procmux$12406_CMP  = \$86y ;
  assign \$s_reset_count_lo$97  = \$procmux$12405_Y ;
  assign \$procmux$12411_CMP  = \$87y ;
  assign \$procmux$12414_CMP  = \$86y ;
  assign \$s_reset_count_lo$98  = \$procmux$12413_Y ;
  assign \$procmux$12417_CMP  = \$90y ;
  assign \$procmux$12419_CMP  = \$87y ;
  assign \$procmux$12422_CMP  = \$86y ;
  assign \$s_reset_count_lo$91  = \$procmux$12421_Y ;
  assign \$procmux$12426_CMP  = \$86y ;
  assign \$s_reset_count_lo$99  = \$procmux$12425_Y ;
  assign \$procmux$12429_CMP  = \$86y ;
  assign \$s_reset_count_prescaler_lo$100  = \$procmux$12428_Y ;
  assign \$2y  = rst_ni;
  assign \$4y  = req_i;
  assign \$6y  = req_i;
  assign \$12y  = rst_ni;
  assign \$46y  = \$s_cfg_lo$32 [5];
  assign \$47y  = s_target_reached_lo;
  assign \$49y  = s_target_reached_hi;
  assign \$54y  = event_hi_i;
  assign \$55y  = \$s_cfg_hi$33 [3];
  assign \$57y  = \$s_start_timer_hi$29 ;
  assign \$60y  = \$s_cfg_hi$33 [5];
  assign \$84y  = s_cfg_lo_reg[1];
  assign \$85y  = s_reset_timer_lo;
  assign \$92y  = s_cfg_lo_reg[4];
  assign \$93y  = s_target_reached_lo;
  assign \$95y  = s_target_reached_hi;
  assign \$88y  = s_cfg_lo_reg[4];
  assign \$89y  = s_target_reached_lo;
  assign \$72y  = s_reset_count_lo;
  assign \$101y  = s_cfg_hi_reg[1];
  assign \$102y  = s_reset_timer_hi;
  assign \$109y  = s_cfg_lo_reg[4];
  assign \$110y  = s_target_reached_lo;
  assign \$112y  = s_target_reached_hi;
  assign \$106y  = s_target_reached_hi;
  assign \$105y  = s_cfg_hi_reg[4];
  assign \$74y  = s_reset_count_hi;
  assign \$36y  = event_lo_i;
  assign \$37y  = \$s_cfg_lo$32 [3];
  assign \$39y  = \$s_start_timer_lo$28 ;
  assign \$42y  = \$s_cfg_lo$32 [5];
  assign \$43y  = s_target_reached_lo;
  assign \$62y  = s_target_reached_hi;
  assign \$64y  = \$s_cfg_lo$32 [5];
  assign \$65y  = s_target_reached_lo;
  assign \$67y  = s_target_reached_hi;
  assign \$78y  = rst_ni;
  assign \$118y  = s_target_reached_prescaler_lo;
  assign \$121y  = s_target_reached_prescaler_hi;
  assign \$130y  = s_cfg_lo_reg[7];
  assign \$132y  = s_cfg_lo_reg[6];
  assign \$133y  = s_cfg_lo_reg[7];
  assign \$143y  = s_cfg_hi_reg[0];
  assign \$148y  = s_cfg_hi_reg[7];
  assign \$151y  = s_cfg_hi_reg[7];
  assign \$150y  = s_cfg_hi_reg[6];
  assign \$161y  = s_cfg_lo_reg[0];
  assign \$162y  = s_cfg_lo_reg[31];
  assign \$125y  = s_cfg_lo_reg[0];
  assign \$169y  = s_cfg_lo_reg[7];
  assign \$208y  = s_ref_clk2;
  assign \$173y  = s_cfg_lo_reg[6];
  assign \$174y  = s_cfg_lo_reg[7];
  assign \$203y  = rst_ni;
  assign \$204y  = s_ref_clk1;
endmodule

/* src = "rtl/timer_unit/timer_unit_counter.sv:13.8" */
module \timer_unit_counter$croc_chip.i_croc_soc.i_croc.i_timer.counter_hi_i (clk_i, rst_ni, write_counter_i, counter_value_i, reset_count_i, enable_count_i, compare_value_i, target_reached_o, counter_value_o);
  wire \$10y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire [31:0] \$4y ;
  wire \$9y ;
  wire \$procmux$10896_Y ;
  wire \$procmux$10897_CMP ;
  wire [31:0] \$procmux$10898_Y ;
  wire \$procmux$10899_CMP ;
  wire [31:0] \$procmux$10901_Y ;
  wire \$procmux$10902_CMP ;
  wire [31:0] \$procmux$10904_Y ;
  wire \$procmux$10905_CMP ;
  wire [31:0] \$procmux$10908_Y ;
  wire \$procmux$10909_CMP ;
  wire [31:0] \$procmux$10911_Y ;
  wire \$procmux$10912_CMP ;
  wire [31:0] \$procmux$10915_Y ;
  wire \$procmux$10916_CMP ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:45.3-46.31" */
  wire [31:0] \$s_count$5 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  wire [31:0] \$s_count$6 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  wire [31:0] \$s_count$7 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:65.10-68.38" */
  wire \$target_reached_o$15 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:15.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:23.24" */
  input [31:0] compare_value_i;
  wire [31:0] compare_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:19.24" */
  input [31:0] counter_value_i;
  wire [31:0] counter_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:25.24" */
  output [31:0] counter_value_o;
  wire [31:0] counter_value_o;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:22.24" */
  input enable_count_i;
  wire enable_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:21.24" */
  input reset_count_i;
  wire reset_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:16.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:29.24" */
  wire [31:0] s_count;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:29.33" */
  wire [31:0] s_count_reg;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:26.24" */
  output target_reached_o;
  wire target_reached_o;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:18.24" */
  input write_counter_i;
  wire write_counter_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:65.15-65.41" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(s_count),
    .B(compare_value_i),
    .Y(\$14y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:46.15-46.30" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$4  (
    .A(s_count_reg),
    .B(32'd1),
    .Y(\$4y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(rst_ni),
    .Y(\$9y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:51.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_count_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_count),
    .Q(s_count_reg)
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:60.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$target_reached_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$target_reached_o$15 ),
    .Q(target_reached_o)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:66.13-66.38|rtl/timer_unit/timer_unit_counter.sv:65.10-68.38" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10896  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10897_CMP ),
    .Y(\$procmux$10896_Y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:46.5-46.31|rtl/timer_unit/timer_unit_counter.sv:45.3-46.31" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10898  (
    .A(s_count_reg),
    .B(\$4y ),
    .S(\$procmux$10899_CMP ),
    .Y(\$procmux$10898_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:42.7-42.33|rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10901  (
    .A(\$procmux$10898_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10902_CMP ),
    .Y(\$procmux$10901_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10904  (
    .A(\$procmux$10901_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10905_CMP ),
    .Y(\$procmux$10904_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:42.7-42.33|rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10908  (
    .A(\$s_count$5 ),
    .B(counter_value_i),
    .S(\$procmux$10909_CMP ),
    .Y(\$procmux$10908_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10911  (
    .A(\$procmux$10908_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10912_CMP ),
    .Y(\$procmux$10911_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10915  (
    .A(\$s_count$6 ),
    .B(32'd0),
    .S(\$procmux$10916_CMP ),
    .Y(\$procmux$10915_Y )
  );
  assign s_count = \$s_count$7 ;
  assign counter_value_o = s_count_reg;
  assign \$procmux$10897_CMP  = \$14y ;
  assign \$target_reached_o$15  = \$procmux$10896_Y ;
  assign \$procmux$10899_CMP  = \$3y ;
  assign \$procmux$10902_CMP  = \$2y ;
  assign \$procmux$10905_CMP  = \$1y ;
  assign \$s_count$5  = \$procmux$10904_Y ;
  assign \$procmux$10909_CMP  = \$2y ;
  assign \$procmux$10912_CMP  = \$1y ;
  assign \$s_count$6  = \$procmux$10911_Y ;
  assign \$procmux$10916_CMP  = \$1y ;
  assign \$s_count$7  = \$procmux$10915_Y ;
  assign \$1y  = reset_count_i;
  assign \$2y  = write_counter_i;
  assign \$3y  = enable_count_i;
  assign \$10y  = rst_ni;
  assign \$13y  = rst_ni;
endmodule

/* src = "rtl/timer_unit/timer_unit_counter.sv:13.8" */
module \timer_unit_counter$croc_chip.i_croc_soc.i_croc.i_timer.counter_lo_i (clk_i, rst_ni, write_counter_i, counter_value_i, reset_count_i, enable_count_i, compare_value_i, target_reached_o, counter_value_o);
  wire \$10y ;
  wire \$12y ;
  wire \$13y ;
  wire \$14y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire [31:0] \$4y ;
  wire \$9y ;
  wire \$procmux$10918_Y ;
  wire \$procmux$10919_CMP ;
  wire [31:0] \$procmux$10920_Y ;
  wire \$procmux$10921_CMP ;
  wire [31:0] \$procmux$10923_Y ;
  wire \$procmux$10924_CMP ;
  wire [31:0] \$procmux$10926_Y ;
  wire \$procmux$10927_CMP ;
  wire [31:0] \$procmux$10930_Y ;
  wire \$procmux$10931_CMP ;
  wire [31:0] \$procmux$10933_Y ;
  wire \$procmux$10934_CMP ;
  wire [31:0] \$procmux$10937_Y ;
  wire \$procmux$10938_CMP ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:45.3-46.31" */
  wire [31:0] \$s_count$5 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  wire [31:0] \$s_count$6 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  wire [31:0] \$s_count$7 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:65.10-68.38" */
  wire \$target_reached_o$15 ;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:15.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:23.24" */
  input [31:0] compare_value_i;
  wire [31:0] compare_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:19.24" */
  input [31:0] counter_value_i;
  wire [31:0] counter_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:25.24" */
  output [31:0] counter_value_o;
  wire [31:0] counter_value_o;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:22.24" */
  input enable_count_i;
  wire enable_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:21.24" */
  input reset_count_i;
  wire reset_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:16.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:29.24" */
  wire [31:0] s_count;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:29.33" */
  wire [31:0] s_count_reg;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:26.24" */
  output target_reached_o;
  wire target_reached_o;
  /* src = "rtl/timer_unit/timer_unit_counter.sv:18.24" */
  input write_counter_i;
  wire write_counter_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(rst_ni),
    .Y(\$12y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:65.15-65.41" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(s_count),
    .B(compare_value_i),
    .Y(\$14y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:46.15-46.30" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$4  (
    .A(s_count_reg),
    .B(32'd1),
    .Y(\$4y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(rst_ni),
    .Y(\$9y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:51.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_count_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_count),
    .Q(s_count_reg)
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:60.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$target_reached_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$target_reached_o$15 ),
    .Q(target_reached_o)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:66.13-66.38|rtl/timer_unit/timer_unit_counter.sv:65.10-68.38" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10918  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10919_CMP ),
    .Y(\$procmux$10918_Y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter.sv:46.5-46.31|rtl/timer_unit/timer_unit_counter.sv:45.3-46.31" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10920  (
    .A(s_count_reg),
    .B(\$4y ),
    .S(\$procmux$10921_CMP ),
    .Y(\$procmux$10920_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:42.7-42.33|rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10923  (
    .A(\$procmux$10920_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10924_CMP ),
    .Y(\$procmux$10923_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10926  (
    .A(\$procmux$10923_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10927_CMP ),
    .Y(\$procmux$10926_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:42.7-42.33|rtl/timer_unit/timer_unit_counter.sv:41.5-47.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10930  (
    .A(\$s_count$5 ),
    .B(counter_value_i),
    .S(\$procmux$10931_CMP ),
    .Y(\$procmux$10930_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10933  (
    .A(\$procmux$10930_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10934_CMP ),
    .Y(\$procmux$10933_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter.sv:38.10-38.22|rtl/timer_unit/timer_unit_counter.sv:37.7-48.5" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10937  (
    .A(\$s_count$6 ),
    .B(32'd0),
    .S(\$procmux$10938_CMP ),
    .Y(\$procmux$10937_Y )
  );
  assign s_count = \$s_count$7 ;
  assign counter_value_o = s_count_reg;
  assign \$procmux$10919_CMP  = \$14y ;
  assign \$target_reached_o$15  = \$procmux$10918_Y ;
  assign \$procmux$10921_CMP  = \$3y ;
  assign \$procmux$10924_CMP  = \$2y ;
  assign \$procmux$10927_CMP  = \$1y ;
  assign \$s_count$5  = \$procmux$10926_Y ;
  assign \$procmux$10931_CMP  = \$2y ;
  assign \$procmux$10934_CMP  = \$1y ;
  assign \$s_count$6  = \$procmux$10933_Y ;
  assign \$procmux$10938_CMP  = \$1y ;
  assign \$s_count$7  = \$procmux$10937_Y ;
  assign \$1y  = reset_count_i;
  assign \$2y  = write_counter_i;
  assign \$3y  = enable_count_i;
  assign \$10y  = rst_ni;
  assign \$13y  = rst_ni;
endmodule

/* src = "rtl/timer_unit/timer_unit_counter_presc.sv:13.8" */
module \timer_unit_counter_presc$croc_chip.i_croc_soc.i_croc.i_timer.prescaler_hi_i (clk_i, rst_ni, write_counter_i, counter_value_i, reset_count_i, enable_count_i, compare_value_i, target_reached_o, counter_value_o);
  wire \$11y ;
  wire \$12y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$procmux$10940_Y ;
  wire \$procmux$10941_CMP ;
  wire [31:0] \$procmux$10942_Y ;
  wire \$procmux$10943_CMP ;
  wire [31:0] \$procmux$10945_Y ;
  wire \$procmux$10946_CMP ;
  wire [31:0] \$procmux$10948_Y ;
  wire \$procmux$10949_CMP ;
  wire [31:0] \$procmux$10952_Y ;
  wire \$procmux$10953_CMP ;
  wire [31:0] \$procmux$10955_Y ;
  wire \$procmux$10956_CMP ;
  wire [31:0] \$procmux$10959_Y ;
  wire \$procmux$10960_CMP ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:45.14-46.42" */
  wire [31:0] \$s_count$7 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  wire [31:0] \$s_count$8 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  wire [31:0] \$s_count$9 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:65.10-68.38" */
  wire \$target_reached_o$17 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:15.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:23.24" */
  input [31:0] compare_value_i;
  wire [31:0] compare_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:19.24" */
  input [31:0] counter_value_i;
  wire [31:0] counter_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:25.24" */
  output [31:0] counter_value_o;
  wire [31:0] counter_value_o;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:22.24" */
  input enable_count_i;
  wire enable_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:21.24" */
  input reset_count_i;
  wire reset_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:16.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:29.24" */
  wire [31:0] s_count;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:29.33" */
  wire [31:0] s_count_reg;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:26.24" */
  output target_reached_o;
  wire target_reached_o;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:18.24" */
  input write_counter_i;
  wire write_counter_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(rst_ni),
    .Y(\$11y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(rst_ni),
    .Y(\$14y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:65.15-65.41" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(s_count),
    .B(compare_value_i),
    .Y(\$16y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:37.11-37.52" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\$1y ),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:46.26-46.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A(s_count_reg),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:51.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_count_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_count),
    .Q(s_count_reg)
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:60.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$target_reached_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$target_reached_o$17 ),
    .Q(target_reached_o)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:66.13-66.38|rtl/timer_unit/timer_unit_counter_presc.sv:65.10-68.38" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10940  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10941_CMP ),
    .Y(\$procmux$10940_Y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:46.16-46.42|rtl/timer_unit/timer_unit_counter_presc.sv:45.14-46.42" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10942  (
    .A(s_count_reg),
    .B(\$6y ),
    .S(\$procmux$10943_CMP ),
    .Y(\$procmux$10942_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:42.12-42.38|rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10945  (
    .A(\$procmux$10942_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10946_CMP ),
    .Y(\$procmux$10945_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10948  (
    .A(\$procmux$10945_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10949_CMP ),
    .Y(\$procmux$10948_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:42.12-42.38|rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10952  (
    .A(\$s_count$7 ),
    .B(counter_value_i),
    .S(\$procmux$10953_CMP ),
    .Y(\$procmux$10952_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10955  (
    .A(\$procmux$10952_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10956_CMP ),
    .Y(\$procmux$10955_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10959  (
    .A(\$s_count$8 ),
    .B(32'd0),
    .S(\$procmux$10960_CMP ),
    .Y(\$procmux$10959_Y )
  );
  assign s_count = \$s_count$9 ;
  assign counter_value_o = s_count_reg;
  assign \$procmux$10941_CMP  = \$16y ;
  assign \$target_reached_o$17  = \$procmux$10940_Y ;
  assign \$procmux$10943_CMP  = \$5y ;
  assign \$procmux$10946_CMP  = \$4y ;
  assign \$procmux$10949_CMP  = \$3y ;
  assign \$s_count$7  = \$procmux$10948_Y ;
  assign \$procmux$10953_CMP  = \$4y ;
  assign \$procmux$10956_CMP  = \$3y ;
  assign \$s_count$8  = \$procmux$10955_Y ;
  assign \$procmux$10960_CMP  = \$3y ;
  assign \$s_count$9  = \$procmux$10959_Y ;
  assign \$1y  = reset_count_i;
  assign \$2y  = target_reached_o;
  assign \$4y  = write_counter_i;
  assign \$12y  = rst_ni;
  assign \$15y  = rst_ni;
  assign \$5y  = enable_count_i;
endmodule

/* src = "rtl/timer_unit/timer_unit_counter_presc.sv:13.8" */
module \timer_unit_counter_presc$croc_chip.i_croc_soc.i_croc.i_timer.prescaler_lo_i (clk_i, rst_ni, write_counter_i, counter_value_i, reset_count_i, enable_count_i, compare_value_i, target_reached_o, counter_value_o);
  wire \$11y ;
  wire \$12y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire [31:0] \$6y ;
  wire \$procmux$10962_Y ;
  wire \$procmux$10963_CMP ;
  wire [31:0] \$procmux$10964_Y ;
  wire \$procmux$10965_CMP ;
  wire [31:0] \$procmux$10967_Y ;
  wire \$procmux$10968_CMP ;
  wire [31:0] \$procmux$10970_Y ;
  wire \$procmux$10971_CMP ;
  wire [31:0] \$procmux$10974_Y ;
  wire \$procmux$10975_CMP ;
  wire [31:0] \$procmux$10977_Y ;
  wire \$procmux$10978_CMP ;
  wire [31:0] \$procmux$10981_Y ;
  wire \$procmux$10982_CMP ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:45.14-46.42" */
  wire [31:0] \$s_count$7 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  wire [31:0] \$s_count$8 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  wire [31:0] \$s_count$9 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:65.10-68.38" */
  wire \$target_reached_o$17 ;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:15.24" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:23.24" */
  input [31:0] compare_value_i;
  wire [31:0] compare_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:19.24" */
  input [31:0] counter_value_i;
  wire [31:0] counter_value_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:25.24" */
  output [31:0] counter_value_o;
  wire [31:0] counter_value_o;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:22.24" */
  input enable_count_i;
  wire enable_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:21.24" */
  input reset_count_i;
  wire reset_count_i;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:16.24" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:29.24" */
  wire [31:0] s_count;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:29.33" */
  wire [31:0] s_count_reg;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:26.24" */
  output target_reached_o;
  wire target_reached_o;
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:18.24" */
  input write_counter_i;
  wire write_counter_i;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(rst_ni),
    .Y(\$11y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(rst_ni),
    .Y(\$14y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:65.15-65.41" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd1)
  ) \$16  (
    .A(s_count),
    .B(compare_value_i),
    .Y(\$16y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:37.11-37.52" */
  \$logic_or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(\$1y ),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:46.26-46.41" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$6  (
    .A(s_count_reg),
    .B(32'd1),
    .Y(\$6y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:51.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd32)
  ) \$driver$s_count_reg  (
    .AD(32'd0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(s_count),
    .Q(s_count_reg)
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:60.4" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$target_reached_o  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(\$target_reached_o$17 ),
    .Q(target_reached_o)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:66.13-66.38|rtl/timer_unit/timer_unit_counter_presc.sv:65.10-68.38" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$10962  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$10963_CMP ),
    .Y(\$procmux$10962_Y )
  );
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:46.16-46.42|rtl/timer_unit/timer_unit_counter_presc.sv:45.14-46.42" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10964  (
    .A(s_count_reg),
    .B(\$6y ),
    .S(\$procmux$10965_CMP ),
    .Y(\$procmux$10964_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:42.12-42.38|rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10967  (
    .A(\$procmux$10964_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10968_CMP ),
    .Y(\$procmux$10967_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10970  (
    .A(\$procmux$10967_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10971_CMP ),
    .Y(\$procmux$10970_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:42.12-42.38|rtl/timer_unit/timer_unit_counter_presc.sv:41.9-47.12" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10974  (
    .A(\$s_count$7 ),
    .B(counter_value_i),
    .S(\$procmux$10975_CMP ),
    .Y(\$procmux$10974_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10977  (
    .A(\$procmux$10974_Y ),
    .B(32'hxxxxxxxx),
    .S(\$procmux$10978_CMP ),
    .Y(\$procmux$10977_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/timer_unit/timer_unit_counter_presc.sv:38.8-38.20|rtl/timer_unit/timer_unit_counter_presc.sv:37.6-48.9" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$10981  (
    .A(\$s_count$8 ),
    .B(32'd0),
    .S(\$procmux$10982_CMP ),
    .Y(\$procmux$10981_Y )
  );
  assign s_count = \$s_count$9 ;
  assign counter_value_o = s_count_reg;
  assign \$procmux$10963_CMP  = \$16y ;
  assign \$target_reached_o$17  = \$procmux$10962_Y ;
  assign \$procmux$10965_CMP  = \$5y ;
  assign \$procmux$10968_CMP  = \$4y ;
  assign \$procmux$10971_CMP  = \$3y ;
  assign \$s_count$7  = \$procmux$10970_Y ;
  assign \$procmux$10975_CMP  = \$4y ;
  assign \$procmux$10978_CMP  = \$3y ;
  assign \$s_count$8  = \$procmux$10977_Y ;
  assign \$procmux$10982_CMP  = \$3y ;
  assign \$s_count$9  = \$procmux$10981_Y ;
  assign \$1y  = reset_count_i;
  assign \$2y  = target_reached_o;
  assign \$4y  = write_counter_i;
  assign \$12y  = rst_ni;
  assign \$15y  = rst_ni;
  assign \$5y  = enable_count_i;
endmodule

/* src = "rtl/apb_uart/uart_baudgen.sv:35.8" */
module \uart_baudgen$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_BG16 (CLK, RST, CE, CLEAR, DIVIDER, BAUDTICK);
  wire \$1y ;
  wire \$2y ;
  wire \$3y ;
  wire [31:0] \$4y ;
  wire \$7y ;
  wire [31:0] \$8y ;
  /* src = "rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  wire \$BAUDTICK$10 ;
  /* src = "rtl/apb_uart/uart_baudgen.sv:62.16-65.18" */
  wire [15:0] \$iCounter$5 ;
  /* src = "rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  wire [15:0] \$iCounter$6 ;
  /* src = "rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  wire [15:0] \$iCounter$9 ;
  wire \$procmux$5751_Y ;
  wire \$procmux$5752_CMP ;
  wire [15:0] \$procmux$5754_Y ;
  wire \$procmux$5755_CMP ;
  wire [15:0] \$procmux$5756_Y ;
  wire \$procmux$5757_CMP ;
  wire [15:0] \$procmux$5759_Y ;
  wire \$procmux$5760_CMP ;
  wire [15:0] \$procmux$5763_Y ;
  wire \$procmux$5764_CMP ;
  /* src = "rtl/apb_uart/uart_baudgen.sv:41.16" */
  output BAUDTICK;
  wire BAUDTICK;
  /* src = "rtl/apb_uart/uart_baudgen.sv:38.14" */
  input CE;
  wire CE;
  /* src = "rtl/apb_uart/uart_baudgen.sv:39.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/uart_baudgen.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/uart_baudgen.sv:40.21" */
  input [15:0] DIVIDER;
  wire [15:0] DIVIDER;
  /* src = "rtl/apb_uart/uart_baudgen.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/uart_baudgen.sv:45.12" */
  wire [15:0] iCounter;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:64.19-64.31" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$4  (
    .A({ 16'h0000, iCounter }),
    .B(32'd1),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:67.9-67.23" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd16),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(iCounter),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:70.13-70.35" */
  \$sub  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$8  (
    .A({ 16'h0000, DIVIDER }),
    .B(32'd1),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$BAUDTICK  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$BAUDTICK$10 ),
    .Q(BAUDTICK)
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:47.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd16)
  ) \$driver$iCounter  (
    .AD(16'h0000),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iCounter$9 ),
    .Q(iCounter)
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:68.11-72.18|rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5751  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5752_CMP ),
    .Y(\$procmux$5751_Y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:68.11-72.18|rtl/apb_uart/uart_baudgen.sv:67.5-72.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$5754  (
    .A(\$iCounter$6 ),
    .B(\$8y [15:0]),
    .S(\$procmux$5755_CMP ),
    .Y(\$procmux$5754_Y )
  );
  /* src = "rtl/apb_uart/uart_baudgen.sv:64.7-64.32|rtl/apb_uart/uart_baudgen.sv:62.16-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$5756  (
    .A(iCounter),
    .B(\$4y [15:0]),
    .S(\$procmux$5757_CMP ),
    .Y(\$procmux$5756_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_baudgen.sv:60.1-60.131|rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$5759  (
    .A(\$procmux$5756_Y ),
    .B(16'hxxxx),
    .S(\$procmux$5760_CMP ),
    .Y(\$procmux$5759_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_baudgen.sv:60.1-60.131|rtl/apb_uart/uart_baudgen.sv:57.3-65.18" */
  \$mux  #(
    .WIDTH(32'd16)
  ) \$procmux$5763  (
    .A(\$iCounter$5 ),
    .B(16'h0000),
    .S(\$procmux$5764_CMP ),
    .Y(\$procmux$5763_Y )
  );
  assign \$procmux$5752_CMP  = \$7y ;
  assign \$BAUDTICK$10  = \$procmux$5751_Y ;
  assign \$procmux$5755_CMP  = \$7y ;
  assign \$iCounter$9  = \$procmux$5754_Y ;
  assign \$procmux$5757_CMP  = \$3y ;
  assign \$procmux$5760_CMP  = \$2y ;
  assign \$iCounter$5  = \$procmux$5759_Y ;
  assign \$procmux$5764_CMP  = \$2y ;
  assign \$iCounter$6  = \$procmux$5763_Y ;
  assign \$2y  = CLEAR;
  assign \$3y  = CE;
endmodule

/* src = "rtl/apb_uart/uart_interrupt.sv:35.8" */
module \uart_interrupt$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_IIC (CLK, INT, RST, IER, LSR, THI, RDA, CTI, AFE, MSR, IIR);
  wire \$0y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$25y ;
  wire \$2y ;
  wire \$3y ;
  wire \$4y ;
  wire \$5y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:85.13-92.13" */
  wire [3:0] \$iIIR$20 ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  wire [3:0] \$iIIR$21 ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  wire [3:0] \$iIIR$22 ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  wire [3:0] \$iIIR$23 ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  wire [3:0] \$iIIR$24 ;
  wire [3:0] \$procmux$5766_Y ;
  wire \$procmux$5767_CMP ;
  wire [3:0] \$procmux$5769_Y ;
  wire \$procmux$5770_CMP ;
  wire [3:0] \$procmux$5772_Y ;
  wire \$procmux$5773_CMP ;
  wire [3:0] \$procmux$5775_Y ;
  wire \$procmux$5776_CMP ;
  wire [3:0] \$procmux$5778_Y ;
  wire \$procmux$5779_CMP ;
  wire [3:0] \$procmux$5782_Y ;
  wire \$procmux$5783_CMP ;
  wire [3:0] \$procmux$5785_Y ;
  wire \$procmux$5786_CMP ;
  wire [3:0] \$procmux$5788_Y ;
  wire \$procmux$5789_CMP ;
  wire [3:0] \$procmux$5791_Y ;
  wire \$procmux$5792_CMP ;
  wire [3:0] \$procmux$5795_Y ;
  wire \$procmux$5796_CMP ;
  wire [3:0] \$procmux$5798_Y ;
  wire \$procmux$5799_CMP ;
  wire [3:0] \$procmux$5801_Y ;
  wire \$procmux$5802_CMP ;
  wire [3:0] \$procmux$5805_Y ;
  wire \$procmux$5806_CMP ;
  wire [3:0] \$procmux$5808_Y ;
  wire \$procmux$5809_CMP ;
  wire [3:0] \$procmux$5812_Y ;
  wire \$procmux$5813_CMP ;
  /* src = "rtl/apb_uart/uart_interrupt.sv:43.14" */
  input AFE;
  wire AFE;
  /* src = "rtl/apb_uart/uart_interrupt.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/uart_interrupt.sv:42.14" */
  input CTI;
  wire CTI;
  /* src = "rtl/apb_uart/uart_interrupt.sv:38.20" */
  input [3:0] IER;
  wire [3:0] IER;
  /* src = "rtl/apb_uart/uart_interrupt.sv:45.22" */
  output [3:0] IIR;
  wire [3:0] IIR;
  /* src = "rtl/apb_uart/uart_interrupt.sv:46.16" */
  output INT;
  wire INT;
  /* src = "rtl/apb_uart/uart_interrupt.sv:39.20" */
  input [4:0] LSR;
  wire [4:0] LSR;
  /* src = "rtl/apb_uart/uart_interrupt.sv:44.20" */
  input [3:0] MSR;
  wire [3:0] MSR;
  /* src = "rtl/apb_uart/uart_interrupt.sv:41.14" */
  input RDA;
  wire RDA;
  /* src = "rtl/apb_uart/uart_interrupt.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/uart_interrupt.sv:40.14" */
  input THI;
  wire THI;
  /* src = "rtl/apb_uart/uart_interrupt.sv:52.5" */
  wire iCTIInterrupt;
  /* src = "rtl/apb_uart/uart_interrupt.sv:55.11" */
  wire [3:0] iIIR;
  /* src = "rtl/apb_uart/uart_interrupt.sv:54.5" */
  wire iMSRInterrupt;
  /* src = "rtl/apb_uart/uart_interrupt.sv:51.5" */
  wire iRDAInterrupt;
  /* src = "rtl/apb_uart/uart_interrupt.sv:50.5" */
  wire iRLSInterrupt;
  /* src = "rtl/apb_uart/uart_interrupt.sv:53.5" */
  wire iTHRInterrupt;
  /* src = "rtl/apb_uart/uart_interrupt.sv:56.45-56.60" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$0  (
    .A(LSR[1]),
    .B(LSR[2]),
    .Y(\$0y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:56.44-56.70" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(\$0y ),
    .B(LSR[3]),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.44-60.82" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$9y ),
    .B(MSR[2]),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.43-60.92" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(\$10y ),
    .B(MSR[3]),
    .Y(\$11y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.32-60.93" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(IER[3]),
    .B(\$11y ),
    .Y(\$12y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(RST),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:56.43-56.80" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(\$1y ),
    .B(LSR[4]),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:96.23-96.32" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$25  (
    .A(iIIR[0]),
    .Y(\$25y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:56.32-56.81" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(IER[2]),
    .B(\$2y ),
    .Y(\$3y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:57.32-57.45" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(IER[0]),
    .B(RDA),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:58.32-58.45" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(IER[0]),
    .B(CTI),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:59.32-59.45" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(IER[1]),
    .B(THI),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.57-60.62" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(AFE),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.46-60.62" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(MSR[0]),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:60.45-60.72" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$8y ),
    .B(MSR[1]),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/uart_interrupt.sv:62.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$iIIR  (
    .AD(4'h1),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iIIR$24 ),
    .Q(iIIR)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:87.13-87.29|rtl/apb_uart/uart_interrupt.sv:85.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5766  (
    .A(4'h1),
    .B(4'h0),
    .S(\$procmux$5767_CMP ),
    .Y(\$procmux$5766_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:83.13-83.29|rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5769  (
    .A(\$procmux$5766_Y ),
    .B(4'hx),
    .S(\$procmux$5770_CMP ),
    .Y(\$procmux$5769_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:79.13-79.29|rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5772  (
    .A(\$procmux$5769_Y ),
    .B(4'hx),
    .S(\$procmux$5773_CMP ),
    .Y(\$procmux$5772_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:75.13-75.29|rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5775  (
    .A(\$procmux$5772_Y ),
    .B(4'hx),
    .S(\$procmux$5776_CMP ),
    .Y(\$procmux$5775_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:71.13-71.29|rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5778  (
    .A(\$procmux$5775_Y ),
    .B(4'hx),
    .S(\$procmux$5779_CMP ),
    .Y(\$procmux$5778_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:83.13-83.29|rtl/apb_uart/uart_interrupt.sv:81.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5782  (
    .A(\$iIIR$20 ),
    .B(4'h2),
    .S(\$procmux$5783_CMP ),
    .Y(\$procmux$5782_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:79.13-79.29|rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5785  (
    .A(\$procmux$5782_Y ),
    .B(4'hx),
    .S(\$procmux$5786_CMP ),
    .Y(\$procmux$5785_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:75.13-75.29|rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5788  (
    .A(\$procmux$5785_Y ),
    .B(4'hx),
    .S(\$procmux$5789_CMP ),
    .Y(\$procmux$5788_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:71.13-71.29|rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5791  (
    .A(\$procmux$5788_Y ),
    .B(4'hx),
    .S(\$procmux$5792_CMP ),
    .Y(\$procmux$5791_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:79.13-79.29|rtl/apb_uart/uart_interrupt.sv:77.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5795  (
    .A(\$iIIR$21 ),
    .B(4'h4),
    .S(\$procmux$5796_CMP ),
    .Y(\$procmux$5795_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:75.13-75.29|rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5798  (
    .A(\$procmux$5795_Y ),
    .B(4'hx),
    .S(\$procmux$5799_CMP ),
    .Y(\$procmux$5798_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:71.13-71.29|rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5801  (
    .A(\$procmux$5798_Y ),
    .B(4'hx),
    .S(\$procmux$5802_CMP ),
    .Y(\$procmux$5801_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:75.13-75.29|rtl/apb_uart/uart_interrupt.sv:73.13-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5805  (
    .A(\$iIIR$22 ),
    .B(4'hc),
    .S(\$procmux$5806_CMP ),
    .Y(\$procmux$5805_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:71.13-71.29|rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5808  (
    .A(\$procmux$5805_Y ),
    .B(4'hx),
    .S(\$procmux$5809_CMP ),
    .Y(\$procmux$5808_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_interrupt.sv:71.13-71.29|rtl/apb_uart/uart_interrupt.sv:69.8-92.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5812  (
    .A(\$iIIR$23 ),
    .B(4'h6),
    .S(\$procmux$5813_CMP ),
    .Y(\$procmux$5812_Y )
  );
  assign iRLSInterrupt = \$3y ;
  assign iRDAInterrupt = \$4y ;
  assign iCTIInterrupt = \$5y ;
  assign iTHRInterrupt = \$6y ;
  assign iMSRInterrupt = \$12y ;
  assign IIR = iIIR;
  assign INT = \$25y ;
  assign \$procmux$5767_CMP  = \$19y ;
  assign \$procmux$5770_CMP  = \$18y ;
  assign \$procmux$5773_CMP  = \$17y ;
  assign \$procmux$5776_CMP  = \$16y ;
  assign \$procmux$5779_CMP  = \$15y ;
  assign \$iIIR$20  = \$procmux$5778_Y ;
  assign \$procmux$5783_CMP  = \$18y ;
  assign \$procmux$5786_CMP  = \$17y ;
  assign \$procmux$5789_CMP  = \$16y ;
  assign \$procmux$5792_CMP  = \$15y ;
  assign \$iIIR$21  = \$procmux$5791_Y ;
  assign \$procmux$5796_CMP  = \$17y ;
  assign \$procmux$5799_CMP  = \$16y ;
  assign \$procmux$5802_CMP  = \$15y ;
  assign \$iIIR$22  = \$procmux$5801_Y ;
  assign \$procmux$5806_CMP  = \$16y ;
  assign \$procmux$5809_CMP  = \$15y ;
  assign \$iIIR$23  = \$procmux$5808_Y ;
  assign \$procmux$5813_CMP  = \$15y ;
  assign \$iIIR$24  = \$procmux$5812_Y ;
  assign \$15y  = iRLSInterrupt;
  assign \$16y  = iCTIInterrupt;
  assign \$17y  = iRDAInterrupt;
  assign \$18y  = iTHRInterrupt;
  assign \$19y  = iMSRInterrupt;
endmodule

/* src = "rtl/apb_uart/uart_receiver.sv:35.8" */
module \uart_receiver$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX (BI, CLK, SIN, RST, FE, WLS, STB, PEN, EPS, SP, RXCLK, RXCLEAR, PE, DOUT, RXFINISHED);
  wire \$100y ;
  wire \$101y ;
  wire \$10y ;
  wire \$11y ;
  wire \$12y ;
  wire \$14y ;
  wire \$15y ;
  wire \$16y ;
  wire \$17y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$20y ;
  wire \$21y ;
  wire \$22y ;
  wire [7:0] \$23y ;
  wire [7:0] \$24y ;
  wire [7:0] \$25y ;
  wire [31:0] \$26y ;
  wire \$2y ;
  wire \$31y ;
  wire \$32y ;
  wire \$33y ;
  wire \$34y ;
  wire \$35y ;
  wire \$36y ;
  wire \$37y ;
  wire \$38y ;
  wire \$39y ;
  wire \$40y ;
  wire \$41y ;
  wire \$42y ;
  wire \$43y ;
  wire \$44y ;
  wire \$45y ;
  wire \$46y ;
  wire \$48y ;
  wire \$4y ;
  wire \$50y ;
  wire \$52y ;
  wire \$53y ;
  wire \$56y ;
  wire \$57y ;
  wire \$5y ;
  wire \$60y ;
  wire \$62y ;
  wire \$63y ;
  wire \$68y ;
  wire \$6y ;
  wire \$75y ;
  wire \$76y ;
  wire \$77y ;
  wire \$78y ;
  wire \$7y ;
  wire \$80y ;
  wire \$81y ;
  wire \$82y ;
  wire \$83y ;
  wire \$85y ;
  wire \$8y ;
  wire \$90y ;
  wire \$91y ;
  wire \$92y ;
  wire \$93y ;
  wire \$94y ;
  wire \$95y ;
  wire \$96y ;
  wire \$97y ;
  wire \$98y ;
  wire \$99y ;
  wire \$9y ;
  /* src = "rtl/apb_uart/uart_receiver.sv:169.3-172.18" */
  wire [2:0] \$NState$51 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:183.7-186.26" */
  wire [2:0] \$NState$54 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  wire [2:0] \$NState$55 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:199.7-206.26" */
  wire [2:0] \$NState$58 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  wire [2:0] \$NState$59 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:216.3-223.18" */
  wire [2:0] \$NState$61 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  wire [2:0] \$NState$64 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  wire [2:0] \$NState$66 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:249.3-252.18" */
  wire [2:0] \$NState$69 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire [2:0] \$NState$70 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:284.11-287.34" */
  wire \$PE$84 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:292.11-295.34" */
  wire \$PE$86 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  wire \$PE$87 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  wire \$PE$89 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$iBaudCountClear$71 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  wire [7:0] \$iDOUT$28 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  wire [7:0] \$iDOUT$30 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  wire [3:0] \$iDataCount$27 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  wire [3:0] \$iDataCount$29 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$iDataCountInit$72 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:274.3-277.18" */
  wire \$iParityReceived$79 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  wire \$iParityReceived$88 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  wire \$iRXFinished$65 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  wire \$iRXFinished$67 ;
  /* src = "rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  wire \$iRXFinished$73 ;
  wire [7:0] \$procmux$5266_Y ;
  wire \$procmux$5267_CMP ;
  wire [7:0] \$procmux$5269_Y ;
  wire \$procmux$5270_CMP ;
  wire [3:0] \$procmux$5271_Y ;
  wire \$procmux$5272_CMP ;
  wire [3:0] \$procmux$5274_Y ;
  wire \$procmux$5275_CMP ;
  wire [7:0] \$procmux$5278_Y ;
  wire \$procmux$5279_CMP ;
  wire [3:0] \$procmux$5282_Y ;
  wire \$procmux$5283_CMP ;
  wire [2:0] \$procmux$5284_Y ;
  wire \$procmux$5285_CMP ;
  wire [2:0] \$procmux$5286_Y ;
  wire \$procmux$5287_CMP ;
  wire [2:0] \$procmux$5291_Y ;
  wire \$procmux$5292_CMP ;
  wire [2:0] \$procmux$5293_Y ;
  wire \$procmux$5294_CMP ;
  wire \$procmux$5299_Y ;
  wire \$procmux$5300_CMP ;
  wire \$procmux$5301_Y ;
  wire \$procmux$5302_CMP ;
  wire [2:0] \$procmux$5306_Y ;
  wire \$procmux$5307_CMP ;
  wire [2:0] \$procmux$5308_Y ;
  wire \$procmux$5309_CMP ;
  wire [2:0] \$procmux$5310_Y ;
  wire \$procmux$5311_CMP ;
  wire \$procmux$5315_Y ;
  wire \$procmux$5316_CMP ;
  wire \$procmux$5317_Y ;
  wire \$procmux$5318_CMP ;
  wire [2:0] \$procmux$5322_Y ;
  wire \$procmux$5323_CMP ;
  wire [2:0] \$procmux$5324_Y ;
  wire \$procmux$5325_CMP ;
  wire [2:0] \$procmux$5331_Y ;
  wire \$procmux$5332_CMP ;
  wire [2:0] \$procmux$5333_Y ;
  wire \$procmux$5334_CMP ;
  wire [2:0] \$procmux$5340_Y ;
  wire \$procmux$5341_CMP ;
  wire [2:0] \$procmux$5342_Y ;
  wire \$procmux$5343_CMP ;
  wire [2:0] \$procmux$5344_Y ;
  wire \$procmux$5345_CMP ;
  wire [2:0] \$procmux$5352_Y ;
  wire \$procmux$5353_CMP ;
  wire [2:0] \$procmux$5354_Y ;
  wire \$procmux$5355_CMP ;
  wire [2:0] \$procmux$5361_Y ;
  wire \$procmux$5362_CMP ;
  wire [2:0] \$procmux$5363_Y ;
  wire \$procmux$5364_CMP ;
  wire [2:0] \$procmux$5365_Y ;
  wire \$procmux$5366_CMP ;
  wire [2:0] \$procmux$5372_Y ;
  wire \$procmux$5373_CMP ;
  wire [2:0] \$procmux$5374_Y ;
  wire \$procmux$5375_CMP ;
  wire \$procmux$5378_Y ;
  wire \$procmux$5379_CMP ;
  wire \$procmux$5385_Y ;
  wire \$procmux$5386_CMP ;
  wire \$procmux$5388_CMP ;
  wire \$procmux$5395_Y ;
  wire \$procmux$5396_CMP ;
  wire [2:0] \$procmux$5398_Y ;
  wire \$procmux$5399_CMP ;
  wire \$procmux$5401_CMP ;
  wire \$procmux$5403_CMP ;
  wire \$procmux$5405_CMP ;
  wire \$procmux$5407_CMP ;
  wire \$procmux$5409_CMP ;
  wire \$procmux$5412_Y ;
  wire \$procmux$5413_CMP ;
  wire \$procmux$5415_Y ;
  wire \$procmux$5416_CMP ;
  wire \$procmux$5418_Y ;
  wire \$procmux$5419_CMP ;
  wire \$procmux$5420_Y ;
  wire \$procmux$5421_CMP ;
  wire \$procmux$5426_Y ;
  wire \$procmux$5427_CMP ;
  wire \$procmux$5428_Y ;
  wire \$procmux$5429_CMP ;
  wire \$procmux$5432_Y ;
  wire \$procmux$5433_CMP ;
  wire \$procmux$5434_Y ;
  wire \$procmux$5435_CMP ;
  wire \$procmux$5436_Y ;
  wire \$procmux$5437_CMP ;
  wire \$procmux$5440_Y ;
  wire \$procmux$5441_CMP ;
  wire \$procmux$5442_Y ;
  wire \$procmux$5443_CMP ;
  /* src = "rtl/apb_uart/uart_receiver.sv:48.16" */
  output BI;
  wire BI;
  /* src = "rtl/apb_uart/uart_receiver.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/uart_receiver.sv:60.12" */
  wire [2:0] CState;
  /* src = "rtl/apb_uart/uart_receiver.sv:49.22" */
  output [7:0] DOUT;
  wire [7:0] DOUT;
  /* src = "rtl/apb_uart/uart_receiver.sv:43.14" */
  input EPS;
  wire EPS;
  /* src = "rtl/apb_uart/uart_receiver.sv:47.16" */
  output FE;
  wire FE;
  /* src = "rtl/apb_uart/uart_receiver.sv:60.20" */
  wire [2:0] NState;
  /* src = "rtl/apb_uart/uart_receiver.sv:46.16" */
  output PE;
  wire PE;
  /* src = "rtl/apb_uart/uart_receiver.sv:42.14" */
  input PEN;
  wire PEN;
  /* src = "rtl/apb_uart/uart_receiver.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/uart_receiver.sv:39.14" */
  input RXCLEAR;
  wire RXCLEAR;
  /* src = "rtl/apb_uart/uart_receiver.sv:38.14" */
  input RXCLK;
  wire RXCLK;
  /* src = "rtl/apb_uart/uart_receiver.sv:50.16" */
  output RXFINISHED;
  wire RXFINISHED;
  /* src = "rtl/apb_uart/uart_receiver.sv:45.14" */
  input SIN;
  wire SIN;
  /* src = "rtl/apb_uart/uart_receiver.sv:44.14" */
  input SP;
  wire SP;
  /* src = "rtl/apb_uart/uart_receiver.sv:41.14" */
  input STB;
  wire STB;
  /* src = "rtl/apb_uart/uart_receiver.sv:40.20" */
  input [1:0] WLS;
  wire [1:0] WLS;
  /* src = "rtl/apb_uart/uart_receiver.sv:75.5" */
  wire iBI;
  /* src = "rtl/apb_uart/uart_receiver.sv:61.11" */
  wire [3:0] iBaudCount;
  /* src = "rtl/apb_uart/uart_receiver.sv:62.5" */
  wire iBaudCountClear;
  /* src = "rtl/apb_uart/uart_receiver.sv:63.5" */
  wire iBaudStep;
  /* src = "rtl/apb_uart/uart_receiver.sv:64.5" */
  wire iBaudStepD;
  /* src = "rtl/apb_uart/uart_receiver.sv:77.11" */
  wire [7:0] iDOUT;
  /* src = "rtl/apb_uart/uart_receiver.sv:70.11" */
  wire [3:0] iDataCount;
  /* src = "rtl/apb_uart/uart_receiver.sv:72.5" */
  wire iDataCountFinish;
  /* src = "rtl/apb_uart/uart_receiver.sv:71.5" */
  wire iDataCountInit;
  /* src = "rtl/apb_uart/uart_receiver.sv:74.5" */
  wire iFE;
  /* src = "rtl/apb_uart/uart_receiver.sv:66.5" */
  wire iFSIN;
  /* src = "rtl/apb_uart/uart_receiver.sv:67.5" */
  wire iFStopBit;
  /* src = "rtl/apb_uart/uart_receiver.sv:65.5" */
  wire iFilterClear;
  /* src = "rtl/apb_uart/uart_receiver.sv:76.5" */
  wire iNoStopReceived;
  /* src = "rtl/apb_uart/uart_receiver.sv:68.5" */
  wire iParity;
  /* src = "rtl/apb_uart/uart_receiver.sv:69.5" */
  wire iParityReceived;
  /* src = "rtl/apb_uart/uart_receiver.sv:73.5" */
  wire iRXFinished;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.13-118.110" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(\$9y ),
    .B(iDOUT[0]),
    .Y(\$10y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:310.22-310.63" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$101  (
    .A(1'h0),
    .B(1'h1),
    .S(\$100y ),
    .Y(\$101y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.115-118.120" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$11  (
    .A(EPS),
    .Y(\$11y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.12-118.120" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$12  (
    .A(\$10y ),
    .B(\$11y ),
    .Y(\$12y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(RST),
    .Y(\$14y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:140.40-140.65" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$17  (
    .A(iDataCountFinish),
    .Y(\$17y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:140.18-140.65" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(\$16y ),
    .B(\$17y ),
    .Y(\$18y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$ge  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$19  (
    .A({ 1'h0, iDataCount }),
    .B(1'h0),
    .Y(\$19y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:114.31-114.59" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$2  (
    .A(iBaudStepD),
    .B(iBaudCountClear),
    .Y(\$2y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$lt  #(
    .A_SIGNED(32'd1),
    .A_WIDTH(32'd5),
    .B_SIGNED(32'd1),
    .B_WIDTH(32'd5),
    .Y_WIDTH(32'd1)
  ) \$20  (
    .A({ 1'h0, iDataCount }),
    .B(5'h08),
    .Y(\$20y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$21  (
    .A(\$19y ),
    .B(\$20y ),
    .Y(\$21y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$22  (
    .A(1'h0),
    .B(1'h1),
    .S(\$21y ),
    .Y(\$22y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$23  (
    .A(\$22y ),
    .S(iDataCount[2:0]),
    .Y(\$23y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$demux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$24  (
    .A(\$22y ),
    .S(iDataCount[2:0]),
    .Y(\$24y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:142.18-142.44" */
  \$bwmux  #(
    .WIDTH(32'd8)
  ) \$25  (
    .A(iDOUT),
    .B({ iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN, iFSIN }),
    .S(\$24y ),
    .Y(\$25y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:143.32-143.46" */
  \$add  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd32),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd32),
    .Y_WIDTH(32'd32)
  ) \$26  (
    .A({ 28'h0000000, iDataCount }),
    .B(32'd1),
    .Y(\$26y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.38-148.50" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$31  (
    .A(WLS),
    .Y(\$31y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.54-148.69" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$32  (
    .A(iDataCount),
    .B(4'h5),
    .Y(\$32y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.38-148.69" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$33  (
    .A(\$31y ),
    .B(\$32y ),
    .Y(\$33y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.74-148.86" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$34  (
    .A(WLS),
    .B(2'h1),
    .Y(\$34y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.90-148.105" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$35  (
    .A(iDataCount),
    .B(4'h6),
    .Y(\$35y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.74-148.105" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(\$34y ),
    .B(\$35y ),
    .Y(\$36y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.37-148.106" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$37  (
    .A(\$33y ),
    .B(\$36y ),
    .Y(\$37y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.111-148.123" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$38  (
    .A(WLS),
    .B(2'h2),
    .Y(\$38y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.127-148.142" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$39  (
    .A(iDataCount),
    .B(4'h7),
    .Y(\$39y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.19-118.38" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(iDOUT[7]),
    .B(iDOUT[6]),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.111-148.142" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$40  (
    .A(\$38y ),
    .B(\$39y ),
    .Y(\$40y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.36-148.143" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$41  (
    .A(\$37y ),
    .B(\$40y ),
    .Y(\$41y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.148-148.160" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$42  (
    .A(WLS),
    .B(2'h3),
    .Y(\$42y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.164-148.179" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$43  (
    .A(iDataCount),
    .B(4'h8),
    .Y(\$43y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.148-148.179" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$44  (
    .A(\$42y ),
    .B(\$43y ),
    .Y(\$44y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.35-148.180" */
  \$or  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$45  (
    .A(\$41y ),
    .B(\$44y ),
    .Y(\$45y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:148.35-148.197" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$46  (
    .A(1'h0),
    .B(1'h1),
    .S(\$45y ),
    .Y(\$46y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(RST),
    .Y(\$48y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.18-118.50" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$5  (
    .A(\$4y ),
    .B(iDOUT[5]),
    .Y(\$5y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:169.8-169.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(SIN),
    .Y(\$50y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:183.12-183.26" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(iFSIN),
    .Y(\$53y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.17-118.62" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$5y ),
    .B(iDOUT[4]),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:230.12-230.30" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$63  (
    .A(iFStopBit),
    .Y(\$63y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:249.8-249.20" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$68  (
    .A(SIN),
    .Y(\$68y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.16-118.74" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(\$6y ),
    .B(iDOUT[3]),
    .Y(\$7y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$75  (
    .A(RST),
    .Y(\$75y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:274.8-274.21" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$76  (
    .A(CState),
    .B(3'h3),
    .Y(\$76y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:274.8-274.43" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$78  (
    .A(\$76y ),
    .B(\$77y ),
    .Y(\$78y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.15-118.86" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$7y ),
    .B(iDOUT[2]),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:284.17-284.38" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$82  (
    .A(EPS),
    .B(iParityReceived),
    .Y(\$82y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:284.16-284.48" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$83  (
    .A(\$82y ),
    .Y(\$83y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:292.16-292.42" */
  \$ne  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$85  (
    .A(iParity),
    .B(iParityReceived),
    .Y(\$85y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:118.14-118.98" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$9  (
    .A(\$8y ),
    .B(iDOUT[1]),
    .Y(\$9y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:308.34-308.52" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$90  (
    .A(iFStopBit),
    .Y(\$90y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:308.57-308.71" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$91  (
    .A(CState),
    .B(3'h4),
    .Y(\$91y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:308.34-308.72" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$92  (
    .A(\$90y ),
    .B(\$91y ),
    .Y(\$92y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:308.34-308.89" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$93  (
    .A(1'h0),
    .B(1'h1),
    .S(\$92y ),
    .Y(\$93y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:309.23-309.43" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd8),
    .Y_WIDTH(32'd1)
  ) \$94  (
    .A(iDOUT),
    .Y(\$94y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:309.47-309.71" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$95  (
    .A(iParityReceived),
    .Y(\$95y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:309.23-309.71" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$96  (
    .A(\$94y ),
    .B(\$95y ),
    .Y(\$96y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:309.22-309.100" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$98  (
    .A(\$96y ),
    .B(\$97y ),
    .Y(\$98y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:309.22-309.117" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$99  (
    .A(1'h0),
    .B(1'h1),
    .S(\$98y ),
    .Y(\$99y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:150.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$CState  (
    .AD(3'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(NState),
    .Q(CState)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:265.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$PE  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$PE$89 ),
    .Q(PE)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:102.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iBaudStepD  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(iBaudStep),
    .Q(iBaudStepD)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:123.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd8)
  ) \$driver$iDOUT  (
    .AD(8'h00),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iDOUT$30 ),
    .Q(iDOUT)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:123.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$iDataCount  (
    .AD(4'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iDataCount$29 ),
    .Q(iDataCount)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:265.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iParityReceived  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iParityReceived$88 ),
    .Q(iParityReceived)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:141.15-144.18|rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$5266  (
    .A(iDOUT),
    .B(\$25y ),
    .S(\$procmux$5267_CMP ),
    .Y(\$procmux$5266_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:133.10-137.13|rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$5269  (
    .A(\$procmux$5266_Y ),
    .B(8'hxx),
    .S(\$procmux$5270_CMP ),
    .Y(\$procmux$5269_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:141.15-144.18|rtl/apb_uart/uart_receiver.sv:140.13-144.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5271  (
    .A(iDataCount),
    .B(\$26y [3:0]),
    .S(\$procmux$5272_CMP ),
    .Y(\$procmux$5271_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:133.10-137.13|rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5274  (
    .A(\$procmux$5271_Y ),
    .B(4'hx),
    .S(\$procmux$5275_CMP ),
    .Y(\$procmux$5274_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:133.10-137.13|rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd8)
  ) \$procmux$5278  (
    .A(\$iDOUT$28 ),
    .B(8'h00),
    .S(\$procmux$5279_CMP ),
    .Y(\$procmux$5278_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:133.10-137.13|rtl/apb_uart/uart_receiver.sv:132.8-145.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5282  (
    .A(\$iDataCount$27 ),
    .B(4'h0),
    .S(\$procmux$5283_CMP ),
    .Y(\$procmux$5282_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:251.7-251.23|rtl/apb_uart/uart_receiver.sv:249.3-252.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5284  (
    .A(3'h5),
    .B(3'h0),
    .S(SIN),
    .Y(\$procmux$5284_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:249.3-252.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5286  (
    .A(3'hx),
    .B(\$procmux$5284_Y ),
    .S(\$procmux$5287_CMP ),
    .Y(\$procmux$5286_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:249.3-252.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5287_CMP0  (
    .A(CState),
    .B(3'h5),
    .Y(\$procmux$5287_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26|rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5291  (
    .A(3'h4),
    .B(\$NState$64 ),
    .S(\$procmux$5292_CMP ),
    .Y(\$procmux$5291_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5293  (
    .A(3'hx),
    .B(\$procmux$5291_Y ),
    .S(\$procmux$5294_CMP ),
    .Y(\$procmux$5293_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5294_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5294_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26|rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5299  (
    .A(1'hx),
    .B(1'h1),
    .S(\$procmux$5300_CMP ),
    .Y(\$procmux$5299_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5301  (
    .A(1'hx),
    .B(\$procmux$5299_Y ),
    .S(\$procmux$5302_CMP ),
    .Y(\$procmux$5301_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5302_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5302_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:231.19-234.26|rtl/apb_uart/uart_receiver.sv:230.7-239.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5306  (
    .A(3'h5),
    .B(3'h0),
    .S(iFStopBit),
    .Y(\$procmux$5306_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26|rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5308  (
    .A(3'hx),
    .B(\$procmux$5306_Y ),
    .S(\$procmux$5309_CMP ),
    .Y(\$procmux$5308_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5310  (
    .A(3'hx),
    .B(\$procmux$5308_Y ),
    .S(\$procmux$5311_CMP ),
    .Y(\$procmux$5310_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5311_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5311_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:230.7-239.26|rtl/apb_uart/uart_receiver.sv:228.3-244.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5315  (
    .A(1'h0),
    .B(\$iRXFinished$65 ),
    .S(\$procmux$5316_CMP ),
    .Y(\$procmux$5315_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5317  (
    .A(1'hx),
    .B(\$procmux$5315_Y ),
    .S(\$procmux$5318_CMP ),
    .Y(\$procmux$5317_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5318_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5318_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:218.7-218.22|rtl/apb_uart/uart_receiver.sv:216.3-223.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5322  (
    .A(3'h3),
    .B(3'h4),
    .S(\$procmux$5323_CMP ),
    .Y(\$procmux$5322_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:216.3-223.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5324  (
    .A(3'hx),
    .B(\$procmux$5322_Y ),
    .S(\$procmux$5325_CMP ),
    .Y(\$procmux$5324_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:216.3-223.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5325_CMP0  (
    .A(CState),
    .B(3'h3),
    .Y(\$procmux$5325_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:199.7-206.26|rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5331  (
    .A(3'h2),
    .B(\$NState$58 ),
    .S(\$procmux$5332_CMP ),
    .Y(\$procmux$5331_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5333  (
    .A(3'hx),
    .B(\$procmux$5331_Y ),
    .S(\$procmux$5334_CMP ),
    .Y(\$procmux$5333_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5334_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$5334_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:201.11-201.25|rtl/apb_uart/uart_receiver.sv:199.7-206.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5340  (
    .A(3'h4),
    .B(3'h3),
    .S(\$procmux$5341_CMP ),
    .Y(\$procmux$5340_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:199.7-206.26|rtl/apb_uart/uart_receiver.sv:197.3-211.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5342  (
    .A(3'hx),
    .B(\$procmux$5340_Y ),
    .S(\$procmux$5343_CMP ),
    .Y(\$procmux$5342_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5344  (
    .A(3'hx),
    .B(\$procmux$5342_Y ),
    .S(\$procmux$5345_CMP ),
    .Y(\$procmux$5344_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5345_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$5345_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:183.7-186.26|rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5352  (
    .A(3'h1),
    .B(\$NState$54 ),
    .S(\$procmux$5353_CMP ),
    .Y(\$procmux$5352_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5354  (
    .A(3'hx),
    .B(\$procmux$5352_Y ),
    .S(\$procmux$5355_CMP ),
    .Y(\$procmux$5354_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5355_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$5355_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:185.11-185.26|rtl/apb_uart/uart_receiver.sv:183.7-186.26" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5361  (
    .A(3'h2),
    .B(3'h0),
    .S(iFSIN),
    .Y(\$procmux$5361_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:183.7-186.26|rtl/apb_uart/uart_receiver.sv:181.5-192.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5363  (
    .A(3'hx),
    .B(\$procmux$5361_Y ),
    .S(\$procmux$5364_CMP ),
    .Y(\$procmux$5363_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5365  (
    .A(3'hx),
    .B(\$procmux$5363_Y ),
    .S(\$procmux$5366_CMP ),
    .Y(\$procmux$5365_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5366_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$5366_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:171.7-171.23|rtl/apb_uart/uart_receiver.sv:169.3-172.18" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5372  (
    .A(3'h1),
    .B(3'h0),
    .S(SIN),
    .Y(\$procmux$5372_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd3)
  ) \$procmux$5374  (
    .A(3'hx),
    .B(\$procmux$5372_Y ),
    .S(\$procmux$5375_CMP ),
    .Y(\$procmux$5374_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5375_CMP0  (
    .A(CState),
    .Y(\$procmux$5375_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5378  (
    .A(1'h0),
    .B(\$iRXFinished$67 ),
    .S(\$procmux$5379_CMP ),
    .Y(\$procmux$5378_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5379_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5379_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$pmux  #(
    .S_WIDTH(32'd2),
    .WIDTH(32'd1)
  ) \$procmux$5385  (
    .A(1'h0),
    .B(2'h3),
    .S({ \$procmux$5388_CMP , \$procmux$5386_CMP  }),
    .Y(\$procmux$5385_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5386_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$5386_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5388_CMP0  (
    .A(CState),
    .Y(\$procmux$5388_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5395  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5396_CMP ),
    .Y(\$procmux$5395_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5396_CMP0  (
    .A(CState),
    .Y(\$procmux$5396_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:249.3-252.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$pmux  #(
    .S_WIDTH(32'd6),
    .WIDTH(32'd3)
  ) \$procmux$5398  (
    .A(3'h0),
    .B({ \$NState$51 , \$NState$55 , \$NState$59 , \$NState$61 , \$NState$66 , \$NState$69  }),
    .S({ \$procmux$5409_CMP , \$procmux$5407_CMP , \$procmux$5405_CMP , \$procmux$5403_CMP , \$procmux$5401_CMP , \$procmux$5399_CMP  }),
    .Y(\$procmux$5398_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:249.3-252.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5399_CMP0  (
    .A(CState),
    .B(3'h5),
    .Y(\$procmux$5399_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:228.3-244.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5401_CMP0  (
    .A(CState),
    .B(3'h4),
    .Y(\$procmux$5401_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:216.3-223.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5403_CMP0  (
    .A(CState),
    .B(3'h3),
    .Y(\$procmux$5403_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:197.3-211.18|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5405_CMP0  (
    .A(CState),
    .B(3'h2),
    .Y(\$procmux$5405_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:179.5-193.12|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5407_CMP0  (
    .A(CState),
    .B(3'h1),
    .Y(\$procmux$5407_CMP )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:168.5-176.10|rtl/apb_uart/uart_receiver.sv:166.1-260.8" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd3),
    .Y_WIDTH(32'd1)
  ) \$procmux$5409_CMP0  (
    .A(CState),
    .Y(\$procmux$5409_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:280.11-298.20|rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5412  (
    .A(1'h0),
    .B(\$PE$87 ),
    .S(\$procmux$5413_CMP ),
    .Y(\$procmux$5412_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:294.15-294.27|rtl/apb_uart/uart_receiver.sv:292.11-295.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5415  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5416_CMP ),
    .Y(\$procmux$5415_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:284.11-287.34|rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5418  (
    .A(\$procmux$5415_Y ),
    .B(1'hx),
    .S(\$procmux$5419_CMP ),
    .Y(\$procmux$5418_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:280.11-298.20|rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5420  (
    .A(1'hx),
    .B(\$procmux$5418_Y ),
    .S(\$procmux$5421_CMP ),
    .Y(\$procmux$5420_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:284.11-287.34|rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5426  (
    .A(\$PE$86 ),
    .B(\$PE$84 ),
    .S(\$procmux$5427_CMP ),
    .Y(\$procmux$5426_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:280.11-298.20|rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5428  (
    .A(1'hx),
    .B(\$procmux$5426_Y ),
    .S(\$procmux$5429_CMP ),
    .Y(\$procmux$5428_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:286.15-286.27|rtl/apb_uart/uart_receiver.sv:284.11-287.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5432  (
    .A(1'h1),
    .B(1'h0),
    .S(\$82y ),
    .Y(\$procmux$5432_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:284.11-287.34|rtl/apb_uart/uart_receiver.sv:282.9-297.14" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5434  (
    .A(1'hx),
    .B(\$procmux$5432_Y ),
    .S(\$procmux$5435_CMP ),
    .Y(\$procmux$5434_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:280.11-298.20|rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5436  (
    .A(1'hx),
    .B(\$procmux$5434_Y ),
    .S(\$procmux$5437_CMP ),
    .Y(\$procmux$5436_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_receiver.sv:280.11-298.20|rtl/apb_uart/uart_receiver.sv:279.1-303.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5440  (
    .A(1'h0),
    .B(\$iParityReceived$79 ),
    .S(\$procmux$5441_CMP ),
    .Y(\$procmux$5440_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:276.7-276.32|rtl/apb_uart/uart_receiver.sv:274.3-277.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5442  (
    .A(iParityReceived),
    .B(iFSIN),
    .S(\$procmux$5443_CMP ),
    .Y(\$procmux$5442_Y )
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:78.27" */
  \slib_counter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_BRC  RX_BRC (
    .CLEAR(iBaudCountClear),
    .CLK(CLK),
    .D(4'h0),
    .DOWN(1'h0),
    .ENABLE(RXCLK),
    .LOAD(1'h0),
    .OVERFLOW(iBaudStep),
    .Q(iBaudCount),
    .RST(RST)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:95.31" */
  \slib_input_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_IFSB  RX_IFSB (
    .CE(RXCLK),
    .CLK(CLK),
    .D(SIN),
    .Q(iFStopBit),
    .RST(RST)
  );
  /* src = "rtl/apb_uart/uart_receiver.sv:88.44" */
  \slib_mv_filter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_RX.RX_MVF  RX_MVF (
    .CLEAR(iFilterClear),
    .CLK(CLK),
    .D(SIN),
    .Q(iFSIN),
    .RST(RST),
    .SAMPLE(RXCLK)
  );
  assign iFilterClear = \$2y ;
  assign iParity = \$12y ;
  assign iDataCountFinish = \$46y ;
  assign NState = \$NState$70 ;
  assign iBaudCountClear = \$iBaudCountClear$71 ;
  assign iDataCountInit = \$iDataCountInit$72 ;
  assign iRXFinished = \$iRXFinished$73 ;
  assign iNoStopReceived = \$93y ;
  assign iBI = \$99y ;
  assign iFE = \$101y ;
  assign DOUT = iDOUT;
  assign BI = iBI;
  assign FE = iFE;
  assign RXFINISHED = iRXFinished;
  assign \$procmux$5267_CMP  = \$18y ;
  assign \$procmux$5270_CMP  = \$15y ;
  assign \$iDOUT$28  = \$procmux$5269_Y ;
  assign \$procmux$5272_CMP  = \$18y ;
  assign \$procmux$5275_CMP  = \$15y ;
  assign \$iDataCount$27  = \$procmux$5274_Y ;
  assign \$procmux$5279_CMP  = \$15y ;
  assign \$iDOUT$30  = \$procmux$5278_Y ;
  assign \$procmux$5283_CMP  = \$15y ;
  assign \$iDataCount$29  = \$procmux$5282_Y ;
  assign \$procmux$5285_CMP  = \$68y ;
  assign \$NState$69  = \$procmux$5286_Y ;
  assign \$procmux$5292_CMP  = \$62y ;
  assign \$NState$66  = \$procmux$5293_Y ;
  assign \$procmux$5300_CMP  = \$62y ;
  assign \$iRXFinished$65  = \$procmux$5301_Y ;
  assign \$procmux$5307_CMP  = \$63y ;
  assign \$procmux$5309_CMP  = \$62y ;
  assign \$NState$64  = \$procmux$5310_Y ;
  assign \$procmux$5316_CMP  = \$62y ;
  assign \$iRXFinished$67  = \$procmux$5317_Y ;
  assign \$procmux$5323_CMP  = \$60y ;
  assign \$NState$61  = \$procmux$5324_Y ;
  assign \$procmux$5332_CMP  = \$56y ;
  assign \$NState$59  = \$procmux$5333_Y ;
  assign \$procmux$5341_CMP  = \$57y ;
  assign \$procmux$5343_CMP  = \$56y ;
  assign \$NState$58  = \$procmux$5344_Y ;
  assign \$procmux$5353_CMP  = \$52y ;
  assign \$NState$55  = \$procmux$5354_Y ;
  assign \$procmux$5362_CMP  = \$53y ;
  assign \$procmux$5364_CMP  = \$52y ;
  assign \$NState$54  = \$procmux$5365_Y ;
  assign \$procmux$5373_CMP  = \$50y ;
  assign \$NState$51  = \$procmux$5374_Y ;
  assign \$iRXFinished$73  = \$procmux$5378_Y ;
  assign \$iDataCountInit$72  = \$procmux$5385_Y ;
  assign \$iBaudCountClear$71  = \$procmux$5395_Y ;
  assign \$NState$70  = \$procmux$5398_Y ;
  assign \$procmux$5413_CMP  = \$80y ;
  assign \$PE$89  = \$procmux$5412_Y ;
  assign \$procmux$5416_CMP  = \$85y ;
  assign \$procmux$5419_CMP  = \$81y ;
  assign \$procmux$5421_CMP  = \$80y ;
  assign \$PE$86  = \$procmux$5420_Y ;
  assign \$procmux$5427_CMP  = \$81y ;
  assign \$procmux$5429_CMP  = \$80y ;
  assign \$PE$87  = \$procmux$5428_Y ;
  assign \$procmux$5433_CMP  = \$83y ;
  assign \$procmux$5435_CMP  = \$81y ;
  assign \$procmux$5437_CMP  = \$80y ;
  assign \$PE$84  = \$procmux$5436_Y ;
  assign \$procmux$5441_CMP  = \$80y ;
  assign \$iParityReceived$88  = \$procmux$5440_Y ;
  assign \$procmux$5443_CMP  = \$78y ;
  assign \$iParityReceived$79  = \$procmux$5442_Y ;
  assign \$15y  = iDataCountInit;
  assign \$16y  = iBaudStep;
  assign \$52y  = iBaudStep;
  assign \$57y  = PEN;
  assign \$60y  = iBaudStep;
  assign \$56y  = iDataCountFinish;
  assign \$62y  = iBaudCount[3];
  assign \$77y  = iBaudStep;
  assign \$81y  = SP;
  assign \$97y  = iNoStopReceived;
  assign \$100y  = iNoStopReceived;
  assign \$80y  = PEN;
endmodule

/* src = "rtl/apb_uart/uart_transmitter.sv:35.8" */
module \uart_transmitter$croc_chip.i_croc_soc.i_croc.i_uart.i_apb_uart.UART_TX (CLK, SOUT, RST, CLEAR, TXCLK, TXSTART, WLS, STB, PEN, EPS, SP, BC, DIN, TXFINISHED);
  wire \$16y ;
  wire \$18y ;
  wire \$19y ;
  wire \$1y ;
  wire \$22y ;
  wire \$23y ;
  wire \$26y ;
  wire \$27y ;
  wire \$2y ;
  wire \$30y ;
  wire \$32y ;
  wire \$33y ;
  wire \$35y ;
  wire \$36y ;
  wire \$39y ;
  wire \$3y ;
  wire \$40y ;
  wire \$43y ;
  wire \$48y ;
  wire \$49y ;
  wire \$4y ;
  wire \$50y ;
  wire \$51y ;
  wire \$52y ;
  wire \$53y ;
  wire \$54y ;
  wire \$57y ;
  wire \$58y ;
  wire \$59y ;
  wire \$5y ;
  wire \$60y ;
  wire \$62y ;
  wire \$64y ;
  wire \$65y ;
  wire \$6y ;
  wire \$7y ;
  wire \$8y ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  wire [3:0] \$CState$11 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  wire [3:0] \$CState$13 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  wire [3:0] \$CState$9 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:110.13-113.18" */
  wire [3:0] \$NState$17 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:152.18-159.23" */
  wire [3:0] \$NState$20 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  wire [3:0] \$NState$21 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:172.18-179.23" */
  wire [3:0] \$NState$24 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  wire [3:0] \$NState$25 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:192.18-199.23" */
  wire [3:0] \$NState$28 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  wire [3:0] \$NState$29 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:210.13-217.18" */
  wire [3:0] \$NState$31 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:255.18-258.23" */
  wire [3:0] \$NState$41 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  wire [3:0] \$NState$42 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:265.8-268.13" */
  wire [3:0] \$NState$44 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  wire [3:0] \$NState$45 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:308.14-309.34" */
  wire \$iFinished$61 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:310.14-313.30" */
  wire \$iLast$63 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  wire \$iParity$55 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:224.18-231.23" */
  wire \$iSout$34 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:235.18-242.23" */
  wire \$iSout$37 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  wire \$iSout$38 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  wire \$iSout$46 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  wire \$iTx2$10 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  wire \$iTx2$12 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  wire \$iTx2$14 ;
  wire \$procmux$5445_Y ;
  wire \$procmux$5446_CMP ;
  wire \$procmux$5447_Y ;
  wire \$procmux$5448_CMP ;
  wire \$procmux$5450_Y ;
  wire \$procmux$5451_CMP ;
  wire \$procmux$5452_CMP ;
  wire \$procmux$5453_CMP ;
  wire [3:0] \$procmux$5454_Y ;
  wire \$procmux$5455_CMP ;
  wire [3:0] \$procmux$5456_Y ;
  wire \$procmux$5457_CMP ;
  wire [3:0] \$procmux$5459_Y ;
  wire \$procmux$5460_CMP ;
  wire [3:0] \$procmux$5462_Y ;
  wire \$procmux$5463_CMP ;
  wire [3:0] \$procmux$5464_Y ;
  wire \$procmux$5465_CMP ;
  wire [3:0] \$procmux$5469_Y ;
  wire \$procmux$5470_CMP ;
  wire [3:0] \$procmux$5471_Y ;
  wire \$procmux$5472_CMP ;
  wire \$procmux$5476_Y ;
  wire \$procmux$5477_CMP ;
  wire \$procmux$5479_Y ;
  wire \$procmux$5480_CMP ;
  wire \$procmux$5481_Y ;
  wire \$procmux$5482_CMP ;
  wire \$procmux$5488_Y ;
  wire \$procmux$5489_CMP ;
  wire \$procmux$5490_Y ;
  wire \$procmux$5491_CMP ;
  wire \$procmux$5496_Y ;
  wire \$procmux$5497_CMP ;
  wire \$procmux$5498_Y ;
  wire \$procmux$5499_CMP ;
  wire \$procmux$5500_Y ;
  wire \$procmux$5501_CMP ;
  wire [3:0] \$procmux$5506_Y ;
  wire \$procmux$5507_CMP ;
  wire [3:0] \$procmux$5508_Y ;
  wire \$procmux$5509_CMP ;
  wire [3:0] \$procmux$5516_Y ;
  wire \$procmux$5517_CMP ;
  wire [3:0] \$procmux$5518_Y ;
  wire \$procmux$5519_CMP ;
  wire [3:0] \$procmux$5526_Y ;
  wire \$procmux$5527_CMP ;
  wire [3:0] \$procmux$5528_Y ;
  wire \$procmux$5529_CMP ;
  wire [3:0] \$procmux$5530_Y ;
  wire \$procmux$5531_CMP ;
  wire [3:0] \$procmux$5539_Y ;
  wire \$procmux$5540_CMP ;
  wire [3:0] \$procmux$5541_Y ;
  wire \$procmux$5542_CMP ;
  wire [3:0] \$procmux$5550_Y ;
  wire \$procmux$5551_CMP ;
  wire [3:0] \$procmux$5552_Y ;
  wire \$procmux$5553_CMP ;
  wire [3:0] \$procmux$5554_Y ;
  wire \$procmux$5555_CMP ;
  wire [3:0] \$procmux$5564_Y ;
  wire \$procmux$5565_CMP ;
  wire [3:0] \$procmux$5566_Y ;
  wire \$procmux$5567_CMP ;
  wire [3:0] \$procmux$5576_Y ;
  wire \$procmux$5577_CMP ;
  wire [3:0] \$procmux$5578_Y ;
  wire \$procmux$5579_CMP ;
  wire [3:0] \$procmux$5580_Y ;
  wire \$procmux$5581_CMP ;
  wire [3:0] \$procmux$5594_Y ;
  wire \$procmux$5595_CMP ;
  wire [3:0] \$procmux$5596_Y ;
  wire \$procmux$5597_CMP ;
  wire \$procmux$5601_Y ;
  wire \$procmux$5602_CMP ;
  wire \$procmux$5604_CMP ;
  wire \$procmux$5606_CMP ;
  wire \$procmux$5608_CMP ;
  wire \$procmux$5610_CMP ;
  wire \$procmux$5611_CMP ;
  wire \$procmux$5612_CMP ;
  wire \$procmux$5613_CMP ;
  wire \$procmux$5614_CMP ;
  wire \$procmux$5615_CMP ;
  wire [3:0] \$procmux$5617_Y ;
  wire \$procmux$5618_CMP ;
  wire \$procmux$5620_CMP ;
  wire \$procmux$5622_CMP ;
  wire \$procmux$5624_CMP ;
  wire \$procmux$5626_CMP ;
  wire \$procmux$5628_CMP ;
  wire \$procmux$5630_CMP ;
  wire \$procmux$5631_CMP ;
  wire \$procmux$5632_CMP ;
  wire \$procmux$5633_CMP ;
  wire \$procmux$5634_CMP ;
  wire \$procmux$5635_CMP ;
  wire \$procmux$5637_CMP ;
  wire \$procmux$5639_Y ;
  wire \$procmux$5640_CMP ;
  wire \$procmux$5642_Y ;
  wire \$procmux$5643_CMP ;
  wire \$procmux$5644_Y ;
  wire \$procmux$5645_CMP ;
  wire [3:0] \$procmux$5647_Y ;
  wire \$procmux$5648_CMP ;
  wire [3:0] \$procmux$5650_Y ;
  wire \$procmux$5651_CMP ;
  wire [3:0] \$procmux$5652_Y ;
  wire \$procmux$5653_CMP ;
  wire \$procmux$5656_Y ;
  wire \$procmux$5657_CMP ;
  wire \$procmux$5658_Y ;
  wire \$procmux$5659_CMP ;
  wire [3:0] \$procmux$5662_Y ;
  wire \$procmux$5663_CMP ;
  wire [3:0] \$procmux$5664_Y ;
  wire \$procmux$5665_CMP ;
  wire \$procmux$5667_Y ;
  wire \$procmux$5668_CMP ;
  wire [3:0] \$procmux$5670_Y ;
  wire \$procmux$5671_CMP ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:46.14" */
  input BC;
  wire BC;
  /* src = "rtl/apb_uart/uart_transmitter.sv:40.14" */
  input CLEAR;
  wire CLEAR;
  /* src = "rtl/apb_uart/uart_transmitter.sv:36.14" */
  input CLK;
  wire CLK;
  /* src = "rtl/apb_uart/uart_transmitter.sv:66.12" */
  wire [3:0] CState;
  /* src = "rtl/apb_uart/uart_transmitter.sv:47.20" */
  input [7:0] DIN;
  wire [7:0] DIN;
  /* src = "rtl/apb_uart/uart_transmitter.sv:44.14" */
  input EPS;
  wire EPS;
  /* src = "rtl/apb_uart/uart_transmitter.sv:66.20" */
  wire [3:0] NState;
  /* src = "rtl/apb_uart/uart_transmitter.sv:43.14" */
  input PEN;
  wire PEN;
  /* src = "rtl/apb_uart/uart_transmitter.sv:37.14" */
  input RST;
  wire RST;
  /* src = "rtl/apb_uart/uart_transmitter.sv:49.16" */
  output SOUT;
  wire SOUT;
  /* src = "rtl/apb_uart/uart_transmitter.sv:45.14" */
  input SP;
  wire SP;
  /* src = "rtl/apb_uart/uart_transmitter.sv:42.14" */
  input STB;
  wire STB;
  /* src = "rtl/apb_uart/uart_transmitter.sv:38.14" */
  input TXCLK;
  wire TXCLK;
  /* src = "rtl/apb_uart/uart_transmitter.sv:48.16" */
  output TXFINISHED;
  wire TXFINISHED;
  /* src = "rtl/apb_uart/uart_transmitter.sv:39.14" */
  input TXSTART;
  wire TXSTART;
  /* src = "rtl/apb_uart/uart_transmitter.sv:283.15" */
  wire \TX_PAR.iP40 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:283.21" */
  wire \TX_PAR.iP50 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:283.27" */
  wire \TX_PAR.iP60 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:283.33" */
  wire \TX_PAR.iP70 ;
  /* src = "rtl/apb_uart/uart_transmitter.sv:41.20" */
  input [1:0] WLS;
  wire [1:0] WLS;
  /* src = "rtl/apb_uart/uart_transmitter.sv:70.5" */
  wire iFinished;
  /* src = "rtl/apb_uart/uart_transmitter.sv:297.9" */
  wire iLast;
  /* src = "rtl/apb_uart/uart_transmitter.sv:69.5" */
  wire iParity;
  /* src = "rtl/apb_uart/uart_transmitter.sv:68.5" */
  wire iSout;
  /* src = "rtl/apb_uart/uart_transmitter.sv:67.5" */
  wire iTx2;
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(RST),
    .Y(\$1y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:150.18-150.30" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$18  (
    .A(WLS),
    .Y(\$18y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:170.18-170.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$22  (
    .A(WLS),
    .B(2'h1),
    .Y(\$22y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:190.18-190.30" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$26  (
    .A(WLS),
    .B(2'h2),
    .Y(\$26y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.18-82.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$3  (
    .A(iTx2),
    .Y(\$3y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:241.33-241.42" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$36  (
    .A(iParity),
    .Y(\$36y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.25-89.37" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(WLS),
    .Y(\$4y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:284.16-284.31" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$48  (
    .A(DIN[4]),
    .B(DIN[3]),
    .Y(\$48y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:284.16-284.40" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$49  (
    .A(\$48y ),
    .B(DIN[2]),
    .Y(\$49y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:284.16-284.49" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$50  (
    .A(\$49y ),
    .B(DIN[1]),
    .Y(\$50y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:284.16-284.58" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$51  (
    .A(\$50y ),
    .B(DIN[0]),
    .Y(\$51y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:285.16-285.29" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$52  (
    .A(DIN[5]),
    .B(\$51y ),
    .Y(\$52y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:286.16-286.29" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$53  (
    .A(DIN[6]),
    .B(\$52y ),
    .Y(\$53y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:287.16-287.29" */
  \$xor  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$54  (
    .A(DIN[7]),
    .B(\$53y ),
    .Y(\$54y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$57  (
    .A(RST),
    .Y(\$57y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:308.18-308.31" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$58  (
    .A(iLast),
    .Y(\$58y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:308.35-308.49" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$59  (
    .A(CState),
    .B(4'hb),
    .Y(\$59y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.24-89.56" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$6  (
    .A(\$4y ),
    .B(\$5y ),
    .Y(\$6y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:308.18-308.49" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$60  (
    .A(\$58y ),
    .B(\$59y ),
    .Y(\$60y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:310.18-310.32" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$62  (
    .A(CState),
    .B(4'hb),
    .Y(\$62y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:317.23-317.34" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$64  (
    .A(BC),
    .Y(\$64y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:317.23-317.51" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$65  (
    .A(iSout),
    .B(1'h0),
    .S(BC),
    .Y(\$65y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.61-89.76" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(CState),
    .B(4'hc),
    .Y(\$7y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:89.23-89.76" */
  \$logic_and  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$8  (
    .A(\$6y ),
    .B(\$7y ),
    .Y(\$8y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:72.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd4)
  ) \$driver$CState  (
    .AD(4'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$CState$13 ),
    .Q(CState)
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:298.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iFinished  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iFinished$61 ),
    .Q(iFinished)
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:298.5" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iLast  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iLast$63 ),
    .Q(iLast)
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:72.1" */
  \$aldff  #(
    .ALOAD_POLARITY(32'd1),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$iTx2  (
    .AD(1'h0),
    .ALOAD(RST),
    .CLK(CLK),
    .D(\$iTx2$14 ),
    .Q(iTx2)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:311.16-311.30|rtl/apb_uart/uart_transmitter.sv:310.14-313.30" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5445  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5446_CMP ),
    .Y(\$procmux$5445_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:309.16-309.34|rtl/apb_uart/uart_transmitter.sv:308.14-309.34" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5447  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5448_CMP ),
    .Y(\$procmux$5447_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:292.20-292.36|rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$pmux  #(
    .S_WIDTH(32'd3),
    .WIDTH(32'd1)
  ) \$procmux$5450  (
    .A(\$54y ),
    .B({ \$51y , \$52y , \$53y  }),
    .S({ \$procmux$5453_CMP , \$procmux$5452_CMP , \$procmux$5451_CMP  }),
    .Y(\$procmux$5450_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:292.20-292.36|rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5451_CMP0  (
    .A(WLS),
    .B(2'h2),
    .Y(\$procmux$5451_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:291.20-291.36|rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5452_CMP0  (
    .A(WLS),
    .B(2'h1),
    .Y(\$procmux$5452_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:290.20-290.36|rtl/apb_uart/uart_transmitter.sv:289.9-294.16" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd2),
    .Y_WIDTH(32'd1)
  ) \$procmux$5453_CMP0  (
    .A(WLS),
    .Y(\$procmux$5453_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:267.13-267.29|rtl/apb_uart/uart_transmitter.sv:265.8-268.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5454  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$5455_CMP ),
    .Y(\$procmux$5454_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:265.8-268.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5456  (
    .A(4'hx),
    .B(\$procmux$5454_Y ),
    .S(\$procmux$5457_CMP ),
    .Y(\$procmux$5456_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:265.8-268.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5457_CMP0  (
    .A(CState),
    .B(4'hc),
    .Y(\$procmux$5457_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:257.23-257.39|rtl/apb_uart/uart_transmitter.sv:255.18-258.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5459  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$5460_CMP ),
    .Y(\$procmux$5459_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:251.18-251.34|rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5462  (
    .A(\$procmux$5459_Y ),
    .B(4'hx),
    .S(\$procmux$5463_CMP ),
    .Y(\$procmux$5462_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5464  (
    .A(4'hx),
    .B(\$procmux$5462_Y ),
    .S(\$procmux$5465_CMP ),
    .Y(\$procmux$5464_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5465_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$5465_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:251.18-251.34|rtl/apb_uart/uart_transmitter.sv:249.13-260.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5469  (
    .A(\$NState$41 ),
    .B(4'hc),
    .S(\$procmux$5470_CMP ),
    .Y(\$procmux$5469_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5471  (
    .A(4'hx),
    .B(\$procmux$5469_Y ),
    .S(\$procmux$5472_CMP ),
    .Y(\$procmux$5471_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5472_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$5472_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:237.23-237.40|rtl/apb_uart/uart_transmitter.sv:235.18-242.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5476  (
    .A(\$36y ),
    .B(\$iParity$55 ),
    .S(\$procmux$5477_CMP ),
    .Y(\$procmux$5476_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:224.18-231.23|rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5479  (
    .A(\$procmux$5476_Y ),
    .B(1'hx),
    .S(\$procmux$5480_CMP ),
    .Y(\$procmux$5479_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5481  (
    .A(1'hx),
    .B(\$procmux$5479_Y ),
    .S(\$procmux$5482_CMP ),
    .Y(\$procmux$5481_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5482_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$5482_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:224.18-231.23|rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5488  (
    .A(\$iSout$37 ),
    .B(\$iSout$34 ),
    .S(\$procmux$5489_CMP ),
    .Y(\$procmux$5488_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5490  (
    .A(1'hx),
    .B(\$procmux$5488_Y ),
    .S(\$procmux$5491_CMP ),
    .Y(\$procmux$5490_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5491_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$5491_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:226.23-226.38|rtl/apb_uart/uart_transmitter.sv:224.18-231.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5496  (
    .A(1'h1),
    .B(1'h0),
    .S(\$procmux$5497_CMP ),
    .Y(\$procmux$5496_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:224.18-231.23|rtl/apb_uart/uart_transmitter.sv:222.13-243.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5498  (
    .A(1'hx),
    .B(\$procmux$5496_Y ),
    .S(\$procmux$5499_CMP ),
    .Y(\$procmux$5498_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5500  (
    .A(1'hx),
    .B(\$procmux$5498_Y ),
    .S(\$procmux$5501_CMP ),
    .Y(\$procmux$5500_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5501_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$5501_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:212.18-212.32|rtl/apb_uart/uart_transmitter.sv:210.13-217.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5506  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$5507_CMP ),
    .Y(\$procmux$5506_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:208.10-218.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5508  (
    .A(4'hx),
    .B(\$procmux$5506_Y ),
    .S(\$procmux$5509_CMP ),
    .Y(\$procmux$5508_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:208.10-218.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5509_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$5509_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:192.18-199.23|rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5516  (
    .A(4'h9),
    .B(\$NState$28 ),
    .S(\$procmux$5517_CMP ),
    .Y(\$procmux$5516_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5518  (
    .A(4'hx),
    .B(\$procmux$5516_Y ),
    .S(\$procmux$5519_CMP ),
    .Y(\$procmux$5518_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5519_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$5519_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:194.23-194.37|rtl/apb_uart/uart_transmitter.sv:192.18-199.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5526  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$5527_CMP ),
    .Y(\$procmux$5526_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:192.18-199.23|rtl/apb_uart/uart_transmitter.sv:190.13-204.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5528  (
    .A(4'hx),
    .B(\$procmux$5526_Y ),
    .S(\$procmux$5529_CMP ),
    .Y(\$procmux$5528_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5530  (
    .A(4'hx),
    .B(\$procmux$5528_Y ),
    .S(\$procmux$5531_CMP ),
    .Y(\$procmux$5530_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5531_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$5531_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:172.18-179.23|rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5539  (
    .A(4'h8),
    .B(\$NState$24 ),
    .S(\$procmux$5540_CMP ),
    .Y(\$procmux$5539_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5541  (
    .A(4'hx),
    .B(\$procmux$5539_Y ),
    .S(\$procmux$5542_CMP ),
    .Y(\$procmux$5541_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5542_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$5542_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:174.23-174.37|rtl/apb_uart/uart_transmitter.sv:172.18-179.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5550  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$5551_CMP ),
    .Y(\$procmux$5550_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:172.18-179.23|rtl/apb_uart/uart_transmitter.sv:170.13-184.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5552  (
    .A(4'hx),
    .B(\$procmux$5550_Y ),
    .S(\$procmux$5553_CMP ),
    .Y(\$procmux$5552_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5554  (
    .A(4'hx),
    .B(\$procmux$5552_Y ),
    .S(\$procmux$5555_CMP ),
    .Y(\$procmux$5554_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5555_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$5555_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:152.18-159.23|rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5564  (
    .A(4'h7),
    .B(\$NState$20 ),
    .S(\$procmux$5565_CMP ),
    .Y(\$procmux$5564_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5566  (
    .A(4'hx),
    .B(\$procmux$5564_Y ),
    .S(\$procmux$5567_CMP ),
    .Y(\$procmux$5566_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5567_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$5567_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:154.23-154.37|rtl/apb_uart/uart_transmitter.sv:152.18-159.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5576  (
    .A(4'hb),
    .B(4'ha),
    .S(\$procmux$5577_CMP ),
    .Y(\$procmux$5576_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:152.18-159.23|rtl/apb_uart/uart_transmitter.sv:150.13-164.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5578  (
    .A(4'hx),
    .B(\$procmux$5576_Y ),
    .S(\$procmux$5579_CMP ),
    .Y(\$procmux$5578_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5580  (
    .A(4'hx),
    .B(\$procmux$5578_Y ),
    .S(\$procmux$5581_CMP ),
    .Y(\$procmux$5580_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5581_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$5581_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:112.18-112.34|rtl/apb_uart/uart_transmitter.sv:110.13-113.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5594  (
    .A(4'h0),
    .B(4'h1),
    .S(\$procmux$5595_CMP ),
    .Y(\$procmux$5594_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:110.13-113.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5596  (
    .A(4'hx),
    .B(\$procmux$5594_Y ),
    .S(\$procmux$5597_CMP ),
    .Y(\$procmux$5596_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:110.13-113.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5597_CMP0  (
    .A(CState),
    .Y(\$procmux$5597_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$pmux  #(
    .S_WIDTH(32'd10),
    .WIDTH(32'd1)
  ) \$procmux$5601  (
    .A(1'h1),
    .B({ 1'h0, DIN[0], DIN[1], DIN[2], DIN[3], DIN[4], DIN[5], DIN[6], DIN[7], \$iSout$38  }),
    .S({ \$procmux$5615_CMP , \$procmux$5614_CMP , \$procmux$5613_CMP , \$procmux$5612_CMP , \$procmux$5611_CMP , \$procmux$5610_CMP , \$procmux$5608_CMP , \$procmux$5606_CMP , \$procmux$5604_CMP , \$procmux$5602_CMP  }),
    .Y(\$procmux$5601_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5602_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$5602_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:208.10-218.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5604_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$5604_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5606_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$5606_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5608_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$5608_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5610_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$5610_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:142.10-145.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5611_CMP0  (
    .A(CState),
    .B(4'h5),
    .Y(\$procmux$5611_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:136.10-139.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5612_CMP0  (
    .A(CState),
    .B(4'h4),
    .Y(\$procmux$5612_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:130.10-133.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5613_CMP0  (
    .A(CState),
    .B(4'h3),
    .Y(\$procmux$5613_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:124.10-127.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5614_CMP0  (
    .A(CState),
    .B(4'h2),
    .Y(\$procmux$5614_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:118.10-121.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5615_CMP0  (
    .A(CState),
    .B(4'h1),
    .Y(\$procmux$5615_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:265.8-268.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$pmux  #(
    .S_WIDTH(32'd13),
    .WIDTH(32'd4)
  ) \$procmux$5617  (
    .A(4'h0),
    .B({ \$NState$17 , 20'h23456, \$NState$21 , \$NState$25 , \$NState$29 , \$NState$31 , 4'hb, \$NState$42 , \$NState$44  }),
    .S({ \$procmux$5637_CMP , \$procmux$5635_CMP , \$procmux$5634_CMP , \$procmux$5633_CMP , \$procmux$5632_CMP , \$procmux$5631_CMP , \$procmux$5630_CMP , \$procmux$5628_CMP , \$procmux$5626_CMP , \$procmux$5624_CMP , \$procmux$5622_CMP , \$procmux$5620_CMP , \$procmux$5618_CMP  }),
    .Y(\$procmux$5617_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:265.8-268.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5618_CMP0  (
    .A(CState),
    .B(4'hc),
    .Y(\$procmux$5618_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:249.13-260.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5620_CMP0  (
    .A(CState),
    .B(4'hb),
    .Y(\$procmux$5620_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:221.10-245.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5622_CMP0  (
    .A(CState),
    .B(4'ha),
    .Y(\$procmux$5622_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:208.10-218.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5624_CMP0  (
    .A(CState),
    .B(4'h9),
    .Y(\$procmux$5624_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:188.10-205.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5626_CMP0  (
    .A(CState),
    .B(4'h8),
    .Y(\$procmux$5626_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:168.10-185.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5628_CMP0  (
    .A(CState),
    .B(4'h7),
    .Y(\$procmux$5628_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:148.10-165.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5630_CMP0  (
    .A(CState),
    .B(4'h6),
    .Y(\$procmux$5630_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:142.10-145.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5631_CMP0  (
    .A(CState),
    .B(4'h5),
    .Y(\$procmux$5631_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:136.10-139.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5632_CMP0  (
    .A(CState),
    .B(4'h4),
    .Y(\$procmux$5632_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:130.10-133.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5633_CMP0  (
    .A(CState),
    .B(4'h3),
    .Y(\$procmux$5633_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:124.10-127.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5634_CMP0  (
    .A(CState),
    .B(4'h2),
    .Y(\$procmux$5634_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:118.10-121.13|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$eq  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .B_SIGNED(32'd0),
    .B_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5635_CMP0  (
    .A(CState),
    .B(4'h1),
    .Y(\$procmux$5635_CMP )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:110.13-113.18|rtl/apb_uart/uart_transmitter.sv:107.6-276.13" */
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd4),
    .Y_WIDTH(32'd1)
  ) \$procmux$5637_CMP0  (
    .A(CState),
    .Y(\$procmux$5637_CMP )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:90.20-93.23|rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5639  (
    .A(1'h0),
    .B(1'h1),
    .S(\$procmux$5640_CMP ),
    .Y(\$procmux$5639_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:83.15-86.18|rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5642  (
    .A(1'hx),
    .B(\$procmux$5639_Y ),
    .S(iTx2),
    .Y(\$procmux$5642_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5644  (
    .A(1'hx),
    .B(\$procmux$5642_Y ),
    .S(\$procmux$5645_CMP ),
    .Y(\$procmux$5644_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:90.20-93.23|rtl/apb_uart/uart_transmitter.sv:89.18-98.23" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5647  (
    .A(CState),
    .B(\$NState$45 ),
    .S(\$procmux$5648_CMP ),
    .Y(\$procmux$5647_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:83.15-86.18|rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5650  (
    .A(4'hx),
    .B(\$procmux$5647_Y ),
    .S(iTx2),
    .Y(\$procmux$5650_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5652  (
    .A(4'hx),
    .B(\$procmux$5650_Y ),
    .S(\$procmux$5653_CMP ),
    .Y(\$procmux$5652_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:83.15-86.18|rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5656  (
    .A(1'h1),
    .B(\$iTx2$10 ),
    .S(iTx2),
    .Y(\$procmux$5656_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5658  (
    .A(1'hx),
    .B(\$procmux$5656_Y ),
    .S(\$procmux$5659_CMP ),
    .Y(\$procmux$5658_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/apb_uart/uart_transmitter.sv:83.15-86.18|rtl/apb_uart/uart_transmitter.sv:82.13-99.18" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5662  (
    .A(\$NState$45 ),
    .B(\$CState$9 ),
    .S(iTx2),
    .Y(\$procmux$5662_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5664  (
    .A(4'hx),
    .B(\$procmux$5662_Y ),
    .S(\$procmux$5665_CMP ),
    .Y(\$procmux$5664_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$5667  (
    .A(iTx2),
    .B(\$iTx2$12 ),
    .S(\$procmux$5668_CMP ),
    .Y(\$procmux$5667_Y )
  );
  /* src = "rtl/apb_uart/uart_transmitter.sv:82.13-99.18|rtl/apb_uart/uart_transmitter.sv:80.8-100.13" */
  \$mux  #(
    .WIDTH(32'd4)
  ) \$procmux$5670  (
    .A(CState),
    .B(\$CState$11 ),
    .S(\$procmux$5671_CMP ),
    .Y(\$procmux$5670_Y )
  );
  assign NState = \$NState$45 ;
  assign iSout = \$iSout$46 ;
  assign iParity = \$iParity$55 ;
  assign \TX_PAR.iP40  = \$51y ;
  assign \TX_PAR.iP50  = \$52y ;
  assign \TX_PAR.iP60  = \$53y ;
  assign \TX_PAR.iP70  = \$54y ;
  assign SOUT = \$65y ;
  assign TXFINISHED = iFinished;
  assign \$procmux$5446_CMP  = \$62y ;
  assign \$iLast$63  = \$procmux$5445_Y ;
  assign \$procmux$5448_CMP  = \$60y ;
  assign \$iFinished$61  = \$procmux$5447_Y ;
  assign \$iParity$55  = \$procmux$5450_Y ;
  assign \$procmux$5455_CMP  = \$43y ;
  assign \$NState$44  = \$procmux$5456_Y ;
  assign \$procmux$5460_CMP  = \$40y ;
  assign \$procmux$5463_CMP  = \$39y ;
  assign \$NState$41  = \$procmux$5464_Y ;
  assign \$procmux$5470_CMP  = \$39y ;
  assign \$NState$42  = \$procmux$5471_Y ;
  assign \$procmux$5477_CMP  = \$35y ;
  assign \$procmux$5480_CMP  = \$32y ;
  assign \$iSout$37  = \$procmux$5481_Y ;
  assign \$procmux$5489_CMP  = \$32y ;
  assign \$iSout$38  = \$procmux$5490_Y ;
  assign \$procmux$5497_CMP  = \$33y ;
  assign \$procmux$5499_CMP  = \$32y ;
  assign \$iSout$34  = \$procmux$5500_Y ;
  assign \$procmux$5507_CMP  = \$30y ;
  assign \$NState$31  = \$procmux$5508_Y ;
  assign \$procmux$5517_CMP  = \$26y ;
  assign \$NState$29  = \$procmux$5518_Y ;
  assign \$procmux$5527_CMP  = \$27y ;
  assign \$procmux$5529_CMP  = \$26y ;
  assign \$NState$28  = \$procmux$5530_Y ;
  assign \$procmux$5540_CMP  = \$22y ;
  assign \$NState$25  = \$procmux$5541_Y ;
  assign \$procmux$5551_CMP  = \$23y ;
  assign \$procmux$5553_CMP  = \$22y ;
  assign \$NState$24  = \$procmux$5554_Y ;
  assign \$procmux$5565_CMP  = \$18y ;
  assign \$NState$21  = \$procmux$5566_Y ;
  assign \$procmux$5577_CMP  = \$19y ;
  assign \$procmux$5579_CMP  = \$18y ;
  assign \$NState$20  = \$procmux$5580_Y ;
  assign \$procmux$5595_CMP  = \$16y ;
  assign \$NState$17  = \$procmux$5596_Y ;
  assign \$iSout$46  = \$procmux$5601_Y ;
  assign \$NState$45  = \$procmux$5617_Y ;
  assign \$procmux$5640_CMP  = \$8y ;
  assign \$procmux$5643_CMP  = \$3y ;
  assign \$procmux$5645_CMP  = \$2y ;
  assign \$iTx2$10  = \$procmux$5644_Y ;
  assign \$procmux$5648_CMP  = \$8y ;
  assign \$procmux$5651_CMP  = \$3y ;
  assign \$procmux$5653_CMP  = \$2y ;
  assign \$CState$9  = \$procmux$5652_Y ;
  assign \$procmux$5657_CMP  = \$3y ;
  assign \$procmux$5659_CMP  = \$2y ;
  assign \$iTx2$12  = \$procmux$5658_Y ;
  assign \$procmux$5663_CMP  = \$3y ;
  assign \$procmux$5665_CMP  = \$2y ;
  assign \$CState$11  = \$procmux$5664_Y ;
  assign \$procmux$5668_CMP  = \$2y ;
  assign \$iTx2$14  = \$procmux$5667_Y ;
  assign \$procmux$5671_CMP  = \$2y ;
  assign \$CState$13  = \$procmux$5670_Y ;
  assign \$2y  = TXCLK;
  assign \$5y  = STB;
  assign \$16y  = TXSTART;
  assign \$19y  = PEN;
  assign \$23y  = PEN;
  assign \$27y  = PEN;
  assign \$32y  = SP;
  assign \$33y  = EPS;
  assign \$39y  = STB;
  assign \$43y  = TXSTART;
  assign \$30y  = PEN;
  assign \$35y  = EPS;
  assign \$40y  = TXSTART;
endmodule

/* src = "rtl/user_domain.sv:8.8" */
module \user_domain$croc_chip.i_croc_soc.i_user (clk_i, rst_ni, ref_clk_i, testmode_i, user_sbr_obi_req_i, user_sbr_obi_rsp_o, user_mgr_obi_req_o, user_mgr_obi_rsp_i, gpio_in_sync_i, interrupts_o);
  /* src = "rtl/user_domain.sv:46.35" */
  wire [147:0] all_user_sbr_obi_req;
  /* src = "rtl/user_domain.sv:47.35" */
  wire [77:0] all_user_sbr_obi_rsp;
  /* src = "rtl/user_domain.sv:11.21" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/user_domain.sv:22.38" */
  input [31:0] gpio_in_sync_i;
  wire [31:0] gpio_in_sync_i;
  /* src = "rtl/user_domain.sv:23.38" */
  output [3:0] interrupts_o;
  wire [3:0] interrupts_o;
  /* src = "rtl/user_domain.sv:12.21" */
  input ref_clk_i;
  wire ref_clk_i;
  /* src = "rtl/user_domain.sv:13.21" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/user_domain.sv:14.21" */
  input testmode_i;
  wire testmode_i;
  /* src = "rtl/user_domain.sv:54.17" */
  wire [73:0] user_error_obi_req;
  /* src = "rtl/user_domain.sv:55.17" */
  wire [38:0] user_error_obi_rsp;
  /* src = "rtl/user_domain.sv:68.51" */
  wire user_idx;
  /* src = "rtl/user_domain.sv:19.24" */
  output [71:0] user_mgr_obi_req_o;
  wire [71:0] user_mgr_obi_req_o;
  /* src = "rtl/user_domain.sv:20.24" */
  input [36:0] user_mgr_obi_rsp_i;
  wire [36:0] user_mgr_obi_rsp_i;
  /* src = "rtl/user_domain.sv:50.17" */
  wire [73:0] user_rom_obi_req;
  /* src = "rtl/user_domain.sv:51.17" */
  wire [38:0] user_rom_obi_rsp;
  /* src = "rtl/user_domain.sv:16.24" */
  input [73:0] user_sbr_obi_req_i;
  wire [73:0] user_sbr_obi_req_i;
  /* src = "rtl/user_domain.sv:17.24" */
  output [38:0] user_sbr_obi_rsp_o;
  wire [38:0] user_sbr_obi_rsp_o;
  /* src = "rtl/user_domain.sv:76.5" */
  \addr_decode$croc_chip.i_croc_soc.i_user.i_addr_decode_periphs  i_addr_decode_periphs (
    .addr_i(user_sbr_obi_req_i[73:42]),
    .addr_map_i(96'h000000012000000020001000),
    .default_idx_i(1'h0),
    .en_default_idx_i(1'h1),
    .idx_o(user_idx)
  );
  /* src = "rtl/user_domain.sv:92.5" */
  \obi_demux$croc_chip.i_croc_soc.i_user.i_obi_demux  i_obi_demux (
    .clk_i(clk_i),
    .mgr_ports_req_o(all_user_sbr_obi_req),
    .mgr_ports_rsp_i(all_user_sbr_obi_rsp),
    .rst_ni(rst_ni),
    .sbr_port_req_i(user_sbr_obi_req_i),
    .sbr_port_rsp_o(user_sbr_obi_rsp_o),
    .sbr_port_select_i(user_idx)
  );
  /* src = "rtl/user_domain.sv:128.5" */
  \obi_err_sbr$croc_chip.i_croc_soc.i_user.i_user_err  i_user_err (
    .clk_i(clk_i),
    .obi_req_i(user_error_obi_req),
    .obi_rsp_o(user_error_obi_rsp),
    .rst_ni(rst_ni),
    .testmode_i(testmode_i)
  );
  /* src = "rtl/user_domain.sv:114.5" */
  \user_rom$croc_chip.i_croc_soc.i_user.i_user_rom  i_user_rom (
    .clk_i(clk_i),
    .obi_req_i(user_rom_obi_req),
    .obi_rsp_o(user_rom_obi_rsp),
    .rst_ni(rst_ni)
  );
  assign interrupts_o = 4'h0;
  assign user_mgr_obi_req_o = 72'h000000000000000000;
  assign user_error_obi_req = all_user_sbr_obi_req[73:0];
  assign all_user_sbr_obi_rsp[38:0] = user_error_obi_rsp;
  assign user_rom_obi_req = all_user_sbr_obi_req[147:74];
  assign all_user_sbr_obi_rsp[77:39] = user_rom_obi_rsp;
endmodule

/* src = "rtl/user_domain/user_rom.sv:9.8" */
module \user_rom$croc_chip.i_croc_soc.i_user.i_user_rom (clk_i, rst_ni, obi_req_i, obi_rsp_o);
  wire \$10y ;
  wire \$11y ;
  wire \$14y ;
  wire \$1y ;
  wire \$2y ;
  wire \$4y ;
  wire \$5y ;
  wire \$7y ;
  wire \$8y ;
  wire [31:0] \$auto$proc_rom.cc:154:do_switch$5 ;
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10" */
  wire \$obi_err$17 ;
  /* src = "rtl/user_domain/user_rom.sv:64.5-81.8" */
  wire \$obi_err$19 ;
  wire [31:0] \$procmux$11906_Y ;
  wire \$procmux$11907_CMP ;
  wire [31:0] \$procmux$11908_Y ;
  wire \$procmux$11909_CMP ;
  wire \$procmux$11911_Y ;
  wire \$procmux$11912_CMP ;
  wire \$procmux$11913_Y ;
  wire \$procmux$11914_CMP ;
  wire [31:0] \$procmux$11917_Y ;
  wire \$procmux$11918_CMP ;
  wire [31:0] \$procmux$11919_Y ;
  wire \$procmux$11920_CMP ;
  wire \$procmux$11922_Y ;
  wire \$procmux$11923_CMP ;
  wire [31:0] \$procmux$11925_Y ;
  wire \$procmux$11926_CMP ;
  /* src = "rtl/user_domain/user_rom.sv:66.9-77.16" */
  wire [31:0] \$rsp_data$15 ;
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10" */
  wire [31:0] \$rsp_data$16 ;
  /* src = "rtl/user_domain/user_rom.sv:64.5-81.8" */
  wire [31:0] \$rsp_data$18 ;
  /* src = "rtl/user_domain/user_rom.sv:18.16" */
  input clk_i;
  wire clk_i;
  /* src = "rtl/user_domain/user_rom.sv:33.30" */
  wire [2:0] id_d;
  /* src = "rtl/user_domain/user_rom.sv:33.36" */
  wire [2:0] id_q;
  /* src = "rtl/user_domain/user_rom.sv:29.9" */
  wire obi_err;
  /* src = "rtl/user_domain/user_rom.sv:23.20" */
  input [73:0] obi_req_i;
  wire [73:0] obi_req_i;
  /* src = "rtl/user_domain/user_rom.sv:25.20" */
  output [38:0] obi_rsp_o;
  wire [38:0] obi_rsp_o;
  /* src = "rtl/user_domain/user_rom.sv:31.9" */
  wire req_d;
  /* src = "rtl/user_domain/user_rom.sv:31.16" */
  wire req_q;
  /* src = "rtl/user_domain/user_rom.sv:28.32" */
  wire [31:0] rsp_data;
  /* src = "rtl/user_domain/user_rom.sv:20.16" */
  input rst_ni;
  wire rst_ni;
  /* src = "rtl/user_domain/user_rom.sv:30.9" */
  wire we_d;
  /* src = "rtl/user_domain/user_rom.sv:30.15" */
  wire we_q;
  /* src = "rtl/user_domain/user_rom.sv:32.15" */
  wire [2:0] word_addr_d;
  /* src = "rtl/user_domain/user_rom.sv:32.28" */
  wire [2:0] word_addr_q;
  /* full_case = 32'd1 */
  /* src = "rtl/user_domain/user_rom.sv:66.9-77.16" */
  reg [31:0] \$auto$proc_rom.cc:155:do_switch$6  [7:0];
  initial begin
    \$auto$proc_rom.cc:155:do_switch$6 [0] = 32'd1229991508;
    \$auto$proc_rom.cc:155:do_switch$6 [1] = 32'd642338375;
    \$auto$proc_rom.cc:155:do_switch$6 [2] = 32'd1430531651;
    \$auto$proc_rom.cc:155:do_switch$6 [3] = 32'd658592328;
    \$auto$proc_rom.cc:155:do_switch$6 [4] = 32'd1396777075;
    \$auto$proc_rom.cc:155:do_switch$6 [5] = 32'd17225;
    \$auto$proc_rom.cc:155:do_switch$6 [6] = 32'd0;
    \$auto$proc_rom.cc:155:do_switch$6 [7] = 32'd0;
  end
  assign \$auto$proc_rom.cc:154:do_switch$5  = \$auto$proc_rom.cc:155:do_switch$6 [word_addr_q];
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$1  (
    .A(rst_ni),
    .Y(\$1y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$10  (
    .A(rst_ni),
    .Y(\$10y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.11-65.16" */
  \$not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$14  (
    .A(we_q),
    .Y(\$14y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$4  (
    .A(rst_ni),
    .Y(\$4y )
  );
  \$logic_not  #(
    .A_SIGNED(32'd0),
    .A_WIDTH(32'd1),
    .Y_WIDTH(32'd1)
  ) \$7  (
    .A(rst_ni),
    .Y(\$7y )
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$id_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(id_d),
    .Q(id_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$req_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(req_d),
    .Q(req_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd1)
  ) \$driver$we_q  (
    .AD(1'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(we_d),
    .Q(we_q)
  );
  \$aldff  #(
    .ALOAD_POLARITY(32'd0),
    .CLK_POLARITY(32'd1),
    .WIDTH(32'd3)
  ) \$driver$word_addr_q  (
    .AD(3'h0),
    .ALOAD(rst_ni),
    .CLK(clk_i),
    .D(word_addr_d),
    .Q(word_addr_q)
  );
  /* full_case = 32'd1 */
  /* src = "rtl/user_domain/user_rom.sv:66.9-77.16|rtl/user_domain/user_rom.sv:65.7-80.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11906  (
    .A(\$auto$proc_rom.cc:154:do_switch$5 ),
    .B(32'hxxxxxxxx),
    .S(we_q),
    .Y(\$procmux$11906_Y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10|rtl/user_domain/user_rom.sv:64.5-81.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11908  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11906_Y ),
    .S(\$procmux$11909_CMP ),
    .Y(\$procmux$11908_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/user_domain/user_rom.sv:66.9-77.16|rtl/user_domain/user_rom.sv:65.7-80.10" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11911  (
    .A(1'h0),
    .B(1'h1),
    .S(we_q),
    .Y(\$procmux$11911_Y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10|rtl/user_domain/user_rom.sv:64.5-81.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11913  (
    .A(1'hx),
    .B(\$procmux$11911_Y ),
    .S(\$procmux$11914_CMP ),
    .Y(\$procmux$11913_Y )
  );
  /* full_case = 32'd1 */
  /* src = "rtl/user_domain/user_rom.sv:66.9-77.16|rtl/user_domain/user_rom.sv:65.7-80.10" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11917  (
    .A(\$rsp_data$15 ),
    .B(32'd0),
    .S(we_q),
    .Y(\$procmux$11917_Y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10|rtl/user_domain/user_rom.sv:64.5-81.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11919  (
    .A(32'hxxxxxxxx),
    .B(\$procmux$11917_Y ),
    .S(\$procmux$11920_CMP ),
    .Y(\$procmux$11919_Y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10|rtl/user_domain/user_rom.sv:64.5-81.8" */
  \$mux  #(
    .WIDTH(32'd1)
  ) \$procmux$11922  (
    .A(1'h0),
    .B(\$obi_err$17 ),
    .S(\$procmux$11923_CMP ),
    .Y(\$procmux$11922_Y )
  );
  /* src = "rtl/user_domain/user_rom.sv:65.7-80.10|rtl/user_domain/user_rom.sv:64.5-81.8" */
  \$mux  #(
    .WIDTH(32'd32)
  ) \$procmux$11925  (
    .A(32'd0),
    .B(\$rsp_data$16 ),
    .S(\$procmux$11926_CMP ),
    .Y(\$procmux$11925_Y )
  );
  assign obi_rsp_o[1] = obi_req_i[0];
  assign id_d = obi_req_i[4:2];
  assign word_addr_d = obi_req_i[46:44];
  assign we_d = obi_req_i[41];
  assign req_d = obi_req_i[0];
  assign obi_rsp_o[0] = req_q;
  assign obi_rsp_o[38:2] = { rsp_data, id_q, obi_err, 1'h0 };
  assign rsp_data = \$rsp_data$18 ;
  assign obi_err = \$obi_err$19 ;
  assign \$procmux$11907_CMP  = \$14y ;
  assign \$procmux$11909_CMP  = req_q;
  assign \$rsp_data$15  = \$procmux$11908_Y ;
  assign \$procmux$11912_CMP  = \$14y ;
  assign \$procmux$11914_CMP  = req_q;
  assign \$obi_err$17  = \$procmux$11913_Y ;
  assign \$procmux$11918_CMP  = \$14y ;
  assign \$procmux$11920_CMP  = req_q;
  assign \$rsp_data$16  = \$procmux$11919_Y ;
  assign \$procmux$11923_CMP  = req_q;
  assign \$obi_err$19  = \$procmux$11922_Y ;
  assign \$procmux$11926_CMP  = req_q;
  assign \$rsp_data$18  = \$procmux$11925_Y ;
  assign \$2y  = rst_ni;
  assign \$11y  = rst_ni;
  assign \$8y  = rst_ni;
  assign \$5y  = rst_ni;
endmodule
